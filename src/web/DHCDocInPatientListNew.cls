Class web.DHCDocInPatientListNew Extends (%CSP.Page, DHCDoc.Util.RegisteredObject)
{

ClassMethod OnPreHTTP() As %Boolean
{
    d ##Class(websys.SessionEvents).SessionExpired()
	Q 1
}

ClassMethod OnPage() As %Status
{
	
	s action = $Get(%request.Data("action",1),"")
	s:(action="") action = $Get(%request.Data("Func",1),"")
	s patientID = $Get(%request.Data("patientID",1),"")
	
	s DateGap = $Get(%request.Data("DateGap",1),"")
	s Systemdatetime = $HOROLOG
	s Systemdateint = $p(Systemdatetime,",",1)
	s Systemtimeint = $p(Systemdatetime,",",2)
	
	s StartDate= $Get(%request.Data("StartDate",1),"")
	s EndDate= $Get(%request.Data("EndDate",1),"")
	if (StartDate'=""){
		s StartDate=..%ZDH(StartDate)
	}else{
		s StartDate = Systemdateint-DateGap
	}
	if (EndDate'=""){
		s EndDate=..%ZDH(EndDate)
	}else{
		s EndDate = Systemdateint
	}
	
	s Sort = $Get(%request.Data("sort",1),"")
	s OrderPg = $Get(%request.Data("order",1),"")
	if (action = "GetPatientInfo") //患者信息
	{
		s patientID = $Get(%request.Data("patientID",1),"")
		s episodeID = $Get(%request.Data("EpisodeID",1),"")
		w ..GetPatientInfoInBrowser(patientID,episodeID)
	}
	elseif (action = "GetPatientList") //检索患者列表
	{
		s page = $g(%request.Data("page",1),"-1")
		s rows = $g(%request.Data("rows",1),"-1")
		s:(page = 1) idxStart = page,idxLast = idxStart + rows -1	
		s idxStart = rows * (page -1) + 1
		s idxLast = idxStart + rows -1	

		s locID = $g(%session.Data("LOGON.CTLOCID"))
		s userID = $g(%session.Data("LOGON.USERID"))
		
		/*
		//兼容病区ID
		if (locID'="") {
			s CTLOCType = $p($g(^CTLOC(locID)),"^",13)
			if (CTLOCType="W") {
				//如果是病区,则默认转第1个科室ID
				s locID = ##class(EMRservice.HISInterface.PatientInfoAssist).CurDeptLinkLocByDept(locID)
				s locID = $p(locID,"^",3)
			}
		}
		*/
		s PatListType = $Get(%request.Data("PatListType",1),"")
		
		if (PatListType = "InPat")
		{
			s RadioValue = $Get(%request.Data("RadioValue",1),"")
			s WardID = $Get(%request.Data("WardID",1),"all")
			s MedicareNo = $Get(%request.Data("MedicareNo",1),"")
			s patientNo = $Get(%request.Data("patientNo",1),"")
			s PatientName = $Get(%request.Data("PatientName",1),"")
			s patientBedNo = $Get(%request.Data("patientBedNo",1),"")
			s DocCode = $Get(%request.Data("DocCode",1),"")
			s DeliveryPatient = $Get(%request.Data("DeliveryPatient",1),"")
			s BZStr=$Get(%request.Data("BZStr",1),"")
			s Transfer=$Get(%request.Data("Transfer",1),"")
			s Dischargeorder=$Get(%request.Data("Dischargeorder",1),"")
			s CPWSStatus=$Get(%request.Data("CPWSStatus",1),"")
			s result = ""
			s result = ..GetInPatListJSON(locID,userID,RadioValue,WardID,idxStart,idxLast,MedicareNo,PatientName,patientBedNo,DocCode,Sort,OrderPg,DeliveryPatient,BZStr,patientNo,Transfer,Dischargeorder,CPWSStatus)
			while (result.AtEnd = 0)
			{
				w $ZSTRIP(result.Read(32000),"*C")
			}
			
		}
		elseif (PatListType = "OutPat")
		{
			s RadioValue = $Get(%request.Data("RadioValue",1),"")
			s PatientNo = $Get(%request.Data("PatientNo",1),"")
			s MedicareNo = $Get(%request.Data("MedicareNo",1),"")
			s PatientName = $Get(%request.Data("PatientName",1),"")
			s UserCode = $Get(%request.Data("UserCode",1),"")
			s Diagnosis = $Get(%request.Data("Diagnosis",1),"")
			;w ..GetOutPatListJSON(locID,userID,RadioValue,idxStart,idxLast,StartDate,EndDate,PatientNo,MedicareNo,PatientName,UserCode,Sort,OrderPg,Diagnosis)
			s result = ""
			s result = ..GetOutPatListJSON(locID,userID,RadioValue,idxStart,idxLast,StartDate,EndDate,PatientNo,MedicareNo,PatientName,UserCode,Sort,OrderPg,Diagnosis)
			while (result.AtEnd = 0)
			{
				w $ZSTRIP(result.Read(32000),"*C")
			}
		}
		elseif (PatListType = "TransDept")
		{
			s MedicareNo = $Get(%request.Data("medicareNo",1),"")
			s patientNo = $Get(%request.Data("patientNo",1),"")
			s RadioValue = $Get(%request.Data("RadioValue",1),"")
			s TransStartDate= $Get(%request.Data("StartDate",1),"")
			s TransEndDate= $Get(%request.Data("EndDate",1),"")
			if (TransStartDate'=""){s StartDate=..%ZDH(TransStartDate)}
			if (TransEndDate'=""){s EndDate=..%ZDH(TransEndDate)}
			w ..GetChangeDeptPatListJSON(locID,userID,RadioValue,idxStart,idxLast,StartDate,EndDate,MedicareNo,patientNo)
			//w ..GetChangeDeptPatListJSON(locID,userID,idxStart,idxLast,"2015-01-20","2015-02-06")
		}
		elseif (PatListType = "OperationPat")
		{
			s HospId=""
			s HospId=##class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId(HospId)
			w ..GetOperationPatListJSON(locID,userID,idxStart,idxLast,StartDate,EndDate,HospId)
			//w ..GetOperationPatListJSON(locID,userID,idxStart,idxLast,"2015-02-01","2015-02-10")
		}
		elseif (PatListType = "CriticallyPat")
		{
			w ..GetCriticallyPatListJSON(locID,userID,idxStart,idxLast,"","")
		}
		elseif (PatListType = "OPatient")
		{
			w ..GetOPatient(locID,userID)
		}
		elseif (PatListType = "CurWarPat")||(PatListType="InHospTransPat")||(PatListType="DisChargePat"){
			s PatNo = $Get(%request.Data("patientNo",1),"")
			s MedicareNo = $Get(%request.Data("MedicareNo",1),"")
			s PatientName = $Get(%request.Data("PatientName",1),"")
			s patientBedNo = $Get(%request.Data("patientBedNo",1),"")
			s DocCode = $Get(%request.Data("DocCode",1),"")
			s DisDay= $Get(%request.Data("DisDay",1),"")
			s DisType= $Get(%request.Data("DisType",1),"")
			s result=..GetCurWarPatPatListJSON(PatListType,PatNo,MedicareNo,PatientName,patientBedNo,DocCode,DisDay,DisType,idxStart,idxLast)
			while (result.AtEnd = 0)
			{
				w $ZSTRIP(result.Read(32000),"*C")
			}
		}elseif (PatListType = "PreAdmissionPatList"){
			//获取预入院患者信息
			s PatNo = $Get(%request.Data("patientNo",1),"")
			s MedicareNo = $Get(%request.Data("MedicareNo",1),"")
			s PatientName = $Get(%request.Data("PatientName",1),"")
			s locID = $g(%session.Data("LOGON.CTLOCID"))
			s userID = $g(%session.Data("LOGON.USERID"))
			s HospId=""
			s HospId=##class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId(HospId)
			w ..GetPreAdmissionPatListJson(userID,locID,PatNo,PatientName,idxStart,idxLast,Sort,OrderPg,HospId)
		}		
			
	}
	elseif (action = "GetAdmHistoryLstForOP")
	{
		s patientID = $Get(%request.Data("PatientID",1),"")
		w ..GetAdmHistoryLstForOP(patientID)
	}
	elseif (action = "GetPatientInfoOP") //患者信息
	{
		s episodeID = $Get(%request.Data("EpisodeID",1),"")
		s patientID = $Get(%request.Data("PatientID",1),"")
		
		w ..GetPatientInfo(patientID,episodeID)
	}
	elseif (action = "GetNewEMRRecordOP") //患者信息
	{		
		w ##Class(EMRservice.BL.BLPatientInfo).newEMRRecordOP()
	}
	elseif (action = "GetAdmList")
	{
		d ..GetAdmList() //病历浏览界面患者列表
	}
	elseif (action = "GetUserName")
	{
		s locID = $g(%session.Data("LOGON.CTLOCID"))
		w ..GetUserName(locID)
	}elseif (action="GetWardList"){
		s LocID = $Get(%request.Data("LocID",1),"")
		w ..getLinkLocByLocID(LocID)
	}elseif (action="GetPatCount"){
		s LocID = $Get(%request.Data("LocID",1),"")
		s UserId= $Get(%request.Data("UserId",1),"")
		w ..GetPatCount(LocID,UserId)
	}elseif (action="GetNursePatList"){
		s page = $g(%request.Data("page",1),"-1")
		s rows = $g(%request.Data("rows",1),"-1")
		s:(page = 1) idxStart = page,idxLast = idxStart + rows -1	
		s idxStart = rows * (page -1) + 1
		s idxLast = idxStart + rows -1
		s Type = $Get(%request.Data("Type",1),"")
		s PatientNo = $Get(%request.Data("PatientNo",1),"")
		s Name = $Get(%request.Data("Name",1),"")
		s MedicalNo = $Get(%request.Data("MedicalNo",1),"")
		s CardNo = $Get(%request.Data("CardNo",1),"")
		s BedNo = $Get(%request.Data("BedNo",1),"")
		s Ward = $Get(%request.Data("Ward",1),"")
		s DisDay = $Get(%request.Data("DisDay",1),"")
		s IllType = $Get(%request.Data("DisDay",1),"")
		s IllType = $Get(%request.Data("IllType",1),"")
		s DocID = $Get(%request.Data("DocID",1),"")
		s WardGroupLinkBedStr = $Get(%request.Data("WardGroupLinkBedStr",1),"")
		s HavedSeeOrdPat = $Get(%request.Data("HavedSeeOrdPat",1),"")
		w ..GetNursePatListJson(Type, PatientNo, Name, MedicalNo,CardNo, BedNo, Ward, DisDay , IllType, DocID, WardGroupLinkBedStr, HavedSeeOrdPat, idxStart, idxLast,Sort,OrderPg)
		/*while (result.AtEnd = 0){
			w $ZSTRIP(result.Read(32000),"*C")
		}*/
	}
	
	q $$$OK
}

/// Desc:	获取在院患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		RadioValue为按一下情况查询：
/// 				currentUser： 本人病人
/// 				currentGroup：本组病人
/// 				currentWard： 本病区病人
/// 				currentLoc：  本科病人
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// 			AMedicareNo为病案号;
/// 			APatientName为患者姓名;
/// Return:	在院患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	w ##Class(EMRservice.Ajax.patientInfo).GetInPatListJSON("6","359","currentUser","all","1","10","","")
/// Debug:	w ##Class(web.DHCDocInPatientListNew).GetInPatListJSON(114,4699,"currentUser","all",16,30,"","","")
ClassMethod GetInPatListJSON(ALocID As %String, AUserID As %String, ARadioValue As %String, AWardID As %String, AIdxStart As %Integer, AIdxLast As %Integer, AMedicareNo As %String = "", APatientName As %String = "", APatientBedNo As %String = "", ADocCode As %String = "", Sort As %String = "", OrderPg As %String = "", DeliveryPatient As %String = "0", BZStr As %String = "", patientNo As %String = "", Transfer As %String = "", Dischargeorder As %String = "", CPWSStatus As %String = "") As %Stream.GlobalCharacter
{
	s ^tmpscl("GetInPatListJSON")=ALocID_","_AUserID_","_ARadioValue_","_AWardID_","_AIdxStart_","_AIdxLast_","_AMedicareNo_","_APatientName_","_APatientBedNo_","_ADocCode_","_Sort_","_OrderPg_","_DeliveryPatient_","_BZStr_","_patientNo_","_Transfer_","_Dischargeorder_","_CPWSStatus
	//s HasPatEncryptLevel = ##Class(EMRservice.BL.BLSysOption).GetOptionValueByName("HasPatEncryptLevel")
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetInPatList")
	s sc = result.Execute(ALocID,AUserID,ARadioValue,AWardID,AMedicareNo,APatientName,DeliveryPatient,APatientBedNo,ADocCode,BZStr,patientNo,Transfer,Dischargeorder,CPWSStatus)
 	s json = ""
 	s count = 0
 	s nowJson = ""
 	s key = $i(^CacheTemp)
	k ^TempEMRPatList(key)
	k ^TempMotherPatList(key)
	s (CCount,SCount,FCount)=0
	
	s DateFormat=##class(websys.Conversions).DateFormat()
	s CONTEXT =$g(%session.Data("CONTEXT"))
	s BedNO = ""
	s nowJson = ##Class(%Stream.GlobalCharacter).%New()
 	s ret = ##Class(%Stream.GlobalCharacter).%New()
 	s BabyNum=0
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
 	{
	 	 
	 	 s EpisodeID=$g(result.Data("EpisodeID"))
	 	 s PatientID=$g(result.Data("PatientID"))
	 	 s ColorStatusCode=$g(result.Data("ColorStatusCode"))
	 	 If (ColorStatusCode="F"){
			s FCount=FCount+1
	 	 }
	 	 if (ColorStatusCode="C"){
			s CCount=CCount+1
	 	 }
	 	 if (ColorStatusCode="S"){
			s SCount=SCount+1
	 	 }
		 continue:((BZStr'="")&&(ColorStatusCode'="F")&&(BZStr="CurPatCount"))
		 continue:((BZStr'="")&&(ColorStatusCode'="C")&&(BZStr="BWCount"))
		 continue:((BZStr'="")&&(ColorStatusCode'="S")&&(BZStr="BZCount"))
		 s json = "{"
		 for i=1:1:ColumnCount {
			 if (i'=1) {s json = json_"," }
			s ColumnName=result.GetColumnName(i)
			s json = json_""""_ColumnName_""":"""_$g(result.Data(ColumnName))_""""
		 }
		 
		 s json = json_"}" 
		 
		 if (Sort=""){
			 s rtn=..GetSortDescOrderSecoden("PAAdmWard","PAAdmBedNO",json,key,count)
		 }else{
		 	 s rtn=..GetSortDescOrder(Sort,json,key,count)
		 }
		 s PAADMMotherAdmDR=$p(^PAADM(EpisodeID),"^",75)
		 if (PAADMMotherAdmDR'=""){
			 s BabyNum=BabyNum+1
		 }
		 s json = ""
		 s count = count + 1
		 
	}
	//倒序排序输出
	s OrdBedNO="",j=0,i=1
	for
	{
		s orderpg=1
		if (OrderPg="desc") s orderpg="-1"
		s OrdBedNO = $o(^TempEMRPatList(key,OrdBedNO),orderpg)
		q:(OrdBedNO="")
		s mothersort ="" for{
			s mothersort =$o(^TempEMRPatList(key,OrdBedNO,mothersort))
			q:mothersort="" 
			s order="" for{
				s order = $o(^TempEMRPatList(key,OrdBedNO,mothersort,order),orderpg)
				q:(order = "")
				if ((AIdxStart <= i)&(i <= AIdxLast))
				{
					s tempJson = ^TempEMRPatList(key,OrdBedNO,mothersort,order)
					s tempJson = $tr(tempJson,$c(10),"")
					s tempJson = $tr(tempJson,$c(13),"")
					s tempJson = $ZSTRIP(tempJson,"*C")
					if (j'=0)
					{
						d nowJson.Write(",")
					}
					d nowJson.Write(tempJson)
					s j = j + 1
				}
				s i = i + 1
			}
			
		}
	}
	k ^TempEMRPatList(key) 
	//CCount,SCount,FCount
	d ret.Write("{""total"":"_count_",""CCount"":"_CCount_",""SCount"":"_SCount_",""FCount"":"_FCount_",""BabyNum"":"_BabyNum_",""rows"":[")
	//d ret.Write("{""total"":"_count_",""rows"":[")
	d ret.CopyFrom(nowJson)
	d ret.Write("]}")
	q ret
}

ClassMethod GetSortDescOrder(SortType, JsonRow, key, count) [ ProcedureBlock = 0 ]
{
	n (SortType, JsonRow, key, count)
	s ^Tempqujian("GetSortDescOrder")=SortType_","_JsonRow_","_key
	//这个方法效率太差，改成原生的%DynamicAbstractObject
	//k OrdSortArr
	//d ##Class(DHCDoc.Util.FromJSON).FromJSONToArr(JsonRow,.OrdSortArr)
	
	//s SortNum=OrdSortArr(SortType)
	//s EpisodeID=OrdSortArr("EpisodeID")
	set obj = ##class(%DynamicAbstractObject).%FromJSON(JsonRow)
	s str="SortNum=obj."_SortType
	s @str
	Set DateFormat=##class(websys.Conversions).DateFormat()
	if (((SortType["date")||(SortType["Date"))&&(SortNum'="")) s SortNum=$zdh(SortNum,DateFormat)
	if (SortType["ResidentDays") s SortNum=$E("00000",1,5-$L(SortNum))_SortNum 
	s EpisodeID=obj.EpisodeID
	s PAADMMotherAdmDR=$p(^PAADM(EpisodeID),"^",75)
	s ChirldRowid=$O(^PAADMi("Mother",EpisodeID,""))
	s mothersort=0
	if (ChirldRowid'="") {s ^TempMotherPatList(key,EpisodeID) =SortNum}
	if (PAADMMotherAdmDR'=""){
		s SortNum=$g(^TempMotherPatList(key,PAADMMotherAdmDR))
		if (SortNum'=""){
			s mothersort=$O(^TempEMRPatList(key," "_SortNum,""),-1)+1
		}else{
			//s SortNum=OrdSortArr(SortType)
			s SortNum=obj.SortNum
		}
	}
	s ^TempEMRPatList(key," "_SortNum,mothersort,count) = JsonRow
	
	q ""
}

ClassMethod GetSortDescOrderSecoden(SortType1, SortType2, JsonRow, key, count) [ ProcedureBlock = 0 ]
{
	n (SortType1, SortType2, JsonRow, key, count)
	s ^Tempqujian("GetSortDescOrder")=SortType1_","_SortType2_","_JsonRow_","_key_","_count
	//这个方法效率太差，改成原生的%DynamicAbstractObject
	//k OrdSortArr
	//d ##Class(DHCDoc.Util.FromJSON).FromJSONToArr(JsonRow,.OrdSortArr)
	//s SortNum1=OrdSortArr(SortType1)
	//s SortNum2=OrdSortArr(SortType2)
	//s EpisodeID=OrdSortArr("EpisodeID")
	
	set obj = ##class(%DynamicAbstractObject).%FromJSON(JsonRow)
	s str="SortNum1=obj."_SortType1
	s @str
	s EpisodeID=obj.EpisodeID
	if (SortType2="PAAdmBedNO") {
		;s PAADMBedDR=$p($g(^PAADM(EpisodeID)),"^",73)
		s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(EpisodeID)
		if (PAADMBedDR'="") {
			s BEDSequence=$p(^PAWARD(+PAADMBedDR,"BED",$p(PAADMBedDR,"||",2)),"^",24)
			s:BEDSequence'="" BEDSequence=$e("0000000000000000000",1,5-$l(BEDSequence))_BEDSequence
		}
		if ($g(BEDSequence)="") s BEDSequence="99999"
		s str="SortNum2=obj."_SortType2
		s @str
		s:SortNum2'="" SortNum2=$e("0000000000000000000",1,5-$l(SortNum2))_SortNum2
		if ($g(SortNum2)="") s SortNum2="99999"
		s SortNum2=BEDSequence_"^"_SortNum2
	}else{
		s str="SortNum2=obj."_SortType2
		s @str
	}
	
	s SortNum=SortNum1_"^"_SortNum2
	
	
	s PAADMMotherAdmDR=$p(^PAADM(EpisodeID),"^",75)
	s ChirldRowid=$O(^PAADMi("Mother",EpisodeID,""))
	s mothersort=0
	if (ChirldRowid'="") {
		s ^TempMotherPatList(key,EpisodeID) =SortNum
	}
	if (PAADMMotherAdmDR'=""){
		s SortNum=$g(^TempMotherPatList(key,PAADMMotherAdmDR))
		if (SortNum'=""){
			s mothersort=$O(^TempEMRPatList(key," "_SortNum,""),-1)+1
		}else{
			s SortNum=SortNum1_"^"_SortNum2
		}
	}
	s ^TempEMRPatList(key," "_SortNum,mothersort,count) = JsonRow
	q ""
}

/// Desc:	获取出院患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		RadioValue为按一下情况查询：
/// 				currentUser： 本人病人
/// 				currentLoc：  本科室病人
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// 			AStartDate开始日期
/// 			AEndDate结束日期
/// Return:	出院患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	w ##Class(web.DHCDocInPatientListNew).GetOutPatListJSON(113,12175,"currentUser",1,15,65608,65637,"","","","","PAAdmDischgeDate","asc")
ClassMethod GetOutPatListJSON(ALocID As %String, AUserID As %String, ARadioValue As %String, AIdxStart As %Integer, AIdxLast As %Integer, AStartDate As %String, AEndDate As %String, APatientNo As %String = "", AMedicareNo As %String = "", APatientName As %String = "", AUserCode As %String = "", Sort As %String = "", OrderPg As %String = "", Diagnosis As %String = "") As %Stream.GlobalCharacter
{
	//s HasPatEncryptLevel = ##Class(EMRservice.BL.BLSysOption).GetOptionValueByName("HasPatEncryptLevel")
	s ^templog("GetOutPatListJSON") = ALocID_","_AUserID_","_ARadioValue_","_AIdxStart_","_AIdxLast_","_AStartDate_","_AEndDate_","_APatientNo_","_AMedicareNo_","_APatientName_","_AUserCode_","_Sort_","_OrderPg
	i Sort="" {
		s Sort="PAAdmDischgeDate"
		s OrderPg="desc"
	}
	if (AStartDate = "")||(AEndDate = "")
	{
		s Systemdatetime = $HOROLOG
		s Systemdateint = $p(Systemdatetime,",",1)
		s Systemtimeint = $p(Systemdatetime,",",2)
		s StartDate = Systemdateint-6
		s EndDate = Systemdateint
	}
	else
	{
		s StartDate = AStartDate
		s EndDate= AEndDate
	}
	s key = $i(^CacheTemp)
	s nowJson = ##Class(%Stream.GlobalCharacter).%New()
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetOutPatList")
	s sc = result.Execute(ALocID,AUserID,ARadioValue,StartDate,EndDate,APatientNo,AMedicareNo,APatientName,AUserCode,Diagnosis)
 	
 	
 	s count = 0
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
 	{
		s json ="{"
		for i=1:1:ColumnCount {
			if (i'=1) {s json = json_"," }
			s ColumnName=result.GetColumnName(i)
			s val=$g(result.Data(ColumnName))
			if (ColumnName="IsRecordCompleted"){
				s val=$case(val,
					"1":"是",
					:"否"
				)
			}
			s json = json_""""_ColumnName_""":"""_val_""""
		}
	 	
		s json = json_"}" 
	 	
		s rtn=..GetSortDescOrder(Sort,json,key,count)
		 	
		 s count = count + 1
	}
	s orderpg=1
	if (OrderPg="desc") s orderpg="-1"
	s No=""
	s j=0,i=1
	for
	{
		s No = $o(^TempEMRPatList(key,No),orderpg)
		q:(No="")
		s mothersort ="" for{
			s mothersort =$o(^TempEMRPatList(key,No,mothersort))
			q:mothersort="" 
			s order="" for{
				s order = $o(^TempEMRPatList(key,No,mothersort,order),orderpg)
				q:(order = "")
				if ((AIdxStart <= i)&(i <= AIdxLast))
				{
					s tempJson = ^TempEMRPatList(key,No,mothersort,order)
					s tempJson = $tr(tempJson,$c(10),"")
					s tempJson = $tr(tempJson,$c(13),"")
					s tempJson = $ZSTRIP(tempJson,"*C")
					if (j'=0)
					{
						d nowJson.Write(",")
					}
					d nowJson.Write(tempJson)
					s j = j + 1
				}
				s i = i + 1
			}
			
		}
	}
	s ret = ##Class(%Stream.GlobalCharacter).%New()
	k ^TempEMRPatList(key)
	d ret.Write("{""total"":"_count_",""rows"":[")
	d ret.CopyFrom(nowJson)
	d ret.Write("]}")
	q ret
}

/// Desc:	获取在院转科患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// 		AStartDate开始日期
/// 		AEndDate结束日期
/// Return:	在院转科患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	w ##Class(EMRservice.Ajax.patientInfo).GetChangeDeptPatListJSON("6","105","1","10","2015-01-20","2015-02-06")
ClassMethod GetChangeDeptPatListJSON(ALocID As %String, AUserID As %String, ARadioValue As %String, AIdxStart As %Integer, AIdxLast As %Integer, AStartDate As %String, AEndDate As %String, MedicareNo As %String, patientNo As %String)
{
	//s HasPatEncryptLevel = ##Class(EMRservice.BL.BLSysOption).GetOptionValueByName("HasPatEncryptLevel")
	if (AStartDate = "")||(AEndDate = ""){
		s Systemdatetime = $HOROLOG
		s Systemdateint = $p(Systemdatetime,",",1)
		s Systemtimeint = $p(Systemdatetime,",",2)
		s StartDate = Systemdateint
		s EndDate = Systemdateint
	}else{
		s StartDate = AStartDate
		s EndDate= AEndDate
	}
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetChangeDeptPatList")
	s sc = result.Execute(ALocID,AUserID,ARadioValue,StartDate,EndDate,MedicareNo,patientNo)
 	
 	s json = ""
 	s count = 0
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
 	{
	 	if ( AIdxStart-1 <= count) && (AIdxLast > count ){
		 	
			s json =json_"{"
			for i=1:1:ColumnCount {
				if (i'=1) {s json = json_"," }
				s ColumnName=result.GetColumnName(i)
				s val=$g(result.Data(ColumnName))
				s json = json_""""_ColumnName_""":"""_val_""""
			}
			s json = json_"}," 
		 }
		 s count = count + 1
	}
	s json = $tr(json,$c(10),"")
	s json = $tr(json,$c(13),"")
	s json = $e(json,1,$l(json)-1)
	s json = $ZSTRIP(json,"*C")
	s ret = "{""total"":"_count_",""rows"":["_json_"]}"
	q ret
}

/// Desc:	获取本人当天手术患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// 		AStartDate开始日期
/// 		AEndDate结束日期
/// Return:	本人当天手术患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	w ##Class(web.DHCDocInPatientListNew).GetOperationPatListJSON("6","105","1","10","2015-02-01","2015-02-10")
ClassMethod GetOperationPatListJSON(ALocID As %String, AUserID As %String, AIdxStart As %Integer, AIdxLast As %Integer, AStartDate As %String, AEndDate As %String, HospId As %String = "")
{
	//s HasPatEncryptLevel = ##Class(EMRservice.BL.BLSysOption).GetOptionValueByName("HasPatEncryptLevel")
	s ^tempncc("0") = ALocID_"^"_AUserID_"^"_AIdxStart_"^"_AIdxLast_"^"_AStartDate_"^"_AEndDate
	b ;1
	s HospId=##class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId(HospId)
	if (AStartDate = "")||(AEndDate = "")
	{
		s Systemdatetime = $HOROLOG
		s Systemdateint = $p(Systemdatetime,",",1)
		s Systemtimeint = $p(Systemdatetime,",",2)
		s StartDate = Systemdateint
		s EndDate = Systemdateint
	}
	else
	{
		s StartDate = AStartDate
		s EndDate = AEndDate
	}
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetOperationPatList")
	s sc = result.Execute(ALocID,AUserID,StartDate,EndDate,HospId)
 	s json = ""
 	s count = 0
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
 	{
	 	if ( AIdxStart-1 <= count) && (AIdxLast > count )
		{
			s json =json_"{"
			for i=1:1:ColumnCount {
				if (i'=1) {s json = json_"," }
				s ColumnName=result.GetColumnName(i)
				s val=$g(result.Data(ColumnName))
				s json = json_""""_ColumnName_""":"""_val_""""
			}
		 	
			s json = json_"}," 
		 }
		 s count = count + 1
	}
	s json = $tr(json,$c(10),"")
	s json = $tr(json,$c(13),"")
	s json = $e(json,1,$l(json)-1)
	s json = $ZSTRIP(json,"*C")
	s ret = "{""total"":"_count_",""rows"":["_json_"]}"
	q ret
}

/// Desc:	获取本病区在院危重患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// 		AStartDate开始日期
/// 		AEndDate结束日期
/// Return:	本病区在院危重患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	w ##Class(EMRservice.Ajax.patientInfo).GetCriticallyPatListJSON("6","105","1","10","2015-02-01","2015-02-10")
ClassMethod GetCriticallyPatListJSON(ALocID As %String, AUserID As %String, AIdxStart As %Integer, AIdxLast As %Integer, AStartDate As %String, AEndDate As %String)
{
	s ^tempscl("GetCriticallyPatListJSON")=ALocID_","_AUserID_","_AIdxStart_","_AIdxLast_","_AStartDate_","_AEndDate
	if (AStartDate = "")||(AEndDate = ""){
		s StartDate = ""
		s EndDate = ""
	}else{
		s StartDate = AStartDate
		s EndDate = AEndDate
	}
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetCriticallyPatList")
	s sc = result.Execute(ALocID,AUserID,StartDate,EndDate)
 	s json = ""
 	s count = 0
	s ColumnCount=result.GetColumnCount()
	While (result.Next()){
	 	if ( AIdxStart-1 <= count) && (AIdxLast > count ){
			s json =json_"{"
			for i=1:1:ColumnCount {
				if (i'=1) {s json = json_"," }
				s ColumnName=result.GetColumnName(i)
				s val=$g(result.Data(ColumnName))
				s json = json_""""_ColumnName_""":"""_val_""""
			}
		 
			s json = json_"}," 
		 }
		 s count = count + 1
	}
	s json = $tr(json,$c(10),"")
	s json = $tr(json,$c(13),"")
	s json = $e(json,1,$l(json)-1)
	s json = $ZSTRIP(json,"*C")
	s ret = "{""total"":"_count_",""rows"":["_json_"]}"
	q ret
}

/// Desc:	获取患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		APatientNo为患者登记号;
/// 		APatientName为患者姓名;
/// 		AStartDate为就诊开始日期;
/// 		AEndDate为就诊截止日期;
/// 		AIsArrivedQue为是否本科患者;
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// Return:	患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	w ##Class(EMRservice.Ajax.PatientInfo).GetEPREpisodeListJSON("","","0000000025","","","","on","1","10")
ClassMethod GetEPREpisodeListJSON(ALocID As %String, AUserID As %String, APatientNo As %String, APatientName As %String, AStartDate As %String, AEndDate As %String, AIsArrivedQue As %String, AIdxStart As %Integer, AIdxLast As %Integer)
{
	//s HasPatEncryptLevel = ##Class(EMRservice.BL.BLSysOption).GetOptionValueByName("HasPatEncryptLevel")
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientList:FindLocDocCurrentAdm")
	//LocID(Session获取),UserID(Session获取),IPAddress,AllPatient(全病区病人),PatientNo(病人号码),SurName(病人姓名),StartDate,EndDate,ArrivedQue(本科病人),RegQue
 	s sc = result.Execute(ALocID,AUserID,"","",APatientNo,APatientName,AStartDate,AEndDate,AIsArrivedQue,"")
 	
 	s json = ""
 	s count = 0
	While (result.Next())
 	{
	 	if ( AIdxStart-1 <= count) && (AIdxLast > count )
		{
		 	s json = json_"{""PatientID"":"""_$g(result.Data("PatientID"))_""","
		 	
		 	s patientID = $g(result.Data("PatientID"))
		 	s PAPMIDOB=$P(^PAPER(patientID,"ALL"),"^",6)
		  	s PAPMIDOB=..%ZD(PAPMIDOB)
		 	//if (HasPatEncryptLevel = "Y")
		 	//{
			 	s ResultStr = ..GetPatEncryptLevel(patientID)
			 	s json = json_"""SecAlias"":"""_$p(ResultStr,"^",4)_""","
				s json = json_"""EmployeeFunction"":"""_$p(ResultStr,"^",2)_""","
		 	//}
		 	s json = json_"""EpisodeID"":"""_$g(result.Data("EpisodeID"))_""","
		 	s json = json_"""mradm"":"""_$g(result.Data("mradm"))_""","
		 	s json = json_"""PAPMINO"":"""_$g(result.Data("PAPMINO"))_""","
		 	s json = json_"""PAPMIName"":"""_$g(result.Data("PAPMIName"))_""","
		 	s json = json_"""PAPMIDOB"":"""_$g(PAPMIDOB)_""","
		 	s json = json_"""PAPMISex"":"""_$g(result.Data("PAPMISex"))_""","
		 	s json = json_"""PAAdmDate"":"""_$g(result.Data("PAAdmDate"))_""","
		 	s json = json_"""PAAdmTime"":"""_$g(result.Data("PAAdmTime"))_""","
		 	s json = json_"""PAAdmDepCodeDR"":"""_$g(result.Data("PAAdmDepCodeDR"))_""","
		 	s json = json_"""PAAdmDocCodeDR"":"""_$g(result.Data("PAAdmDocCodeDR"))_""","
		 	s json = json_"""PAAdmType"":"""_$g(result.Data("PAAdmType"))_""","
		 	s json = json_"""PAAdmWard"":"""_$g(result.Data("PAAdmWard"))_""","
		 	s json = json_"""PAAdmReason"":"""_$g(result.Data("PAAdmReason"))_""","
		 	s json = json_"""Diagnosis"":"""_$g(result.Data("Diagnosis"))_"""}"
		 	s json = json_"," 
		 }
		 s count = count + 1
	}
	s json = $tr(json,$c(10),"")
	s json = $tr(json,$c(13),"")
	s json = $e(json,1,$l(json)-1)
	s json = $ZSTRIP(json,"*C")
	s ret = "{""total"":"_count_",""rows"":["_json_"]}"
	q ret
}

/// CreatDate:2014-2-16
/// Desc:	取病人基本信息,
/// 		若EpisodeID信息不为空，取病人信息+就诊信息，
/// 		若EpisodeID为空，取病人信息
/// Table:
/// Input:	patientID As %String, episodeID As %String
/// Output:
/// Return:	格式为Json的病人基本信息字符串
/// Others:	病历浏览页面上病人基本信息加载
/// debug: w ##Class(EMRservice.Ajax.PatientInfo).GetPatientInfoInBrowser(48,76)
ClassMethod GetPatientInfoInBrowser(patientID As %String, episodeID As %String) As %String
{
	//s HasPatEncryptLevel = ##Class(EMRservice.BL.BLSysOption).GetOptionValueByName("HasPatEncryptLevel")
	s patientInfo = ""
	
	s papmiNo = ""		//登记号
	s name = ""			//姓名
	s age = ""			//年龄
	s gender = ""		//性别
	s disBed = ""		//出院床位
	s payType = ""		//付费类型
	s admDate = ""		//入院日期
	s mainDiagnos = ""	//主要诊断
	s ipRecordNo = "" 	//病案号
	
	//取就诊信息
	if (episodeID '= "")&&(episodeID '= $C(0))
	{
		//取患者指针
		s patientID = ##Class(EMRservice.HISInterface.PatientInfoAssist).GetPapmiDR(episodeID)
		
		//年龄
		s birthday = ##class(EMRservice.HISInterface.PatientInfoAssist).Birthday(patientID)
		s tmpadmDate = ##class(EMRservice.HISInterface.PatientInfoAssist).AdmDateTime(episodeID, "")
		s admDate = $P(tmpadmDate, ",", 1)
		s admTime = $P(tmpadmDate, ",", 2)
		s AdmDepDr=$p($g(^PAADM(episodeID)),"^",4)
		s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
		s age =  ##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",patientID,episodeID,AdmDepHospId)
		
		//出院床位
		s disBed = ##class(EMRservice.HISInterface.PatientInfoAssist).DisBed(episodeID)
		
		//付费类型
		s payType =  ##class(EMRservice.HISInterface.PatientInfoAssist).PayType(episodeID)
		
		//入院日期
		s admDateTime = ##class(EMRservice.HISInterface.PatientInfoAssist).AdmDateTime(episodeID)
		s admDate = $P(admDateTime, ",", 1)
		if (admDate '= "") s admDate = ..%ZD(admDate) ;$zd(admDate,3)
		if (admDate '= "") s admDate = ##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",admDate)
		//主要诊断
		s mainDiagnos = ##class(EMRservice.HISInterface.PatientInfoAssist).DiagnosInfo(episodeID)
		if (mainDiagnos = "")
        {
	        s mainDiagnos = ..getOPdiagnosis(episodeID)
	    }
		if (mainDiagnos '= "")
		{	
			s mainDiagnos = $P(mainDiagnos,"^",3)
			s mainDiagnos = $tr(mainDiagnos,"'","\'")
		}
		
		s hospital = ##class(EMRservice.HISInterface.PatientInfoAssist).HospitalName(episodeID)
		s ipRecordNo = ##class(EMRservice.HISInterface.PatientInfoAssist).IPRecordNoInfo(episodeID, hospital)
	}
	
	s dept = ##class(EMRservice.HISInterface.PatientInfoAssist).CurrentDept(episodeID,hospital)
	s dept = $p(dept,"^",3)		
	//用patientID取病人信息
	if (patientID '= "")&&(patientID '= $C(0))
	{
		//登记号
		s papmiNo = ##class(EMRservice.HISInterface.PatientInfoAssist).GetPapmiNo(patientID)
		
		//姓名
		s name = ##class(EMRservice.HISInterface.PatientInfoAssist).Name(patientID)
		
		//性别
		s gender = ##class(EMRservice.HISInterface.PatientInfoAssist).Gender(patientID, "")
		s gender = $P(gender, "^", 3)
		
		//if (HasPatEncryptLevel = "Y")
		//{
			//病人密级和病人级别
			//SecAlias_"^"_EmployeeFunction_"^"_SecCode_"^"_SecDesc
			//密级特殊字符^病人级别^密级代码^密级描述 或 空
			s PatEncryptLevelStr = ##class(web.DHCBL.CARD.UCardPaPatMasInfo).GetPatEncryptLevel(patientID)
			s SecAlias = $P(PatEncryptLevelStr, "^",1)
			s EmployeeFunction = $P(PatEncryptLevelStr, "^",2)
			s SecCode = $P(PatEncryptLevelStr, "^",3)
			s SecDesc = $P(PatEncryptLevelStr, "^",4)
		
			//s SecAlias = "1"
			//s EmployeeFunction = "2"
			//s SecCode = "3"
			//s SecDesc = "4"
		//}
	}
		
	s patientInfo = "papmiNo:'"_papmiNo_"',name:'"_name_"',gender:'"_gender_"',disBed:'"_disBed_"',age:'"_age_"',mainDiagnos:'"_mainDiagnos_"',payType:'"_payType_"',admDate:'"_admDate_"',ipRecordNo:'"_$g(ipRecordNo)_"',birthday:'"_..%ZD(birthday)_"',dept:'"_dept_"',SecAlias:'"_SecAlias_"',EmployeeFunction:'"_EmployeeFunction_"',SecCode:'"_SecCode_"',SecDesc:'"_SecDesc_"'"
	
	//转换特殊字符
	s patientInfo = $ZSTRIP(patientInfo,"*C")
	
	q "[{"_patientInfo_"}]"
}

/// 根据patientID获取病人级别等信息
ClassMethod GetPatEncryptLevel(patientID As %String)
{
	//病人密级和病人级别
	//SecAlias_"^"_EmployeeFunction_"^"_SecCode_"^"_SecDesc
	//密级特殊字符^病人级别^密级代码^密级描述 或 空
	
	s PatEncryptLevelStr = ##class(web.DHCBL.CARD.UCardPaPatMasInfo).GetPatEncryptLevel(patientID)
	s SecAlias = $P(PatEncryptLevelStr, "^",1)
	s EmployeeFunction = $P(PatEncryptLevelStr, "^",2)
	s SecCode = $P(PatEncryptLevelStr, "^",3)
	s SecDesc = $P(PatEncryptLevelStr, "^",4)

	//s SecAlias = "1"
	//s EmployeeFunction = "2"
	//s SecCode = "3"
	//s SecDesc = "4"
	
	q SecAlias_"^"_EmployeeFunction_"^"_SecCode_"^"_SecDesc
}

/// w ##Class(EMRservice.Ajax.patientInfo).GetPatientInfo()
ClassMethod GetPatientInfo(patientID As %String, episodeID As %String) As %String
{
	s patientInfo = ""
	s papmiNo = ""		//登记号
	s name = ""			//姓名
	s age = ""			//年龄
	s gender = ""		//性别
	s disBed = ""		//出院床位
	s payType = ""		//付费类型
	s admDate = ""		//入院日期
	s mainDiagnos = ""	//主要诊断
	s ipRecordNo = "" 	//病案号
	
	//取就诊信息
	if (episodeID '= "")&&(episodeID '= $C(0))
	{
		//取患者指针
		s patientID = ##Class(EMRservice.HISInterface.PatientInfoAssist).GetPapmiDR(episodeID)
		s AdmDepDr=$p($g(^PAADM(episodeID)),"^",4)
		s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
		//年龄
		s birthday = ##class(EMRservice.HISInterface.PatientInfoAssist).Birthday(patientID)
		s admDate = ##class(EMRservice.HISInterface.PatientInfoAssist).AdmDateTime(episodeID, "")
		s admDate = $P(admDate, ",", 1)
		s age = ##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",patientID,episodeID,AdmDepHospId)
		
		//出院床位
		s disBed = ##class(EMRservice.HISInterface.PatientInfoAssist).DisBed(episodeID)
		
		//付费类型
		s payType =  ##class(EMRservice.HISInterface.PatientInfoAssist).PayType(episodeID)
		
		//入院日期
		s admDateTime = ##class(EMRservice.HISInterface.PatientInfoAssist).AdmDateTime(episodeID)
		s admDate = $P(admDateTime, ",", 1)
		if (admDate '= "") s admDate = ..%ZD(admDate)
		
		//主要诊断
		s mainDiagnos = ##class(EMRservice.HISInterface.PatientInfoAssist).DiagnosInfo(episodeID)
		if (mainDiagnos '= "")
		{	
			s mainDiagnos = $P(mainDiagnos,"^",3)
			s mainDiagnos = $tr(mainDiagnos,"'","\'")
		}
		
		s hospital = ##class(EMRservice.HISInterface.PatientInfoAssist).HospitalName()
		s ipRecordNo = ##class(EMRservice.HISInterface.PatientInfoAssist).IPRecordNoInfo(episodeID, hospital)
	}
	
	s dept = ##class(EMRservice.HISInterface.PatientInfoAssist).CurrentDept(episodeID,hospital)
	s dept = $p(dept,"^",3)		
	//用patientID取病人信息
	if (patientID '= "")&&(patientID '= $C(0))
	{
		//登记号
		s papmiNo = ##class(EMRservice.HISInterface.PatientInfoAssist).GetPapmiNo(patientID)
		
		//姓名
		s name = ##class(EMRservice.HISInterface.PatientInfoAssist).Name(patientID)
		
		//性别
		s gender = ##class(EMRservice.HISInterface.PatientInfoAssist).Gender(patientID, "")
		s gender = $P(gender, "^", 3)
	}
		
	s patientInfo = """papmiNo"":"""_papmiNo_""",""name"":"""_name_""",""gender"":"""_gender_""",""disBed"":"""_disBed_""",""age"":"""_age_""",""mainDiagnos"":"""_mainDiagnos_""",""payType"":"""_payType_""",""admDate"":"""_admDate_""",""ipRecordNo"":"""_$g(ipRecordNo)_""",""birthday"":"""_..%ZD(birthday)_""",""dept"":"""_dept_""""
	//转换特殊字符
	s patientInfo = $ZSTRIP(patientInfo,"*C")
	q "{"_patientInfo_"}"
}

/// Desc: 为门诊病历中的就诊历史获取信息，返回JSON
/// W ##Class(EMRservice.Ajax.patientInfo).GetAdmHistoryLstForOP("5438262")
ClassMethod GetAdmHistoryLstForOP(argPatientID As %String) As %String
{
	s count=0
	s result=""
 
 	s admType = ""
 	for {
	 	q:(count=20)
 		s admType = $O(^PAPERdr(argPatientID,"ADM",admType))
 		q:(admType="")

 		s admID = ""
 		for {
	 		q:(count=20)
	 		s admID = $O(^PAPERdr(argPatientID,"ADM",admType,admID),-1)
	 		q:(admID="")
	 		s admDate = $P($G(^PAADM(admID)),"^",6)
	 		s admTime = $P($G(^PAADM(admID)),"^",7)
	 		s curDept = ##class(EPRservice.HISInterface.PatientInfoAssist).CurrentDept(admID)
	 		s curDept = $P(curDept,"^",3)
	 		s diagnosis = ##class(EPRservice.HISInterface.PatientInfoAssist).DiagnosInfo(admID)
	 		s diagnosis = $P(diagnosis,"^",3)
	 		s doc=##Class(EMRservice.HISInterface.PatientInfoAssist).AdmDoctor(admID,"")
	 		s doc = $P($G(doc),"^",3)	 		
	 		//w admID_" "_admType_" "_admDate_" "_admTime_" "_curDept_" "_diagnosis,!
	 		s item = "{""EpisodeID"":"""_admID_""","
	 		s item = item_"""PAPMINO"":"""","
	 		s item = item_"""PAAdmType"":"""_admType_""","
	 		s item = item_"""PAAdmDate"":"""_..%ZD(admDate)_"""," 
	 		s item = item_"""PAAdmTime"":"""_..%ZT(admTime,1)_""","
	 		s item = item_"""PAAdmDep"":"""_curDept_""","
			s item = item_"""Diagnosis"":"""_diagnosis_""","
			s item = item_"""Doc"":"""_doc_"""}"
            //w item,!
            if (result="") { s result= item }
            else { s result = result_","_item }
            s count=count+1
 		}
 	}
 	
 	q "{""total"":"_count_",""rows"":["_result_"]}"
}

ClassMethod getOPdiagnosis(argAdmId As %String) As %String
{
	q:(argAdmId="") ""
	
	s retDiagnos = ""
	s diagnosID = ""
	
	//门诊诊断
	s disDiagTypeID = $O(^MRC("DTYP",0,"Code","OP",""))  
	if (disDiagTypeID '= "")
	{
		s diagIDs = ..GetTypedDiagnosID(argAdmId, disDiagTypeID)
		if diagIDs '= ""
		{
			s diagnosID = $P(diagIDs, "^", 1)
			s retDiagnos = ..GetDiagnosWithNote(diagnosID)
		}
	}
	q:(retDiagnos '= "") retDiagnos
	q retDiagnos
}

/// Desc:	取指定类型的诊断ID
ClassMethod GetTypedDiagnosID(argEpisodeID As %String, argMRCDiagnosTypeID As %String) As %String
{
	q:(argMRCDiagnosTypeID = "") ""
	
	s ret = ""
	
	s mrAdmDR = $p($g(^PAADM(argEpisodeID)),"^",61)
	q:(mrAdmDR = "") ""
	
	s mrcDiagnosTypeIDString = "^"_argMRCDiagnosTypeID_"^"
	
	s mrDiaChildsub = "0"
	for {
		s mrDiaChildsub = $o(^MR(mrAdmDR,"DIA",mrDiaChildsub))
		q:(mrDiaChildsub="")
		
		s typeChildSub = 0
		for {
			s typeChildSub = $o(^MR(mrAdmDR,"DIA",mrDiaChildsub,"TYP",typeChildSub))
			q:(typeChildSub = "")
			
			s mrcDiagTypID = $p($g(^MR(mrAdmDR,"DIA",mrDiaChildsub,"TYP",typeChildSub)),"^",1)
			continue:(mrcDiagTypID = "")
			
			//判断是否为待选诊断类型
			continue:('$f(mrcDiagnosTypeIDString, "^"_mrcDiagTypID_"^"))
			
			s mrDiagnosID = mrAdmDR_"||"_mrDiaChildsub
			if ret = ""
			{	s ret = mrDiagnosID}
			else
			{	s ret = ret_"^"_mrDiagnosID}	
		}
	}
	q ret
}

/// 	Desc:	取诊断信息
/// 	Input:	argMRDiagnosID : MR_Adm.MRADM_RowId||MR_Diagnos.MRDIA_Childsub
/// 	Return：RowId^诊断代码^诊断描述(诊断备注)
ClassMethod GetDiagnosWithNote(argMRDiagnosID) As %String
{
	s mrAdmID = $P(argMRDiagnosID, "||", 1)
	s mrDiaChildSub = $P(argMRDiagnosID, "||", 2)
	q:(mrAdmID = "")||(mrDiaChildSub = "") ""
	
	s icdid = $p($g(^MR(mrAdmID,"DIA",mrDiaChildSub)),"^",1)
	q:(icdid = "") ""
	
	s icdCode = $p($g(^MRC("ID",icdid)),"^",4)
	s icdDesc = $p($g(^MRC("ID",icdid)),"^",2)
	
	s diagNote=$g(^MR(mrAdmID,"DIA",mrDiaChildSub,"DES",1))
	if (diagNote '= "") 
	{	s icdDesc = icdDesc_"("_diagNote_")"}	
	
	q icdid_"^"_icdCode_"^"_icdDesc
}

/// Desc:       患者列表增加搜索界面
/// Creator:    candy
/// CreateDate: 2015-10-29
ClassMethod GetAdmList()
{
	s patientNo = $Get(%request.Data("PatientNo",1),"")
	s medicareNo = $Get(%request.Data("MedicareNo",1),"")
	s medicalInsuranceNo = $Get(%request.Data("MedicalInsuranceNo",1),"")
	s cfCardNo = $Get(%request.Data("CFCardNo",1),"")
	s idCardNo = $Get(%request.Data("IDCardNo",1),"")
	s patientName = $Get(%request.Data("PatientName",1),"")
	s admType = $Get(%request.Data("AdmType",1),"")
	s admStatus = $Get(%request.Data("AdmStatus",1),"")
	s startDate = $Get(%request.Data("StartDate",1),"")
	s endDate = $Get(%request.Data("EndDate",1),"")
	s outStartDate = $Get(%request.Data("OutStartDate",1),"")
	s outEndDate = $Get(%request.Data("OutEndDate",1),"")
	s isArrivedQue = $Get(%request.Data("IsArrivedQue",1),"")
	s expectedLocId = $Get(%request.Data("ExpectedLocID",1),"")
   
	s page = $g(%request.Data("page",1),"-1")
	s rows = $g(%request.Data("rows",1),"-1")
	s:(page = 1) idxStart = page,idxLast = idxStart + rows -1	
	s idxStart = rows * (page -1) + 1
	s idxLast = idxStart + rows -1	
	
	s locID = $g(%session.Data("LOGON.CTLOCID"))
	s userID = $g(%session.Data("LOGON.USERID"))
	
	//兼容病区ID
	if (locID'="") {
		s CTLOCType = $p($g(^CTLOC(locID)),"^",13)
		
		if (CTLOCType="W") {
			//如果是病区,则默认转第1个科室ID
			s locID = ##class(EMRservice.HISInterface.PatientInfoAssist).CurDeptLinkLocByDept(locID)
			s locID = $p(locID,"^",3)
		}
	}
	d ..GetAdmListJSON(locID,isArrivedQue,patientNo,medicareNo,startDate,endDate,patientName,cfCardNo,admType,idCardNo,expectedLocId,admStatus,medicalInsuranceNo,idxStart,idxLast,outStartDate,outEndDate)
}

/// Desc:	获取本病区患者列表JSON串;
/// Input:	WardId 病区id
/// 		PatNo为患者登记号;
/// 		MedicareNo为患者病案号;
/// 		PatientName为患者姓名;
/// 		patientBedNo床号;
/// 		UserCode管床医生
/// Debug:	d ##Class(web.DHCDocInPatientListNew).GetCurWarPatPatListJSON("CurWarPat","","","","","","","",1,15)
ClassMethod GetCurWarPatPatListJSON(PatListType, PatNo, AMedicareNo, APatientName, APatientBedNo, DocCode, DisDay, DisType, AIdxStart, AIdxLast)
{
	s ^tempscl("GetCurWarPatPatListJSON")=PatListType_","_PatNo_","_AMedicareNo_","_APatientName_","_APatientBedNo_","_DocCode_","_DisDay_","_DisType_","_AIdxStart_","_AIdxLast
	if (PatListType="CurWarPat") s Type=0
	else  s Type=1
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:FindCurrentAdmProxy")
	s sc = result.Execute(Type,PatNo,APatientName,AMedicareNo,APatientBedNo,DisDay,DisType,DocCode)
	s json = ""
 	s count = 0
 	s nowJson = ##Class(%Stream.GlobalCharacter).%New()
 	s ret = ##Class(%Stream.GlobalCharacter).%New()
 	s key = $i(^CacheTemp)
	k ^TempEMRPatList(key)
	s BedNO = ""
	s (CCount,SCount,FCount)=0
	D ##class(web.DHCDocMainOrderInterface).GetIllLevelColor(.ColorList)
	s DateFormat=##class(websys.Conversions).DateFormat()
	s CONTEXT = "" //$g(%session.Data("CONTEXT"))
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
 	{
	 	 s EpisodeID=$g(result.Data("EpisodeID"))
	 	 s PatientID=$g(result.Data("PatientID"))
	 	 
		 s SIll = ##class(web.DHCDocMainOrderInterface).IsSeriouslyIll(EpisodeID) ;病重患者
		 s CIll = ##class(web.DHCDocMainOrderInterface).IsCriticallyIll(EpisodeID) ;病危患者
		 s AdmDate=$g(result.Data("PAAdmDate"))
		 i AdmDate'="" s FIll =($zdh(AdmDate,DateFormat)=..%SysDate())  ;当天入院 First day ill ;新入患者
		 e  s FIll=0
		 If (FIll){
			s ColorDesc = ColorList("F")
			s FCount = FCount+1
			s ColorStatus="新入"
		 }
		 if (CIll){
			s ColorDesc = ColorList("C")  
			s CCount = CCount+1
			s ColorStatus="病危"
		 }
		 if (SIll){
			s ColorDesc = ColorList("S")   
			s SCount = SCount+1
			s ColorStatus="病重"
		 }

		 s json = "{"
		 for i=1:1:ColumnCount {
			if (i'=1) {s json = json_"," }
			s ColumnName=result.GetColumnName(i)
			s json = json_""""_ColumnName_""":"""_$g(result.Data(ColumnName))_""""
			
	     }
		 
		 s json = json_"}" 
		 
		 s BedNO = $g(result.Data("PAAdmBed"))
		 
		 i BedNO="" s BedNO="9999"
		 s ^TempEMRPatList(key,+BedNO,count) = json
		 s json = ""
		 s count = count + 1	
	}
	//倒序排序输出
	s OrdBedNO="",j=0,i=1
	for
	{
		s OrdBedNO = $o(^TempEMRPatList(key,OrdBedNO))
		q:(OrdBedNO="")
		s order=""
		for {
			s order = $o(^TempEMRPatList(key,OrdBedNO,order))
			q:(order = "")
			if ((AIdxStart <= i)&(i <= AIdxLast))
			{
				s tempJson = ^TempEMRPatList(key,OrdBedNO,order)
				s tempJson = $tr(tempJson,$c(10),"")
				s tempJson = $tr(tempJson,$c(13),"")
				s tempJson = $ZSTRIP(tempJson,"*C")
				if (j'=0)
				{
					d nowJson.Write(",")
				}
				d nowJson.Write(tempJson)
				s j = j + 1
			}
			s i = i + 1
		}
	}
	k ^TempEMRPatList(key)
	d ret.Write("{""total"":"_count_",""CCount"":"_CCount_",""SCount"":"_SCount_",""FCount"":"_FCount_",""rows"":[")
	d ret.CopyFrom(nowJson)
	d ret.Write("]}")
	q ret
}

/// Desc:	获取患者列表JSON串;
/// Input:	ALocID为登录科室RowID;
/// 		AUserID为登录用户RowID;
/// 		APatientNo为患者登记号;
/// 		APatientName为患者姓名;
/// 		AdmType为患者就诊类型;
/// 		AStartDate为就诊开始日期;
/// 		AEndDate为就诊截止日期;
/// 		AIsArrivedQue为是否本科患者;
/// 		AIdxStart为分页开始点;
/// 		AIdxLast为分页结束点;
/// Return:	患者列表JSON串,格式为{totalCount:"_count_",data:["_json_"]};
/// Debug:	d ##Class(EMRservice.Ajax.patientInfo).GetAdmListJSON("","on","","","","","飘零","","","","","all","",1,10)
/// Debug:	d ##Class(EMRservice.Ajax.patientInfo).GetAdmListJSON("6","on","","","","","","","","","","all","",1,35)
ClassMethod GetAdmListJSON(ALocID As %String, AIsArrivedQue As %String, APatientNo As %String, AMedicareNo As %String, AStartDate As %String, AEndDate As %String, APatientName As %String, ACFCardNo As %String, AdmType As %String, AIDCardNo As %String, AexpectedLocID As %String, AdmStatus As %String, AMedicalInsuranceNo As %String, AIdxStart As %Integer, AIdxLast As %Integer, AOutStartDate As %String, AOutEndDate As %String)
{
	s result = ##Class(%ResultSet).%New("EMRservice.DAL.GetPaAdmDetail:GetPaAdmList")
 	s sc = result.Execute(ALocID,AIsArrivedQue,APatientNo,AMedicareNo,AStartDate,AEndDate,APatientName,ACFCardNo,AdmType,AIDCardNo,AexpectedLocID,AdmStatus,AMedicalInsuranceNo,AOutStartDate,AOutEndDate)

 	s json = ""
 	s count = 0
 	s nowJson = ""
 	s key = $i(^CacheTemp)
	k ^TempEMRAdmList(key)
	s BedNO = ""
	While (result.Next())
 	{
	 	 s patientID=result.Data("PAPMIDR")
	 	 s PAPMIDOB=$P(^PAPER(patientID,"ALL"),"^",6)
		 s PAPMIDOB=..%ZD(PAPMIDOB)
		 s json = json_"{""PatientID"":"""_$g(patientID)_""","
		 s json = json_"""EpisodeID"":"""_$g(result.Data("PAADMRowID"))_""","
		 s json = json_"""mradm"":"""_$g(result.Data("mradm"))_""","
		 s json = json_"""PAPMINO"":"""_$g(result.Data("PAPMINO"))_""","
		 s json = json_"""MedicareNo"":"""_$g(result.Data("MedicareNo"))_""","
		 s json = json_"""PAPMIName"":"""_$g(result.Data("PAPMIName"))_""","
		 s json = json_"""PAPMIDOB"":"""_$g(PAPMIDOB)_""","
		 s json = json_"""PAPMISex"":"""_$g(result.Data("PAPMISex"))_""","
		 s json = json_"""PAAdmDate"":"""_$g(result.Data("PAAdmDate"))_""","
		 s json = json_"""PAAdmTime"":"""_$g(result.Data("PAAdmTime"))_""","
		 s json = json_"""PAAdmDepCodeDR"":"""_$g(result.Data("PAAdmDepCodeDR"))_""","
		 s json = json_"""PAAdmDocCodeDR"":"""_$g(result.Data("PAAdmDocCodeDR"))_""","
		 s json = json_"""PAAdmType"":"""_$g(result.Data("PAAdmType"))_""","
		 s json = json_"""PAAdmWard"":"""_$g(result.Data("PAAdmWard"))_""","
		 s json = json_"""PAAdmReason"":"""_$g(result.Data("PAADMReason"))_""","
		 s json = json_"""PAADMBedNO"":"""_$g(result.Data("PAADMBedNO"))_""","
		 s json = json_"""PADischgeDate"":"""_$g(result.Data("PADischgeDate"))_""","
		 s json = json_"""PADischgeTime"":"""_$g(result.Data("PADischgeTime"))_""","
		 s json = json_"""IDCardNO"":"""_$g(result.Data("IDCard"))_""","
		 s json = json_"""CFCardNO"":"""_$g(result.Data("CFCardNo"))_""","
		 s json = json_"""Warddesc"":"""_$g(result.Data("Warddesc"))_""","
		 s json = json_"""Diagnosis"":"""_$g(result.Data("Diagnosis"))_"""}"
		 s BedNO = $g(result.Data("PAADMBedNO"))
		 //modify by lifb 20170821
		 //床号 为 01 到 09 BedNO为空，导致程序错误
		 /*
		 if ((BedNO'="")&&(BedNO'="无"))
		 {
			 
			 s BedNO = $e(BedNO,1,$l(BedNO)-1)
			 if (BedNO'="")
			 {
				 for
				 {
					 q:($e(BedNO,0,1)'=0)
					 s BedNO = $e(BedNO,2,$l(BedNO))
					 q:(BedNO = "")
				 }
			 }
		 }*/
		 s ^TempEMRAdmList(key,BedNO,count) = json
		 s json = ""
		 s count = count + 1	
	}
	//倒序排序输出
	s OrdBedNO="",j=0,i=1
	for
	{
		s OrdBedNO = $o(^TempEMRAdmList(key,OrdBedNO),1)
		q:(OrdBedNO="")
		s order=""
		for {
			s order = $o(^TempEMRAdmList(key,OrdBedNO,order))
			q:(order = "")
			if ((AIdxStart <= i)&(i <= AIdxLast))
			{
				s:(j'=0) nowJson = nowJson_","
				s nowJson = nowJson_^TempEMRAdmList(key,OrdBedNO,order)
				s j = j + 1
			}
			s i = i + 1
		}
	}
	k ^TempEMRAdmList(key)
	s nowJson = $ZSTRIP(nowJson,"*C")
	s ret = "{""total"":"_count_",""rows"":["_nowJson_"]}"
	w ret
}

/// w ##Class(EMRservice.Ajax.patientInfo).GetOPatient(5,3111)
/// 门诊页面使用的门诊患者列表
ClassMethod GetOPatient(LocID, UserID) As %String
{
	
	s IPAddress=""  //$$upper^SSUTIL4(%request.GetCgiEnv("REMOTE_ADDR"))
	s AllPatient="on",PatientNo="",SurName="",ArrivedQue="",AIdxStart="",AIdxLast=""
    s StartDate=..%SysDate() // today
    s EndDate=..%SysDate()
    s RegQue=""
    s Consultation="AllPatient"
	s result = ##Class(%ResultSet).%New("web.DHCDocOutPatientList:FindLocDocCurrentAdm")
 	s sc = result.Execute(LocID,UserID,IPAddress,AllPatient,PatientNo,SurName,StartDate,EndDate,ArrivedQue,RegQue,Consultation)
 	
 	s json = ""
 	s count = 0

	While (result.Next())
 	{
	 	s:(json'="") json = json_","
	 	
		s json = json_"{""PatientID"":"""_$g(result.Data("PatientID"))_""","
		s json = json_"""EpisodeID"":"""_$g(result.Data("EpisodeID"))_""","
		s json = json_"""mradm"":"""_$g(result.Data("mradm"))_""","
		s json = json_"""PAPMINO"":"""_$g(result.Data("PAPMINO"))_""","	  
		s json = json_"""PAPMIName"":"""_$g(result.Data("PAPMIName"))_""","
		s json = json_"""PAPMIDOB"":"""_$g(result.Data("PAPMIDOB"))_""","
		s json = json_"""PAPMISex"":"""_$g(result.Data("PAPMISex"))_""","
		s json = json_"""PAAdmReason"":"""_$g(result.Data("PAAdmReason"))_"""}"
		s isFirstRecord = 0
	 
		s count = count + 1	
	}
	s json = $ZSTRIP(json,"*C")
	s ret = "{""total"":"_count_",""rows"":["_json_"]}"
	q ret
}

/// Desc:依据科室ID获取用户Code、用户Name
/// w ##Class(web.DHCDocInPatientListNew).GetUserName(6)
ClassMethod GetUserName(ALocID As %String)
{
	k ^TEMPUserNameList($j)
	Set langid=..%LanguageID()
	w "[{"
	//w """UserCode"":"""","_"""UserDesc"":"""_"全部医师"_""""_"}"
	w """UserCode"":"""","
	w """UserDesc"":"""_##class(websys.Translation).Get("inpatientlist.inpat.csp","全部医师")_""","
	w """OtherName"":"""""
	w "}"
	s count = 0
	//无限制标识
	/*s LocCureLimit=##class(web.DHCDocIPBookNew).GetLocCureLimit(ALocID)
	if (LocCureLimit="Y"){
		s wardr=0
		f  s wardr=$O(^PAWARD(wardr)) Q:wardr=""  d
		.Q:'$D(^PAWARD(wardr))||($G(^PAWARD(wardr))="")
		.s warddesc=$P(^PAWARD(wardr),"^",2)
		.s active=$P(^PAWARD(wardr),"^",6)
		.Q:active'="Y"
		.s adtivedatefrom=$P(^PAWARD(wardr),"^",7)
		.Q:((adtivedatefrom'="")&(adtivedatefrom>+$H))
		.s adtivedateto=$P(^PAWARD(wardr),"^",9)
		.Q:((adtivedateto'="")&(adtivedateto<+$H))
		.s:warddesc["-" warddesc=$P(warddesc,"-",2)
		.Q:warddesc=""
		.s LocID=$p($g(^PAWARD(+wardr)),"^",5)
		.d WhiteUserName(LocID)
	}else{*/
		d WhiteUserName(ALocID)
		/*//关联得其他病区
	    s LinkWard=##class(web.DHCDocIPBookNew).GetLinkWard(ALocID)
		if (LinkWard'=""){
			s linkwardstr=##class(web.DHCDocIPBookNew).GetLinkWard(ALocID)
			f i=1:1:$L(linkwardstr,"!")  {
				s oneward=$P(linkwardstr,"!",i)
				continue:oneward=""
				s wardr=$P(oneward,"^",2)
				s LocID=$p($g(^PAWARD(+wardr)),"^",5)
				d WhiteUserName(LocID)
			}
		}*/
	//}
	k ^TEMPUserNameList($j)
	q "]"
WhiteUserName(locid)
	s ds = ##Class(%Library.ResultSet).%New("EMRservice.DAL.GetPaAdmDetail:GetUserDataList")
	d ds.Execute("",locid)
	While (ds.Next()){
		s UserID=ds.Data("UserID")
		if (UserID'=""){
			continue:$d(^TEMPUserNameList($j,ds.Data("UserCode"))) 
			s DateFrom=$P(^SSU("SSUSR",UserID),"^",96)
			s DateTo=$P(^SSU("SSUSR",UserID),"^",97)
			continue:(0=##class(DHCDoc.Util.Base).CheckDateValid(DateFrom,DateTo))
			
			s ProvID=ds.Data("ProvID")
			s OtherName=$p(^CTPCP(ProvID,3),"^",28)
			s UserDesc=##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",ds.Data("UserDesc"),langid)
			w ",{"
			w """UserCode"":"""_ds.Data("UserCode")_""","
			w """UserDesc"":"""_UserDesc_""","
			w """OtherName"":"""_OtherName_""""
	    	w "}"
			//w """UserCode"":"""_ds.Data("UserCode")_""","_"""UserDesc"":"""_ds.Data("UserDesc")_""""_"}"
			s count = count + 1
			s ^TEMPUserNameList($j,ds.Data("UserCode"))=""
		}
	}
	/*k ^TEMPUserNameList($j)
	//增加“全部”选项，支持查询所有主管医生的患者
	s json = "{"
	s json = json_"""UserCode"":"""","
	s json = json_"""UserDesc"":"""_"全部医师"_""""
	s json = json_"}"
	s count = 0
	s ds = ##Class(%Library.ResultSet).%New("EMRservice.DAL.GetPaAdmDetail:GetUserDataList")
	d ds.Execute("",ALocID)
	While (ds.Next())
	{
		if (ds.Data("UserID")'=""){
			if $d(^TEMPUserNameList($j,ds.Data("UserCode"))) continue
			//s:(count '=0) json =json_","
			s json =json_","
			s json = json_"{"
			s json = json_"""UserCode"":"""_ds.Data("UserCode")_""","
			s json = json_"""UserDesc"":"""_ds.Data("UserDesc")_""""
	    	s json = json_"}"
			s count = count + 1
			s ^TEMPUserNameList($j,ds.Data("UserCode"))=""
		}
	}
	k ^TEMPUserNameList($j)
	s json = "["_json_"]"
	s json = $ZSTRIP(json,"*C")
	q json*/
}

/// w ##Class(web.DHCDocInPatientListNew).getLinkLocByLocID("6")
ClassMethod getLinkLocByLocID(ALocID As %String)
{
	k tempLinkWarkArr
	s HospId=$p(^CTLOC(ALocID),"^",22)
	Set langid=..%LanguageID()
	w "["
	s count = 0
	//无限制标识
	s LocCureLimit=##class(web.DHCDocIPBookNew).GetLocCureLimit(ALocID)
	if (LocCureLimit="Y"){
		s json = "[",count = 0
		s wardr=0
		f  s wardr=$O(^PAWARD(wardr)) Q:wardr=""  d
		.Q:'$D(^PAWARD(wardr))||($G(^PAWARD(wardr))="")
		.s warddesc=$P(^PAWARD(wardr),"^",2)
		.s active=$P(^PAWARD(wardr),"^",6)
		.Q:active'="Y"
		.s adtivedatefrom=$P(^PAWARD(wardr),"^",7)
		.Q:((adtivedatefrom'="")&(adtivedatefrom>+$H))
		.s adtivedateto=$P(^PAWARD(wardr),"^",9)
		.Q:((adtivedateto'="")&(adtivedateto<+$H))
		.s:warddesc["-" warddesc=$P(warddesc,"-",2)
		.Q:warddesc=""
		.s LocID=$p($g(^PAWARD(+wardr)),"^",5)
		.s LocDesc=$p($g(^CTLOC(LocID)),"^",2)
		.s LocDesc=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",LocDesc,langid)
		.s Alias=$p($g(^CTLOC(LocID)),"^",43)
		.Q:($p(^CTLOC(LocID),"^",22)'=HospId)
		.q:($d(tempLinkWarkArr(LocID)))
		.s tempLinkWarkArr(LocID)=1
		.//s json = json_"{""LocID"":"""_LocID_""","
		.//s json = json_"""LocDesc"":"""_LocDesc_"""}"
	 	.//s json = json_","
	 	.i count>=1 w ","
	 	.w "{""LocID"":"""_LocID_""","
		.w """LocDesc"":"""_LocDesc_""","
		.w """Alias"":"""_Alias_"""}"
		.s count=count+1
	}else{
		s locIDStr = ##class(EMRservice.HISInterface.PatientInfoAssist).CurDeptLinkLocByDept(ALocID)
		s locIDCount = $L(locIDStr,"^")
		for i=3:1:locIDCount-1
		{
			s LocID = $p(locIDStr,"^",i)
			if (LocID '= "")
			{
				continue:($d(tempLinkWarkArr(LocID)))
				s tempLinkWarkArr(LocID)=1
				s LocDesc = $p($g(^CTLOC(LocID)),"^",2)
				s LocDesc=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",LocDesc,langid)
				s Alias=$p($g(^CTLOC(LocID)),"^",43)
				s ActiveDateTo=$p($g(^CTLOC(LocID)),"^",25)
				continue:(ActiveDateTo'="")&&(ActiveDateTo<+$h)
				continue:($P(^CTLOC(LocID),"^",14)'="Y")
				//s json = json_"{""LocID"":"""_LocID_""","
				//s json = json_"""LocDesc"":"""_LocDesc_"""}"
			 	//s json = json_","
			 	i count>=1 w "," 
			 	w "{""LocID"":"""_LocID_""","
			 	w """LocDesc"":"""_LocDesc_""","
			 	w """Alias"":"""_Alias_"""}"
			 	
			 	s count=count+1
			 	
			}
			//s count = count + 1
		}
		//s json = $tr(json,$c(10),"")
		//s json = $tr(json,$c(13),"")
		//s json = $e(json,1,$l(json)-1)
		//关联得其他病区
	    s LinkWard=##class(web.DHCDocIPBookNew).GetLinkWard(ALocID)
		if (LinkWard'=""){
			s linkwardstr=##class(web.DHCDocIPBookNew).GetLinkWard(ALocID)
			f i=1:1:$L(linkwardstr,"!")  {
				s oneward=$P(linkwardstr,"!",i)
				continue:oneward=""
				s wardr=$P(oneward,"^",2)
				s LocID=$p($g(^PAWARD(+wardr)),"^",5)
				s LocDesc=$p($g(^CTLOC(LocID)),"^",2)
				s LocDesc=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",LocDesc,langid)
				s Alias=$p($g(^CTLOC(LocID)),"^",43)
				continue:($d(tempLinkWarkArr(LocID)))
				s ActiveDateTo=$p($g(^CTLOC(LocID)),"^",25)
				continue:(ActiveDateTo'="")&&(ActiveDateTo<+$h)
				continue:($P(^CTLOC(LocID),"^",14)'="Y")
				s tempLinkWarkArr(LocID)=1
				//if (json'="[") s json = json_","
				//s json = json_"{""LocID"":"""_LocID_""","
				//s json = json_"""LocDesc"":"""_LocDesc_"""}"
				i count>=1 w ","
			 	w "{""LocID"":"""_LocID_""","
			 	w """LocDesc"":"""_LocDesc_""","
			 	w """Alias"":"""_Alias_"""}"
			 	s count=count+1
			}
		}
			
		//s json = json_"]"
	}	
	
	k tempLinkWarkArr
	//q json
	q "]"
}

/// w ##Class(web.DHCDocInPatientListNew).GetPatCount("6")
ClassMethod GetPatCount(locID As %String, UserId As %String)
{
	s DocId=$p($g(^SSU("SSUSR",UserId)),"^",14)
	s json = "["
	s CurLocPatCount=0,CriticallyPatConut=0,OperationPatCount=0,TransOutPatListCount=0,OuPatListCount=0
	s Date=""
	for {
		s Date = $O(^PAADMi("AdmTypeCurrLoc","I",locID,Date))
		q:(Date="")
		s Time=""
		for {
			s Time=$O(^PAADMi("AdmTypeCurrLoc","I",locID,Date,Time))
			q:(Time="")
			s PAADMRowID=""
			for {
				s PAADMRowID=$O(^PAADMi("AdmTypeCurrLoc","I",locID,Date,Time,PAADMRowID))
				q:(PAADMRowID="")
				s PatDoc=$P($g(^PAADM(PAADMRowID)),"^",9)
			    if (PatDoc = DocId) s CurLocPatCount=CurLocPatCount+1
				s PatientID=$P(^PAADM(PAADMRowID),"^",1)
				s SIll = ##class(web.DHCDocMainOrderInterface).IsSeriouslyIll(PAADMRowID) ;病重患者
		 		s CIll = ##class(web.DHCDocMainOrderInterface).IsCriticallyIll(PAADMRowID) ;病危患者
		 		if (SIll)||(CIll) s CriticallyPatConut=CriticallyPatConut+1
			}
		}
	}
    s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetOperationPatList")
	s sc = result.Execute(locID,UserId,+$h,+$h)
	While (result.Next()){
		 s OperationPatCount = OperationPatCount + 1
	}
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetChangeDeptPatList")
	s sc = result.Execute(locID,UserId,"currentUser",+$h,+$h)
	While (result.Next()){
		 s TransOutPatListCount = TransOutPatListCount + 1
	}
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetOutPatList")
	s sc = result.Execute(locID,UserId,"currentUser",+$h,+$h)
	While (result.Next()){
		 s OuPatListCount = OuPatListCount + 1
	}
	;预入院患者
	s PreAdmissionCount=0
	s admdr=0
	f  s admdr=$O(^PAADMi("PAADM_VisitStatus","P",admdr)) Q:admdr=""  d
	.s admloc=$P($G(^PAADM(admdr)),"^",4)
	.Q:admloc'=locID
	.s PreAdmissionCount=(PreAdmissionCount+1)
	

	
	//s json = json_"{""CurLocInPatCount"":"""_CurLocPatCount_""","
	s json = json_"{""OperationPatCount"":"""_OperationPatCount_""","
	s json = json_"""PreAdmissionCount"":"""_PreAdmissionCount_""","
	s json = json_"""TransOutPatListCount"":"""_TransOutPatListCount_""","
	s json = json_"""OuPatListCount"":"""_OuPatListCount_""","
	s json = json_"""CurLocCriticallyPatCount"":"""_CriticallyPatConut_"""}"
	s json = json_"]"
	q json
}

ClassMethod InPatLisDiv()
{
  w "<div id='DocConfigImg' class='DocConfigImg'>" 
  w "<a class='i-btn i-btn-primary' href='#' id='InPatListBtn' name='InPatListBtn'>病人列表</a>"
  w "<div id='IPPatientList' class='IPPatientList' style='height:0px;width:0px'><iframe id='inpatientlistFrame' src='inpatientlist.csp' width='800px' height='650px'></iframe></div></div>"
}

// d ##class(%ResultSet).RunQuery("web.DHCDocInPatientListNew","FindCurrentAdmProxy",0,"","","","","29","1","")

Query FindCurrentAdmProxy(Type As %String = 0, PatientNo As %String = "", Name As %String = "", MedicalNo As %String = "", BedNo As %String = "", DisDay = "", DisType = "", DocCode As %String = "") As websys.Query(ROWSPEC = "PatientID:%String,EpisodeID:%String,mradm:%String,PAPMINO:%String:登记号,PAPMIName:%String:姓名,PAPMIDOB:%String:出生日期,PAPMISex:%String:性别,PAAdmDate:%String:就诊日期,PAAdmTime:%String:就诊时间,PAAdmNo:%String:就诊号,PAAdmDepCodeDR:%String:就诊科室,PAAdmDocCodeDR:%String:医生,PAAdmType:%String:就诊类型,Hospital:%String:医院,PAAdmWard:%String:病区,PAAdmBed:%String:床号^50,FinancialDischargeFlag:%String,MedicalDischargeFlag:%String,FinalDischargeFlag:%String,PAAdmReason:%String:病人类型,PAAdmDischgeDate:%String:出院日期,PAAdmDischgeTime:%String,RegDoctor:%String:号别,Diagnosis:%String:诊断,ArrivedDate:%String:到达日期,ArrivedTime:%String:到达时间,LeavedDate:%String:离开日期,LeavedTime:%String:离开时间,LocSeqNo:%String:顺序号,PAAdmPriority:%String:优先级,WalkStatus:%String:状态,ConsultRoom:%String:房间,ConsultArea:%String:诊区,PAAdmReasonCode:%String,StatusCode:%String,PAPMIAge:%String:年龄,PriorityCode:%String,Called:%String,RegDocDr:%String,Deposit:%String:预交金,Amount:%String:费用,Charge:%String:余额,IconProfile:%String:图表菜单,MedicareNo:%String:病案号,PoliticalLevel:%String:病人级别,SecretLevel:%String:病人密级,ColorDesc:%String:BGColor,ResidentDays:%String:就诊天数,IsRecordCompleted:%String:电子病历完成标志,HomepageURL:%String:病历入口,OutDays:%String:出院天数")
{
}

ClassMethod FindCurrentAdmProxyExecute(ByRef qHandle As %Binary, Type As %String = 0, PatientNo As %String = "", Name As %String = "", MedicalNo As %String = "", BedNo As %String = "", DisDay = "", DisType = "", DocCode As %String = "") As %Status
{
	Set repid=$I(^CacheTemp)
	If $g(ind)="" Set ind=1
	s (AllPatient,ArrivedQue,MedUnit,HisPat)=""	
	;病危人数, 病重人数,新入院人数,一级护理
	s (CCount,SCount,FCount,FCCount)=0
	s LocID=%session.Get("LOGON.CTLOCID")
	s UserID =%session.Get("LOGON.USERID")
	s LogonHospId=%session.Get("LOGON.HOSPID")
	S CONTEXT =$g(%session.Data("CONTEXT"))
	s:Type="" Type=0
	s LocIDStr=""
    if (DisDay'=""){
		Set LocLink=0
		f  Set LocLink=$O(^CTLOC(LocID,"LINK",LocLink)) Quit:LocLink=""  Do
		.Set LocItem=$P($G(^CTLOC(LocID,"LINK",LocLink)),"^",1)
		.i LocIDStr="" s LocIDStr=LocItem
		.e  s LocIDStr=LocIDStr_"^"_LocItem
	}
	i LocIDStr="" s LocIDStr=LocID
	D ##class(web.DHCDocMainOrderInterface).GetIllLevelColor(.ColorList)
	k ^||OrderByBed,^||OrderByNullBed
	if ((PatientNo="") && (Name="") && (MedicalNo="") &&(DisDay="")){
		i Type=0 s AllPatient="on"		;病区
		i Type=1 s HisPat="on"			;曾转科的在院病人			
		if (HisPat=""){
			Set LocEmerType=$P($G(^CTLOC(LocID)),"^",13)
			Quit:LocEmerType'="W"	
			Set EmerWard=$O(^PAWARD(0,"WARD_LocationDR",LocID,""))
			Quit:EmerWard=""
			Set WardItem=EmerWard
			If WardItem'="" Do WardPatList
		}else{	//;曾转科的在院病人
			s admrowid=0 f  s admrowid=$o(^PAADMi("AdmTypeCurr","I",admrowid)) q:admrowid=""  d
			.q:$p(^PAADM(admrowid),"^",20)'="A"	 ;VisitStatus
			.s PAPMI = $p(^PAADM(admrowid),"^",1)
			.S:$d(^PAPER(PAPMI,"PAT",1)) PatientNo=$P(^PAPER(PAPMI,"PAT",1),"^",1)
			.s WardID = $O(^PAWARD(0,"WARD_LocationDR",LocID,""))
			.i $d(^PAPER(PAPMI,"PAT",1)),$$findAdmTransWard(admrowid,WardID),$p(^PAADM(admrowid),"^",70)'=WardID d
			..s PAAdm=admrowid
			..d OutputRow
		}
	}else{	
		if (PatientNo'=""){
			//登记号查询
			Set PAPMI=$O(^PAPERi("PAPMI_PatNo",PatientNo,""))
			if $g(PAPMI)="" Set qHandle=$lb(0,repid,0)	Quit $$$OK
			Set PAAdm=0
			For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM","I",PAAdm)) Quit:PAAdm=""  Do
			.d OutputRow
		}Elseif (MedicalNo'=""){
			Set PAPMI=0
			For  Set PAPMI = $O(^PAPERi("Medicare1",$$ALPHAUP^SSUTIL4(MedicalNo),PAPMI)) Q:PAPMI=""  Do
			.Set PAAdm="" For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM","I",PAAdm)) Q:PAAdm=""  Do
			..d OutputRow
		}ELSEIF (Name'=""){
			Set PAPMI=0
			For  Set PAPMI = $O(^PAPERi("PAPER_PatName",$$ALPHAUP^SSUTIL4(Name),PAPMI)) Q:PAPMI=""  Do
			.Set PAAdm="" For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM","I",PAAdm)) Q:PAAdm=""  Do
			..d OutputRow
		}ELSEIF (DisDay'=""){ //出院天数
		   //出院天数
			Set nowDay = +$h
			For Day = nowDay:-1:(nowDay-DisDay){
				For i=1:1:$l(LocIDStr,"^"){
					s LocID1=$p(LocIDStr,"^",i)
					Set PAAdm = $O(^PAADMi("DisDateDep",LocID1,Day,""))
					while (PAAdm'=""){
						if (DisType=1){ //本人
							Set CurrDocDr = $P($g(^PAADM(PAAdm)),"^",9)
						    if CurrDocDr>0{
							    Set DoctorUserDr = $o(^SSU("SSUSR",0,"CTPCP",CurrDocDr,""))
								if (UserID=DoctorUserDr) DO OutputRow
						    }
						    
						}elseif (DisType=0){ //本科
						  Do OutputRow
					    }elseif (DisType=2){ //本单元
						    Set DocId=$p($g(^SSU("SSUSR",UserID)),"^",14)
						    Set MedUnit="on"
						    Set AllowFlag=##class(web.DHCDocInPatientList).CheckCTLocMedUnit(PAAdm,DocId,LocID,MedUnit)
					        if AllowFlag="1"{
						        DO OutputRow
						    }
						}
						Set PAAdm = $O(^PAADMi("DisDateDep",LocID1,Day,PAAdm))
					}
				}
				
			}
	     }
	 }
	;输出病人列表信息
	s bedind=0 for  s bedind=$o(^||OrderByBed(bedind)) q:bedind=""  d	
	.q:bedind'[BedNo
	.s subind="" f   s subind=$o(^||OrderByBed(bedind,subind)) q:subind=""  d
	..s ^CacheTemp(repid,ind) = ^||OrderByBed(bedind,subind)
	..s ind=ind+1
	if (BedNo="") d
	.s subind="" f   s subind=$o(^||OrderByNullBed(subind)) q:subind=""  d
	..s ^CacheTemp(repid,ind) = ^||OrderByNullBed(subind)
	..s ind=ind+1
	Set qHandle=$lb(0,repid,0)	
	Quit $$$OK
WardPatList
	Set RoomDr=""
	For  set RoomDr=$O(^PAADMi("CurrWard",WardItem,RoomDr)) Quit:RoomDr=""  Do
	.Set PAAdm=""
	.For  Set PAAdm=$O(^PAADMi("CurrWard",WardItem,RoomDr,PAAdm)) Quit:PAAdm=""  Do
	..Set AdmDate=$P($g(^PAADM(PAAdm)),"^",6)
	..Do OutputRow
	Set AdmItm=0
	For  Set AdmItm=$O(^PAWARDA(WardItem,"WADM",AdmItm)) Quit:AdmItm=""  Do
	.Set PAAdm=$P(^PAWARDA(WardItem,"WADM",AdmItm),"^",1)
	.Set AdmDate=$P($g(^PAADM(PAAdm)),"^",6)
	.Do OutputRow
	Quit
findAdmTransWard(PAAdm,WardID)
	s find=0
	s child=0 f {
		s child=$O(^PAADM(PAAdm,"TRANS",child))
		Q:child=""
		s TransWardID=$P(^PAADM(PAAdm,"TRANS",child),"^",9)
		if TransWardID=WardID {
			s find=1
			Quit
		}
	}
	Q find
ResetVariables
	Set (PatientID,EpisodeID,mradm,PAPMINO,PAPMIName,PAPMIDOB,PAPMISex,PAAdmDate,PAAdmTime,PAAdmNo,PAAdmDepCodeDR,PAAdmDocCodeDR,PAAdmType,Hospital,PAAdmWard,PAAdmBed,FinancialDischargeFlag,MedicalDischargeFlag,FinalDischargeFlag,PAAdmReason,DischargeDate,Diagnosis,RegDoctor,ArrivedDate,ArrivedTime,LeavedDate,LeavedTime,LocSeqNo,PAAdmPriority,WalkStatus,ConsultRoom,ConsultArea,PAAdmReasonCode,StatusCode,PAPMIAge,PriorityCode,Called,RegDocDr,Deposit,Amount,Charge,EmployeeFunction,SecretLevel,ColorDesc)=""
	Quit
OutputRow
	Set langid=..%LanguageID()
	Do ResetVariables
	Set PatientID=$P(^PAADM(PAAdm),"^",1)
	Set EpisodeID=PAAdm
	Set mradm=$P(^PAADM(PAAdm),"^",61)
	Set PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
	Set PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
	Set PAPMIDOB=..%ZD($P(^PAPER(PatientID,"ALL"),"^",6)) //$ZD($P(^PAPER(PatientID,"ALL"),"^",6),3)
	Set Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	Set PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
	Set DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
	If DobDate'="" Do
	.Set PAPMIDOB=..%ZD($P(^PAPER(PatientID,"ALL"),"^",6)) //$ZD($P(^PAPER(PatientID,"ALL"),"^",6),3)
	Else  Set PAPMIDOB="",PAPMIAge=""
	s AdmDepDr=$p($g(^PAADM(PAAdm)),"^",4)
	s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
	Set PAPMIAge = ##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,PAAdm,AdmDepHospId)
	s PatEncryptLevel=##class(web.DHCBL.CARD.UCardPaPatMasInfo).GetPatEncryptLevel(PatientID,.ErrMsg)
	i PatEncryptLevel'="" {
		s EmployeeFunction=$p(PatEncryptLevel,"^",2)
		s SecretLevel=$p(PatEncryptLevel,"^",1)
	}
	Set PAAdmDate=..%ZD($P($g(^PAADM(PAAdm)),"^",6)) //$ZD($P($g(^PAADM(PAAdm)),"^",6),3)
	Set PAAdmTime=..%ZT($P($g(^PAADM(PAAdm)),"^",7),2)
	Set PAAdmNo=$P($g(^PAADM(PAAdm)),"^",81)
	Set Loc=$P($g(^PAADM(PAAdm)),"^",4)
	s PAAdmDepCodeDR=$P($g(^CTLOC(Loc)),"^",2)
	s PAAdmDepCodeDR=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",PAAdmDepCodeDR,langid)
	Set PAAdmDepCodeDR=##class(web.DHCDocInPatientList).RemoveAlias(PAAdmDepCodeDR)
	Set Doctor=$P($g(^PAADM(PAAdm)),"^",9)
	Set DoctorCode=""
	If Doctor'="" Set PAAdmDocCodeDR=$P($g(^CTPCP(Doctor,1)),"^",2),DoctorCode=$P($g(^CTPCP(Doctor,1)),"^",1)
	Set DoctorCode= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",DoctorCode,langid)
	q:(DocCode'="")&&(DocCode'=DoctorCode)
	Else  Set PAAdmDocCodeDR=""
	Set PAAdmType=$P($g(^PAADM(PAAdm)),"^",2)
	Set Hosp=$P($g(^CTLOC(Loc)),"^",22)
	q:(LogonHospId'="")&&(Hosp'=LogonHospId)
	If Hosp'="" Set Hospital=$P($g(^CT("HOSP",Hosp)),"^",2)
	Set WardDr=$P($g(^PAADM(PAAdm)),"^",70)
	s PAAdmWard=$P($g(^PAWARD(WardDr)),"^",2)
	s PAAdmWard=##class(User.PACWard).GetTranByDesc("WARDDesc",PAAdmWard,langid)
	if WardDr'="" Set PAAdmWard=##class(web.DHCDocInPatientList).RemoveAlias(PAAdmWard)
	else  Set PAAdmWard=""
	Set BedId=$P($g(^PAADM(PAAdm)),"^",73)
    ;if HisPat="on" set BedId=""
	if BedId'="" Set PAAdmBed=$P($g(^PAWARD(+BedId,"BED",$P(BedId,"||",2))),"^",1)
	else  Set PAAdmBed=""
	 
	Set CurrentRoomId=$P($g(^PAADM(PAAdm)),"^",69)
	if CurrentRoomId'="" Set ConsultRoom = $p(^PAROOM(CurrentRoomId),"^",2)
	else  set ConsultRoom=""
	Set FinancialDischargeFlag=$P($g(^PAADM(PAAdm)),"^",45)
	Set MedicalDischargeFlag=$P($g(^PAADM(PAAdm)),"^",63)
	Set PAAdmStatus=$P($g(^PAADM(PAAdm)),"^",20)
	Set FinalDischargeFlag=$S($g(PAAdmStatus)="D":"Y",1:"N")
	Set AdmReason=$P($g(^PAADM(PAAdm,1)),"^",7)
	If AdmReason'="" Set PAAdmReason=$P($g(^PAC("ADMREA",AdmReason)),"^",2),PAAdmReasonCode=$P($g(^PAC("ADMREA",AdmReason)),"^",5)
	Else  Set PAAdmReason="",PAAdmReasonCode=""
	Set PAAdmStatus=$P($g(^PAADM(PAAdm)),"^",20)
	Set DischargeDateStr=##class(web.DHCDocMainOrderInterface).GetDisDateTime(PAAdm)
	Set DischargeDate= $p(DischargeDateStr,"^",1) ; $P($g(^PAADM(PAAdm)),"^",17)
	Set:DischargeDate'="" DischargeDate=..%ZD(DischargeDate) //$zd(DischargeDate,3)
	Set DischargeTime=$p(DischargeDateStr,"^",2) 
	Set:DischargeTime'="" DischargeTime=..%ZT(DischargeTime,1)
	
	If mradm'="" Set Diagnosis=##class(web.DHCDocInPatientList).GetMRAdmDiagnosis(mradm,";") 
	Else  Set Diagnosis=""
	Set Seq=EpisodeID	
	set Deposit=##class(web.UDHCJFBaseCommon).deposit(PAAdm)  //押金
	set Amount=##class(web.UDHCJFCKD).totalamount(PAAdm)      //费用
	set Charge=##class(web.DHCDocOrderCommon).GetCurrentDeposit(PAAdm)   //余额
	set IconProfile=""	//$ZCVT(##class(web.DHCDocMain).ShowIcon("MAP",EpisodeID_"^^^"_PatientID,CONTEXT),"O","HTML")	//加图表菜单
	set MrNo = ##class(web.DHCDocMainOrderInterface).IGetMrNoByEpisodeID(EpisodeID)
	Set ColorDesc = ""
	//s ResidentDays=##Class(EMRservice.DAL.GetPaAdmDetail).ResidentDaysAdm(EpisodeID)
	s AdmInOutDate=##class(web.UDHCJFBaseCommon).GetAdmInOutDatebyEpisodeID(EpisodeID)
	s ResidentDays=$P(AdmInOutDate,"^",3)
	i ResidentDays'="" s ResidentDays=ResidentDays_"天"
	//判断就诊病历是否全部完成，若完成输出1，否则输出0
	s IsRecordCompleted = ##Class(EMRservice.BL.BLAdmRecordStatus).GetAdmRecordStatus(EpisodeID)
	//病历入口
	s HomepageTemplateIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetTemplateInfo("HomePage")
	s HomepageURL = ##class(EMRservice.DAL.GetPaAdmDetail).GetEMRURL(EpisodeID,HomepageTemplateIDStr)
	//出院天数
	s Systemdatetime = $HOROLOG
	s PAAdmDischgeDateSys=$P($g(^PAADM(EpisodeID)),"^",17)
	s Systemdateint = +$h
	s OutDays = Systemdateint-PAAdmDischgeDateSys
	set Data=$LB(PatientID,EpisodeID,mradm,PAPMINO,PAPMIName,PAPMIDOB,PAPMISex,PAAdmDate,PAAdmTime,PAAdmNo,PAAdmDepCodeDR,PAAdmDocCodeDR,PAAdmType,Hospital,PAAdmWard,PAAdmBed,FinancialDischargeFlag,MedicalDischargeFlag,FinalDischargeFlag,PAAdmReason,DischargeDate,DischargeTime,RegDoctor,Diagnosis,ArrivedDate,ArrivedTime,LeavedDate,LeavedTime,LocSeqNo,PAAdmPriority,WalkStatus,ConsultRoom,ConsultArea,PAAdmReasonCode,StatusCode,PAPMIAge,PriorityCode,Called,RegDocDr,Deposit,Amount,Charge,IconProfile,MrNo,EmployeeFunction,SecretLevel,ColorDesc,ResidentDays,IsRecordCompleted,HomepageURL,OutDays)
	i PAAdmBed="" s ^||OrderByNullBed(EpisodeID)=Data
	e  s ^||OrderByBed(" "_PAAdmBed,EpisodeID)=Data
	Quit
}

/// d ##class(%ResultSet).RunQuery("EMRservice.DAL.GetPaAdmDetail","GetInPatList","6","105","currentUser","all","","")
/// d ##class(%ResultSet).RunQuery("EMRservice.DAL.GetPaAdmDetail","GetInPatList","6","105","currentGroup","all","","")
/// d ##class(%ResultSet).RunQuery("EMRservice.DAL.GetPaAdmDetail","GetInPatList","6","105","currentLoc","all","","")
Query GetInPatList(ALocID As %String, AUserID As %String, ARadioValue As %String, AWardID As %String, AMedicareNo As %String = "", APAPMIName As %String = "", DeliveryPatient As %String = "0", APatientBedNo As %String = "", ADocCode As %String = "", BZStr As %String = "", patientNo As %String = "", Transfer As %String = "", Dischargeorder As %String = "", CPWSStatusCode As %String = "") As %Query(ROWSPEC = "mradm:%String:$80,PatientID:%String:$80,EpisodeID:%String:$80,PAPMINO:%String:登记号$100,PAPMIName:%String:姓名$70,PAPMISex:%String:性别$50,PAPMIDOB:%String:出生日期$80,PAPMIAge:%String:年龄$50,PAAdmDate:%String:就诊日期$95,PAAdmTime:%String:就诊时间$85,PAAdmType:%String:$80,Diagnosis:%String:诊断$150,PAAdmDocCodeDR:%String:主管医师$80,HeadUniteDoc:%String:带组医师$80,ChiefDoc:%String:主任医师$80,PAAdmBedNO:%String:床号$50,PAAdmWard:%String:病区$150,PAAdmRoom:%String:房间$80,PAAdmReason:%String:患者费别$80,ResidentDays:%String:住院天数$80,InTimes:%String:入院次数$80,MedicareNo:%String:病案号$70,PAAdmReMark:%String:医生便签$80,ColorDesc:%String:状态$50,ColorStatus:%String:$80,ColorStatusCode:%String:$80,SecAlias:%String:密级$80,EmployeeFunction:%String:病人级别$80,CPWSStatus:%String:入径状态$80,NurseAccp:%String:护士拒绝$80,IconProfile:%String:图标菜单$80,PAPERTelH:%String:联系电话$110,FirstBedDateTime:%String:入科时间$160,CareClass:%String:护理级别$120")
{
}

ClassMethod GetInPatListExecute(ByRef qHandle As %Binary, ALocID As %String, AUserID As %String, ARadioValue As %String, AWardID As %String, AMedicareNo As %String = "", APAPMIName As %String = "", DeliveryPatient As %String = "0", APatientBedNo As %String = "", ADocCode As %String = "", BZStr As %String = "", patientNo As %String = "", Transfer As %String = "", Dischargeorder As %String = "", CPWSStatusCode As %String = "") As %Status
{
	set repid=$I(^CacheTemp)
	set ind = 1
	set qHandle = $lb(0,repid,0)
	Set langid=..%LanguageID()
    s HospID=##Class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId("")
	s APAPMIName=$$ALPHAUP^SSUTIL4(APAPMIName)
	s DocId=$p($g(^SSU("SSUSR",AUserID)),"^",14)
	Q:(DocId="")&&(ARadioValue="currentUser") $$$OK
	D ##class(web.DHCDocMainOrderInterface).GetIllLevelColor(.ColorList)
	s locID = ALocID
	if (locID'="") {
		s CTLOCType = $p($g(^CTLOC(ALocID)),"^",13)
		if (CTLOCType="W") {
			s locIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).CurDeptLinkLocByDept(ALocID)
			s locIDCount = $L(locIDStr,"^")
			for i=3:1:locIDCount-1{
				s locID = $p(locIDStr,"^",i)
				d currentLocOut
			}
		}else{
			d currentLocOut
		}
	}
	Quit $$$OK
currentLocOut
	s Date=""
	for {
		s Date = $O(^PAADMi("AdmTypeCurrLoc","I",locID,Date))
		q:(Date="")
		s Time=""
		for {
			s Time=$O(^PAADMi("AdmTypeCurrLoc","I",locID,Date,Time))
			q:(Time="")
			s PAADMRowID=""
			for {
				s PAADMRowID=$O(^PAADMi("AdmTypeCurrLoc","I",locID,Date,Time,PAADMRowID))
				q:(PAADMRowID="")
				s PatientID=$P(^PAADM(PAADMRowID),"^",1)
				s mPatientNo = $p($g(^PAPER(PatientID,"PAT",1)), "^", 1)
				if (patientNo '= "") {
					continue:mPatientNo'=patientNo
				}
				//按“本人病人”查询
				if (ARadioValue = "currentUser"){
					s PatDoc=$P($g(^PAADM(PAADMRowID)),"^",9)
					continue:(PatDoc '= DocId)
					if (AWardID '="all"){
						s WardDr=$P($g(^PAADM(PAADMRowID)),"^",70)
						s WardCTLocID = $P($g(^PAWARD(WardDr)),"^",5)
						continue:(WardCTLocID '= AWardID)
					}
					
					d outputrow
				}
				//按“本组病人”查询，即“本单元病人”查询
				elseif (ARadioValue = "currentGroup"){
					s PatDoc=$P($g(^PAADM(PAADMRowID)),"^",9)
					s isOK = ##class(EMRservice.DAL.GetPaAdmDetail).CheckCTLocMedUnit(PatDoc,DocId,locID)
					continue:(isOK '=1)
					if (AWardID '="all"){
						s WardDr=$P($g(^PAADM(PAADMRowID)),"^",70)
						s WardCTLocID = $P($g(^PAWARD(WardDr)),"^",5)
						continue:(WardCTLocID '= AWardID)
					}
					
					d outputrow
				}
				//按“本科室病人”查询
				elseif (ARadioValue = "currentLoc"){
					if (AWardID '="all"){
						if (CTLOCType="W"){
							//此时AWardID是科室ID
							continue:(locID '= AWardID)
						}
						else{
							//此时AWardID是病区ID
							s WardDr=$P($g(^PAADM(PAADMRowID)),"^",70)
							s WardCTLocID = $P($g(^PAWARD(WardDr)),"^",5)
							continue:(WardCTLocID '= AWardID)
						}
					}
					
					d outputrow
				}elseif (ARadioValue = "currentDocContor"){
					if (AWardID '="all"){
						if (CTLOCType="W"){
							//此时AWardID是科室ID
							continue:(locID '= AWardID)
						}
						else{
							//此时AWardID是病区ID
							s WardDr=$P($g(^PAADM(PAADMRowID)),"^",70)
							s WardCTLocID = $P($g(^PAWARD(WardDr)),"^",5)
							continue:(WardCTLocID '= AWardID)
						}
					}
					
					s PatDoc=$P($g(^PAADM(PAADMRowID)),"^",9)
					continue:PatDoc=""
					s UserDoc=$O(^SSU("SSUSR",0,"CTPCP",PatDoc,""))
					continue:UserDoc=""
					s ThreeTreeJson=##class(DHCDoc.Interface.Inside.Service).GetAdmThreeCheckDoc(UserDoc,locID,PAADMRowID)
					s ThreeTreflag=0
					if (ThreeTreeJson'=""){
						k RowDataArr
						d ##Class(DHCDoc.Util.FromJSON).FromJSONToArr(ThreeTreeJson,.RowDataArr)
						s Firsid=""
						for{
							s Firsid=$O(RowDataArr(Firsid))
							q:Firsid=""
							s ThreeUserID=RowDataArr(Firsid,"UserID")
							if (ThreeUserID=AUserID) s ThreeTreflag=1
						}
					}
					continue:((PatDoc '= DocId)&&(ThreeTreflag=0))
					d outputrow
				}
			}
		}
	}
	Quit $$$OK
outputrow
	s EpisodeID=PAADMRowID
	
	s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
	//病案号
	s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(PAADMRowID)
	s ErrMsg=""
	s MedicareNo=##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(PAADMRowID,AdmType,.ErrMsg) ;病历号
	if (AMedicareNo '= ""){
		q:(MedicareNo '= AMedicareNo)
	}
	if (APAPMIName '= ""){
		q:($$ALPHAUP^SSUTIL4(PAPMIName) '[ APAPMIName)
	}
	if (DeliveryPatient=1){
		s DeliveryPat=##class(Nur.IP.Delivery).ifRegister(PAADMRowID)
		q:(DeliveryPat'=1)
	}
	s WardDr=$P($g(^PAADM(PAADMRowID)),"^",70)
	s Transflag=##class(web.DHCSETIMAGE).IsTransInPat(PAADMRowID,WardDr)   ;转入
	if (Transfer="on"){
       q:(Transflag '= 1)
    }
    s DischargeorderFlag=##class(web.DHCSETIMAGE).DocDisch($g(PAADMRowID))
	s PatIsDeathFlag=##class(web.DHCEMNurExecImg).GetPatIsDeath($g(PAADMRowID))
    if (Dischargeorder="on"){           
       q:((DischargeorderFlag'=1)&&(PatIsDeathFlag'=1))
	   }
	s mradm=$P(^PAADM(EpisodeID),"^",61)
	s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
	//性别
	s Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	s PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
	//出生日期和年龄
	s PAPMIDOB=""
	s PAPMIAge=""
	s DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
	if (DobDate'=""){
		s PAPMIDOB=$P(^PAPER(PatientID,"ALL"),"^",6)
		s PAPMIDOB=..%ZD(PAPMIDOB)
		//s PAPMIDOB=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAPMIDOB)
		s PAPMIAge=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,EpisodeID,HospID)
		if (PAPMIAge = "0"){
			s birthday = ##class(EMRservice.DAL.GetPaAdmDetail).Birthday(PatientID)
			s admDate = ##class(EMRservice.DAL.GetPaAdmDetail).AdmDateTime(EpisodeID, "")
			s admDate = $P(admDate, ",", 1)
		}
	}
	//入院日期
	s PAAdmDate=$p($g(^PAADM(EpisodeID)),"^",6)
	s PAAdmDateFormat=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAAdmDate)
	s PAAdmTime=$p($g(^PAADM(EpisodeID)),"^",7)
	s PAAdmTimeFormat=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",PAAdmTime)
	s PAAdmType=$P($g(^PAADM(EpisodeID)),"^",2)
	s Diagnosis = ##class(web.DHCDocInPatientList).GetMRAdmDiagnosis(mradm,";")
	if (Diagnosis = ""){	
		s Diagnosis = ""
	}
	s Diagnosis=##class(ext.util.String).EvalJSON(Diagnosis)
	s PAADMDocCodeDr=$p($g(^PAADM(EpisodeID)),"^",9)
	if (PAADMDocCodeDr '= ""){
		s PAAdmDocCode=$p($g(^CTPCP(PAADMDocCodeDr,1)),"^",1)
		s PAAdmDocName = $p($g(^CTPCP(PAADMDocCodeDr,1)),"^",2)
		Set PAAdmDocName= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",PAAdmDocName,langid)
		s HeadUniteDocStr = ..GetHadeUniteDoc(PAADMDocCodeDr,locID)
		s HeadUniteDoc = $p(HeadUniteDocStr,"^",3)
		Set HeadUniteDoc= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",HeadUniteDoc,langid)
		if (HeadUniteDoc = ""){
			s HeadUniteDoc = ""
		}
		s ChiefDocStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetChiefDoc(PAADMDocCodeDr)
		s ChiefDocCode = $p(ChiefDocStr,"^",1)
		s ChiefDocDesc = $p(ChiefDocStr,"^",2)
		Set ChiefDocDesc= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",ChiefDocDesc,langid)
		if (ChiefDocDesc = ""){
			s ChiefDocDesc = ""
		}
	}
	else{
		s PAAdmDocCode=""
		s PAAdmDocName = ""
		s ChiefDocDesc=""
		s HeadUniteDoc=""
	}
 	q:(PAAdmDocCode'=ADocCode)&&(ADocCode'="")&&(ADocCode'="ALL")
	
	
	;s PAADMBedDR = $p($g(^PAADM(EpisodeID)),"^",73)
	s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(EpisodeID)
	if (PAADMBedDR '= ""){
		s WARDRowID = $p(PAADMBedDR,"||",1)
		s BEDChildsub = $p(PAADMBedDR,"||",2)
		s BEDRoomDR = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",3)
		// 病房
		s PAAdmRoom = $p($g(^PAROOM(BEDRoomDR)),"^",2)
		s PAAdmBedNO = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",1)
	}
	else{
		s PAAdmRoom = ""
		s PAAdmBedNO = ""
	}
	q:(PAAdmBedNO'[APatientBedNo)&&(APatientBedNo'="")
	
	//病区
	s WardDr=$P($g(^PAADM(EpisodeID)),"^",70)
	if (WardDr'=""){
		s PAAdmWardStr = $P($g(^PAWARD(WardDr)),"^",2)
		s PAAdmWardStr=##class(User.PACWard).GetTranByDesc("WARDDesc",PAAdmWardStr,langid)
		s PAAdmWard = $P(PAAdmWardStr,"-",2)
		if (PAAdmWard'=""){
			s PAAdmWard = PAAdmWard
		}
		else{
			s PAAdmWard = PAAdmWardStr
		}
	}else{
		s PAAdmWard=""
	}
	
	s ColorDesc = "",ColorStatus="",ColorStatusCode=""

	s SIll = ##class(web.DHCDocMainOrderInterface).IsSeriouslyIll(EpisodeID) ;病重患者
	s CIll = ##class(web.DHCDocMainOrderInterface).IsCriticallyIll(EpisodeID) ;病危患者
	s FIll =(PAAdmDate=..%SysDate())
	If (FIll){
		s ColorStatusCode="F"
		s ColorDesc = ColorList(ColorStatusCode)
		s ColorStatus="新入"
	}
	if (CIll){
		s ColorStatusCode="C"
		s ColorDesc = ColorList(ColorStatusCode)  
		s ColorStatus="病危"
	}
	if (SIll){
		s ColorStatusCode="S"
		s ColorDesc = ColorList(ColorStatusCode)   
		s ColorStatus="病重"
	}
	s ColorStatus=##class(websys.Translation).Get("inpatientlist.inpat.csp",ColorStatus)
	s AdmReason = $P($g(^PAADM(EpisodeID,1)),"^",7)
	if (AdmReason'=""){
		s PAAdmReason = $P($g(^PAC("ADMREA",AdmReason)),"^",2)
		s PAAdmReason=##class(User.PACAdmReason).GetTranByDesc("READesc",PAAdmReason,langid)
		s PAAdmReasonCode = $P($g(^PAC("ADMREA",AdmReason)),"^",5)
	}
	else{
		s PAAdmReason=""
		s PAAdmReasonCode=""
	}
	s Hospital=##class(EMRservice.BL.BLSysOption).GetOptionValueByName("HospitalName")
	// 住院天数			
	s AdmInOutDate=##class(web.DHCBillInterface).IGetAdmInOutDatebyEpisodeID(EpisodeID)
	//##class(web.UDHCJFBaseCommon).GetAdmInOutDatebyEpisodeID(EpisodeID)
	s ResidentDays=$P(AdmInOutDate,"^",3)
	
	// 入院次数			
	s InTimes=##class(EMRservice.DAL.GetPaAdmDetail).InTimes(EpisodeID,Hospital)
	set CurrPathWay=##class(web.DHCCPW.MR.Interface).GetCurrPathWay(EpisodeID)
	if CurrPathWay'="" s PAPMIName="★"_PAPMIName
	s PAAdmReMark=..GetDocReMark(EpisodeID)
	s PAAdmReMark=##class(web.DHCDocUtil).EvalJSON(PAAdmReMark)
	
	s ResultStr = ..GetPatEncryptLevel(PatientID)
	//密级
	s SecAlias=$p(ResultStr,"^",4)
	s EmployeeFunction=$p(ResultStr,"^",2)
	s PAPMIDOB=$P(^PAPER(PatientID,"ALL"),"^",6)
	s PAPMIDOB=..%ZD(PAPMIDOB)
	//临床路径状态 :入径,O:出径,C:完成 ,"" 空为未入径
	s CPWSCode=##class(DHCMA.CPW.CPS.InterfaceSrv).GetCPWStatus(EpisodeID)
	q:(CPWSStatusCode'="")&&(CPWSStatusCode'=CPWSCode)
	s CPWSStatus=$CASE(CPWSCode,"I":"入径","O":"出径","C":"完成","T":"未入径","U":"作废","":"")
	s CPWSStatus=##class(websys.Translation).Get("inpatientlist.inpat.csp",CPWSStatus)
	//护士拒绝
	s NurseAccp=##class(web.DHCDocInPatientListNew).CheckforCallBack(EpisodeID)
	//电话号码
	s PAPERTelH=$p($g(^PAPER(PatientID,"PER",1)),"^",11)
	//图标加载放到前台去处理
	s IconProfile=""	;$ZCVT(##class(web.DHCDocMain).ShowIcon("MAP",EpisodeID_"^^^"_PatientID,CONTEXT),"O","HTML")	//加图表菜单
	s IconProfile=""	;##class(web.DHCDocUtil).EvalJSON(IconProfile)
	// 首次分床时间
	s FirstBedDateTime = ..GetFirstToBed(EpisodeID)
	s:(FirstBedDateTime=" ") FirstBedDateTime = ""
	s CareClass=##Class(DHCDoc.DHCDocConfig.OrderClassify).GetAdmOrdClassify(EpisodeID,"TendOrd")
	set ^CacheTemp(repid,ind) = $LB(mradm,PatientID,EpisodeID,PAPMINO,PAPMIName,PAPMISex,PAPMIDOB,PAPMIAge,PAAdmDateFormat,PAAdmTimeFormat,PAAdmType,Diagnosis,PAAdmDocName,HeadUniteDoc,ChiefDocDesc,PAAdmBedNO,PAAdmWard,PAAdmRoom,PAAdmReason,ResidentDays,InTimes,MedicareNo,PAAdmReMark,ColorDesc,ColorStatus,ColorStatusCode,SecAlias,EmployeeFunction,CPWSStatus,NurseAccp,IconProfile,PAPERTelH,FirstBedDateTime,CareClass)
	set ind = ind + 1
	Quit
}

ClassMethod GetInPatListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GetInPatListExecute ]
{
	Set repid = $LIST(qHandle,2)
 	Kill ^CacheTemp(repid)
	Quit $$$OK
}

ClassMethod GetInPatListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = GetInPatListExecute ]
{
	Set AtEnd = $LIST(qHandle,1)
 	Set repid = $LIST(qHandle,2)
 	Set ind = $LIST(qHandle,3)
 	Set ind = $o(^CacheTemp(repid,ind))
 	If ind = "" {				// if there are no more rows, finish fetching
 		Set AtEnd = 1
 		Set Row = ""
 	}
 	Else      {				// fetch row
 		Set Row = ^CacheTemp(repid,ind)
 	}
 	// Save QHandle
 	s qHandle = $lb(AtEnd,repid,ind)
	Quit $$$OK
}

/// 获取出院患者信息
/// d ##class(%ResultSet).RunQuery("EMRservice.DAL.GetPaAdmDetail","GetOutPatList","6","105","currentUser")
Query GetOutPatList(ALocID As %String, AUserID As %String, ARadioValue As %String, AStartDate As %String, AEndDate As %String, APAPMINo As %String = "", AMedicareNo As %String = "", APAPMIName As %String = "", AUserCode As %String = "", Diagnosis As %String = "") As %Query(ROWSPEC = "mradm:%String,PatientID:%String,EpisodeID:%String,PAPMINO:%String:登记号$100,PAPMIName:%String:姓名$80,PAPMISex:%String:性别$50,PAPMIDOB:%String:出生日期$100,PAPMIAge:%String:年龄$80,PAAdmDocCodeDR:%String:主管医师$80,PAAdmBedNO:%String:出院床号$80,PAAdmDischgeDate:%String:出院日期$100,PAAdmDischgeTime:%String:出院时间$100,ResidentDays:%String:在院天数$80,OutDays:%String:出院天数$80,InTimes:%String:住院次数$80,HomepageURL:%String:病案首页$80,IsRecordCompleted:%String:是否提交$90,MedicareNo:%String:病案号$80,PAAdmDate:%String:入院日期$100,PAAdmTime:%String:入院时间$100,DiagnosisStr:%String:诊断$160 ")
{
}

ClassMethod GetOutPatListExecute(ByRef qHandle As %Binary, ALocID As %String, AUserID As %String, ARadioValue As %String, AStartDate As %String, AEndDate As %String, APAPMINo As %String = "", AMedicareNo As %String = "", APAPMIName As %String = "", AUserCode As %String = "", Diagnosis As %String = "") As %Status
{
	set repid=$I(^CacheTemp)
	set ind = 1
	set qHandle = $lb(0,repid,0)
	s APAPMIName=$$ALPHAUP^SSUTIL4(APAPMIName)
	Set langid=..%LanguageID()
	s DocId=$p($g(^SSU("SSUSR",AUserID)),"^",14)
	s locID = ALocID
	if (locID'="") {
		s CTLOCType = $p($g(^CTLOC(locID)),"^",13)
		if (CTLOCType="W") {
			s locIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).CurDeptLinkLocByDept(ALocID)
			s locIDCount = $L(locIDStr,"^")
			for i=3:1:locIDCount-1
			{
				s locID = $p(locIDStr,"^",i)
				d currentLocOut
			}
		}
		else
		{
			d currentLocOut
		}
	}
	
	Quit $$$OK
currentLocOut
	;出院按本科查询时有相应的索引
	if (ARadioValue = "currentLoc") {
		for date=AStartDate:1:AEndDate{
			s PAADMRowID=""
			for {
				s PAADMRowID=$o(^PAADMi("DisDateDep",locID,date,PAADMRowID)) Q:PAADMRowID=""
				s PatientID=$P(^PAADM(PAADMRowID),"^",1)
				//登记号
				s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
				//患者姓名
				s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
				//主管医师Code
				s PAADMDocCode=$p($g(^PAADM(PAADMRowID)),"^",9)
				s CTPCPCode = ""
				s:(PAADMDocCode'="") CTPCPCode = $p($g(^CTPCP(PAADMDocCode,1)),"^",1)
				s dischgDeptDR=$P($g(^PAADM(PAADMRowID)),"^",4)
				continue:dischgDeptDR'=locID
				//病案号
				s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(PAADMRowID)
				s MedicareNo=$P(^PAPER(PatientID,"PAT",1),"^",22)
				if (MedicareNo = ""){
					s MedicareNo = ##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(PAADMRowID,AdmType,.ErrMsg) ;病历号
				}
				if (APAPMINo '= ""){
					continue:(PAPMINO '= APAPMINo)
				}
				if (AMedicareNo '= ""){
					continue:(MedicareNo '= AMedicareNo)
				}
				if (APAPMIName '= ""){
					continue:($$ALPHAUP^SSUTIL4(PAPMIName) '= APAPMIName)
				}
				if (AUserCode '= ""){
					continue:(CTPCPCode '= AUserCode)
				}
				d outputmotherrowOut
			}
		}
	}else{
		for date=AStartDate:1:AEndDate
		{
			s PAADMRowID = ""
			for {
				s PAADMRowID = $O(^PAADMi("DischDate",date,PAADMRowID))
				q:PAADMRowID=""
				s PatientID=$P(^PAADM(PAADMRowID),"^",1)
				//登记号
				s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
				//患者姓名
				s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
				//病案号
				s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(PAADMRowID)
				s ErrMsg=""
				s MedicareNo=##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(PAADMRowID,AdmType,.ErrMsg) ;病历号
				//主管医师Code
				s PAADMDocCode=$p($g(^PAADM(PAADMRowID)),"^",9)
				s CTPCPCode = ""
				s:(PAADMDocCode'="") CTPCPCode = $p($g(^CTPCP(PAADMDocCode,1)),"^",1)
				//按“本人病人”查询
				if (ARadioValue = "currentUser")
				{
					s PatDoc=$P($g(^PAADM(PAADMRowID)),"^",9)
					continue:(PatDoc '= DocId)
					s dischgDeptDR=$P($g(^PAADM(PAADMRowID)),"^",4)
					continue:dischgDeptDR'=locID
					if (APAPMINo '= ""){
						continue:(PAPMINO '= APAPMINo)
					}
					if (AMedicareNo '= ""){
						continue:(MedicareNo '= AMedicareNo)
					}
					if (APAPMIName '= ""){
						continue:($$ALPHAUP^SSUTIL4(PAPMIName) '= APAPMIName)
					}
					if (AUserCode '= ""){
						continue:(CTPCPCode '= AUserCode)
					}
					;d outputrowOut
					d outputmotherrowOut
				}
				//按“本组病人”查询，即“本单元病人”查询
				elseif (ARadioValue = "currentGroup")
				{
					s PatDoc=$P($g(^PAADM(PAADMRowID)),"^",9)
					s isOK = ##class(EMRservice.DAL.GetPaAdmDetail).CheckCTLocMedUnit(PatDoc,DocId,locID)
					continue:(isOK '=1)
					s dischgDeptDR=$P($g(^PAADM(PAADMRowID)),"^",4)
					continue:dischgDeptDR'=locID
					if (APAPMINo '= ""){
						continue:(PAPMINO '= APAPMINo)
					}
					if (AMedicareNo '= ""){
						continue:(MedicareNo '= AMedicareNo)
					}
					if (APAPMIName '= ""){
						continue:($$ALPHAUP^SSUTIL4(PAPMIName) '= APAPMIName)
					}
					if (AUserCode '= ""){
						continue:(CTPCPCode '= AUserCode)
					}
					;d outputrowOut
					d outputmotherrowOut
				}
				/*//按“本科室病人”查询
				elseif (ARadioValue = "currentLoc")
				{
					s dischgDeptDR=$P($g(^PAADM(PAADMRowID)),"^",4)
					continue:dischgDeptDR'=locID
					if (APAPMINo '= ""){
						continue:(PAPMINO '= APAPMINo)
					}
					if (AMedicareNo '= ""){
						continue:(MedicareNo '= AMedicareNo)
					}
					if (APAPMIName '= ""){
						continue:($$ALPHAUP^SSUTIL4(PAPMIName) '= APAPMIName)
					}
					if (AUserCode '= ""){
						continue:(CTPCPCode '= AUserCode)
					}
					;d outputrowOut
					d outputmotherrowOut
				}*/
			}
		}
	}
	Quit $$$OK
outputmotherrowOut
	d outputrowOut
	/*s MothereRowid=$p(^PAADM(PAADMRowID),"^",75)
	if MothereRowid'="" q $$$OK
	d outputrowOut
	s SonPAADMRowID=""
	s SonPAADMRowID=$O(^PAADMi("Mother",PAADMRowID,""))
	if (SonPAADMRowID'=""){
		s MotherePAADMRowID=PAADMRowID
		s PAADMRowID=SonPAADMRowID
		d outputrowOut
		s PAADMRowID=MotherePAADMRowID
	}*/
	q $$$OK
outputrowOut
	s EpisodeID=PAADMRowID
	s diagnosisStr = ##class(DHCDoc.Diagnos.Common).GetAdmDiagDesc(EpisodeID,"","Y")
	s:diagnosisStr="" diagnosisStr = $p(##class(DHCDoc.Diagnos.Common).GetAdmDiagDesc(EpisodeID), ";", 1)
	q:(Diagnosis'="")&&(diagnosisStr'[Diagnosis)
	s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(PAADMRowID)
	s ErrMsg=""
	s MedicareNo=##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(PAADMRowID,AdmType,.ErrMsg) ;病历号
	s mradm=$P(^PAADM(PAADMRowID),"^",61)
	//性别
	s Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	s PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
	//出生日期和年龄
	s PAPMIDOB=""
	s PAPMIAge=""
	s AdmDepDr=$p($g(^PAADM(PAADMRowID)),"^",4)
	s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
	s DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
	if (DobDate'="")
	{
		s PAPMIDOB=$P(^PAPER(PatientID,"ALL"),"^",6)
		//s PAPMIDOB=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAPMIDOB)
		s PAPMIDOB=..%ZD(PAPMIDOB)
		s PAPMIAge=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,PAADMRowID,AdmDepHospId)
		if (PAPMIAge = "0"){
			s birthday = ##class(EMRservice.DAL.GetPaAdmDetail).Birthday(PatientID)
			s admDate = ##class(EMRservice.DAL.GetPaAdmDetail).AdmDateTime(PAADMRowID, "")
			s admDate = $P(admDate, ",", 1)
		}
	}
	if (PAADMDocCode '= ""){
		//主管医师描述
		s PAAdmDocCodeDR = $p($g(^CTPCP(PAADMDocCode,1)),"^",2)
		Set PAAdmDocCodeDR= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",PAAdmDocCodeDR,langid)
		s HeadUniteDoc = ..GetHadeUniteDoc(PAADMDocCode,locID)
	}
	else{
		s PAAdmDocCodeDR = ""
	}
	;s PAADMBedDR = $p($g(^PAADM(PAADMRowID)),"^",73)
	s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(PAADMRowID)
	if (PAADMBedDR '= ""){
		s WARDRowID = $p(PAADMBedDR,"||",1)
		s BEDChildsub = $p(PAADMBedDR,"||",2)
		s BEDRoomDR = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",3)
		s PAAdmWard = $p($g(^PAROOM(BEDRoomDR)),"^",2)
	}else{
		s PAAdmWard = ""
	}
	s PAAdmBedNO=##class(web.DHCBillCommon).GetPatBedCode(PAADMRowID) //##class(Nur.Interface.OutSide.Patient).getPatientLastBedCode(PAADMRowID)
	i (PAAdmBedNO'="") s PAAdmBedNO=PAAdmBedNO //_##class(websys.Translation).Get("inpatientlist.inpat.csp","床")
	s (PAAdmDate,PAAdmTime,PAAdmDischgeDate,PAAdmDischgeTime)=""
	///获取出入院时间信息
	s AdmInOutDate=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.doc.GetAdmInOutDate",PAADMRowID)
	//入院日期
	s PAAdmDateSys = $p(AdmInOutDate,"^",1)
	//入院时间
	s PAAdmTimeSys=$p(AdmInOutDate,"^",2)
	//住院天数	
	s ResidentDays=$p(AdmInOutDate,"^",3)
	//出院日期
	s PAAdmDischgeDateSys=$p(AdmInOutDate,"^",4)
	//出院时间
	s PAAdmDischgeTimeSys=$p(AdmInOutDate,"^",5)
	
	if (+PAAdmDateSys>0){
		s PAAdmDate = ..%ZD(PAAdmDateSys)
		s PAAdmDate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAAdmDate)
	}
	if (+PAAdmTimeSys >0){
		s PAAdmTime = ..%ZT(PAAdmTimeSys,3)
		s PAAdmTime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",PAAdmTime)
	}
	if (PAAdmDischgeDateSys '= ""){
		s PAAdmDischgeDate = ..%ZD(PAAdmDischgeDateSys)
		s PAAdmDischgeDate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAAdmDischgeDate)
	}
	if (PAAdmDischgeTimeSys '= ""){
		s PAAdmDischgeTime = ..%ZT(PAAdmDischgeTimeSys,3)
		s PAAdmDischgeTime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",PAAdmDischgeTime)
	}
	
	//出院天数
	s Systemdatetime = $HOROLOG
	s Systemdateint = $p(Systemdatetime,",",1)
	s OutDays = Systemdateint-PAAdmDischgeDateSys
	
	s Hospital=##class(EMRservice.BL.BLSysOption).GetOptionValueByName("HospitalName")
	// 入院次数			
	s InTimes=##class(EMRservice.DAL.GetPaAdmDetail).InTimes(PAADMRowID,Hospital)
	s HomepageTemplateIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetTemplateInfo("HomePage")
	s HomepageURL = ##class(EMRservice.DAL.GetPaAdmDetail).GetEMRURL(PAADMRowID,HomepageTemplateIDStr)
	//s HomepageURL=##class(ext.util.String).EvalJSONNew(HomepageURL)
	//判断就诊病历是否全部完成，若完成输出1，否则输出0
	s IsRecordCompleted = ##Class(EMRservice.BL.BLAdmRecordStatus).GetAdmRecordStatus(EpisodeID)
	// 获取主诊断，没有主诊断，获取第一个诊断
	
	set ^CacheTemp(repid,ind) = $LB(mradm,PatientID,EpisodeID,PAPMINO,PAPMIName,PAPMISex,PAPMIDOB,PAPMIAge,PAAdmDocCodeDR,PAAdmBedNO,PAAdmDischgeDate,PAAdmDischgeTime,ResidentDays,OutDays,InTimes,HomepageURL,IsRecordCompleted,MedicareNo,PAAdmDate,PAAdmTime,diagnosisStr)
	set ind = ind + 1
	Quit $$$OK
}

ClassMethod GetOutPatListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GetOutPatListExecute ]
{
	Set repid = $LIST(qHandle,2)
 	Kill ^CacheTemp(repid)
	Quit $$$OK
}

ClassMethod GetOutPatListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = GetOutPatListExecute ]
{
	Set AtEnd = $LIST(qHandle,1)
 	Set repid = $LIST(qHandle,2)
 	Set ind = $LIST(qHandle,3)
 	Set ind = $o(^CacheTemp(repid,ind))
 	If ind = "" {				// if there are no more rows, finish fetching
 		Set AtEnd = 1
 		Set Row = ""
 	}
 	Else      {				// fetch row
 		Set Row = ^CacheTemp(repid,ind)
 	}
 	// Save QHandle
 	s qHandle = $lb(AtEnd,repid,ind)
	Quit $$$OK
}

/// 获取在院转科患者信息
/// d ##class(%ResultSet).RunQuery("web.DHCDocInPatientListNew","GetChangeDeptPatList",95,10209,"currentLoc",65090,65119)
Query GetChangeDeptPatList(ALocID As %String, AUserID As %String, ARadioValue As %String = "", StartDate As %String = "", EndDate As %String = "", MedicareNo As %String = "", patientNo As %String = "") As %Query(ROWSPEC = "mradm:%String,PatientID:%String,EpisodeID:%String,PAPMINO:%String:登记号$100,PAPMIName:%String:姓名$80,PAPMISex:%String:性别$50,PAPMIAge:%String:年龄$50,PAPMIDOB:%String:出生日期$100,PAAdmDocCodeDR:%String:主管医生$80,PAAdmDepCodeDR:%String:当前科室$150,PAAdmBedNO:%String:当前床号$80,TransStartDate:%String:转出日期$100,TransStartTime:%String:转出时间$80,TransRoom:%String:转出房间$80,TransBedNO:%String:转出床号$80,TransURL:%String:转出记录$80,Status:%String:状态$60,PatMedicareNo:%String:病案号$100,TransDoc:%String:转出主管医生$100,TransWard:%String:转出病区$100,EmployeeFunction:%String:患者级别$80,SecAlias:%String:患者密级$80")
{
}

ClassMethod GetChangeDeptPatListExecute(ByRef qHandle As %Binary, ALocID As %String, AUserID As %String, ARadioValue As %String = "", StartDate As %String = "", EndDate As %String = "", MedicareNo As %String = "", patientNo As %String = "") As %Status
{
	s ^tempscl("GetChangeDeptPatList")=ALocID_","_AUserID_","_ARadioValue_","_StartDate_","_EndDate_","_MedicareNo_","_patientNo
	set repid=$I(^CacheTemp)
	set ind = 1
	set qHandle = $lb(0,repid,0)
	s CTLOCType = $p($g(^CTLOC(ALocID)),"^",13)
	s DocId=$p($g(^SSU("SSUSR",AUserID)),"^",14)
	s PAADMRowID = 0
	for {
		s PAADMRowID = $o(^PAADMi("AdmTypeCurr","I",PAADMRowID))
		q:PAADMRowID=""
		continue:$p(^PAADM(PAADMRowID),"^",20)'="A"	 ;VisitStatus
		s PatientID=$P(^PAADM(PAADMRowID),"^",1)
		s PatNo=$p($g(^PAPER(PatientID,"PAT",1)),"^",1)
		continue:(patientNo'="")&&(PatNo'=patientNo)
		//##Class(web.DHCWMRService).IGetMrNoByPatientID(PatientID)
		s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(PAADMRowID)
		s ErrMsg=""
		continue:(MedicareNo'="")&&(##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(PAADMRowID,AdmType,.ErrMsg)'=MedicareNo)
		d CheckData
	}
	for DischgDate=(StartDate-1):1:EndDate{
		s PAADMRowID = 0
		for{
			s PAADMRowID = $o(^PAADMi("DisDateT","I",DischgDate,PAADMRowID))
			q:PAADMRowID=""
			s PatientID=$P(^PAADM(PAADMRowID),"^",1)
			s PatNo=$p($g(^PAPER(PatientID,"PAT",1)),"^",1)
			continue:(patientNo'="")&&(PatNo'=patientNo)
			s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(PAADMRowID)
			s ErrMsg=""
			continue:(MedicareNo'="")&&(##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(PAADMRowID,AdmType,.ErrMsg)'=MedicareNo)
			d CheckData
		}
	}
	Quit $$$OK
	
findAdmTransWard(PAAdm,WardID)
	s find=0
	s child=0 f {
		s child=$O(^PAADM(PAAdm,"TRANS",child))
		Q:child=""
		s TransWardID=$P(^PAADM(PAAdm,"TRANS",child),"^",9)
		if TransWardID=WardID {
			s find=1
			Quit
		}
	}
	Q find
CheckData
	s PAPMI = $p(^PAADM(PAADMRowID),"^",1)
	if (CTLOCType="W") 
	{
		s WardID = $O(^PAWARD(0,"WARD_LocationDR",ALocID,""))
		if ($d(^PAPER(PAPMI,"PAT",1)))&&($$findAdmTransWard(PAADMRowID,WardID))&&($p(^PAADM(PAADMRowID),"^",70)'=WardID)
		{
			//过滤掉非本人转出患者
			&sql(SELECT TRANS_CTCP_DR into :TransCTCPDR FROM SQLUser.PA_AdmTransaction WHERE TRANS_ParRef = :PAADMRowID and TRANS_CTLOC_DR = :ALocID and TRANS_Status_DR->REQST_Code <> 'J')
			//按“本人病人”查询
			if (ARadioValue = "currentUser"){
				q:(TransCTCPDR '= DocId)
			}
			//按“本组病人”查询，即“本单元病人”查询
			elseif(ARadioValue = "currentGroup"){
				s isOK = ##class(EMRservice.DAL.GetPaAdmDetail).CheckCTLocMedUnit(TransCTCPDR,DocId,ALocID)
				q:(isOK '=1)
				q:(TransCTCPDR '= DocId)
			}
			//转出日期和转出时间
			s PAADMDepCode=$p($g(^PAADM(PAADMRowID)),"^",4)
			s TransStartDate="",TransStartTime=""
			&sql(SELECT TRANS_StartDate,TRANS_StartTime into :TransStartDate,:TransStartTime FROM SQLUser.PA_AdmTransaction WHERE TRANS_ParRef = :PAADMRowID and TRANS_CTLOC_DR = :PAADMDepCode and TRANS_Status_DR->REQST_Code <> 'J')
			q:(TransStartDate < StartDate)
			q:(TransStartDate > EndDate)
			d OutputRow
		}
	}
	else
	{
		if ($d(^PAPER(PAPMI,"PAT",1)))&&($d(^PAADMi("TransLoc",PAADMRowID,ALocID)))&&($p(^PAADM(PAADMRowID),"^",4)'=ALocID)
		{
			s TRANSChildsub=0,LastBedDr="",LastTRANSCTCPDR="",TransStartDate=""
			s AlreadyToLogOnLoc=0
			for  {
				s TRANSChildsub=$o(^PAADM(PAADMRowID,"TRANS",TRANSChildsub)) q:(TRANSChildsub="")||(TransStartDate'="")
				s TRANSCTLOCDR=$p($g(^PAADM(PAADMRowID,"TRANS",TRANSChildsub)),"^",6)
				;为解决 患者也是从别的科室转到 登录科室，又转出后，取不到转出主管医生的问题
				i TRANSCTLOCDR=ALocID  s AlreadyToLogOnLoc=1
				continue:(TRANSCTLOCDR'=ALocID)&&(TRANSCTLOCDR'="")&&(AlreadyToLogOnLoc=0)
				if (TRANSCTLOCDR'=ALocID)&&(TRANSCTLOCDR'=""){
					s TransStartDate=$p($g(^PAADM(PAADMRowID,"TRANS",TRANSChildsub)),"^",1)
					s TransStartTime=$p($g(^PAADM(PAADMRowID,"TRANS",TRANSChildsub)),"^",2)
					Q
				}else{
					s TRANSBedDR=$p($g(^PAADM(PAADMRowID,"TRANS",TRANSChildsub)),"^",8)
					if (TRANSBedDR'="") s LastBedDr=TRANSBedDR
					s TRANSCTCPDR=$p($g(^PAADM(PAADMRowID,"TRANS",TRANSChildsub)),"^",5)
					if (TRANSCTCPDR'="") s LastTRANSCTCPDR=TRANSCTCPDR
				}
			}
			s TransStartDate="",TransStartTime=""
			s sub="" 
			f  {
				s sub=$O(^Nur.Data.TransRecordI("TransDataState"," "_PAADMRowID," N",sub),-1) 
				q:(sub="")||(TransStartTime'="")
				s transType=$LG(^Nur.Data.TransRecordD(sub),3)
				if (transType="L"){ //转科
					s transFrom=$LG(^Nur.Data.TransRecordD(sub),4)
					if (transFrom=ALocID){
						s TransStartDate=$LG(^Nur.Data.TransRecordD(sub),12)
						s TransStartTime=$LG(^Nur.Data.TransRecordD(sub),13)
						s LastTransBedSub=$O(^Nur.Data.TransRecordI("TransDataState"," "_PAADMRowID," N",sub),-1)
						if (LastTransBedSub'=""){
							s LastBedDr=$LG(^Nur.Data.TransRecordD(LastTransBedSub),10)
						}else{
							s LastBedDr=""
						}
						//s LastTransUserID=$LG(^Nur.Data.TransRecordD(sub),14)
						//s LastTRANSCTCPDR=$p($g(^SSU("SSUSR",LastTransUserID)),"",14)
					}
			   	}
			}
			//&sql(SELECT TRANS_CTCP_DR into :TransCTCPDR FROM SQLUser.PA_AdmTransaction WHERE TRANS_ParRef = :PAADMRowID and (TRANS_CTLOC_DR = :ALocID or TRANS_CTLOC_DR is null) and TRANS_Status_DR->REQST_Code <> 'J')
			//过滤掉非本人转出患者
			if (ARadioValue = "currentUser"){
				q:(LastTRANSCTCPDR '= DocId)
			}
			//按“本组病人”查询，即“本单元病人”查询
			elseif(ARadioValue = "currentGroup"){
				s isOK = ##class(EMRservice.DAL.GetPaAdmDetail).CheckCTLocMedUnit(LastTRANSCTCPDR,DocId,ALocID) //
				q:(isOK '=1)
				q:(LastTRANSCTCPDR '= DocId)
			}
			//转出日期和转出时间
			q:(TransStartDate < StartDate)
			q:(TransStartDate > EndDate)
			d OutputRow
		}
	}
	q
OutputRow
	Set langid=..%LanguageID()
	s PatientID=$P(^PAADM(PAADMRowID),"^",1)
	s EpisodeID=PAADMRowID
	s mradm=$P(^PAADM(PAADMRowID),"^",61)
	s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
	s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
	//性别
	s Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	s PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
	//出生日期和年龄
	s PAPMIDOB=""
	s PAPMIAge=""
	s AdmDepDr=$p($g(^PAADM(PAADMRowID)),"^",4)
	s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
	s DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
	if (DobDate'=""){
		s PAPMIDOB=$P(^PAPER(PatientID,"ALL"),"^",6)
		s PAPMIDOB=..%ZD(PAPMIDOB)
		//s PAPMIDOB=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAPMIDOB)
		s PAPMIAge=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,PAADMRowID,AdmDepHospId)
		if (PAPMIAge = "0"){
			s birthday = ##class(EMRservice.DAL.GetPaAdmDetail).Birthday(PatientID)
			s admDate = ##class(EMRservice.DAL.GetPaAdmDetail).AdmDateTime(PAADMRowID, "")
			s admDate = $P(admDate, ",", 1)
		}
	}
	//当前主管医生
	s PAADMDocCode=$p($g(^PAADM(PAADMRowID)),"^",9)
	if (PAADMDocCode '= ""){
		s PAAdmDocCodeDR = $p($g(^CTPCP(PAADMDocCode,1)),"^",2)
		Set PAAdmDocCodeDR= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",PAAdmDocCodeDR,langid)
	}
	else{
		s PAAdmDocCodeDR = ""
	}
	//当前科室
	s PAADMDepCode=$p($g(^PAADM(PAADMRowID)),"^",4)
	if (PAADMDepCode '= ""){
		s PAAdmDepCodeDR = $p($g(^CTLOC(PAADMDepCode)),"^",2)
		s PAAdmDepCodeDR=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",PAAdmDepCodeDR,langid)
	}
	else{
		s PAAdmDepCodeDR = ""
	}
	//当前病区和床位
	;s PAADMBedDR = $p($g(^PAADM(PAADMRowID)),"^",73)
	s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(PAADMRowID)
	if (PAADMBedDR '= ""){
		s WARDRowID = $p(PAADMBedDR,"||",1)
		s BEDChildsub = $p(PAADMBedDR,"||",2)
		s BEDRoomDR = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",3)
		s PAAdmWard = $p($g(^PAROOM(BEDRoomDR)),"^",2)
		s PAAdmBedNO = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",1)
	}
	else{
		s PAAdmWard = ""
		s PAAdmBedNO = ""
	}
	//转出日期和转出时间
	s TransStartDate = ..%ZD(TransStartDate)
	s TransStartDate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",TransStartDate)
	s TransStartTime = ..%ZT(TransStartTime,3)
	s TransStartTime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",TransStartTime)
	//转出病房和转出床位
	s TransBedDR = LastBedDr
	//&sql(SELECT TRANS_Bed_DR into :TransBedDR FROM SQLUser.PA_AdmTransaction WHERE TRANS_ParRef = :PAADMRowID and TRANS_CTLOC_DR=:ALocID )
	if (TransBedDR '= ""){
		s WARDRowID = $p(TransBedDR,"||",1)
		s BEDChildsub = $p(TransBedDR,"||",2)
		s TransRoomDR = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",3)
		s TransRoom = $p($g(^PAROOM(TransRoomDR)),"^",2)
		s TransBedNO = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",1)
		s TransWard=$p($g(^PAWARD(WARDRowID)),"^",2)
		s TransWard=##class(User.PACWard).GetTranByDesc("WARDDesc",TransWard,langid)
	}else{
		s TransRoom = ""
		s TransBedNO = ""
	}
	if (LastTRANSCTCPDR'="") s TransDoc = $p($g(^CTPCP(LastTRANSCTCPDR,1)),"^",2)
	Set TransDoc= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",TransDoc,langid)
	s TransTemplateIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetTemplateInfo("Transfer")
	s TransURL = ##class(EMRservice.DAL.GetPaAdmDetail).GetEMRURL(PAADMRowID,TransTemplateIDStr)
	s Status=##Class(web.DHCDocMainOrderInterface).HiddenMenuFlag(EpisodeID)
	s VisitStatus=$p(^PAADM(EpisodeID),"^",20)
	
	s Status=$CASE(Status,2:"医疗结算",2.5:"费用调整",3:"护士结算",4:"财务结算",:"在院")
	i VisitStatus="D" s Status="已出院"
	s Status=##class(websys.Translation).Get("inpatientlist.inpat.csp",Status)
	s AdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(EpisodeID)
	s ErrMsg=""
	s PatMedicareNo=##Class(DHCWMR.IO.OutService).IGetMrNoByEpisodeID(EpisodeID,AdmType,.ErrMsg)
	s PatEncryptLevel = ..GetPatEncryptLevel(PatientID)
	s EmployeeFunction=$p(PatEncryptLevel,"^",2)
	s SecAlias=$p(PatEncryptLevel,"^",4)
	set ^CacheTemp(repid,ind) = $LB(mradm,PatientID,EpisodeID,PAPMINO,PAPMIName,PAPMISex,PAPMIAge,PAPMIDOB,PAAdmDocCodeDR,PAAdmDepCodeDR,PAAdmBedNO,TransStartDate,TransStartTime,TransRoom,TransBedNO,TransURL,Status,PatMedicareNo,$g(TransDoc),$g(TransWard),EmployeeFunction,SecAlias)
	set ind = ind + 1
	
	Quit $$$OK
}

ClassMethod GetChangeDeptPatListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GetChangeDeptPatListExecute ]
{
	Set repid = $LIST(qHandle,2)
 	Kill ^CacheTemp(repid)
	Quit $$$OK
}

ClassMethod GetChangeDeptPatListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = GetChangeDeptPatListExecute ]
{
	Set AtEnd = $LIST(qHandle,1)
 	Set repid = $LIST(qHandle,2)
 	Set ind = $LIST(qHandle,3)
 	Set ind = $o(^CacheTemp(repid,ind))
 	If ind = "" {				// if there are no more rows, finish fetching
 		Set AtEnd = 1
 		Set Row = ""
 	}
 	Else      {				// fetch row
 		Set Row = ^CacheTemp(repid,ind)
 	}
 	// Save QHandle
 	s qHandle = $lb(AtEnd,repid,ind)
	Quit $$$OK
}

/// 查询本人当天手术患者
Query GetOperationPatList(ALocID As %String, AUserID As %String, StartDate As %String, EndDate As %String, HospId As %String = "") As %Query(ROWSPEC = "mradm:%String,PatientID:%String,EpisodeID:%String,PAPMINO:%String:登记号$100,PAPMIName:%String:姓名$80,PAPMISex:%String:性别$50,PAPMIAge:%String:年龄$50,PAPMIDOB:%String:出生日期$100,PAAdmBedNO:%String:床号$50,opdes:%String:手术名称$260,OPCategory:%String:手术级别$80,opdatestr:%String:手术日期$160,PreOPConferURL:%String:术前讨论$80,OPRecordURL:%String:手术记录$80,AfterOPFirstURL:%String:术后首程$90,SecAlias:%String:患者密级$80,EmployeeFunction:%String:患者级别$80")
{
}

ClassMethod GetOperationPatListExecute(ByRef qHandle As %Binary, ALocID As %String, AUserID As %String, StartDate As %String, EndDate As %String, HospId As %String = "") As %Status
{
	set repid=$I(^CacheTemp)
	set ind = 1
	set qHandle = $lb(0,repid,0)
	s DocId=$p($g(^SSU("SSUSR",AUserID)),"^",14)
	s HospId=##class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId(HospId)
	s OPCategory=""
	s OPCategoryId=""
	s opdatestr=""
	s SubNode="SDate"
	s opaId = ""
	Set langid=..%LanguageID()
	for date=StartDate:1:EndDate{
		for {
			s opaId=$O(^DHCANOPArrange(0,SubNode,date,opaId))
			q:opaId=""
			s opdes = ""
			s adm=$P(^DHCANOPArrange(opaId),"^",1)
			s PAADMRowID = adm
			s PatDoc=$P($g(^PAADM(adm)),"^",9)
			s PatLoc=$P($g(^PAADM(adm)),"^",4)
			s AdmDepHospId=$P($g(^CTLOC(+PatLoc)),"^",22)
			continue:((HospId'="")&&(AdmDepHospId'=HospId))
			continue:(PatDoc '= DocId)
			//手术状态
			s Stat=$P(^DHCANOPArrange(opaId),"^",27)
			//手术状态转译
			i Stat="A" s status="申请"
			i Stat="R" s status="安排"
			i Stat="C" s status="撤销"
			i Stat="N" s status="非预约"
			i Stat="I" s status="术中"
			i Stat="P" s status="恢复室"
			i Stat="L" s status="术毕"
			i Stat="F" s status="完成"
			//非完成手术信息不取值
			continue:(Stat = "C")
			
			//手术名称		
			s chl=$P($P(^DHCANOPArrange(opaId),"^",2),"||",2)
			s OPCategory="",OPCategoryId=""
			s subchl=0
			for {
				s subchl=$O(^OR(adm,"ANA",chl,"OP",subchl))
				q:(subchl="")
				s opdr=$P(^OR(adm,"ANA",chl,"OP",subchl),"^",6)
				if (opdr'=""){
					if ($P($g(^ORC("OPER",+opdr)),"^",2)'=""){
						s:(opdes '= "") opdes = opdes_";"_##class(User.ORCOperation).GetTranByDesc("OPERDesc",$P($g(^ORC("OPER",+opdr)),"^",2),langid)
						s:(opdes = "") opdes = ##class(User.ORCOperation).GetTranByDesc("OPERDesc",$P($g(^ORC("OPER",+opdr)),"^",2),langid)
						
					}
					//手术级别
					s tmpOPCategory=""
					s ancoplId=$p($g(^OR(adm,"ANA",chl,"OP",subchl,"DHC")),"^",1)
					i ancoplId'="" {
						s tmpOPCategory=$p(^ORC("CATEG",ancoplId),"^",2)
					}else{
						s OPCategoryId=$p($g(^ORC("OPER",opdr)),"^",7)
						if (OPCategoryId'=""){
							s tmpOPCategory=$p($g(^ORC("CATEG",OPCategoryId)),"^",2)
						}
					}
					s tmpOPCategory=##class(User.ORCOperationCategory).GetTranByDesc("CATEGDesc",tmpOPCategory,langid)
					if (tmpOPCategory'=""){
						i OPCategory="" s OPCategory=tmpOPCategory
						e  s OPCategory=OPCategory_";"_tmpOPCategory
					}
				}else{
					if ($g(^OR(adm,"ANA",chl,"OP",subchl,"REM",2))'=""){
						s:(opdes '= "") opdes = opdes_";"_$G(^OR(adm,"ANA",chl,"OP",subchl,"REM",2))
						s:(opdes = "") opdes = $G(^OR(adm,"ANA",chl,"OP",subchl,"REM",2))
					}
				}
			}
			//手术时间
			s opstdate=$P(^DHCANOPArrange(opaId),"^",14)
			s opsttime=$P(^DHCANOPArrange(opaId),"^",15)
			s openddate=$P(^DHCANOPArrange(opaId),"^",16)
			s opendtime=$P(^DHCANOPArrange(opaId),"^",17)
			if (openddate<=opstdate){
				s openddate=""
			}
			if (openddate'=""){
				s openddate=..%ZD(openddate)
				s openddate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",openddate)	
				s openddate=openddate_" "
			}
			if (opendtime'=""){
				s opendtime=..%ZT(opendtime,2)
				s opendtime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",opendtime)
	
			}
			if (opsttime'=""){
				s opsttime=..%ZT(opsttime,2)
				s opsttime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",opsttime)
	
			}
			s opstdate=..%ZD(opstdate)
			s opstdate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",opstdate)
			s opdatestr=opstdate_" "_opsttime_"~"_openddate_opendtime
			//患者信息
			s PatientID=$P(^PAADM(PAADMRowID),"^",1)
			s EpisodeID=PAADMRowID
			s mradm=$P(^PAADM(PAADMRowID),"^",61)
			s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
			s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
			//性别
			s Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
			s PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
			s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
			s AdmDepDr=$p($g(^PAADM(PAADMRowID)),"^",4)
			s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
			//出生日期和年龄
			s PAPMIDOB=""
			s PAPMIAge=""
			s DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
			if (DobDate'=""){
				s PAPMIDOB=$P(^PAPER(PatientID,"ALL"),"^",6)
				s PAPMIDOB=..%ZD(PAPMIDOB)
				//s PAPMIDOB=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAPMIDOB)
				s PAPMIAge=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,PAADMRowID,AdmDepHospId)
				if (PAPMIAge = "0"){
					s birthday = ##class(EMRservice.DAL.GetPaAdmDetail).Birthday(PatientID)
					s admDate = ##class(EMRservice.DAL.GetPaAdmDetail).AdmDateTime(PAADMRowID, "")
					s admDate = $P(admDate, ",", 1)
				}
			}
			//当前病区和床位
			;s PAADMBedDR = $p($g(^PAADM(PAADMRowID)),"^",73)
			s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(PAADMRowID)
			if (PAADMBedDR '= ""){
				s WARDRowID = $p(PAADMBedDR,"||",1)
				s BEDChildsub = $p(PAADMBedDR,"||",2)
				s BEDRoomDR = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",3)
				s PAAdmWard = $p($g(^PAROOM(BEDRoomDR)),"^",2)
				s PAAdmBedNO = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",1)
			}else{
				s PAAdmWard = ""
				s PAAdmBedNO = ""
			}
			s PreOPConferTempIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetTemplateInfo("BeforeOperation")
			s PreOPConferURL = ##class(EMRservice.DAL.GetPaAdmDetail).GetEMRURL(PAADMRowID,PreOPConferTempIDStr)
			s OPRecordTempIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetTemplateInfo("Operation")
			s OPRecordURL = ##class(EMRservice.DAL.GetPaAdmDetail).GetEMRURL(PAADMRowID,OPRecordTempIDStr)
			s AfterOPFirstTempIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetTemplateInfo("AfterOperation")
			s AfterOPFirstURL = ##class(EMRservice.DAL.GetPaAdmDetail).GetEMRURL(PAADMRowID,AfterOPFirstTempIDStr)
			s ResultStr = ..GetPatEncryptLevel(PatientID)
			//密级
			s SecAlias=$p(ResultStr,"^",4)
			s EmployeeFunction=$p(ResultStr,"^",2)
			set ^CacheTemp(repid,ind) = $LB(mradm,PatientID,EpisodeID,PAPMINO,PAPMIName,PAPMISex,PAPMIAge,PAPMIDOB,PAAdmBedNO,opdes,OPCategory,opdatestr,PreOPConferURL,OPRecordURL,AfterOPFirstURL,SecAlias,EmployeeFunction)
			set ind = ind + 1
		}
	}
	
	Quit $$$OK
}

ClassMethod GetOperationPatListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GetOperationPatListExecute ]
{
	Set repid = $LIST(qHandle,2)
 	Kill ^CacheTemp(repid)
	Quit $$$OK
}

ClassMethod GetOperationPatListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = GetOperationPatListExecute ]
{
	Set AtEnd = $LIST(qHandle,1)
 	Set repid = $LIST(qHandle,2)
 	Set ind = $LIST(qHandle,3)
 	Set ind = $o(^CacheTemp(repid,ind))
 	If ind = "" {				// if there are no more rows, finish fetching
 		Set AtEnd = 1
 		Set Row = ""
 	}
 	Else      {				// fetch row
 		Set Row = ^CacheTemp(repid,ind)
 	}
 	// Save QHandle
 	s qHandle = $lb(AtEnd,repid,ind)
	Quit $$$OK
}

/// 获取危重患者列表
/// d ##class(%ResultSet).RunQuery("EMRservice.DAL.GetPaAdmDetail","GetCriticallyPatList","6","","","")
Query GetCriticallyPatList(ALocID As %String, AUserID As %String, StartDate As %String, EndDate As %String) As %Query(ROWSPEC = "mradm:%String:mradm,PatientID:%String:PatientID,EpisodeID:%String:EpisodeID,PAPMINO:%String:登记号$100,PAPMIName:%String:姓名$80,PAPMISex:%String:性别$50,PAPMIAge:%String:年龄$50,PAPMIDOB:%String:出生日期$100,PAAdmBedNO:%String:床号$50,PAAdmDocCodeDR:%String:主管医师$90,HeadUniteDoc:%String:带组医师$90,ChiefDoc:%String:主任医师$90,Diagnosis:%String:诊断$150,ItemMastDesc:%String,CareClass:%String:护理级别$80,Vitalsigns:%String:生命体征$200,SecAlias:%String:患者密级$80,EmployeeFunction:%String:患者级别$80,CriticallyType:%String:危重类型$80,FirstBedDateTime:%String:入科时间$160")
{
}

ClassMethod GetCriticallyPatListExecute(ByRef qHandle As %Binary, ALocID As %String, AUserID As %String, StartDate As %String = "", EndDate As %String = "") As %Status
{
	set repid=$I(^CacheTemp)
	set ind = 1
	set qHandle = $lb(0,repid,0)
	s ItemMastDesc=""
	if (ALocID'="") {
		s CTLOCType = $p($g(^CTLOC(ALocID)),"^",13)
		if (CTLOCType="W") {
			s locIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).CurDeptLinkLocByDept(ALocID)
			s locIDCount = $L(locIDStr,"^")
			for i=3:1:locIDCount-1{
				s locID = $p(locIDStr,"^",i)
				d curLocAdm
			}
		}else{
			s locID = ALocID
			d curLocAdm
		}
	}
	Quit $$$OK
curLocAdm
	s PAADMRowID = ""
	for {
		s PAADMRowID = $o(^PAADMi("PAADM_Type","I",PAADMRowID))
		q:(PAADMRowID = "")
		s AdmCurLocID=$P($g(^PAADM(PAADMRowID)),"^",4)
		continue:(AdmCurLocID '= locID)
		s AdmStatus=$P($g(^PAADM(PAADMRowID)),"^",20)
		continue:(AdmStatus '= "A")
		d curLocAdmCritical
	}
	Quit $$$OK
curLocAdmCritical
	s SIll = ##class(web.DHCDocMainOrderInterface).IsSeriouslyIll(PAADMRowID) ;病重患者
	s CIll = ##class(web.DHCDocMainOrderInterface).IsCriticallyIll(PAADMRowID) ;病危患者
	if (SIll)||(CIll) d OutputRow
	Quit $$$OK
OutputRow
	//患者信息
	Set langid=..%LanguageID()
	s PatientID=$P(^PAADM(PAADMRowID),"^",1)
	s EpisodeID=PAADMRowID
	s mradm=$P(^PAADM(PAADMRowID),"^",61)
	s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
	s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
	//性别
	s Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	s PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
	s AdmDepDr=$p($g(^PAADM(PAADMRowID)),"^",4)
	s AdmDepHospId=$p(^CTLOC(AdmDepDr),"^",22)
	//出生日期和年龄
	s PAPMIDOB=""
	s PAPMIAge=""
	s DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
	if (DobDate'=""){
		s PAPMIDOB=$P(^PAPER(PatientID,"ALL"),"^",6)
		s PAPMIDOB=..%ZD(PAPMIDOB)
		//s PAPMIDOB=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAPMIDOB)
		s PAPMIAge=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,PAADMRowID,AdmDepHospId)
		if (PAPMIAge = "0"){
			s birthday = ##class(EMRservice.DAL.GetPaAdmDetail).Birthday(PatientID)
			s admDate = ##class(EMRservice.DAL.GetPaAdmDetail).AdmDateTime(PAADMRowID, "")
			s admDate = $P(admDate, ",", 1)
		}
	}
	s Diagnosis = ##class(web.DHCDocInPatientList).GetMRAdmDiagnosis(mradm,";")
	if (Diagnosis = ""){
		s Diagnosis = ""	
	}
	s Diagnosis=##class(ext.util.String).EvalJSON(Diagnosis)
	s PAADMDocCode=$p($g(^PAADM(PAADMRowID)),"^",9)
	if (PAADMDocCode '= ""){
		s PAAdmDocCodeDR = $p($g(^CTPCP(PAADMDocCode,1)),"^",2)
		Set PAAdmDocCodeDR= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",PAAdmDocCodeDR,langid)
		s HeadUniteDocStr = ..GetHadeUniteDoc(PAADMDocCode,ALocID)
		s HeadUniteDoc = $p(HeadUniteDocStr,"^",3)
		Set HeadUniteDoc= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",HeadUniteDoc,langid)
		if (HeadUniteDoc = ""){
			s HeadUniteDoc = ""
		}
		s ChiefDocStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetChiefDoc(PAADMDocCode)
		s ChiefDocCode = $p(ChiefDocStr,"^",1)
		s ChiefDocDesc = $p(ChiefDocStr,"^",2)
		Set ChiefDocDesc= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",ChiefDocDesc,langid)
		if (ChiefDocDesc = ""){
			s ChiefDocDesc = ""
		}
	}else{
		s PAAdmDocCodeDR = ""
		s ChiefDocDesc=""
		s HeadUniteDoc=""
	}
	//当前病区和床位
	;s PAADMBedDR = $p($g(^PAADM(PAADMRowID)),"^",73)
	s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(PAADMRowID)
	if (PAADMBedDR '= ""){
		s WARDRowID = $p(PAADMBedDR,"||",1)
		s BEDChildsub = $p(PAADMBedDR,"||",2)
		s BEDRoomDR = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",3)
		s PAAdmWard = $p($g(^PAROOM(BEDRoomDR)),"^",2)
		s PAAdmBedNO = $p($g(^PAWARD(WARDRowID,"BED",BEDChildsub)),"^",1)
	}else{
		s PAAdmWard = ""
		s PAAdmBedNO = ""
	}
	//护理级别
	s CareClass=##Class(DHCDoc.DHCDocConfig.OrderClassify).GetAdmOrdClassify(PAADMRowID,"TendOrd")
	//s CareOrdArcimRowIDStr = ##class(EMRservice.DAL.GetPaAdmDetail).GetCareOrdArcimRowIDStrs()
	//s CareClass = ##class(EMRservice.DAL.GetPaAdmDetail).CareClass(PAADMRowID,CareOrdArcimRowIDStr)
	//取生命体征
	s TW=##Class(Nur.CommonInterface.Temperature).getLastItemValue(PAADMRowID, "temperature")
    s MB=##Class(Nur.CommonInterface.Temperature).getLastItemValue(PAADMRowID, "pulse")
    s HX=##Class(Nur.CommonInterface.Temperature).getLastItemValue(PAADMRowID, "breath")
    s SZY=##Class(Nur.CommonInterface.Temperature).getLastItemValue(PAADMRowID, "sysPressure")
    s SSY=##Class(Nur.CommonInterface.Temperature).getLastItemValue(PAADMRowID, "diaPressure")
    s Vitalsigns = "T:"_TW_"°C P:"_MB_##class(websys.Translation).Get("inpatientlist.inpat.csp","次/分 R:")_HX_##class(websys.Translation).Get("inpatientlist.inpat.csp","次/分 BP:")_SZY_"/"_SSY_" mmHg"
	/*s ds = ##Class(%Library.ResultSet).%New("EMRservice.BL.BLVitalsigns:GetVitalsignsData")
	d ds.Execute(EpisodeID,"^^^temperature^pulse^breath^sysPressure^diaPressure^liquidln","","")
	While (ds.Next())
	{
		s TW = ds.Data("ITEM1")
		s MB = ds.Data("ITEM2")
		s HX = ds.Data("ITEM3")
		s SZY = ds.Data("ITEM5")
		s SSY = ds.Data("ITEM4")
		s Vitalsigns = "T:"_TW_"°C P:"_MB_"次/分 R:"_HX_"次/分 BP:"_SZY_"/"_SSY_" mmHg"
	}*/
	s ResultStr = ..GetPatEncryptLevel(PatientID)
	s SecAlias=$p(ResultStr,"^",4)
	s EmployeeFunction=$p(ResultStr,"^",2)
	if (SIll) { s CriticallyType = "病重"}
	if (CIll) { s CriticallyType = "病危"}
	s FirstBedDateTime = ..GetFirstToBed(EpisodeID)
	s:(FirstBedDateTime=" ") FirstBedDateTime = ""
	set ^CacheTemp(repid,ind) = $LB(mradm,PatientID,EpisodeID,PAPMINO,PAPMIName,PAPMISex,PAPMIAge,PAPMIDOB,PAAdmBedNO,PAAdmDocCodeDR,HeadUniteDoc,ChiefDocDesc,Diagnosis,ItemMastDesc,CareClass,Vitalsigns,SecAlias,EmployeeFunction,CriticallyType,FirstBedDateTime)
	set ind = ind + 1
	Quit $$$OK
}

ClassMethod GetCriticallyPatListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GetCriticallyPatListExecute ]
{
	Set repid = $LIST(qHandle,2)
 	Kill ^CacheTemp(repid)
	Quit $$$OK
}

ClassMethod GetCriticallyPatListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = GetCriticallyPatListExecute ]
{
	Set AtEnd = $LIST(qHandle,1)
 	Set repid = $LIST(qHandle,2)
 	Set ind = $LIST(qHandle,3)
 	Set ind = $o(^CacheTemp(repid,ind))
 	If ind = "" {				// if there are no more rows, finish fetching
 		Set AtEnd = 1
 		Set Row = ""
 	}
 	Else      {				// fetch row
 		Set Row = ^CacheTemp(repid,ind)
 	}
 	s qHandle = $lb(AtEnd,repid,ind)
	Quit $$$OK
}

/// creator:李相宗
/// date:2011-11-30
/// desc:得到病人就诊医生的所在组的组长
/// input:CTLOCRowId就诊科室ID	DoctorID就诊医生ID
/// outPut:DocMessage 就诊医生所在组的组长和DocID
/// debug:w ##class(web.DHCDocInPatientListNew).GetHadeUniteDoc("810","1595")
ClassMethod GetHadeUniteDoc(DoctorID As %String, CTLOCID As %String) As %String
{
	s date=+$P($H,",",1)
 	s Str="",Docdesc=""
	s SSUSRCareProvDR=DoctorID
    s CTMUChildsub=0  f  s CTMUChildsub=$O(^CTLOC(CTLOCID,"MU",CTMUChildsub)) q:(CTMUChildsub="")||(Str'="")  d
    .s CTMUActiveFlag=$P(^CTLOC(CTLOCID,"MU",CTMUChildsub),"^",3)
    .q:CTMUActiveFlag'="Y"  //单元是激活状态
    .s DateFrom1=+$P(^CTLOC(CTLOCID,"MU",CTMUChildsub),"^",4) //单元没有过期，有效状态
    .q:((date<DateFrom1)&&(DateFrom1'=0))
    .s DateTo1=+$P(^CTLOC(CTLOCID,"MU",CTMUChildsub),"^",5)
    .q:(date>DateTo1)&&(DateTo1'=0)
    .s IsExist=0,LeaderDoctorDR=""
 	.s MUCPChildsub=0 f  s MUCPChildsub=$O(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub)) q:(MUCPChildsub="")  d
 	..s MUCPDoctorDR=$p(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub),"^",1) 
	..s MUCPLeaderFlag=$p(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub),"^",2) //取组长标志
	..s DateFrom2=+$p(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub),"^",5)
	..q:((date<DateFrom2)&&(DateFrom2'=0)) //单元中的用户没有超出有效期
	..s FromTime2=+$p(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub),"^",7)
	..q:(FromTime2'="")&&(DateFrom2'="")&&(DateFrom2=..%SysDate())&&(FromTime2<..%SysTime())
	..s DateTo2=+$p(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub),"^",6)
	..q:((date>DateTo2)&&(DateTo2'=0))
	..s ToTime2=+$p(^CTLOC(CTLOCID,"MU",CTMUChildsub,"CP",MUCPChildsub),"^",8)
	..q:(ToTime2'="")&&(DateTo2'="")&&(DateTo2=..%SysDate())&&(ToTime2>=..%SysTime())
	..if (MUCPDoctorDR=SSUSRCareProvDR) s IsExist=1
	..if (MUCPLeaderFlag="Y") s LeaderDoctorDR=MUCPDoctorDR
	.i (IsExist=1)&&(LeaderDoctorDR'="") s Str=CTLOCID_"||"_CTMUChildsub_"^"_LeaderDoctorDR //_"^"_MUCPDoctorDR_"^"_SSUSRCareProvDR
	//if (Str="") s Docdesc=DoctorID_"^"_$P($g(^CTPCP(DoctorID,1)),"^",1)_"^"_$P($g(^CTPCP(DoctorID,1)),"^",2)
	i Str'="" s Docdesc=$P(Str,"^",2)_"^"_$P($g(^CTPCP($P(Str,"^",2),1)),"^",1)_"^"_$P($g(^CTPCP($P(Str,"^",2),1)),"^",2)
	q Docdesc
}

/// 获取预入院患者列表
/// w ##class(web.DHCDocInPatientListNew).GetPreAdmissionPatList(10209,95,"","",1,15,"PAPMINO","desc")
ClassMethod GetPreAdmissionPatListJson(userID As %String, locID As %String, PatNo As %String, PatientName As %String, idxStart As %String, idxLast As %String, Sort As %String, OrderPg As %String, HospId As %String = "") As %String
{
	s ^templxz123=userID_"^"_locID_"^"_PatNo_"^"_PatientName_"^"_idxStart_"^"_idxLast_"^"_Sort_"^"_OrderPg
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetPreAdmissionPatList")
	s HospId=##class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId(HospId)
	s sc = result.Execute(locID,PatNo,PatientName,HospId,userID)
	
 	s json = ""
 	s count = 0
	s key = $i(^CacheTemp)
	k ^TempEMRPatList(key)
	k ^TempMotherPatList(key)
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
	{
		s json = "{"
		for i=1:1:ColumnCount {
			if (i'=1) {s json = json_"," }
			s ColumnName=result.GetColumnName(i)
			s json = json_""""_ColumnName_""":"""_$g(result.Data(ColumnName))_""""
		}
		s json = json_"}" 
		b ;123
		s count = count + 1
		if Sort="" {
			s rtn=..GetSortDescOrder("admdate",json,key,count)
		}else{
			s rtn=..GetSortDescOrder(Sort,json,key,count)
		}
	}
	s json=""
 	s OrdBedNO="",j=0,i=1
	for
	{
		s orderpg=1
		if (OrderPg="desc") s orderpg="-1"
		s OrdBedNO = $o(^TempEMRPatList(key,OrdBedNO),orderpg)
		q:(OrdBedNO="")
		s mothersort ="" for{
			s mothersort =$o(^TempEMRPatList(key,OrdBedNO,mothersort))
			q:mothersort="" 
			s order="" for{
				s order = $o(^TempEMRPatList(key,OrdBedNO,mothersort,order),orderpg)
				q:(order = "")
				if ((idxStart <= i)&(i <= idxLast))
				{
					s tempJson = ^TempEMRPatList(key,OrdBedNO,mothersort,order)
					s tempJson = $tr(tempJson,$c(10),"")
					s tempJson = $tr(tempJson,$c(13),"")
					s tempJson = $ZSTRIP(tempJson,"*C")
					if (j'=0)
					{
						s json=json_","
					}
					s json=json_tempJson
					s j = j + 1
				}
				s i = i + 1
			}
			
		}
	}
	
	k ^TempEMRPatList(key)
	s ret="{""total"":"_count_",""rows"":["_json_"]}"
	q ret
}

/// Desc:	获取护士患者列表JSON串;
/// Input:	WardId 病区id
/// 		PatNo为患者登记号;
/// 		MedicareNo为患者病案号;
/// 		PatientName为患者姓名;
/// 		patientBedNo床号;
/// 		UserCode管床医生
/// Debug:	d ##Class(web.DHCDocInPatientListNew).GetNursePatList(0,"","","","","","","","","","","",1,15)
ClassMethod GetNursePatListJson(Type As %String = 0, PatientNo As %String = "", Name As %String = "", MedicalNo As %String = "", CardNo As %String = "", BedNo As %String = "", Ward As %String = "", DisDay = "", IllType = "", DocID As %String = "", WardGroupLinkBedStr As %String = "", HavedSeeOrdPat As %String = "", AIdxStart As %String = "", AIdxLast As %String = "", Sort As %String = "", OrderPg As %String = "")
{

	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetNursePatList")
	s sc = result.Execute(Type,PatientNo,Name,MedicalNo,CardNo,BedNo,Ward,DisDay,IllType,DocID,WardGroupLinkBedStr,HavedSeeOrdPat,AIdxStart,AIdxLast,Sort,OrderPg)
 	s json = ""
	s (CCount,SCount,FCount,count,BabyNum)=0
	s ColumnCount=result.GetColumnCount()
	While (result.Next())
	{
		s ColorStatusCode=$g(result.Data("ColorStatusCode"))
		If (ColorStatusCode="F"){
			s FCount=FCount+1
		}
		if (ColorStatusCode="C"){
			s CCount=CCount+1
		}
		if (ColorStatusCode="S"){
			s SCount=SCount+1
		}
		s EpisodeID=$g(result.Data("EpisodeID"))
		s PAADMMotherAdmDR=$p(^PAADM(EpisodeID),"^",75)
		if (PAADMMotherAdmDR'=""){
			s BabyNum=BabyNum+1
		}

		s count = count + 1
		s json = json_"{"
		for i=1:1:ColumnCount {
			if (i'=1) {s json = json_"," }
			s ColumnName=result.GetColumnName(i)
			s json = json_""""_ColumnName_""":"""_$g(result.Data(ColumnName))_""""
		}
		s json = json_"}," 
	}
	s json = $tr(json,$c(10),"")
	s json = $tr(json,$c(13),"")
	s json = $e(json,1,$l(json)-1)
	s json = $ZSTRIP(json,"*C")
	s ret=##Class(%Stream.GlobalCharacter).%New()
	d ret.Write("{""total"":"_count_",""CCount"":"_CCount_",""SCount"":"_SCount_",""FCount"":"_FCount_",""BabyNum"":"_BabyNum_",""rows"":[")
	d ret.Write(json)
	d ret.Write("]}")
	q ret.Read()
}

// w ##class(web.DHCDocInPatientListNew).GetNursePatListDoc(4636,197)

ClassMethod GetNursePatListDoc(UserID As %String, LocID As %String)
{
	Set langid=..%LanguageID()
	w "["
	s doctorid=0,count=0
	f  s doctorid=$o(^DHCDOCNURSEPATLISTDOC(UserID,LocID,doctorid)) q:doctorid=""  d
	.s doctor=$g(^DHCDOCNURSEPATLISTDOC(UserID,LocID,doctorid))
	.Set doctor= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",doctor,langid)
	.i count>=1 w ","
	.w "{""id"":"""_doctorid_""","
	.w """text"":"""_doctor_"""}"
	.s count=count+1
	q "]"
}

/// 查找护士退回的核实医嘱
/// w ##class(web.DHCDocInPatientListNew).CheckforCallBack()
ClassMethod CheckforCallBack(adm)
{
	i +adm'>0 q ""
	s orderParref=$o(^OEORD(0,"Adm",adm,0))
	i orderParref=""  q ""
	s Num=0
	s orderId = 0 f  {
		s orderId = $o(^OEORD(orderParref,"I",orderId)) 
		q:orderId=""  
		s OrderStatus=""
		s OrderStatusDR=$p($g(^OEORD(orderParref,"I",orderId,1)),"^",13)
		continue:OrderStatusDR=""
		if OrderStatusDR'="" s OrderStatus=$p(^OEC("OSTAT",OrderStatusDR),"^",1)
		continue:OrderStatus'="V"
		;continue:'##class(web.DHCDocMainOrderInterface).IsOrdBillOE(orderParref,orderId)
		s OrdNurseCallback = ##class(web.DHCDocMainOrderInterface).IsNurseCallbackOrder(orderParref,orderId)
		if $P(OrdNurseCallback,"^",1)=1 s Num=Num+1
	}
	s rtn=""
	if Num'=0 s rtn=##class(websys.Translation).Get("inpatientlist.inpat.csp","拒绝")_Num_""
	q rtn
}

/// 查找是否有产科病人
ClassMethod CheckForDeliveryPatient(locID, UserID)
{
	s rtn=0
	s result = ##Class(%ResultSet).%New("web.DHCDocInPatientListNew:GetInPatList")
	s sc = result.Execute(locID,UserID ,"currentLoc","all","","",1)
	While (result.Next()){
		 s rtn = rtn + 1
	}
	q rtn
}

///  护士判断是否有产科病人 
ClassMethod CheckNuserForDeliveryPatient(LocID)
{
	s rtn=0
	s result = ##Class(%ResultSet).%New("Nur.Interface.OutSide.Ward:findDeliveryPatient")
	s sc = result.Execute(LocID,"","","")
	While (result.Next()){
		 s rtn = rtn + 1
	}
	q rtn
}

/// 修改病人医生便签内容
/// EpsiodeID , RemarkNote
/// w ##class(web.DHCDocInPatientListNew).UpdateDocReMark(1573,"dfafsdafasdfsadfadfadf")
ClassMethod UpdateDocReMark(EpisodeID As %String, RemarkNote As %String) As %String
{
	q:EpisodeID="" ""
	Set len = $l(RemarkNote,$c(13,10))
	k ^PAADM(EpisodeID,"DHCReMark")
	for j=1:1:len d
	.Set ^PAADM(EpisodeID,"DHCReMark",j)=$p(RemarkNote,$c(13,10),j)
	Set ^PAADM(EpisodeID,"DHCReMark",0)=len
	q 0
}

/// 得到医生便签内容
/// w ##class(web.DHCDocInPatientListNew).GetDocReMark(1573)
ClassMethod GetDocReMark(EpisodeID As %String) As %String
{
	s DocReMark=""
	s depProcNotesIndex = 0
	f  s depProcNotesIndex=$o(^PAADM(EpisodeID,"DHCReMark",depProcNotesIndex)) q:depProcNotesIndex=""  d
	.q:($g(^PAADM(EpisodeID,"DHCReMark",depProcNotesIndex))="")
	.s DocReMark = DocReMark_""_^PAADM(EpisodeID,"DHCReMark",depProcNotesIndex)
	q DocReMark
}

/// w ##Class(web.DHCDocInPatientListNew).GetIconList(^tan("GetIconList"),"")
ClassMethod GetIconList(AdmListJson As %String, CONTEXT As %String) As %String
{
	s ^tan("GetIconList")=AdmListJson
	//s List=##Class(ext.util.JsonObject).ListFromJSON(^tan("GetIconList"))
	s jsonstr=AdmListJson
	Set jsonstr=$e(jsonstr,2,$l(jsonstr)-1) ;去掉[ 与 ]
	Set List = ##class(%ListOfObjects).%New()
	Set SplitStr = "},{"
	for i=1:1:$l(jsonstr,SplitStr){
		Set itemJsonStr = $p(jsonstr,SplitStr,i)
		if $e(itemJsonStr,1)'="{" Set itemJsonStr="{"_itemJsonStr
		if $e(itemJsonStr,$l(itemJsonStr))'="}" Set itemJsonStr=itemJsonStr_"}"
		//s itemJsonStr=$replace(itemJsonStr,"""","")
		set obj = ##Class(ext.util.JsonObject).FromJSON(itemJsonStr)
		do List.Insert(obj)
	}
	s JsonData=[]
	//s OutJson=""
	while(List.GetNext(.key)){
		Set Obj = List.GetAt(.key)
		Quit:'$IsObject(Obj)
		s PatientID=Obj.GetValue("PatientID")
		s EpisodeID=Obj.GetValue("EpisodeID")
		s index=Obj.GetValue("index")		
		s IconProfile=$ZCVT(##class(web.DHCDocMain).ShowIcon("MAP",EpisodeID_"^^^"_PatientID,CONTEXT),"O","HTML")
		/*s OutObj = ##class(ext.util.JsonObject).%New()
		d OutObj.Put("index",index)
		d OutObj.Put("IconProfile",IconProfile)
		d OutObj.Put("EpisodeID",EpisodeID)
		//do OutList.Insert(OutObj)
		if (OutJson'=""){
			s OutJson=OutJson_","
		}
		s OutJson=OutJson_OutObj.Json()
		*/
		s OneJson={}
		d OneJson.%Set("index",index)
		d OneJson.%Set("IconProfile",IconProfile)
		d OneJson.%Set("EpisodeID",EpisodeID)
		do JsonData.%Push(OneJson,"")
		
	}
	s obj=##class(%Stream.GlobalCharacter).%New()
	do JsonData.%ToJSON(obj)
	s JsonStr=""
	While 'obj.AtEnd { 
		s JsonStr=JsonStr_obj.ReadLine(,.sc,.eol)
	}
	Q JsonStr
	/*s OutJson="["_OutJson_"]"
	q OutJson*/
}

Query ExportPatList(ALocID As %String, AUserID As %String, ARadioValue As %String, AWardID As %String, AIdxStart As %Integer, AIdxLast As %Integer, AMedicareNo As %String = "", APatientName As %String = "", APatientBedNo As %String = "", ADocCode As %String = "", Sort As %String = "", OrderPg As %String = "", DeliveryPatient As %String = "0", BZStr As %String = "", APatientNo As %String = "", Transfer As %String = "", Dischargeorder As %String = "", CPWSStatus As %String = "") As websys.Query(ROWSPEC = "PAAdmBedNO:%String:床号,PAPMINO:%String:登记号,PAPMIName:%String:姓名,ColorStatus:%String:状态,NurseAccp:%String:护士拒绝,CPWSStatus:%String:入径状态,PAPMISex:%String:性别,PAPMIAge:%String:年龄,PAAdmWard:%String:病区,PAAdmDate:%String:就诊日期,PAAdmTime:%String:就诊时间,MedicareNo:%String:病案号,InTimes:%String:入院次数,ResidentDays:%String:住院天数,PAAdmDocCodeDR:%String:主管医师,HeadUniteDoc:%String:带组医师,ChiefDoc:%String:主任医师,PAAdmReMark:%String:医生便签,Diagnosis:%String:诊断,PAAdmReason:%String:患者费别,")
{
}

/// d ##class(%ResultSet).RunQuery("web.DHCDocInPatientListNew","ExportPatList",113,12175,"currentLoc","all",0,99999,"","","","","","asc",0,"")
ClassMethod ExportPatListExecute(ByRef qHandle As %Binary, ALocID As %String, AUserID As %String, ARadioValue As %String, AWardID As %String, AIdxStart As %Integer, AIdxLast As %Integer, AMedicareNo As %String = "", APatientName As %String = "", APatientBedNo As %String = "", ADocCode As %String = "", Sort As %String = "", OrderPg As %String = "", DeliveryPatient As %String = "0", BZStr As %String = "", APatientNo As %String = "", Transfer As %String = "", Dischargeorder As %String = "", CPWSStatus As %String = "") As %Status
{
	Set repid=$I(^CacheTemp)
	If $g(ind)="" Set ind=1
	s ^tan("ExportPatList")=ALocID_","_AUserID_","_ARadioValue_","_AWardID_","_AIdxStart_","_AIdxLast_","_AMedicareNo_","_APatientName_","_APatientBedNo_","_ADocCode_","_Sort_","_OrderPg_","_DeliveryPatient_","_BZStr
	s Json=""
	s result = ..GetInPatListJSON(ALocID,AUserID,ARadioValue,AWardID,AIdxStart,AIdxLast,AMedicareNo,APatientName,APatientBedNo,ADocCode,Sort,OrderPg,DeliveryPatient,BZStr,APatientNo, Transfer , Dischargeorder , CPWSStatus)
	while (result.AtEnd = 0)
	{
		s Json=Json_$ZSTRIP(result.Read(32000),"*C")
	}
	k OrdSortArr
	d ##Class(DHCDoc.Util.FromJSON).FromJSONToArr(Json,.OrdSortArr)
	s row=""
	for {
		s row=$O(OrdSortArr("rows",row))
		q:(row="")
		S PAAdmBedNO=$G(OrdSortArr("rows",row,"PAAdmBedNO"))
		S PAPMINO=$G(OrdSortArr("rows",row,"PAPMINO"))
		S PAPMIName=$G(OrdSortArr("rows",row,"PAPMIName"))
		S ColorStatus=$G(OrdSortArr("rows",row,"ColorStatus"))
		S NurseAccp=$G(OrdSortArr("rows",row,"NurseAccp"))
		S CPWSStatus=$G(OrdSortArr("rows",row,"CPWSStatus"))
		S PAPMISex=$G(OrdSortArr("rows",row,"PAPMISex"))
		S PAPMIAge=$G(OrdSortArr("rows",row,"PAPMIAge"))
		S PAAdmWard=$G(OrdSortArr("rows",row,"PAAdmWard"))
		S PAAdmDate=$G(OrdSortArr("rows",row,"PAAdmDate"))
		S PAAdmTime=$G(OrdSortArr("rows",row,"PAAdmTime"))
		S MedicareNo=$G(OrdSortArr("rows",row,"MedicareNo"))
		S InTimes=$G(OrdSortArr("rows",row,"InTimes"))
		S ResidentDays=$G(OrdSortArr("rows",row,"ResidentDays"))
		S PAAdmDocCodeDR=$G(OrdSortArr("rows",row,"PAAdmDocCodeDR"))
		S HeadUniteDoc=$G(OrdSortArr("rows",row,"HeadUniteDoc"))
		S ChiefDoc=$G(OrdSortArr("rows",row,"ChiefDoc"))
		S PAAdmReMark=$G(OrdSortArr("rows",row,"PAAdmReMark"))
		S Diagnosis=$G(OrdSortArr("rows",row,"Diagnosis"))
		S PAAdmReason=$G(OrdSortArr("rows",row,"PAAdmReason"))
		//诊断中存在$C(10),导致导出出错在此处做特殊处理。
		s Diagnosis=$Replace(Diagnosis,$c(10),"")
		s Data=$LB(PAAdmBedNO,PAPMINO,PAPMIName,ColorStatus,NurseAccp,CPWSStatus,PAPMISex,PAPMIAge,PAAdmWard,PAAdmDate,PAAdmTime,MedicareNo,InTimes,ResidentDays,PAAdmDocCodeDR,HeadUniteDoc,ChiefDoc,PAAdmReMark,Diagnosis,PAAdmReason)
		s ^CacheTemp(repid,ind) = Data
		s ind=ind+1
	}
	
	Set qHandle=$lb(0,repid,0)	
	Quit $$$OK
}

Query GetPreAdmissionPatList(locID As %String, PatNo As %String, PatientName As %String, HospId As %String = "", UserID As %String = "") As websys.Query(ROWSPEC = "PatientID:%String,EpisodeID:%String,mradm:%String,PAPMINO:%String:登记号$100,PAPMIName:%String:姓名$100,PAPMIDOB:%String:出生日期$100,PAPMISex:%String:性别$50,PAPMIAge:%String:年龄$50,PAPMIWard:%String:当前病区$150,admdate:%String:就诊日期$100,Diagnosis:%String:诊断$150,IPBookCreateUserName:%String:开证医生$100,IPBookCreateDateTime:%String:开证时间$160,WaitDays:%String:等候天数$80,IpBookStatus:%String:状态$80,IpBookingDate:%String:预约日期$100,IpBookingLoc:%String:预约科室$130,IpBookingWard:%String:预约病区$140,IpBookingDoc:%String:预约医生$100,IpBookingMark:%String:预约备注$200,Opername:%String:手术名称$80,OperDate:%String:手术日期$120,OperLoc:%String:手术科室$120,OperDoc:%String:手术医生$120,OperStatus:%String:手术状态$120,MZPreperat:%String:麻醉状态$80,ExamStatus:%String:院前检查$80")
{
}

/// d ##class(%ResultSet).RunQuery("web.DHCDocInPatientListNew","GetPreAdmissionPatList","566","","",2,"12175")
ClassMethod GetPreAdmissionPatListExecute(ByRef qHandle As %Binary, locID As %String, PatNo As %String, PatientName As %String, HospId As %String = "", UserID As %String = "") As %Status
{
	Set repid=$I(^CacheTemp)
	If $g(ind)="" Set ind=1
	s NumSeq=0
	s HospId=##class(DHCDoc.Common.Hospital).GetCurrentSYSHospitalId(HospId)
	s EpisodeID=""
	Set langid=..%LanguageID()
	s LocStr=locID
	s DaySurgeryLoc=##class(web.DHCBL.CT.ORCDaySurgeryLoc).IsDaySurgeryLoc(locID)
	if (DaySurgeryLoc="Y"){
		s LocStr=##class(web.DHCBL.CT.ORCDaySurgeryLocLinkLoc).GetLinkLoc(locID)
		}
	for{
		s EpisodeID=$O(^PAADMi("PAADM_VisitStatus","P",EpisodeID))
		Q:((EpisodeID=""))
		s admloc=$P(^PAADM(EpisodeID),"^",4)
		continue:(("^"_LocStr_"^")'[("^"_admloc_"^"))
		s AdmDepHospId=$p(^CTLOC(admloc),"^",22)
		continue:((HospId'="")&&(AdmDepHospId'=HospId))
		s PatientID=$P(^PAADM(EpisodeID),"^",1)
		s PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
		continue:(PatientName'="")&(PatientName'=$E(PAPMIName,1,$L(PatientName)))
		s mradm=$P(^PAADM(EpisodeID),"^",61)
		s PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
		continue:(PatNo'="")&(PatNo'=PAPMINO)
		s sexdr=$P(^PAPER(PatientID,"ALL"),"^",7)
		s PAPMISex=""
		s:sexdr'="" PAPMISex=$P($g(^CT("SEX",sexdr)),"^",2)
		s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
		s PAPMIDOB=$P($g(^PAPER(PatientID,"ALL")),"^",6)
		s PAPMIDOB=..%ZD(PAPMIDOB)
		//s PAPMIDOB=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAPMIDOB)
		s PAPMIAge=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.reg.GetPapmiAge",PatientID,EpisodeID,AdmDepHospId)
		s admdate=$p($g(^PAADM(EpisodeID)),"^",6)
		s admdate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",admdate)
		s admtime=$p($g(^PAADM(EpisodeID)),"^",7)
		s admtime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",admtime)
		s PAPMIWard=""
		s warddr=$P($g(^PAADM(EpisodeID)),"^",70)
		if warddr'=""  d
		.s PAPMIWard = $P($g(^PAWARD(warddr)),"^",2)
		.s PAPMIWard=##class(User.PACWard).GetTranByDesc("WARDDesc",PAPMIWard,langid)
		.s:PAPMIWard["-" PAPMIWard = $P(PAPMIWard,"-",2)
		s Diagnosis = ##class(web.DHCDocInPatientList).GetMRAdmDiagnosis(mradm,";") //##class(EMRservice.HISInterface.PatientInfoAssist).DiagnosInfo(EpisodeID)
		// 住院证信息: 状态，登记日期，预约日期，预约日期，预约治疗组，预约病区，预约床号，申请主治医师，建证医师，护士备注，医师备注，分级
		s (ipBookCreateUserName, ipBookCreateDateTime, ipBookStatus) = ""
		s (ipBookingDateFmt, ipBookingLoc, ipBookingWard, ipBookingDoc, ipBookingMark) = ""
		s waitDays = 0
		s ipBookId = $o(^DHCDocIPBK(0,"EpisodeIDTo",EpisodeID,0))
		if (ipBookId '= "") {
			s ^Tempxkl("DEBUG","ipBookId",$now()) = $lb(ipBookId)
			s ipBookCreateUserId = $p($g(^DHCDocIPBK(ipBookId)), "^", 7)
			s:ipBookCreateUserId'="" ipBookCreateUserName = $p($g(^SSU("SSUSR",ipBookCreateUserId)), "^", 2)
			s ipBookCreateDate = $p($g(^DHCDocIPBK(ipBookId)), "^", 4)
			s ipBookCreateTime = $p($g(^DHCDocIPBK(ipBookId)), "^", 5)
			s:(ipBookCreateDate'="")&&(ipBookCreateTime'="") ipBookCreateDateTime = ..%ZD(ipBookCreateDate)_" "_$zt(ipBookCreateTime)
			s ipBookingMark = $p($g(^DHCDocIPBK(ipBookId)), "^", 15)
			s ipBookingLocId = $p($g(^DHCDocIPBK(ipBookId)), "^", 13)
			s:ipBookingLocId'="" ipBookingLoc=$P($G(^CTLOC(ipBookingLocId)),"^",2) 
			s ipBookingWardId = $p($g(^DHCDocIPBK(ipBookId)), "^", 11)
			s:ipBookingWardId'="" ipBookingWard=$p($g(^PAWARD(ipBookingWardId)),"^",2) 
			s ipBookingDocId = $p($g(^DHCDocIPBK(ipBookId)), "^", 31)
			s:ipBookingDocId'="" ipBookingDoc = $p($g(^CTPCP(ipBookingDocId,1)), "^", 2)
			
			s ipBookingDate = $P($g(^DHCDocIPBK(ipBookId)),"^",10)
			if ipBookingDate'="" {
				s ipBookingDateFmt = ..%ZD(ipBookingDate)
				s stateIDDCode=""
				s currentStateID=$p(^DHCDocIPBK(ipBookId),"^",8) ;住院证状态
				s:currentStateID'="" stateIDDCode = $p($g(^DHCDocIPBDIC(currentStateID)), "^", 1)
				s:currentStateID'="" ipBookStatus = $p($g(^DHCDocIPBDIC(currentStateID)), "^", 2)
				if (stateIDDCode="Admission"){
					s episodeIDTo=$P($g(^DHCDocIPBK(ipBookId)),"^",10)
					s episodeIDToAdmDate=$p(^PAADM(episodeIDTo),"^",6)
					s waitDays=episodeIDToAdmDate-ipBookingDate
				}elseif (stateIDDCode="Cancel"){
					s waitDays=0
				}else{
					s waitDays=..%SysDate()-ipBookingDate
				}
			}
			if +waitDays<0 { s waitDays=0 }
		}
		s SurgeryInfo=##class(web.DHCANAdaptor).GetDaySurgeryInfoByAdm(EpisodeID)
		continue:((SurgeryInfo="")&&(DaySurgeryLoc="Y"))
		///手术名称 手术日期 手术科室 主刀医师 手术状态 麻醉评估 检查医嘱 床位状态
		s (Opername,OperDate,OperLoc,OperDoc,OperStatus,MZPreperat,ExamStatus)=""
		//s SurgeryInfo=""
		if (SurgeryInfo'=""){
			;b ;0334
			s Opername=$P(SurgeryInfo,"^",1)
			s OperDate=$P(SurgeryInfo,"^",2)
			s OperLocDr=$P(SurgeryInfo,"^",3)
			if OperLocDr'="" s OperLoc=$p(^CTLOC(admloc),"^",2)
			s OperDoc=$P(SurgeryInfo,"^",4)
			s OperStatus=$P(SurgeryInfo,"^",5)
			s MZPreperat=$P(SurgeryInfo,"^",6)
			if (MZPreperat="Y"){s MZPreperat="通过"}elseif(MZPreperat="N"){s MZPreperat="未通过"}
			s UserCode=$p(^SSU("SSUSR",UserID),"^",1)
			s (Exam1,Exam2,Exam3)=0
			s rset=##Class(%ResultSet).%New("web.DHCAPPPisInterface.QryPatExaList")
			If rset.QueryIsValid() {
				Set Status=rset.Execute(EpisodeID,UserCode)
				If 'Status Quit
				Set columns = rset.GetColumnCount()
				if (columns=0) Quit
				While (rset.Next()) {
					s ItmStatus=rset.GetData(1)
					if (ItmStatus="申请"){
						s Exam1=Exam1+1
					}elseif (ItmStatus="报告"){
						s Exam3=Exam3+1
					}else{
						s Exam2=Exam2+1
					}
				}
			}
			d rset.Close()
			
			s labrset=##Class(LabService.TSResult).GetSomeQtyInfoByAdmNo(EpisodeID)
			s Lab1=$P(labrset,"^",1)
			s Lab2=$P(labrset,"^",2)
			s Lab3=$P(labrset,"^",3)
			if ((Exam1=0)&&(Lab1=0)&&((Exam2'=0)||(Exam3'=0)||(Lab2'=0)||(Lab3'=0))){s ExamStatus="完成"}else{s ExamStatus="未完成"}
			if ((Exam1=0)&&(Lab1=0)&&(Exam2=0)&&(Exam3=0)&&(Lab2=0)&&(Lab3=0)) s ExamStatus=""
			}
		s NumSeq=NumSeq+1
		d OutputPreAdm
	}	
	Set qHandle=$lb(0,repid,0)	
	Quit $$$OK
OutputPreAdm
	s Data=$LB(PatientID,EpisodeID,mradm,PAPMINO,PAPMIName,PAPMIDOB,PAPMISex,PAPMIAge,PAPMIWard,admdate,Diagnosis,ipBookCreateUserName,ipBookCreateDateTime,waitDays,ipBookStatus,ipBookingDateFmt,ipBookingLoc,ipBookingWard,ipBookingDoc,ipBookingMark,Opername,OperDate,OperLoc,OperDoc,OperStatus,MZPreperat,ExamStatus)
	s ^CacheTemp(repid,ind) = Data
	s ind=ind+1
	q
}

Query GetNursePatList(Type As %String = 0, PatientNo As %String = "", Name As %String = "", MedicalNo As %String = "", CardNo As %String = "", BedNo As %String = "", Ward As %String = "", DisDay = "", IllType = "", DocID As %String = "", WardGroupLinkBedStr As %String = "", HavedSeeOrdPat As %String = "", AIdxStart As %String = "", AIdxLast As %String = "", Sort As %String = "", OrderPg As %String = "") As websys.Query(ROWSPEC = "PatientID:%String,EpisodeID:%String,mradm:%String,PAPMINO:%String:登记号$100,MedicareNo:%String:病案号$80,PAPMIName:%String:姓名$100,PAPMIDOB:%String:出生日期$100,PAPMISex:%String:性别$50,PAPMIAge:%String:年龄$70,PAAdmDate:%String:就诊日期$100,PAAdmTime:%String:就诊时间$70,PAAdmDepCodeDR:%String:科室$100,PAAdmDocCodeDR:%String:医生$80,Hospital:%String:医院$80,PAAdmType:%String,PAAdmWard:%String:病区$80,PAAdmReason:%String:患者类型$80,PAAdmBedNO:%String:床号$40,ColorDesc:%String:状态$40,ColorStatus:%String,ColorStatusCode:%String,InTimes:%String:住院次数$80,ResidentDays:%String:就诊天数$80,IconProfile:%String:图标菜单$80,PAAdmNo:%String:就诊号$120,ConsultRoom:%String:房间$80,Deposit:%String:预交金$80,Amount:%String:费用$80,Charge:%String:余额$80,EmployeeFunction:%String:患者级别$80,SecretLevel:%String:患者密级$80,OutDays:%String:出院天数$80,Diagnosis:%String:诊断$80,PAAdmDischgeDate:%String:出院日期$100,PAAdmDischgeTime:%String:出院时间$100,DeliverStatus:%String:分娩状态$80")
{
}

/// d ##class(%ResultSet).RunQuery("web.DHCDocInPatientListNew","ExportPatList",113,12175,"currentLoc","all",0,99999,"","","","","","asc",0,"")
ClassMethod GetNursePatListExecute(ByRef qHandle As %Binary, Type As %String = 0, PatientNo As %String = "", Name As %String = "", MedicalNo As %String = "", CardNo As %String = "", BedNo As %String = "", Ward As %String = "", DisDay = "", IllType = "", DocID As %String = "", WardGroupLinkBedStr As %String = "", HavedSeeOrdPat As %String = "", AIdxStart As %String = "", AIdxLast As %String = "", Sort As %String = "", OrderPg As %String = "") As %Status
{
	Set repid=$I(^CacheTemp)
	If $g(ind)="" Set ind=1

	s key = repid
	k ^TempNURSEPatList(key),^TempAdmArr(key),^TempCIllAdmArr(key),^TempSIllAdmArr(key),^TempFIllAdmArr(key)
	s LocID=%session.Get("LOGON.CTLOCID")
	s wardID=%session.Get("LOGON.WARDID")
	s groupID=%session.Get("LOGON.GROUPID")
	s UserID =%session.Get("LOGON.USERID")
	s LogonHospId=%session.Get("LOGON.HOSPID")
	S CONTEXT = $g(%session.Data("CONTEXT"))
	if (Sort=""){
		if (DisDay'=""){
			s Sort="PAAdmDischgeDate"
			s OrderPg="desc"
		}else{
			s Sort="PAAdmBedNO"
			s OrderPg="asc"
		}
		
	}
	k ^DHCDOCNURSEPATLISTDOC(UserID,LocID)
	Set DateFormat=##class(websys.Conversions).DateFormat()
	s nowJson = ##Class(%Stream.GlobalCharacter).%New()
 	s ret = ##Class(%Stream.GlobalCharacter).%New()
 	s json = ""
	s count=0
	s (AllPatient,ArrivedQue,MedUnit,HisPat,Delivery)=""
	D ##class(web.DHCDocMainOrderInterface).GetIllLevelColor(.ColorList)
	i Type=0 s AllPatient="on"		;病区
	i Type=1 s HisPat="on"			;曾转科的在院病人
	i Type=2 s Delivery="on"

	s LocIDStr=""
	Set LocLink=0
	f  Set LocLink=$O(^CTLOC(LocID,"LINK",LocLink)) Quit:LocLink=""  Do
	.Set LocItem=$P($G(^CTLOC(LocID,"LINK",LocLink)),"^",1)
	.i LocIDStr="" s LocIDStr=LocItem
	.e  s LocIDStr=LocIDStr_"^"_LocItem
	Set langid=..%LanguageID()
	if ((PatientNo="") && (Name="") && (MedicalNo="") && (CardNo="") &&(Ward="") &&(DisDay="")){	
		if (HisPat="")&&(Delivery=""){
			Set DocId=$p($g(^SSU("SSUSR",UserID)),"^",14)
			if (DocId'=""){
	 			Set LocEmerType=$P($G(^CTLOC(LocID)),"^",13)
	 			Set EmerWard=$O(^PAWARD(0,"WARD_LocationDR",LocID,""))
	 			if (LocEmerType="W")&&(EmerWard'=""){
					Set WardItem=EmerWard
					If WardItem'="" Do WardPatList
				}
			}
		}elseif (HisPat="on") {
			s admrowid=0 f  s admrowid=$o(^PAADMi("AdmTypeCurr","I",admrowid)) q:admrowid=""  d
			.q:$p(^PAADM(admrowid),"^",20)'="A"	 ;VisitStatus
			.s PAPMI = $p(^PAADM(admrowid),"^",1)
			.S:$d(^PAPER(PAPMI,"PAT",1)) PatientNo=$P(^PAPER(PAPMI,"PAT",1),"^",1)
			.s WardID = $O(^PAWARD(0,"WARD_LocationDR",LocID,""))
			.i $d(^PAPER(PAPMI,"PAT",1)),$$findAdmTransWard(admrowid,WardID),$p(^PAADM(admrowid),"^",70)'=WardID d
			..s PAAdm=admrowid
			..d RecordSortTmpData
		}elseif (Delivery="on"){
			s result = ##Class(%ResultSet).%New("Nur.Interface.OutSide.Ward:findDeliveryPatient")
			s sc = result.Execute(LocID,PatientNo,Name,MedicalNo)
			While (result.Next()){
				 s PAAdm=$g(result.Data("episodeID"))
				 d RecordSortTmpData
			}
			}
	}else{
		if (Delivery="on"){
			s result = ##Class(%ResultSet).%New("Nur.Interface.OutSide.Ward:findDeliveryPatient")
			s sc = result.Execute(LocID,PatientNo,Name,MedicalNo)
			While (result.Next()){
				 s PAAdm=$g(result.Data("episodeID"))
				 d RecordSortTmpData
			}
		}elseif (PatientNo'=""){
			//登记号查询
			Set PAPMI=$O(^PAPERi("PAPMI_PatNo",PatientNo,""))
			if $g(PAPMI)'="" {//Set qHandle=$lb(0,repid,0)	Quit $$$OK
				Set PAAdm="", CurrentAdmType="I"
				For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM",CurrentAdmType,PAAdm)) Quit:PAAdm=""  Do
				.d RecordSortTmpData
			}
		}Elseif (MedicalNo'=""){
			Set PAPMI="", CurrentAdmType="I"
			;Set PAPMI = ##Class(web.DHCWMRService).IGetPatientIDByMrNo(MedicalNo)
			For  Set PAPMI = $O(^PAPERi("Medicare1",$$ALPHAUP^SSUTIL4(MedicalNo),PAPMI)) Q:PAPMI=""  Do
			.Set PAAdm="" For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM",CurrentAdmType,PAAdm)) Q:PAAdm=""  Do
			..d RecordSortTmpData
		}ELSEIF (Name'=""){
			Set PAPMI="", CurrentAdmType="I"
			For  Set PAPMI = $O(^PAPERi("PAPER_PatName",$$ALPHAUP^SSUTIL4(Name),PAPMI)) Q:PAPMI=""  Do
			.Set PAAdm="" For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM",CurrentAdmType,PAAdm)) Q:PAAdm=""  Do
			..d RecordSortTmpData
		}ELSEIF (CardNo'=""){
			Set CFRowID="", PAPMI="", CurrentAdmType="I"
			Set CFRowID = $o(^DHCCARDi("CF",0,"CardNo",$$ALPHAUP^SSUTIL4(CardNo),CFRowID))
			if (CFRowID'=""){
				Set ActiveFlag = $p(^DHCCARD("CF",CFRowID),"^",10)
				if ("N"=ActiveFlag){
					Set PAPMI = $p(^DHCCARD("CF",CFRowID),"^",4)
					Set PAAdm="" For  Set PAAdm=$O(^PAPERdr(PAPMI,"ADM",CurrentAdmType,PAAdm)) Q:PAAdm=""  Do
					.d RecordSortTmpData
				}
			}
		}ELSEIF (Ward'=""){
			if DisDay="" d
			.set RoomDr=0
			.for  Set RoomDr = $o(^PAADMi("CurrWard",Ward,RoomDr)) q:RoomDr=""  Do
			..set PAAdm=0
			..for  set PAAdm=$o(^PAADMi("CurrWard",Ward,RoomDr,PAAdm)) q:PAAdm=""  do
			...d RecordSortTmpData
			e  d
			.;正常不应该走到这个逻辑里，应该走到按出院天数的查询里
			.Set nowDay = +$h
			.For Day = nowDay:-1:(nowDay-DisDay) d
			..For i=1:1:$l(LocIDStr,"^") d 
			...s LocID1=$p(LocIDStr,"^",i)
			...s PAAdm=0
			...f  s PAAdm=$o(^PAADMi("DisDateDep",LocID1,Day,PAAdm)) q:PAAdm=""  d
			....Set CurrDocDr = $P($g(^PAADM(PAAdm)),"^",9)
			....Set DoctorUserDr = $o(^SSU("SSUSR",0,"CTPCP",CurrDocDr,""))
			....Set TempWardDr=$P($g(^PAADM(PAAdm)),"^",70)
			....q:(UserID'=DoctorUserDr)&&(Type=1)
			....q:(TempWardDr'=Ward)&&(Ward'="")
			....DO RecordSortTmpData
		}ELSEIF (DisDay'=""){ //出院天数
			
		   //出院天数
			Set nowDay = +$h
			For Day = nowDay:-1:(nowDay-DisDay){
				//For i=1:1:$l(LocIDStr,"^"){
					//s LocID1=$p(LocIDStr,"^",i)
					//Set PAAdm = $O(^PAADMi("DisDateDep",LocID1,Day,""))
					Set PAAdm =$o(^PAADMi("DischDate",Day,""))
					while (PAAdm'=""){
						Set TempWardDr=$P($g(^PAADM(PAAdm)),"^",70)
						if (Type=1){ //本人
							Set CurrDocDr = $P($g(^PAADM(PAAdm)),"^",19) //出院操作护士
						    if CurrDocDr>0{
							    Set DoctorUserDr = $o(^SSU("SSUSR",0,"CTPCP",CurrDocDr,""))
								if (UserID=DoctorUserDr) DO RecordSortTmpData
						    }
						    
						}elseif (Type=0){ //本病区
							if (TempWardDr=wardID){
								Do RecordSortTmpData
							}
					    }elseif (Type=2){ //本单元
						    Set DocId=$p($g(^SSU("SSUSR",UserID)),"^",14)
						    Set MedUnit="on"
						    Set AllowFlag=##class(web.DHCDocInPatientList).CheckCTLocMedUnit(PAAdm,DocId,LocID,MedUnit)
					        if AllowFlag="1"{
						        DO RecordSortTmpData
						    }
						}
						Set PAAdm = $o(^PAADMi("DischDate",Day,PAAdm)) //$O(^PAADMi("DisDateDep",LocID1,Day,PAAdm))
					}
				//}
				
			}
		}
	}
	
	s orderpg=1
	if (OrderPg="desc") s orderpg="-1"
	//倒序排序输出
	s RowsJsonObj=[]
	s Num="",i=1
	for{
		s Num = $o(^TempNURSEPatList(key,Num),orderpg)
		q:(Num="")
		s order=""
		for {
			s order = $o(^TempNURSEPatList(key,Num,order))
			q:(order = "")
			s PAAdm=$g(^TempNURSEPatList(key,Num,order))
			//if i>15 b //90
			if ((AIdxStart <= i)&(i <= AIdxLast)){
				d OutputRow
			}else{
				//为什么输出OutputOtherRow，显示信息不全。
				d OutputRow
			}
			s i = i + 1
		}
	}
	k ^TempNURSEPatList(key),^TempAdmArr(key)
	Set qHandle=$lb(0,repid,0)	
	Quit $$$OK

RecordSortTmpData
	Set EpisodeID=PAAdm
	Quit:("A"'=$P(^PAADM(PAAdm),"^",20))&&(DisDay="")	;不是A的不显示
	s PatientID=$P(^PAADM(PAAdm),"^",1)
	Q:$d(^TempAdmArr(key,EpisodeID))
	Set PAAdmType=$P($g(^PAADM(PAAdm)),"^",2)
	Q:PAAdmType'="I"
	Set Loc=$P($g(^PAADM(PAAdm)),"^",4)
	Set Hosp=$P($g(^CTLOC(Loc)),"^",22)
	Quit:(LogonHospId'="")&&(Hosp'=LogonHospId)
	Set Doctor=$P($g(^PAADM(PAAdm)),"^",9)
	If Doctor'="" Set PAAdmDocCodeDR=$P($g(^CTPCP(Doctor,1)),"^",2)
	Q:(DocID'="")&&(DocID'=Doctor)
	Set BedId=$P($g(^PAADM(PAAdm)),"^",73)
	Q:(WardGroupLinkBedStr'="")&&(($c(1)_WardGroupLinkBedStr_$c(1))'[($c(1)_BedId_$c(1)))
	Set PAAdmStatus=$P($g(^PAADM(PAAdm)),"^",20)
	if BedId'="" Set PAAdmBed=$P($g(^PAWARD(+BedId,"BED",$P(BedId,"||",2))),"^",1)
	else  Set PAAdmBed=""
	if (PAAdmStatus="D"){
		s PAAdmBed=##class(web.DHCBillCommon).GetPatBedCode(PAAdm) //##class(Nur.Interface.OutSide.Patient).getPatientLastBedCode(PAADMRowID)
		i (PAAdmBed'="") s PAAdmBed=PAAdmBed_##class(websys.Translation).Get("inpatientlist.inpat.csp","床")
	}
	Q:(PAAdmBed'[BedNo)&&(BedNo'="")
	Quit:(HavedSeeOrdPat="on")&&(##class(Nur.NIS.Service.OrderExcute.Execute).IfExitNeedSeeOrder(PAAdm,wardID,LocID,groupID,"DefaultSee")'=1)
	s PAAdmDate=$P($g(^PAADM(PAAdm)),"^",6)
	s DischgDate=$P($g(^PAADM(PAAdm)),"^",17)
	//护士出院时间
	q:(DisDay'="")&&((DischgDate="")||((DischgDate'="")&&(DischgDate<(+$H-DisDay))))
	s FIll =(PAAdmDate=..%SysDate())
	Set SIll = ##class(web.DHCDocMainOrderInterface).IsSeriouslyIll(EpisodeID) ;病重患者
	Set CIll = ##class(web.DHCDocMainOrderInterface).IsCriticallyIll(EpisodeID) ;病危患者
	//Set FCIll = ##class(web.DHCDocMainOrderInterface).IsFirstClsCare(EpisodeID)
	s IllTypeFlag=0
	for k=1:1:$l(IllType,"^"){
		s tmpIllType=$p(IllType,"^",k)
		if (tmpIllType="F")&&(FIll){
			s IllTypeFlag=1
		}
		if (tmpIllType="S")&&(SIll){
			s IllTypeFlag=1
		}
		if (tmpIllType="C")&&(CIll){
			s IllTypeFlag=1
		}
	}
	Set PAAdmDate=$P($g(^PAADM(PAAdm)),"^",6)
	Set FIll = (PAAdmDate=..%SysDate())  ;当天入院 First day ill 
	If (FIll){
		Set ^TempFIllAdmArr(key,PAAdm)=1
	}
	if (CIll){
		Set ^TempCIllAdmArr(key,PAAdm)=1
	}
	if (SIll){
		Set ^TempSIllAdmArr(key,PAAdm)=1
	}
	//病危 病重 新人是查询条件时，对应统计数量不过滤条件
	Q:(IllType'="")&&(IllTypeFlag=0)

	Set ^TempAdmArr(key,EpisodeID)=1
	s AdmOutDate=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.doc.GetDischargeDateTime",EpisodeID)
	s AdmOutDate=$P(AdmOutDate,"^")
	
	
	if (Sort="PAAdmDischgeDate"){
		s ^TempNURSEPatList(key,+AdmOutDate,count) = EpisodeID
	}elseif (Sort="PAAdmBedNO")||(Sort=""){
		;s BedNO = $g(PAAdmBed)
		;i BedNO="" s BedNO="9999"
		s BEDSequence=""
		s PAADMBedDR = ##class(Nur.Interface.OutSide.Patient).GetBedId(EpisodeID)
		if (PAADMBedDR'="") {
			s BEDSequence=$p(^PAWARD(+PAADMBedDR,"BED",$p(PAADMBedDR,"||",2)),"^",24)
			s:BEDSequence'="" BEDSequence = BEDSequence * 10
			// 母亲和孩子要在一起
			s (momAdmId, momBedId, momBEDSequence) = ""
			s momAdmId = $p($g(^PAADM(EpisodeID)), "^", 75)
			if (momAdmId '= "") {
				s momBedId = ##class(Nur.Interface.OutSide.Patient).GetBedId(momAdmId)
				s:momBedId'="" momBEDSequence=$p($g(^PAWARD(+momBedId,"BED",+$p(momBedId,"||",2))), "^", 24)
				if (momBEDSequence'="") {
					// 默认不会有超过9个孩子
					s babyInd = $i(findMom(momAdmId))
					s BEDSequence = momBEDSequence * 10 + babyInd
				}
			}
		}
		if ($g(BEDSequence)="") s BEDSequence="99999"
		s ^TempNURSEPatList(key,+BEDSequence,count) = EpisodeID
	}elseif (Sort'=""){
		///这里不一定能支持自定义排序，但是如果要把获取SortNum放在取值之后，又会影响效率。
		///实际这里这种写法也无法获取到对应的变量，如果要改的话，必须要拆分Query和排序功能。
		s Str="SortNum=$G("_Sort_")"
		s @Str
		s ^TempNURSEPatList(key,+$G(SortNum),count) = EpisodeID
	}
	
	
	s count=count+1
	Q
OutputOtherRow
	Do ResetVariables
	Set EpisodeID=PAAdm
	Set PatientID=$P(^PAADM(PAAdm),"^",1)
	Set PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
	Set mradm=$P(^PAADM(PAAdm),"^",61)
	Set Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	Set PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	d OutputData
	Quit
OutputRow
	Do ResetVariables
	Set PatientID=$P(^PAADM(PAAdm),"^",1)
	Set EpisodeID=PAAdm
	Set mradm=$P(^PAADM(PAAdm),"^",61)
	Set PAPMINO=$P(^PAPER(PatientID,"PAT",1),"^",1)
	Set PAPMIName=$P(^PAPER(PatientID,"ALL"),"^",1)
	Set PAPMIDOB=..%ZD($P(^PAPER(PatientID,"ALL"),"^",6)) 
	Set Sex=$P(^PAPER(PatientID,"ALL"),"^",7)
	Set PAPMISex=$P($g(^CT("SEX",Sex)),"^",2)
	Set DobDate=$P($g(^PAPER(PatientID,"ALL")),"^",6)
	If DobDate'="" Do
	.Set PAPMIDOB=..%ZD($P(^PAPER(PatientID,"ALL"),"^",6)) 
	Else  Set PAPMIDOB="",PAPMIAge=""
	Set PAPMIAge = ##class(web.DHCDocMainOrderInterface).GetPatientAge(PatientID,PAAdm)
	s PatEncryptLevel=##class(web.DHCBL.CARD.UCardPaPatMasInfo).GetPatEncryptLevel(PatientID,.ErrMsg)
	i PatEncryptLevel'="" {
		s EmployeeFunction=$p(PatEncryptLevel,"^",2)
		s SecretLevel=$p(PatEncryptLevel,"^",4)
	}
	s PAAdmDate=$P($g(^PAADM(PAAdm)),"^",6)
	s PAAdmTime=$P($g(^PAADM(PAAdm)),"^",7)
	Set PAAdmDate=..%ZD(PAAdmDate) //$ZD($P($g(^PAADM(PAAdm)),"^",6),3)
	Set PAAdmTime=..%ZT(PAAdmTime,2)
	//Add Date Check
	Set PAAdmNo=$P($g(^PAADM(PAAdm)),"^",81)
	Set Loc=$P($g(^PAADM(PAAdm)),"^",4)
	Set PAAdmDepCodeDR=##class(web.DHCDocInPatientList).RemoveAlias($P($g(^CTLOC(Loc)),"^",2))
	Set Doctor=$P($g(^PAADM(PAAdm)),"^",9)
	If Doctor'="" Set PAAdmDocCodeDR=$P($g(^CTPCP(Doctor,1)),"^",2)
	Else  Set PAAdmDocCodeDR=""
	Set PAAdmType=$P($g(^PAADM(PAAdm)),"^",2)
	Set Hosp=$P($g(^CTLOC(Loc)),"^",22)
	If Hosp'="" Set Hospital=$P($g(^CT("HOSP",Hosp)),"^",2)
	Set WardDr=$P($g(^PAADM(PAAdm)),"^",70)
	if WardDr'="" Set PAAdmWard=##class(web.DHCDocInPatientList).RemoveAlias($P($g(^PAWARD(WardDr)),"^",2))
	else  Set PAAdmWard=""
	;Set BedId=$P($g(^PAADM(PAAdm)),"^",73)
	Set BedId=##class(Nur.Interface.OutSide.Patient).GetBedId(PAAdm)
	Set PAAdmStatus=$P($g(^PAADM(PAAdm)),"^",20)
    ;if HisPat="on" set BedId=""
	if BedId'="" Set PAAdmBedNO=$P($g(^PAWARD(+BedId,"BED",$P(BedId,"||",2))),"^",1)
	else  Set PAAdmBedNO=""
	if (PAAdmStatus="D"){
		s PAAdmBed=##class(web.DHCBillCommon).GetPatBedCode(PAAdm) //##class(Nur.Interface.OutSide.Patient).getPatientLastBedCode(PAADMRowID)
		i (PAAdmBedNO'="") s PAAdmBedNO=PAAdmBedNO_##class(websys.Translation).Get("inpatientlist.inpat.csp","床")
	}
	Set CurrentRoomId=$P($g(^PAADM(PAAdm)),"^",69)
	if CurrentRoomId'="" Set ConsultRoom = $p(^PAROOM(CurrentRoomId),"^",2)
	else  set ConsultRoom=""
	Set FinancialDischargeFlag=$P($g(^PAADM(PAAdm)),"^",45)
	Set MedicalDischargeFlag=$P($g(^PAADM(PAAdm)),"^",63)
	Set PAAdmStatus=$P($g(^PAADM(PAAdm)),"^",20)
	Set FinalDischargeFlag=$S($g(PAAdmStatus)="D":"Y",1:"N")
	Set AdmReason=$P($g(^PAADM(PAAdm,1)),"^",7)
	If AdmReason'="" Set PAAdmReason=$P($g(^PAC("ADMREA",AdmReason)),"^",2),PAAdmReasonCode=$P($g(^PAC("ADMREA",AdmReason)),"^",5)
	Else  Set PAAdmReason="",PAAdmReasonCode=""
	
	
	If mradm'="" Set Diagnosis=##class(web.DHCDocInPatientList).GetMRAdmDiagnosis(mradm,";"),Diagnosis=##class(ext.util.String).EvalJSON(Diagnosis)
	Else  Set Diagnosis=""
	Set Seq=EpisodeID	
	set Deposit=##class(web.UDHCJFBaseCommon).deposit(PAAdm)  //押金
	set Amount=##class(web.UDHCJFCKD).totalamount(PAAdm)      //费用
	set Charge=##class(web.DHCDocOrderCommon).GetCurrentDeposit(PAAdm)   //余额
	set IconProfile="" //$ZCVT(..ShowIcon("MAP",EpisodeID_"^^^"_PatientID,CONTEXT),"O","HTML")	//加图表菜单
	set MedicareNo = ##class(web.DHCDocMainOrderInterface).IGetMrNoByEpisodeID(EpisodeID)
	Set ColorDesc = "",ColorStatus="",ColorStatusCode=""
	if ($d(^TempFIllAdmArr(key,PAAdm))) {
		s ColorStatusCode="F"
		Set ColorDesc = ColorList(ColorStatusCode)
		Set ColorStatus="新入"
	}
	if ($d(^TempCIllAdmArr(key,PAAdm))) {
		s ColorStatusCode="C"
		Set ColorDesc = ColorList(ColorStatusCode)  
		Set ColorStatus="病危"
	}
	if ($d(^TempSIllAdmArr(key,PAAdm))) {
		s ColorStatusCode="S"
		Set ColorDesc = ColorList(ColorStatusCode)   
		Set ColorStatus="病重"
	}
	s PAADMMotherAdmDR=$p(^PAADM(EpisodeID),"^",75)
	s admInfo=##Class(web.DHCIPBillCheckAdmFee).GetAdmBedInfo(EpisodeID) 
	s ResidentDays=$p(admInfo,"^",12)
	i ResidentDays'="" s ResidentDays=ResidentDays_##class(websys.Translation).Get("inpatientlist.inpat.csp","天")
	s InTimes=##class(EMRservice.DAL.GetPaAdmDetail).InTimes(EpisodeID,2) 
	set CurrPathWay=##class(web.DHCCPW.MR.Interface).GetCurrPathWay(EpisodeID)
	if CurrPathWay'="" s PAPMIName="★"_PAPMIName
	if (Doctor'="") s ^DHCDOCNURSEPATLISTDOC(UserID,LocID,Doctor)=PAAdmDocCodeDR
	//出院天数
	s Systemdatetime = $HOROLOG
	s PAAdmDischgeDateSys=$P($g(^PAADM(EpisodeID)),"^",17)
	s Systemdateint = +$h
	s PAAdmDischgeDate="",PAAdmDischgeTime=""
	s OutDays =""
	if PAAdmDischgeDateSys'="" s OutDays = Systemdateint-PAAdmDischgeDateSys
	s DisChangeDateInfo=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("doc.doc.GetDischargeDateTime",EpisodeID)
	//出院日期
	s PAAdmDischgeDateSys=$p(DisChangeDateInfo,"^",1)
	if (PAAdmDischgeDateSys '= ""){
		s PAAdmDischgeDate = ..%ZD(PAAdmDischgeDateSys)
		s PAAdmDischgeDate=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Date",PAAdmDischgeDate)
	}
	//出院时间
	s PAAdmDischgeTimeSys=$p(DisChangeDateInfo,"^",2) //$P($g(^PAADM(PAADMRowID)),"^",18)
	if (PAAdmDischgeTimeSys '= ""){
		s PAAdmDischgeTime = ..%ZT(PAAdmDischgeTimeSys,3)
		s PAAdmDischgeTime=##class(EMRservice.Tools.Tool).GetHISStandardDateTimeFormat("ChangeToFormat","Time",PAAdmDischgeTime)
	}
	//分娩状态
	//s DeliverStatus=##Class(Nur.Interface.OutSide.Patient).getDeliverStatus(EpisodeID)
	s DeliverStatus=##class(web.DHCDocInterfaceMethod).DHCDocHisInterface("dhc.doc.GetDeliverStatus",EpisodeID)
	s DeliverStatus=$Case(DeliverStatus,"W":"分娩完成","C":"取消登记","L":"待产",:"")
	;renyx 增加多语言输出
	s PAPMISex=##class(User.CTSex).GetTranByDesc("CTSEXDesc",PAPMISex,langid)
	s PAAdmDepCodeDR=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",PAAdmDepCodeDR,langid)
	s PAAdmDocCodeDR= ##class(User.CTCareProv).GetTranByDesc("CTPCPDesc",PAAdmDocCodeDR,langid)
	s Hospital=##class(User.CTHospital).GetTranByDesc("HOSPDesc",Hospital,langid)
	s ConsultRoom=##class(User.PACRoom).GetTranByDesc("ROOMDesc",ConsultRoom,langid)
	s PAAdmWard=##class(User.PACWard).GetTranByDesc("WARDDesc",PAAdmWard,langid)
	s PAAdmReason=##class(User.PACAdmReason).GetTranByDesc("READesc",PAAdmReason,langid)
	s ColorStatus=##class(websys.Translation).Get("inpatientlist.inpat.csp",ColorStatus) ;
	s DeliverStatus=##class(websys.Translation).Get("inpatientlist.inpat.csp",DeliverStatus)
	d OutputData
	Quit
OutputData
	s Data=$LB(PatientID,EpisodeID,mradm,PAPMINO,MedicareNo,PAPMIName,PAPMIDOB,PAPMISex,PAPMIAge,PAAdmDate,PAAdmTime,PAAdmDepCodeDR,PAAdmDocCodeDR,Hospital,PAAdmType,PAAdmWard,PAAdmReason,PAAdmBedNO,ColorDesc,ColorStatus,ColorStatusCode,InTimes,ResidentDays,IconProfile,PAAdmNo,ConsultRoom,Deposit,Amount,Charge,EmployeeFunction,SecretLevel,OutDays,Diagnosis,PAAdmDischgeDate,PAAdmDischgeTime,DeliverStatus)
	s ^CacheTemp(repid,ind) = Data
	s ind=ind+1
	Quit
WardPatList
	Set RoomDr=""
	For  set RoomDr=$O(^PAADMi("CurrWard",WardItem,RoomDr)) Quit:RoomDr=""  Do
	.Set PAAdm=""
	.For  Set PAAdm=$O(^PAADMi("CurrWard",WardItem,RoomDr,PAAdm)) Quit:PAAdm=""  Do
	..Do RecordSortTmpData
	Set AdmItm=0
	For  Set AdmItm=$O(^PAWARDA(WardItem,"WADM",AdmItm)) Quit:AdmItm=""  Do
	.Set PAAdm=$P(^PAWARDA(WardItem,"WADM",AdmItm),"^",1)
	.Do RecordSortTmpData
	Quit
findAdmTransWard(PAAdm,WardID)
	s find=0
	s child=0 f {
		s child=$O(^PAADM(PAAdm,"TRANS",child))
		Q:child=""
		s TransWardID=$P(^PAADM(PAAdm,"TRANS",child),"^",9)
		if TransWardID=WardID {
			s find=1
			Quit
		}
	}
	Q find
ResetVariables
	Set (PatientID,EpisodeID,mradm,PAPMINO,MedicareNo,PAPMIName,PAPMIDOB,PAPMISex,PAPMIAge,PAAdmDate,PAAdmTime,PAAdmDepCodeDR,PAAdmDocCodeDR,Hospital,PAAdmType,PAAdmWard,PAAdmReason,PAAdmBedNO,ColorDesc,ColorStatus,ColorStatusCode,InTimes,ResidentDays,IconProfile,PAAdmNo,ConsultRoom,Deposit,Amount,Charge,EmployeeFunction,SecretLevel,OutDays,Diagnosis,PAAdmDischgeDate,PAAdmDischgeTime,DeliverStatus)=""
	Quit
}

/// Creator:      zhuxiaohang
/// CreateDate:   20200527
/// Description:  获得病人的首次分床时间
/// Table:        
/// Input:        episodeID
/// Return:       
/// Other:        w ##class(Nur.CommonInterface.Patient).getFirstToBed(612102)
ClassMethod GetFirstToBed(episodeID)
{
	s firstDate = ""
	s firstTime = ""
    s firstToBed=0
	s sub="" 
	f  {
		s sub=$O(^Nur.Data.TransRecordI("TransDataState"," "_episodeID," N",sub)) 
		q:sub=""
		q:firstToBed=1
		s transType=$LG(^Nur.Data.TransRecordD(sub),3)
		i (transType="B")&&(firstToBed=0){
    		s firstToBed=1
    		s firstDate = ##class(websys.Conversions).DateLogicalToHtml($LG(^Nur.Data.TransRecordD(sub),12))
    		s firstTime = ##class(websys.Conversions).TimeLogicalToHtml($LG(^Nur.Data.TransRecordD(sub),13))
		}
	}
	q firstDate_" "_firstTime
}

/// Creator:      zhouc
/// CreateDate:   20221012
/// Description:  获得科室质控问题数量
/// Table:        
/// Input:        LocID
/// Return:       
/// Other:        w ##class(web.DHCDocInPatientListNew).GetEMRQlyCount()
ClassMethod GetEMRQlyCount(LocID As %String)
{
	if (LocID=""){
		s SessionStr=..%SessionStr()
		s LocID=$p(SessionStr,"^",3)
	}
	q:LocID="" "0"
	q:'..%IsValidMethod("EPRservice.Quality.Ajax.AutoResultSummary","GetLocEntryNumByLocID") "-1"
	s EMRQlyCount=+##class(EPRservice.Quality.Ajax.AutoResultSummary).GetLocEntryNumByLocID(LocID)
	q EMRQlyCount
}

ClassMethod CPWSStatusStr()
{
	s CPWSStatusStr="[{""val"":""I"",""text"":"""_##class(websys.Translation).Get("inpatientlist.inpat.csp","入径")_"""}"
	s CPWSStatusStr=CPWSStatusStr_",{""val"":""O"",""text"":"""_##class(websys.Translation).Get("inpatientlist.inpat.csp","出径")_"""}"
	s CPWSStatusStr=CPWSStatusStr_",{""val"":""C"",""text"":"""_##class(websys.Translation).Get("inpatientlist.inpat.csp","完成")_"""}"
	s CPWSStatusStr=CPWSStatusStr_",{""val"":""T"",""text"":"""_##class(websys.Translation).Get("inpatientlist.inpat.csp","未入径")_"""}"
	s CPWSStatusStr=CPWSStatusStr_",{""val"":""U"",""text"":"""_##class(websys.Translation).Get("inpatientlist.inpat.csp","作废")_"""}]"
	q CPWSStatusStr
}

}
