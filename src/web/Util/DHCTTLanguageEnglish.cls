Class web.Util.DHCTTLanguageEnglish Extends web.Util.DHCTTLanguage [ ProcedureBlock ]
{

ClassMethod initFindTableStructure(ByRef t)
{
	
		s t("find") = "Find"
		s t("find table structure") = "Find Table Structure"
		s t("table index structure")="Table Index Structure"
		s t("index info")="Index Info"
		s t("pn") = "Package Name"
		s t("tn") = "Table Name"
		s t("ct") = "Children Table"
		s t("pt") = "Parent Table"
		s t("history table")="History Table"
		s t("Index Type")="Index Type"
		s t("Map Name")="Map Name"
		s t("Index Detail")="Index Detail"
		s t("Property Name")="Property Name"
		s t("Node")="Node"
		s t("Delimiter")="Delimiter"
		s t("Piece")="Piece"
		s t("Type")="Type"
		s t("Field")="Field"
		s t("PList")="PList"
		s t("Property Name Filter Tip")="input property name, enter."
		s t("Property Node Filter Tip")="input node, enter."
		s t("Piece Filter Tip")="input piece, enter"
		s t("Property Type Filter Tip")="input type ,enter"
		s t("Field Filter Tip")="input field, enter"
		s t("PList Filter Tip")="input plist, enter"
}

ClassMethod initConfigPage(ByRef t)
{
	s t("history list")="History List"
	s t("Chinese")="Chinese"
	s t("English")="English"
	s t("CacheTT Config Title")="Cache Config"
	s t("Language Select")="Language Select"
	s t("AuthorizeDelTables")="Authorize Delete Tables"
	s t("Submit")="Submit"
}

ClassMethod initFindGlobal(ByRef t)
{
	s t("pn") = "package name"
	s t("gn") = "global name"
	s t("findGlobal")= "Find Global"
	s t("find") = "Find"
	s t("ClassAndGlobal")="Class And Global Info"
	s t("Find Global Title")="Find Global"
	s t("ClassAllName")="Class All Name"
	s t("TableName")="Table Name"
	s t("SubScriptString")="SubScript" 
	s t("IndexType")="Index Type"
	s t("ClassAllName Tip")="input class name, enter."
	s t("TableName Tip")="input table name, enter."
	s t("SubScriptString Tip")="input global subscript ,enter."
	s t("IndexType Tip")="input index type, enter."
}

ClassMethod initXMLExport(ByRef t)
{
}

ClassMethod initXMLImport(ByRef t)
{
}

ClassMethod initXMLPrintEdit(ByRef t)
{
}

}
