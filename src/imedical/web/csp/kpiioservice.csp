<csp:content charset="gb2312">
<csp:content charset="UTF-8">
	<script language=Cache method=OnPreHTTP arguments="" returntype=%Boolean>
		s %response.Timeout=1800
		s action=$g(%request.Data("action",1))
		i action="getFileContent" {
			d %response.SetHeader("Pragma","No-cache")
			d %response.SetHeader("Cache-Control","No-cache")
			d %response.SetHeader("Expires",0)
			s %response.ContentType="application/x-download"
			d %response.SetHeader("Content-Disposition","attachment")
		}
		q 1
   </script>
	<script language="cache" runat="server">
	s action=$g(%request.Data("action",1))
	if "outputKpi"=action {
		s kpiIds=$g(%request.Data("kpiIds",1))
		s path=class(web.DHCWL.KPI.KpiIOService).OutputKpis(kpiIds,.outStream)
		d %response.Abort()
		;w "{success:true,info:'ok',path:'"_path_"'}"
		s readSize=1024
		f {
			s str=outStream.Read(.readSize)
			q:(str="")||(readSize=-1)
			w str
		}
		d %response.Flush()
	}elseif "getFileContent"=action {
		d %response.Flush()
		s kpiIds=$g(%request.Data("kpiIds",1))
		//d ##class(DHCWL.MKPIIO.OutputToXML).OutputOfStream(kpiIds,.outStream)
		s kpiSysList=##class(DHCWL.MKPIIO.DefaultOutService).GetKpiSystemList(kpiIds)
		d ##class(DHCWL.MKPIIO.DefaultOutService).OutputMKPIToStream(kpiSysList,.outStream)
		Set sc =##class(%XML.TextReader).ParseStream(outStream,.reader)
		if (reader="") {
			w "导出错误!"
			q
		}
		d ##class(DHCWL.MKPIIO.DefaultOutService).TraverXmlToStr(reader)
	}elseif "inputKpiFile"=action {
		s isUpdate=+$g(%request.Data("isUpdate",1))
		s fileName=$g(%request.Data("fileName",1))
		s checkedInput=+$g(%request.Data("checkedInput",1))
		;s temp=##class(%File).TempFilename()
		s wrong=0,wrongMes=""
		;s temp=##class(%File).ParentDirectoryName(temp)
		s deli=##class(DHCWL.util.DirectoryFile).SetPathOS()
		s deli=$p(deli,"||",2)
		s tmp=##class(DHCWL.util.DirectoryFile).GetTempDir()
		i $e(tmp,$l(tmp))'=deli s tmp=tmp_deli
		s tempFile=temp_fileName
		if checkedInput=1 {
			;d:wrong=0 ##class(DHCWL.MKPIIO.InputFromXML).InputFromXMLChecked(tempFile)
			d:wrong=0 ##class(DHCWL.MKPIIO.DefaultInService).JsonKpi(tempFile,.arr,1)
			q
		}
		;w "tempFile="_tempFile
		s realInputKpiList=$g(%request.Data("realInputKpiList",1))
		if (realInputKpiList=""){
			w "{success:true,info:'ok',tips:'导入0个指标'}"
			i ##class(%File).Exists(tempFile) d ##class(%File).Delete(tempFile)
			q
		}
		;w "tempFile="_tempFile
		k ^TEMPDHCWL("REALINPUT",$j)
		for i=$l(realInputKpiList,","):-1:1 {
			s kpiCode=$p(realInputKpiList,",",i)
			continue:kpiCode=""
			s ^TEMPDHCWL("REALINPUT",$j,kpiCode)=kpiCode
		}
		if wrong=0{
			//s sc=##class(DHCWL.MKPIIO.InputFromXML).InputFromXML(tempFile,0,0,1)
			s sc=##class(DHCWL.MKPIIO.DefaultInService).InputXML(tempFile)
			k ^TEMPDHCWL("REALINPUT",$j)
			i +sc=1 w "{success:true,info:'ok',tips:'指标导入成功！是否更新？"_(isUpdate=0)_" '}" ;_tempFile_"'}"
			e  w "{success:true,info:'wrong',tips:'"_tempFile_"  指标导入失败，请检查XML文件是否是格式良好的，并且要导入数据至少要在第三层节点上。"_sc_"'}"
			d ##class(%File).Delete(tempFile)
			q
		}
		i ##class(%File).Exists(tempFile) d ##class(%File).Delete(tempFile)
		w "{success:true,info:'wrong',tips:'"_wrongMes_"'}" ;_tempFile_"'"
		q
	}elseif "UPFILE"=action {
		s theStep=+$g(%request.Data("theStep",1))
		s node="NODE"_$g(^DHCWL.MKPI.TEMPCONT("NODEINDEX"))
		;s tmp=##class(%File).TempFilename()
		s wrong=0,wrongMes=""
		s deli=##class(DHCWL.util.DirectoryFile).SetPathOS()
		s deli=$p(deli,"||",2)
		;s tmp=##class(%File).ParentDirectoryName(tmp)
		s tmp=##class(DHCWL.util.DirectoryFile).GetTempDir()
		i $e(tmp,$l(tmp))'=deli s tmp=tmp_deli
		s index=$g(^DHCWL.MKPI.TEMPCONT("NODEINDEX")) 
		s fileName="tempDHCWLXML"_index_".xml"
		s tempFile=tmp_fileName
		s index=+index+1
		s ^DHCWL.MKPI.TEMPCONT("NODEINDEX")=index
		i ##class(%File).Exists(tempFile) d ##class(%File).Delete(tempFile)
		s file=##class(%File).%New(tempFile)
		d file.Open("WN")
		for i=1:1:theStep {
			s content=$g(%request.Data("Node"_i,1))
			s ^DHCWL.MKPI.TEMPCONT("Node"_i)=content
			s sc=file.Write(content)
			if sc'=1 {
				s wrongMes=sc
				s wrong=1
				q
			}
			;w content
			;d:$g(content)'="" ##class(web.DHCWL.KPI.KpiIOService).SaveParaOfContent(node,content,i,i=1)
		}
		d:file'="" file.Close()
		s ^DHCWL.MKPI.TEMPCONT("TEMPINPUTFILE",+$h,index-1)=tempFile
		if wrong=0{
			;w "{success:true,info:'ok',tips:'"_fileName_"'}"
			
			Set sc =##class(%XML.TextReader).ParseFile(tempFile,.reader)
			If $$$ISERR(sc) {
				s ret=$System.Status.GetErrorText(sc)
				w "{success:true,info:'wrong',tips:'解析文件时发生错误，请确认导入的文件是否正确！'}"
				q	
			}
			
			w "{root:"
			d ##class(DHCWL.MKPIIO.DefaultInService).JsonKpi(tempFile)
			w ",tips:"""_fileName_""",tempFile:"""_tempFile_"""}"
		}else {
			w "{success:true,info:'wrong',tips:'文件上传失败！无法进行下面的操作'}"
		}
		//若历史上有没有删除掉的临时文件，则全部删除了。
		s day=+$h f  s day=$o(^DHCWL.MKPI.TEMPCONT("TEMPINPUTFILE",day),-1) q:day=""  d
		.s indI="" f  s indI=$o(^DHCWL.MKPI.TEMPCONT("TEMPINPUTFILE",day,indI)) q:indI=""  d
		..s tf=$g(^DHCWL.MKPI.TEMPCONT("TEMPINPUTFILE",day,indI))
		..i tf'="" d
		...i ##class(%File).Exists(tf) d ##class(%File).Delete(tf)
		.k ^DHCWL.MKPI.TEMPCONT("TEMPINPUTFILE",day)
	}elseif "UPLOADXML"=action {
		s stream=%request.Content
	}elseif "checkKpiExl"=action {
		s codes=$g(%request.Data("Codes",1))
		s len=$l(codes,",")
		s num=0
		w "{success:true,root:["
		
		f i=1:1:len {
			s code=$p(codes,",",i)
			continue:$g(code)=""
			s mkpiId=##class(DHCWL.MKPIIO.XMLIOConfige).GetIdByCode(code,"DHCWL.MKPI.MKPI")
			if (mkpiId'=""){
				i num>0 w ","
				w "{className:'DHCWL.MKPI.MKPI',propertyCode:'"_code_"',codeValue:'"_code_"',id:'"_mkpiId_"'}"
				s num=num+1
			}
		}
		w "],totalNum:"_num_"}"
		q			
			
	}elseif "inputKpiExl"=action {
		s impDataObj=$g(%request.Data("impDataObj",1))
		s ^TEMPDHCWL("TEST-8-13")=impDataObj
		B
		//w !,impDataObj
		TSTART
		s ret=##class(DHCWL.CSPService.kpiImpFromExl).importKpiExlData(impDataObj)
		if ret'="success" {
			trollback
			w "{success:true,tip:'"_ret_"'}"
		}else{
			TCOMMIT
			w "{success:true,tip:'ok'}"
		}
		q	
			
	}
</script>

