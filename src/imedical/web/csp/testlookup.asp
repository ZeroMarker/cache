<!--// Copyright (c) 2000 TRAK Systems Pty. ALL RIGHTS RESERVED. -->
<SCRIPT SRC="../scripts/websys.js"> </SCRIPT><SCRIPT SRC="/csp/broker/cspbroker.js"> </SCRIPT><TITLE>Trak Systems EPR</TITLE><LINK REL="stylesheet" TYPE="text/css" HREF="../scripts/websys.css"></LINK><HTML><body bgColor="beige"><BODY bottomMargin=0 leftMargin=0 rightMargin=0 topMargin=0 CLASS="clsLookUp"><!--<FORM id=form1 name=form1><DIV>--><TABLE style="LEFT: 0px; TOP: 0px"><TR><TD colSpan=2 valign=top><TABLE id=tblLookup Name=tblLookup CELLSPACING=1><%	Const NUMADDRESSLINES = 6	Const MAX_TABLE_LINES = 19	Const ADDRESS1_PARAM = 0	Const SUBURB_PARAM = 1	Const STATE_PARAM= 2	Const POSTCODE_PARAM= 3	Const FIELD_PARAM= 4	Const OPEN_PARAM= 5	Const RET_ADD_LINE_1 = 0	'Address Line 1	Const RET_ADD_LINE_2 = 1	'Address Line 2 - To be hidden in lookup table	Const RET_ADD_LINE_3 = 2	'Address Line 3 - To be hidden in lookup table	Const RET_SUBURB = 3		'Town	Const RET_STATE = 4			'County	Const RET_POSTCODE = 5		'Postcode	Dim qasAddress	Dim qasStatus	Dim iCode	Dim iCount	Dim lResultCount	Dim lCount	Dim iLine	' Connection to the QAProWeb object	Dim qasProWeb	'Entry variables to be passed in	Dim tkAddress1	Dim tkSuburb	Dim tkState	Dim tkPostcode	Dim tkField	Dim tkOpenCount		' SA: tkOpenCount is an indicator for whether 						' the fetch is a new one, or an existing one 						' in which the user has asked for more records.		Dim bDone		Dim PString(20)	Call GetInterfaceData()	Sub GetInterfaceData		'Get the input interface data		Dim sParams		Dim sParamArray()		Dim sWarning				sParams=Request("ParamStr")				If sParams <> "" Then			tkAddress1=Mpiece(sParams, "^", 1)			tkSuburb=Mpiece(sParams, "^", 2)			tkState=Mpiece(sParams, "^", 3)			tkPostcode=Mpiece(sParams, "^", 4)			tkField=Mpiece(sParams, "^", 5)			tkOpenCount=Mpiece(sParams, "^", 6)			If tkAddress1 = "" And _				tkSuburb = "" And _				tkState = "" And _				tkPostcode = "" Then					sWarning = CreateErrorString("!WARN!", "", "Too many matches. Please refine your search", "")					Call CreateTable(sWarning, bDone, sParams)					Else				Call RetrieveAddressFromQAS()			End If									'sParamArray = Split(sParams, "^")			'tkAddress1=sParamArray(ADDRESS1_PARAM)			'tkSuburb=sParamArray(SUBURB_PARAM)			'tkState=sParamArray(STATE_PARAM)			'tkPostcode=sParamArray(POSTCODE_PARAM)			'tkField=sParamArray(FIELD_PARAM)			'tkOpenCount=sParamArray(OPEN_PARAM)				Else			sWarning = CreateErrorString("!ERR!", "Trak Error", _				"No valid parameters have been passed to this search. Please advise technical support of this error.", _				 "sParams is blank")			Call CreateTable(sWarning, bDone, sParams)							End If						'tkAddress1=""		'tkSuburb=""		'tkState=""		'tkPostcode=""		'tkField=""		'tkOpenCount=0		'		'Response.Write("tkAddress1=" & tkAddress1 & "<BR>")		'Response.Write("tkSuburb=" & tkSuburb & "<BR>")		'Response.Write("tkState=" & tkState & "<BR>")		'Response.Write("tkPostcode=" & tkPostcode & "<BR>")		'Response.Write("tkField=" & tkField & "<BR>")		'Response.Write("tkOpenCount=" & tkOpenCount & "<BR>")	End Sub	Sub RetrieveAddressFromQAS				Dim sTableString		Dim sRetSingleAddress		Dim sRetAddress1		Dim sRetAddress2		Dim sRetAddress3		Dim sRetSuburb		Dim sRetState		Dim sRetPostcode				bDone = True		iCode = 0		sTableString = ""				Set qasProWeb = Server.CreateObject("QAProWeb.QAProWeb.1")		'Response.Write("Object created" & "<BR>")		qasStatus = ""		qasProWeb.Close		'Response.Write("Close called" & "<BR>")		iCode = qasProWeb.Open("QAProWeb", "")		'Response.Write("Open called" & "<BR>")					If iCode < 0 Then						'Response.Write("OPEN FAILED" & "<BR>")			'Response.Write("iCode=" & iCode & "<BR>")			'Response.Write("qasStatus=" & qasStatus & "<BR>")						qasStatus = qasProWeb.ErrorMessage(iCode)			'Response.Write("qasStatus=" & qasStatus & "<BR>")							sTableString = CreateErrorString("!ERR!", CStr(iCode), qasStatus, "OPEN")			'Response.Write("sTableString=" & sTableString & "<BR>")						End If								If iCode = 0 Then						' SA: The ProWeb search is extremely restricting in the way it errors.			' Wildcard searches may be used, but the following must be added to the 			' configuration file (in our case C:\WinNT\system32\QAPROWEB.ini			' Under [QAProWeb] heading			' AllowWildcardSearches=Yes					   	'iCode = qasProWeb.Search("", "", "", "tw119?j")		   	iCode = qasProWeb.Search(tkAddress1, tkSuburb, tkState, tkPostcode)			'If qasProWeb.ResultsCount < 0 Then iCode = qasProWeb.ResultsCount			'Response.Write("qasProWeb.ResultsCount=" & qasProWeb.ResultsCount & "<BR>")								' SA: Error -9811 is a warning that the postcode has been recoded.			' ie. changed by the Postal Service.			' This error is not fatal, but usually requires a warning message,			' which I am not giving here.		    If iCode = 0 Or iCode = -9811 Then				    	lResultCount = qasProWeb.ResultsCount - tkOpenCount				'Response.Write("qasProWeb.ResultsCount=" & qasProWeb.ResultsCount & "<BR>")						If lResultCount > (MAX_TABLE_LINES + tkOpenCount) Then 					lResultCount = MAX_TABLE_LINES + tkOpenCount					bDone = False				End If		        If lResultCount > 0 Then				            For lCount = tkOpenCount To lResultCount - 1								qasAddress = qasProWeb.Address(lCount)								If UBound(qasAddress) > 0 Then														sRetAddress1=qasAddress(RET_ADD_LINE_1)							sRetAddress2=qasAddress(RET_ADD_LINE_2)							sRetAddress3=qasAddress(RET_ADD_LINE_3)							sRetSuburb=qasAddress(RET_SUBURB)							sRetState=qasAddress(RET_STATE)							sRetPostcode=qasAddress(RET_POSTCODE)														' SA: Note there is NO delimiter between Address Lines 2 & 3							' These QAS fields will be concatenated, and saved as a single 							' address field on Medtrak (AddressLine2)							sRetSingleAddress = sRetAddress1 + "^" + sRetAddress2														If Trim(sRetAddress3) <> "" Then								sRetSingleAddress = sRetSingleAddress + " " + sRetAddress3							End If														sRetSingleAddress = sRetSingleAddress + "^" + sRetSuburb + "^" _							 + sRetState + "^" + sRetPostcode + "^"			  							  				sTableString = sTableString + sRetSingleAddress + "|"			  											  				End If				            Next				        End If		        			Elseif iCode = -9980 Then								'Error -9980 indicates Too many matches				sTableString = CreateErrorString("!WARN!", "", "Too many matches. Please refine your search", "")							Elseif iCode = -9978 Then								'Error -9978 indicates No match				'sTableString = ""				sTableString = CreateErrorString("!WARN!", "", "No match found", "")				'Response.Write("No Match" & "<BR>")						Elseif iCode < 0 Then							'Response.Write("SEARCH FAILED" & "<BR>")		    	'Response.Write("iCode=" & iCode & "<BR>")				'Response.Write("qasStatus=" & qasStatus & "<BR>")		        qasStatus = qasProWeb.ErrorMessage(iCode)				sTableString = CreateErrorString("!ERR!", CStr(iCode), qasStatus, "SEARCH")				'Response.Write("sTableString=" & sTableString & "<BR>")		    			    End If					End If		qasProWeb.Close		Set qasProWeb = Nothing		Call CreateTable(sTableString, bDone, sParams)		'Response.Write("qasStatus=" & qasStatus & "<BR>")		'Response.Write("sTableString=" & sTableString & "<BR>")		'Response.Write("END" & "<BR>")		'Response.Write("</table>")		Call CreateJavaStr	End Sub	Function CreateErrorString(sErrorType, sCode, sDesc, sEvent)				Dim sErrorString		Dim sErrParamStr		If sErrorType = "!ERR!" Then						sErrParamStr = "tkAddress1=" + tkAddress1 + _				"tkSuburb=" + tkSuburb + _				"tkState=" + tkState + _				"tkPostcode=" + tkPostcode + _				"tkField=" + tkField + _				"tkOpenCount=" + CStr(tkOpenCount)						sErrorString = sErrorType + "^" + sCode + "^" + sDesc _				+ "^" + sEvent + "^" + sErrParamStr			'Response.Write("ERR sErrorType=" & sErrorType & "<BR>")			'Response.Write("ERR sCode=" & sCode & "<BR>")			'Response.Write("ERR sDesc=" & sDesc & "<BR>")			'Response.Write("ERR sEvent=" & sEvent & "<BR>")			'Response.Write("ERR sErrParamStr=" & sErrParamStr & "<BR>")			'Response.Write("ERR sErrorString=" & sErrorString & "<BR>")			'Response.Write("ERR Len(sErrorString)=" & Len(sErrorString) & "<BR>")					Elseif sErrorType = "!WARN!" Then						sErrorString = sErrorType + "^" + sDesc 		End If		CreateErrorString = sErrorString + "^|"			End Function	Public Function mPiece(s1, sep, n)	   'SA: Taken unedited from tkCommon.clstkFormat	   	   '+++ VB/Rig Skip +++	    Dim pto 	    Dim pfrom 	    Dim k 	    Dim S 	    pto = 1 - Len(sep)	    S = s1 & sep	    mPiece = ""	    For k = 1 To n	        pfrom = pto + Len(sep)	        pto = InStr(pfrom, S, sep)	        If pto = 0 Then	            Exit For	        End If	    Next	    If pto = 0 Then	        Exit Function	    End If	    mPiece = Mid(S, pfrom, pto - pfrom)	End Function	Function CreateTable(sTableString, bDone, ParamStr)		dim aSub,aState,aZip 'storage array fields		dim ictr 'array index dim FirstPos,NextPos,i dim tableData,sTmp		dim aField(200), aItem(10)		dim FirstPos, NextPos		dim temp,sTmp,Res		dim Fpos, Npos, i, j		Dim sErr, sErrNo, sErrDesc, sErrEvent		dim iOpenCnt		Dim sStripParamStr, iNextCnt, iPrevCnt, sNextParam, sPrevParam		'		If Trim(Done)<>"True" then Exit Sub		'sField=sTableString		iOpenCnt = 19
		sField="107 Bridgeman Road^^London^^N1 1BD^|112 Bridgeman Road^^London^^N1 1BH^|112a Bridgeman Road^^London^^N1 1BH^|114 Bridgeman" & _
			"Road^^London^^N1 1BH^|116 Bridgeman Road^^London^^N1 1BN^|116b Bridgeman Road^^London^^N1 1BN^|118 Bridgeman Road^^London^^N1 1BN^|Basement" & _
			"Flat^118 Bridgeman Road^London^^N1 1BN^|Charles Grant Architects^107 Bridgeman Road^London^^N1 1BD^|Clive Alexander & Partners^107 Bridgeman" & _
			"Road^London^^N1 1BD^|London Borough of Islington^West Library Bridgeman	Road^London^^N1 1BD^|1 Bridgman Road^^London^^W4 5BA^|1 Bridgeman" & _
			"Road^Blacon^Chester^Cheshire^CH1 5LZ^|Alaska Salmon Information	Service^1 Bridgeman Road^Teddington^Middlesex^TW11 9AJ^|Exoff Ltd^1" & _
			"Bridgeman Road^Teddington^Middlesex^TW11 9AJ^|Harrison Sadler Ltd^1 Bridgeman Road^Teddington^Middlesex^TW11 9AJ^|Languages for Business" & _
			"Communication^1 Bridgeman Road^Teddington^Middlesex^TW11 9AJ^|The Bullfrog Consultancy^1 Bridgeman Road^Teddington^Middlesex^TW11 9AJ^|The" & _
			"Wharf Brasserie Bar & Restaurant^1 Bridgeman Road^Teddington^Middlesex^TW11 9AJ^|"
			'Get the open count passed		Fpos = instrrev(ParamStr,"^")		if Fpos <>  0 then			sStripParamStr = Left(ParamStr,len(ParamStr) - Fpos)			iOpenCnt=mPiece(ParamStr, "^", 6)		else			iOpenCnt = 0		end if		  				'Response.Write (sField & "Open count=" & iOpenCnt & "<BR>")				'Extract Records from the passed string		if trim(sField) <> "" then			ictr=0			NextPos=0			FirstPos=0			FirstPos = instr(sField,"|") 			if FirstPos = 0 then exit function			aField(ictr)=mPiece(sField, "|", 1)			'Msgbox aField(ictr)			do while (NextPos<Len(sField))			    NextPos=Instr(FirstPos+1,sField,"|")			    if NextPos=0 then exit do			    ictr=ictr+1			    aField(ictr)=Mid(sField,FirstPos+1,(NextPos-FirstPos)-1)				FirstPos=NextPos			loop 			'Extract Fields from the records			for i = 0 to ictr				NextPos=0				FirstPos=0				for j = 0 to 4
					set aItem(j)=""
					set aItem(j)= "12345"   'mPiece(aField(i), "^", j+1)					'Response.Write (aItem(j) & "<br>")
				next j
				if aItem(0)="!ERR!" then 					Response.Write("<B>An error occured during the QAS search.<BR>Error Number: " & aItem(1) & "<BR>Error Description: " & aItem(2) & "<BR>Error Event: " & aItem(3) & "</B>")					exit function				elseif aItem(0)="!WARN!" then 										Response.Write( "<B>" &  aItem(1) & "</B>")					exit function				end if				PString(i)= aItem(0) & "^" & aItem(2) & "^" & aItem(3) & "^" & aItem(4)				temp= "<TR onclick=RowSelect(" & i & "); onmousedown=TR_OnMouseDown(" & i & ");><TD NOWRAP>" & aItem(4) & "</TD><TD NOWRAP>" & aItem(2) & "</TD><TD NOWRAP>" & aItem(3) & "</TD></TR>"				Response.write (temp) 			next 			if iOpenCnt = 19 then				iNextCnt = iOpenCnt + 19				sNextParam = sStripParamStr & "^" & iNextCnt			elseif iOpenCnt > 19 then		    	iPrevCnt = iOpenCnt - 19  				sPrevParam = sStripParamStr & "^" & iPrevCnt				iNextCnt = iOpenCnt + 19				sNextParam = sStripParamStr & "^" & iNextCnt			end if			Response.Write("<TR>&nbsp;&nbsp;</TR><TD onclick=PrevPage();><img src=..\images\websys\pageprev.gif></TD>")			Response.Write("<TD onclick=NextPage();><img src=..\images\websys\pagenext.gif></TD></TR>")
		else			Res=Msgbox ("Passed item cannot be blank",,"Error")		end if			End Function	Sub CreateJavaStr		'response.Write("Hello")			response.Write("</table>")		response.Write("<SCRIPT Language=""JavaScript"">")		response.Write("var JString=new Array();")		for j=0 to UBound(PString)			response.Write("JString[" & j & "]='" & PString(j) & "';")			next		Response.Write ("var Nrows=new Array();")
		response.Write("</SCRIPT>")		'response.Write("</table>")	End Sub%><SCRIPT Language="JavaScript">//Inherited from normal Lookupsthis.focus();var selectedrow=-1;var maxrows=18;  //<%= ictr %>;
//alert(maxrows);var isSelected=0; //function Getmaxrows()//{
//	maxrows=<%= ictr %>;
//	alert(maxrows);//}
function TR_OnMouseDown(row) {	if (selectedrow>-1) {		RowUnHighlight(selectedrow);	}	selectedrow=row;	RowHighlight(selectedrow);}function OnKeyDownHandler(e) {	if (maxrows>-1) {		var eKey=websys_getKey(e);		switch (eKey) {		case 9: //Don't allow to tab off lookup table - therefore select			RowSelect(selectedrow);			break;		case 13: //Enter select			RowSelect(selectedrow);			break;		case 33: //Page Up			PrevPage();			break;		case 34: //Page Down			NextPage();			break;		case 35: //End			RowUnHighlight(selectedrow);			selectedrow=maxrows;			RowHighlight(selectedrow);			break;		case 36: //Home			RowUnHighlight(selectedrow);			selectedrow=0;			RowHighlight(selectedrow);			break;		case 38: //Cursor up			if (selectedrow>0) {				RowUnHighlight(selectedrow);				selectedrow-=1;				RowHighlight(selectedrow);			}			break;		case 40: //Cursor down			if (selectedrow<maxrows) {				RowUnHighlight(selectedrow);				selectedrow+=1;				RowHighlight(selectedrow);			}			break;		} //switch	} }function RowHighlight(row) {	var eTR=document.getElementById('tblLookup').rows[row];	eTR.className='clsLookUpSelected';	selectedrow=row;}function RowUnHighlight(row) {	var eTR=document.getElementById('tblLookup').rows[row];	eTR.className='';}function docHandler() {	websys_reSizeT();}//window.onload=CreateandShowTable("1^2^3^4^5^|","1")  //docHandler;//Window.onload=docHandler;RowHighlight(0);
Getmaxrows();//document.onkeydown=OnKeyDownHandler; function RowSelect(row) { 	//alert(JString[row]);	var par_win=window.opener; 	par_win.ZipLookupSelect(JString[row]); 	isSelected=1; 	window.close(); } function PrevPage() { 	isSelected=1;
	window.location.href="http://hippo2/developer/w642dev/csp/testlookup.asp"; } function NextPage() { 	isSelected=1; 
	window.location.href="http://hippo2/developer/w642dev/csp/testlookup.asp"; } function RegainFocus() { 	if (!isSelected) { 		try { 		var par_win=window.opener; 		par_win.websys_setfocus('CTCITDesc'); 		} catch(e) {}; 	} } window.onload=docHandler;document.body.onunload=RegainFocus; document.onkeydown=OnKeyDownHandler; </Script></TABLE><!--</DIV></FORM>--></BODY></HTML>