<!-- Copyright (c) 2010 DHC Software Co.,Ltd. ALL RIGHTS RESERVED. --> 

<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
 //i ##Class(websys.SessionEvents).SessionExpired()
 i ##Class(ext.websys.SessionEvents).SessionExpired() q 1
 //CA:-------------------start初始化CA服务环境session--------
 i ##Class(web.DHCDocSignVerify).GetCAServiceStatus(%session.Get("LOGON.CTLOCID"),%session.Get("LOGON.USERID"))="1" d
 .d ##Class(CA.DigitalSignatureService).CASessionDataInit()
 //-------------------end初始化CA服务环境session--------
 q 1
 </csp:method>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<HTML XMLNS=TRAK>
<HEAD>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<!--<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />-->
<meta http-equiv="Content-Type" content="text/html;"/>
<TITLE><EXTHEALTH:TRANSLATE id=title>##(%session.Get("TITLE"))##</EXTHEALTH:TRANSLATE></TITLE>
<EXTHEALTH:HEAD></EXTHEALTH:HEAD>
<!--<TRAK:HEAD></TRAK:HEAD>-->
<EXTHEALTH:EXT321></EXTHEALTH:EXT321>
<script type='text/javascript' src='../scripts/framework/ext.icare.Lookup.js'></script>

<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery-easyui-1.3.5/themes/default/easyui.css">
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery-easyui-1.3.5/themes/icon.css">
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/css/dhcdocCustomEasyUI.css">
<script type="text/javascript" src="../scripts_lib/jquery-easyui-1.3.5/jquery-1.8.0.min.js"></script>

<script type="text/javascript" src="../scripts_lib/jquery-easyui-1.3.5/jquery.easyui.min.js"></script>

<!-- jqgrid js and css-->
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery.jqGrid-4.6.0/css/themes/ui.multiselect.css">
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery.jqGrid-4.6.0/css/themes/redmond/jquery-ui-1.8.2.custom.css">
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery.jqGrid-4.6.0/css/ui.jqgrid.css">

<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/json2.js"></script>
<!--<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/jquery.jqGrid.min.js"></script>-->
<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/jquery.jqGrid.src.js"></script>
<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/i18n/grid.locale-cn.js"></script>
<!--抗生素1-->
<script type="text/javascript" src="../scripts/dhcdocant/AntMain.js"></script>
<script type="text/javascript" src="../Scripts/dhcclinic/DHCClinic.ExtFramework.js"></script>  
<script type="text/javascript" src="../Scripts/dhcclinic/DHCClinic.ExtFramework.Setting.js"></script>  
<script type="text/javascript" src="../Scripts/dhcclinic/DHCClinic.ExtFramework.DesignerHelper.js"></script>
<script type="text/javascript" src="../Scripts/dhcclinic/Ext.ux.form.LovCombo.js"></script>
<!--抗生素1-->
<script type="text/javascript" src="../scripts/DHCWeb.OPCommonManageCard.JS"></script>
<script type="text/javascript" src="../scripts/DHCOPBillLocCheckOut.js"></script>
<script type="text/javascript" src="../scripts/DHCPrtComm.js"></script>
<script type="text/javascript" src="../scripts/DHCWeb.OPCommon.JS"></script>




<!-- datePicker-->
<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/calendar-js/js/WdatePicker.js"></script>


<!-- 布局JS-->
<script type="text/javascript" src="../scripts/dhcdoc/Order_DataGrid.js"></script>

<script type="text/javascript" src="../scripts/dhcdoc/oeorder.oplistcustom.show.js"></script>
<!-- 业务控制JS-->
<script type="text/javascript" src="../scripts/dhcdoc/UDHCOEOrder.List.Custom.New.js"></script>


<!--<script type="text/javascript" src="../scripts/dhcdoc/oeorder.oplistcustom.show.js"></script>-->

<!-- 一键打印-->
<script type="text/javascript" src="../scripts/dhcdoc/DHCDocClickPrint.js"></script>
<script type="text/javascript" src="../scripts/dhcdoc/DHCDocClickPrintevent.js"></script>
<LINK REL="stylesheet" TYPE="text/css" HREF="../scripts/dhcmed/css/main.css">
<STYLE type='text/css'>
BODY INPUT
	{
		/*
		FONT-SIZE: 9pt;
		border: 1px solid #b5b8c8;
		height:22px;
		background-image:url(../images/inputbg.gif);
		background-repeat: repeat-x;
		background-position: top;
		*/
	}
</STYLE>
</HEAD>
<body>
<server>
 ;初始化前端配置和全局变量对象
 ;不支持多就诊.1.多就诊查看使用chat;2.多就诊录入使用提交多就诊参数到后端
 s LocID=""
 n EpisodeID,PatientID,notMatch,mobj
 s (EpisodeID,PatientID,notMatch)=""
 s EpisodeID=%request.Get("EpisodeID")
 s PatientID=%request.Get("PatientID")

 ;医嘱录入需要的系统配置审查
 ;d ##Class(web.DHCDocOrderCommon).CheckSysConfig()
 
 s isNurseLogin = ##class(web.DHCDocMain).isNurseLogin()
 
 ;菜单传递的病人和就诊是否匹配
 i PatientID,EpisodeID d
 . i $p($g(^PAADM(EpisodeID)),"^",1)'=PatientID d
 . . s notMatch=1
 . . w "<SCRIPT Language=""Javascript"">"
 . . w "document.write('"_$g(t("PatientID_Not_Match_EpisodeID"))_"');"
 . . w "</script>"
 . . q
 i notMatch q
 
 ;临时科室处理
 i EpisodeID'="",$l(EpisodeID,"^")=1 d
 . s obj=##Class(User.PAAdm).%OpenId(EpisodeID,0)
 . i obj.PAADMTempLocDR d 
 . . d %request.Set("TempLocID",obj.PAADMTempLocDR.%Id())
 . . d %request.Set("TempLoc",obj.PAADMTempLocDR.CTLOCDesc)	
 . . d obj.%Close()
 . ;未使用
 . ;d %request.Set("EligibilityStatus",##Class(web.OEOrder).EligibilityStatus(EpisodeID))
 
 ;
 n app,params,oeord,orderrow
 s app=""
 k %request.Data("OEPARAMS")
 s LocDesc=##Class(web.PAAdm).getPatEpisLoc(%request.Get("EpisodeID"))
 s LocID=##Class(web.CTLoc).GetIdFromCodeOrDescription(LocDesc)
 s %request.Data("CTLOC",1)=LocDesc
 ;s params=##Class(websys.Preferences).GetDataExPlus(%session.Get("LOGON.USERID"),%session.Get("LOGON.GROUPID"),%session.Get("LOGON.SITECODE"),LocID,"",.app,"ORDER","OEOrder.Favourites")
 ;d %request.Set("OEPARAMS",params)
 ;d %request.Set("EpisodeID",%request.Get("EpisodeID"))
 ;d ##Class(web.OEOrder).webGetFavouriteGroupNames(LocID)
 
 ; ;add by zhouzq
 s PrescTypeDetailDelim="!"
 s firstprescparameter=""
 s DefaultPrescTypeTab=1
 s ToBillSum=0
 s PatTypeID=""
 
 s Hospital=##Class(web.DHCDocConfig).GetConfigNode("CurrentHospital")
 i Hospital'="" s HospitalCode=$P(Hospital,"^",1)
 e  s HospitalCode=""

 s PAAdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(EpisodeID)
 i (PAAdmType'="I") {
	  s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
 }else{
	  s IPDefaultPriorShort=##Class(web.DHCDocConfig).GetConfigNode("IPDefaultPriorShort")
	  i IPDefaultPriorShort=1 s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
	  e  s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","S",0))
	  //登录非就诊科室默认为临时医嘱
	  s AdmLocRowId=$O(^PAC("ADMLOC",0,"AdmType","I",%session.Get("LOGON.CTLOCID"),0))
	  i AdmLocRowId=""  s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
 }  

 ;出院带药医嘱
 s OutOrderPriorRowid=$O(^OECPR(0,"Code","OUT",0))
 ;取药医嘱
 s OneOrderPriorRowid=$O(^OECPR(0,"Code","ONE",0))
 ;长期医嘱
 s LongOrderPriorRowid=$O(^OECPR(0,"Code","S",0))
 ;临时医嘱
 s ShortOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
 ;自备药临时医嘱
 s OMOrderPriorRowid=$O(^OECPR(0,"Code","OM",0))
 ;自备药长期医嘱
 s OMSOrderPriorRowid=$O(^OECPR(0,"Code","OMST",0))
 ;即刻医嘱
 s STATOrderPriorRowid=$O(^OECPR(0,"Code","STAT",0))
 ;PRN医嘱
 s PRNOrderPriorRowid=$O(^OECPR(0,"Code","PRN",0))
 s STFreq=""
 s STFreqRowid=$O(^PHCFR(0,"Desc1","ST",0))
 i HospitalCode="ZGYKDFSYY" s STFreqRowid=$O(^PHCFR(0,"Code","ST",0))
 i HospitalCode="SDWFYY"    s STFreqRowid=$O(^PHCFR(0,"Code","ST",0))
 i STFreqRowid'="" s STFreq=$P(^PHCFR(STFreqRowid),"^",3)
 
 ;copy oe_orditem 2012-05-31 wanghc
 s CopyOeoris = $g(%request.Data("copyOeoris",1))
 s CopyPriorCode = $g(%request.Data("copyTo",1))
 s len = $l(CopyOeoris,"^")
 if (CopyOeoris'=""){
	s CopyPriorCodeRowid = $O(^OECPR(0,"Code",CopyPriorCode,0)) 
 	w "<script type=""text/javascript"">",$c(13,10)
 		w "var CopyOeoriDataArr = [];",$c(13,10)
 	f j=1:1:len {
		s dataItem = ##class(web.DHCDocMain).CreateCopyItem($p(CopyOeoris,"^",j),CopyPriorCodeRowid)
		w "CopyOeoriDataArr["_(j-1)_"] = """_dataItem_""";",$c(13,10)
	}
	w "</script>",$c(13,10)
 }
 
 ;临时医嘱
 s ONCEFreq=""
 s ONCEFreqRowid=$O(^PHCFR(0,"Code","ONCE",0))
 i ONCEFreqRowid'="" s ONCEFreq=$P(^PHCFR(ONCEFreqRowid),"^",3)
 
 s QDFreq=""
 s QDFreqRowid=$O(^PHCFR(0,"Desc1","QD",0))
 i QDFreqRowid'="" s QDFreq=$P(^PHCFR(QDFreqRowid),"^",3)

 s BillTypeID=%request.Get("BillTypeID")
 s BillTypeDesc="",Epissubtype=""
 i EpisodeID {
 	s BillTypeID=$p($g(^PAADM(EpisodeID,1)),"^",7)
 	s Epissubtype=$P(^PAADM(EpisodeID,1),"^",6)
 }
 if BillTypeID'="" {
	 Set objBillType=##class(User.PACAdmReason).%OpenId(BillTypeID)
	 if $IsObject(objBillType) {
		  s BillTypeDesc=objBillType.READesc
 	 }
 }
 ;得到处方类型,门诊显示存在对应关系的所有处方类型,住院仅显示默认处方类型
 s PrescriptTypes=##Class(web.DHCPAADMPrescType).GetPrescTypeByPAADM("O",BillTypeID)
 s PrescriptTypeStr=""
 if (EpisodeID) {
	 s PrescriptTypeStr=##class(web.DHCDocOrderCommon).GetPrescriptTypeInfo(BillTypeID,PAAdmType)
	 // ^ 分割第二个为默认
	 s PrescriptTypeStr=$p(PrescriptTypeStr,"^",1)
 }
 
 /* ;处方类型显示
 s NotDisplayPrescType=##Class(web.DHCDocConfig).GetConfigNode("NotDisplayPrescType")
 if (EpisodeID'="")&(PAAdmType'="I") {
	 n PrescTypeDetailDelim,firstprescparameter,ToBillSum,ToBillSumDetail
	 s PrescTypeDetailDelim="!"
	 s PrescriptTypes=##Class(web.DHCPAADMPrescType).GetPrescTypeByPAADM("O",BillTypeID)
	 s PrescriptTypesCount=$l(PrescriptTypes,"||")
	 s ToBillSumDetail=##Class(web.DHCDocOrderEntry).GetToBillSum(EpisodeID)
	 s ToBillSum=$p(ToBillSumDetail,"^",1)
	 w "<DIV id='preftabpresctypes' style='position:relative; padding:10px;'></DIV>"_$c(13,10)
	 w "<SCRIPT Language=""Javascript"">",$C(13,10)
	 w "var obj=document.getElementById('preftabpresctypes');",$c(13,10)
	 w "if (obj) {",$c(13,10)
	 w " obj.innerText='';",$c(13,10)
	 s DefaultPrescTypeTab=1
	 s prescparameter=""
	 s firstprescparameter=""
	 f i=1:1:PrescriptTypesCount d
	 .s PrescriptTypeTemp=$p(PrescriptTypes,"||",i)
     .;w "alert('"_PrescriptTypeTemp_"');",$c(13,10)
	 .s presctypebilltypeid=$p(PrescriptTypeTemp,PrescTypeDetailDelim,5)
	 .s presctypedesc=$p(PrescriptTypeTemp,PrescTypeDetailDelim,3)
	 .s presctypedefault=$p(PrescriptTypeTemp,PrescTypeDetailDelim,8)
	 .s prescparameter=$p(PrescriptTypeTemp,PrescTypeDetailDelim,1,2)_PrescTypeDetailDelim_$p(PrescriptTypeTemp,PrescTypeDetailDelim,4,7)
	 .i i=1 s firstprescparameter=prescparameter
	 .;i PrescriptTypesCount>1 w " obj.innerHTML+=""<SPAN id='PrescTypeTAB"_i_"' class='PrescTypeTab' onclick=\""RedrawPrescriptType('"_i_"','"_prescparameter_"','"_PrescTypeDetailDelim_"');\"">"_$zcvt(presctypedesc,"O","JS")_"</SPAN>"";",$c(13,10)
	 .i NotDisplayPrescType'=1 w " obj.innerHTML+=""<SPAN id='PrescTypeTAB"_i_"' class='PrescTypeTab' onclick=\""RedrawPrescriptType('"_i_"','"_prescparameter_"','"_PrescTypeDetailDelim_"');\"">"_$zcvt(presctypedesc,"O","JS")_"</SPAN>"";",$c(13,10)
	 .;i presctypebilltypeid=BillTypeID d
	 .i presctypedefault="Y" d
	 ..s DefaultPrescTypeTab=i
	 ..s firstprescparameter=prescparameter
	 w "}",$c(13,10)
	 ;好象不能直接调方法?所以只能放在后面的javascript中去调用
	 ;w "RedrawPrescriptType('1','"_firstprescparameter_"','"_PrescTypeDetailDelim_"');",$c(13,10)
	 w "</SCRIPT>",$C(13,10)
  }
  */
  s PatientNo=""
  if PatientID'="" {
	 s PatTypeID=""
	 Set objPat=##class(User.PAPerson).%OpenId(PatientID)
	 if (($IsObject(objPat))&&($IsObject(objPat.PAPERSocialStatusDR))) {
		  s PatTypeID=objPat.PAPERSocialStatusDR.%Id()
 	 }
 	 if PatTypeID=""  s PatTypeID=1
	 s PatientNo=##Class(web.PAPatMas).GetRegistration(PatientID) 
 }
 
 ;PCS就诊科室,就诊类型
 s PCSPatTypeID=##Class(web.DHCDocConfig).GetPCSConfigNode("PatientType")
 s PCSLocIDs=##Class(web.DHCDocConfig).GetPCSLoc()
 s CheckRecLocMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetRecLocCount"))
 s GetARCIMBillGrpDescMehtod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMDetail"))
 s SelectOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.SelectOrderItem"))
 s GetARCIMDefaultPackQtyMehthod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMDefaultPackQty"))
 s CheckItemInDurationMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckItemInDuration"))
 s GetPHCDPoisonMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetDrgFormPoison"))
 s GetARCIMMaxQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMMaxQty"))
 s GetARCIMBillClassMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMBillClass"))
 s CheckConflictMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckConflict"))
 s GetBillItemsMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetBillItems"))
 s GetConflictMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocConfig.GetConflict"))
 s CheckOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckOrderItem"))
 s GetEPARCIMDetailMehtod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetEPARCIMDetail"))
 s LookUpFrequencyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerFrequency"))
 s GetOneFrequencyStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneFrequencyStr"))
 s LookUpSingleFrequencyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerSingleFrequency"))
 s LookUpDurationMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerDuration"))
 s GetOneDurationStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneDurationStr"))
 s LookUpSingleDurationMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerSingleDuration"))
 s LookUpInstrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerInstr"))
 s GetOneInstrStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneInstrStr"))
 s LookUpSingleInstrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerSingleInstr"))
 ;s CheckStockEnoughMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckStockEnough")) 
 ;s CheckStockEnoughMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOPCashier.CheckStockEnough")) 
 s CheckStockEnoughMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckStockEnough")) 
 s CalDoseMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CalDose"))
 s GetCurrentDateTimeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetCurrentDateTime"))
 s InsertOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.InsertOrderItem"))
 ;从后台获取医嘱类型
 s OrderPriorStr=##Class(web.DHCDocOrderCommon).GetOrderPrior(PAAdmType,"JSON",%session.Get("LOGON.CTLOCID"))
 ;登陆科室是否在相应的访问位置中
 s INAdmTypeLoc=##Class(web.DHCDocOrderCommon).CheckINAdmTypeLoc(%session.Get("LOGON.CTLOCID"),PAAdmType)
 s OrderPriorRemarksStr=##Class(web.DHCDocOrderCommon).GetOrderPriorRemarks(PAAdmType,"JSON")
 s PhSpecInstrList=##class(web.DHCDocConfig).GetConfigNode("CNMedItemPhSpecInstr")
 s DoctorID=##class(web.SSUser).GetDefaultCareProvider(%session.Get("LOGON.USERID"))
 s DoctorType=##class(web.SSUser).GetDefaultCareProviderType(%session.Get("LOGON.USERID")) s %request("DoctorID")=DoctorID
 s SaveOrderItemsMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.SaveOrderItems"))
 s PinNumberMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.PinNumberValid"))
 ; 得到是否是或者有检查医嘱标识
 s GetItemServiceFlagMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetItemServiceFlag"))
 ;外用用法
 s WYInstr=##Class(web.DHCDocConfig).GetConfigNode("WYInstr")
  if WYInstr'="" s WYInstr="^"_WYInstr_"^"
 ;不随主医嘱变化的用法
 s NotFollowInstr=##Class(web.DHCDocConfig).GetConfigNode("NotFollowInstr")
 if NotFollowInstr'="" s NotFollowInstr="^"_NotFollowInstr_"^"
 ;皮试用法
 s SkinTestInstr=##Class(web.DHCDocConfig).GetConfigNode("SkinTestInstr")
 if SkinTestInstr'="" s SkinTestInstr="^"_SkinTestInstr_"^"
 ;住院需配液用法
 s IPDosingInstr=##Class(web.DHCDocConfig).GetConfigNode("IPDosingInstr")
 if IPDosingInstr'="" s IPDosingInstr="^"_IPDosingInstr_"^"
 ;知识库打开标志 默认打开建议医嘱按钮显示.调用知识库接口。权限按照知识库自己配置的授权进行管理
 s ZSKOpen=1
 if ZSKOpen=1  d
 .w "<DIV id='dd'></DIV>"
 s DTAdmDep=##Class(web.DHCDocConfig).GetConfigNode("DTAdmDep")
 s DTAdmDepSave=##Class(web.DHCDocConfig).GetConfigNode("DTAdmDepSave")
 s DTDepNotDoStr=##Class(web.DHCDocConfig).GetConfigNode1("DTAdmDep",%session.Get("LOGON.CTLOCID"))
 s DTDepNotDoYDTS=0,DTDepNotDoXHZY=0,DTDepNotDoUpLoad=0
 s DHCDTInterface="0",DHCDTUploadFlag=0
 s DHCDTPrescXML=""
 i (DTAdmDep'="")&("^"_DTAdmDep_"^"[("^"_%session.Get("LOGON.CTLOCID")_"^")) d
 .s DHCDTInterface="1"
 .s DHCDTUploadFlag="1"
 .s DTDepNotDoYDTS=$p(DTDepNotDoStr,"^",1)
 .s DTDepNotDoXHZY=$p(DTDepNotDoStr,"^",2)
 .s DTDepNotDoUpLoad=$p(DTDepNotDoStr,"^",3)
 .w "<object id='CaesarComponent' classid='clsid:8C028072-4FD2-46AE-B6D2-63E9F9B4155F' codebase = '../addins/client/dtywzxUIForMS.cab#version1.0.0.1'>"
 .w "</object>"
 .i HospitalCode="HF" d
 ..;上传的科室
 .i (DTAdmDepSave'="")&("^"_DTAdmDepSave_"^"[("^"_%session.Get("LOGON.CTLOCID")_"^")) s DHCDTUploadFlag="1"
 .e  s DHCDTUploadFlag="1"
 .;由于取的字符串会过长?导致溢出,所以不在开始时取出
 .;s DHCDTPrescXML=##class(web.DHCOEOrdItem).GetDaysDTPresc(EpisodeID,0)
 s OPAdmDayLimit=##Class(web.DHCDocConfig).GetConfigNode("OPAdmDayLimit")
 i OPAdmDayLimit="" s OPAdmDayLimit=1
 s OrderEntryLock=##Class(web.DHCDocConfig).GetConfigNode("OrderEntryLock")
 i OrderEntryLock="" s OrderEntryLock=1
 s OrderActionJSON=##Class(web.DHCDocOrderCommon).GetOrderAction("JSON")
 s OrderActionStr=##Class(web.DHCDocOrderCommon).GetOrderAction()
 ;开药品时是否需要开诊断有两级控制?医生站设置和页面参数?
 s OrderPhamacyWithDiagnos=%request.Get("OrderPhamacyWithDiagnos")
 i OrderPhamacyWithDiagnos="" {
	 s OrderPhamacyWithDiagnos=##Class(web.DHCDocConfig).GetConfigNode("OrderPhamacyWithDiagnos")
	 i OrderPhamacyWithDiagnos="" s OrderPhamacyWithDiagnos=1
 }
 s IPOrderPhamacyWithDiagnos=##Class(web.DHCDocConfig).GetConfigNode("IPOrderPhamacyWithDiagnos")
 ;是否进行欠费控制及科室是否进行欠费控制
 s CheckIPDepositMethod=""
 s CheckDepositOrderMethod=""
 s CheckIPDeposit=##Class(web.DHCDocConfig).GetConfigNode("CheckIPDeposit")
 i CheckIPDeposit="1" d
 .s CheckIPLocDeposit=##Class(web.UDHCJFARREARSMANAGE).CheckLoc(%session.Get("LOGON.CTLOCID"))
 .i CheckIPLocDeposit=0 d
 ..s CheckIPDepositMethod=##Class(%CSP.Page).Encrypt($lb("web.UDHCJFARREARSMANAGE.CheckArrears")) 
 ..s CheckDepositOrderMethod=##Class(%CSP.Page).Encrypt($lb("web.UDHCJFARREARSMANAGE.CheckOrderE")) 

 s IPDefaultDurRowId=##Class(web.DHCDocConfig).GetConfigNode("IPDefaultDuration")
 s IPDefaultDur="",IPDefaultDurFactor=0
 if IPDefaultDurRowId'="" {
	s IPDefaultDur=$P($g(^PHCDU(IPDefaultDurRowId)),"^",3)
	s IPDefaultDurFactor=$P($g(^PHCDU(IPDefaultDurRowId)),"^",2)
 }
 
 s DirectSave=##Class(web.DHCDocConfig).GetConfigNode("DirectSave")
 ;草药是否进行合理用药判断
 s DTCheckCNMed=##class(web.DHCDocConfig).GetConfigNode("DTCheckCNMed")
 s SetArrivedStatusMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetArrivedStatus")) 
 s AddToFavMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.websysSaveOETabsOne"))
 s GetOneOrderPriorQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneOrderPriorQty"))
 s CurrentDeposit=0
 if EpisodeID'="" s CurrentDeposit=##Class(web.DHCDocOrderCommon).GetCurrentDeposit(EpisodeID)
 s CheckRepeatLabSpecMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckRepeatLabSpec"))
 s FindRecLocByLogonLoc=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),1)
 ;本科室医嘱套按顺序录入数量
 s FindARCOSInputByLogonLoc=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),5)
 s OneOrderPriorInstrs=$G(^DHCCLNurseExec("VarDef","CQYZQY","PhcIn"))
 i OneOrderPriorInstrs'="" s OneOrderPriorInstrs="^"_OneOrderPriorInstrs_"^"
 ;检查本日医嘱金额不能超过限定值
 s CheckBillTypeSumMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckBillTypeSum"))
 s CreateOneOrder=##Class(web.DHCDocConfig).GetConfigNode("CreateOneOrder")
 s GetStockQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetStockQty"))
 s SetUserUnSaveDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetUserUnSaveData"))
 s GetUserUnSaveDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetUserUnSaveData"))
 s GetUserUnSaveCountMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetUserUnSaveCount"))
 s SetSessionDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetSessionData"))
 s GetSessionDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetSessionData"))
 ;保留界面数据
 s StoreUnSaveData=##Class(web.DHCDocConfig).GetConfigNode("StoreUnSaveData")
 ;按用法分处方
 s PrescByInstr=##Class(web.DHCDocConfig).GetConfigNode("PrescByInstr")
 ;按用法取接收科室
 s ReclocByInstr=##Class(web.DHCDocConfig).GetConfigNode("ReclocByInstr")
 s GetInstrReclocMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetInstrRecLocStr"))
 s GetInstrGroupCodeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetInstrGroupCode"))
 ;不允许重复录入的子类
 s OPUnRepeatItemCat=##Class(web.DHCDocConfig).GetConfigNode("OPUnRepeatItemCat")
 s FindSameOrderItemCatMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.FindSameOrderItemCat"))
 ;出院带药必须录入整包装
 s OutOrderNeedPackQty=##Class(web.DHCDocConfig).GetConfigNode("OutOrderNeedPackQty")
 ;住院临时医嘱频次默认为ST
 s IPShortOrderPriorST=##Class(web.DHCDocConfig).GetConfigNode("IPShortOrderPriorST")
 s CheckBeforeUpdateMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckBeforeUpdate"))
 ;开药品时是否只需开整包装
 s OrderPhamacyOnlyPackQty=%request.Get("OrderPhamacyOnlyPackQty")
 ;登陆的是否看诊科室
 s LogonLocRowId=%session.Get("LOGON.CTLOCID")
 s RowId=$O(^PAC("ADMLOC",0,"AdmType",PAAdmType,LogonLocRowId,0))
 s LogonLocIsAdmLoc=0
 if RowId'="" s LogonLocIsAdmLoc=1
 s LogonLocType=$P(^CTLOC(LogonLocRowId),"^",13)
 
 Set PrescByAuto=##Class(web.DHCDocConfig).GetConfigNode("PrescByAuto")
 s GetARCIMEQResMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetARCIMEQRes"))
 s GetOrderPriceMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPrice"))
 s IPDosingRecLoc=##Class(web.DHCDocConfig).GetConfigNode("IPDosingRecLoc")
 s GetDosingDateTimeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetDosingDateTime"))
 s MLUOMRowId=$O(^CT("UOM",0,"Code","ML",0))
 s IVInstrRowId=$O(^CT("UOM",0,"Code","IV",0))
 ;成组医嘱接收科室一致
 s CFSameRecDepForGroup=##Class(web.DHCDocConfig).GetConfigNode("SameRecDepForGroup")
 ;医嘱套内成组医嘱接收科室一致
 s CFSameRecDepForARCOSGroup=##Class(web.DHCDocConfig).GetConfigNode("SameRecDepForARCOSGroup")
 s GetDefaultBillTypeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCPAAdmSheets.GetDefaultBillType"))
 s EPDSYMCodeStr=##class(web.DHCDocOrderCommon).GetEPDSYMCodeStr(EpisodeID)
 s PatInIPAdmission=##class(web.DHCDocOrderCommon).CheckPatInIPAdmission(PatientID)
 ;库存不足是不自动切换药房
 s CFNotAutoChangeRecloc=##Class(web.DHCDocConfig).GetConfigNode("NotAutoChangeRecloc")
 ;散包装药房设置
 s CFIPDispensingRecLoc=##Class(web.DHCDocConfig).GetConfigNode("IPDispensingRecLoc")
 ;不提示零价格医嘱
 s CFNotAlertZeroPrice=##Class(web.DHCDocConfig).GetConfigNode("NotAlertZeroPrice")
 ;确认适应症
 s CFConfirmInsurSYMM=##Class(web.DHCDocConfig).GetConfigNode("ConfirmInsurSYMM")
 ;非医保提示适应症
 s CFAllConfirmInsurSYMM=##Class(web.DHCDocConfig).GetConfigNode("AllConfirmInsurSYMM")
 ;身体部位串
 s MRCBodyPartStr=##class(web.DHCDocOrderCommon).GetMRCBodyPart("JSON")
 s OrderStageStr=##class(web.DHCDocOrderCommon).GetOrderStage("JSON")
 ;抗生素使用理由
 s AntUseReasonStr=##class(web.DHCDocOrderCommon).GetAntUseReason("JSON")
 s GetTodayDispTimesMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetTodayDispTimes"))
 ;通用名相同的药品不允许重复
 s CFOPNotRepeatGenericName=##Class(web.DHCDocConfig).GetConfigNode("OPNotRepeatGenericName")
 ;取药和出院带药默认按整包装开
 s CFOutAndOneDefaultPackQty=##Class(web.DHCDocConfig).GetConfigNode("OutAndOneDefaultPackQty")
 ;取等效剂量
 s CalEqDoseMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CalEqDose"))
  //********************************************************
 ;临床路径的处理
 s InUseCPWRowId=""
 s mradm=$p($g(^PAADM(EpisodeID)),"^",61)
 if mradm'="" s InUseCPWRowId=$P(##class(web.DHCCPW.MR.ClinicalPathWays).GetActiveCPWByadm(mradm),"^",2)
 s AddMRCPWItemToListMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCCPW.MR.ClinicalPathWays.AddMRCPWItemToList"))
 //********************************************************
 ;不允许重复的检验项
 s CFNotCheckSameSpecItem=##Class(web.DHCDocConfig).GetConfigNode("NotCheckSameLabSpecItem")
 ;长期医嘱不允许录入整数量
 s CFLongOrderNotAllowPackQty=##Class(web.DHCDocConfig).GetConfigNode("LongOrderNotAllowPackQty")
 ;是否医疗结算或者开出院医嘱
 s PAADMMedDischarged=0
 i EpisodeID'="" {
 	s PAADMMedDischarged=##class(web.DHCDocOrderCommon).GetIsExistDischarged(EpisodeID)
 }
 ;出院带药费用控制
 s CheckOutOrderSumMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOutOrderSum"))
 ;出院带药扩展设定
 s CheckOutOrderOtherMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOutOrderOtherContral"))
 ;判断是否有相同出院带药
 s FindSameOutOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindSameOutOrderItem"))
 ;出院带药不能下的子类和管制分类控制
 s CheckPriorAllowRangeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckPriorAllowRange"))
 ;医嘱模板切换
 s ChangeOEPrefMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocPatchUpdate.ChangeOEPref")) 
 s ReChangeOEPrefMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocPatchUpdate.ReChangeOEPref"))
 ;检测是否有个人医嘱模板
 s GetOEPrefMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocPatchUpdate.GetOEPref"))
 ;保存医嘱常用信息
 s SaveItemDefaultMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.SaveItemDefault"))
 ;住院有主管医生才能录医嘱
 s CFIPNeedDoctor=##Class(web.DHCDocConfig).GetConfigNode("IPNeedDoctor")
 s GetUserItemDefaultSingleMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocItemDefault.GetUserItemDefaultSingle")) 
 ;输液流速单位
 s OrderFlowRateUnitStr=##Class(web.DHCDocOrderCommon).GetOrderFlowRateUnit("JSON")
 ;下医嘱后置为到达
 s SetArriveByOrder=##Class(web.DHCDocConfig).GetConfigNode("SetArriveByOrder")
  ;不需要重复提示的子类
 s NotAlertRepeatItemCat=##class(web.DHCDocConfig).GetConfigNode("NotAlertRepeatItemCat")
 ;转换日期方法
 s ConverDateMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.ConverDate"))
 ;是否长期医嘱
 s ISLongOrderPriorMethod=##Class(%CSP.Page).Encrypt($lb("appcom.OEOrdItem.ISLongOrderPrior"))
 //抗生素2***
 ;医护人员管制分类级别
 s DoctorTypePoisonStr=##class(web.DHCDocOrderCommon).GetDoctorTypePoisonStr(DoctorID,PAAdmType)
 s DeleteAntibApplyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.DeleteAntibApply"))
 s DeleteAntReasonMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.DeleteAntReason"))
 ;由管制分类的代码取其描述
 Set GetPHCPoisonByCode=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetPHCPoisonByCode")) 
 ;抗菌药物医嘱处理  121113
 s AddAuditItemToListMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocAntibioticReason.GetAddToListArcimInfo"))
 ;抗菌药物耐药结果  121201
 s CheckSusceptMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocAntiCommon.CheckIsSuscept"))
 ;抗菌药物疗程控制处理  121226
 s CheckInDurSameIMMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocAntiCommon.CheckInDurSameIM"))
 s ReasonCanBeDeletedMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocAntiCommon.ReasonCanBeDeleted"))
 //抗生素2*****
 ;检验不可用标志审查
 s CheckLabItemActiveMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckLabItemActive"))
  ;判断医嘱需开特定医嘱设置
 s CheckSpecOrdLinkedMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckSpecOrdLinked"))
 
 ;门诊不计算整包装的剂型
 s PHCFormStr=##Class(web.DHCDocConfig).GetConfigNode("NotCalcPackQtyPHCForm")
 ;得到剂型
 s GetArcimFormRowidMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetArcimFormRowid"))
 ;门诊输液用法
 s GetLocalInfusionInstrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetLocalInfusionInstr"))
 ;北京医保医嘱保存时审查提示剩余天数
 s CalcDurByArcimMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CalcDurByArcim"))
 ;医保标识
 s GetInsurFlagMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetInsurFlag"))
 ;可以录入小数的子类
 s AllowEntryDecimalItemCat=##class(web.DHCDocConfig).GetConfigNode("AllowEntryDecimalItemCat")
 ;判断是否是小时医嘱
 s IsHourItem=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.IsHourItem"))
 s CardBillCardTypeValue=##Class(web.UDHCOPOtherLB).getDefaultCardType()
 ;医嘱项提示是否弹出窗口
 s CFOrderMsgAlert=##class(web.DHCDocConfig).GetConfigNode("OrderMsgAlert")
 ;根据处方名称,费别rowid,就诊类型,得到唯一处方的限制属性
 s GetPrescLimitMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCPAADMPrescType.GetPrescLimitStr"))
 s FindSameOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindSameOrderItem"))
 s EnableButton=1
 
 //2014-05-14
 s GetARCItemSubCatID=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCItemSubCatIDBroker"))
 s CheckItemDiagnos=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckItemDiagnos"))
 ;d ##Class(epr.GroupSettings).GetDetails(%session.Get("LOGON.GROUPID")) 
 //2014-05-20 关联医嘱选择控制
 s SelectContrlConfig=##class(web.UDHCStopOrderLook).GetStopGroupOrder(%session.Get("LOGON.USERID"))
 //2014-05-20 切换医嘱类型是否提示审核的配置
 s CFSwithGlobalPriorUpdate=##Class(web.DHCDocConfig).GetConfigNode("SwithGlobalPriorUpdate")
 //2014-05-20 根据医嘱ID取医嘱类型描述
 s GetOrderPriorMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPriorByID"))
 ;通过高职条码获得医嘱项先关信息
 s GetArcimByLabel=##Class(%CSP.Page).Encrypt($lb("web.DHCSTM.PCHCOLLSM.GetArcimByLabel"))
 ;判断医嘱项是否是高值材料
 s GetIncItmHighValueFlag=##Class(%CSP.Page).Encrypt($lb("web.DHCSTM.PCHCOLLSM.GetArcimHighValueFlag"))
 ;高值录入控制标志(科室扩展第13位)
 s HighValueControl=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Get("LOGON.CTLOCID"),13)
 
 ;按照医嘱项上的门诊用药、急诊用药、住院用药标志来检测医嘱项是否可用
 s CheckArcimType=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckArcimType"))
 
 s MRDiagnoseCount=##class(web.DHCDocOrderEntry).GetMRDiagnoseCount(mradm)
 //插入个人医嘱套 web.DHCUserFavItems.InsertUserARCOSS
 s InsertUserARCOSS=##Class(%CSP.Page).Encrypt($lb("web.DHCUserFavItems.InsertUserARCOSS"))
 //大通 web.DHCandDaTongInterface.GetPrescXML
 s GetPrescXML=##Class(%CSP.Page).Encrypt($lb("web.DHCandDaTongInterface.GetPrescXML"))
 ;超量疗程原因
 s GetExceedStr=##Class(web.DHCDocExceedReason).GetExceedStr("","json")
 ;获得超量限制天数
 s GetExceedDate=##Class(%CSP.Page).Encrypt($lb("web.DHCDocExceedReason.GetExceedDate"))
  ;判断是否是小时医嘱
 s IsHourItem=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.IsHourItem"))
 ;根据医嘱ID获取医嘱项ID
 s GetCopyItems=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetCopyItems"))
 ;根据医嘱ID获取补录主医嘱信息
 s GetVerifiedOrder=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetVerifiedOrder"))
 //完成接诊
 s UpdateFinshAdm=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.UpdateFinshAdm"))
 //获取未激活医嘱
 s GetUnActiveOrderItems=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.GetUnActiveOrderItems"))
 //是否设置医嘱类型为临时
 s CheckOnlyShort=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOnlyShort"))
 ;此段代码本意是根据这个病人当前未结束的就诊记录,但由于门诊病人的状态都是A,
 ;所以查出的病人指针始终找到第一个门诊就诊记录
 ;静脉配液中心接收可是ID串
 s IPDosingRecLocStr=##class(web.DHCDocConfig).GetConfigNode("IPDosingRecLoc")
 ;是否进行医疗结算.只有护士在医疗结算后可以录入医嘱,医生不许。
 s HaveMidDischarged=0
 i EpisodeID'="" {
 	s HaveMidDischarged=##class(web.DHCDocOrderCommon).GetIsMidDischarged(EpisodeID)
 }
 ;登陆用户身份类型
 s CareProvType=##class(web.DHCDocOrderCommon).GetCareProvType(%session.Get("LOGON.USERID"))
 s CareProvType=$zcvt(CareProvType,"U")
 ;死亡标志
 s IsDeceased=##Class(web.PAPerson).CheckDeceased(PatientID)
 ;获取身份证信息
 s FindPAPMIID=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindPAPMIID"))
 ;0费用不提示的医嘱子类
 s NotAlertZeroItemCatStr=$G(^DHCDocConfig("NotAlertZeroItemCat"))
 ;协议包装
 s GetBillUOMStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetBillUOMStr"))
 s GetOrderPriceConUomMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPriceConUom"))
 ;获取诊断限制最大疗程
 s GetDiagnosLimitDurMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetDiagnosLimitDurFactor"))
 ;校验日期时间格式
 s CheckDateTime=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckDateTime"))
 ;科研项目
 s PilotProStr=##class(web.PilotProject.DHCDocPilotProPat).GetPilotProStr(EpisodeID,%session.Get("LOGON.USERID"))
 s CFPilotPatAdmReason=##class(web.PilotProject.DHCDocPPGroupSeting).GetConfigNode("PilotPatAdmReason")
 s CFIPPilotPatAdmReason=##class(web.PilotProject.DHCDocPPGroupSeting).GetConfigNode("IPPilotPatAdmReason")
 ;科研项目验证可开医嘱子类(只包括药品)
 s CheckPilotCat=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckPilotCat"))
 ;一键打印设置是否在医嘱审核之后弹出
 s OnePrintFlag=##class(web.DHCDocConfig).GetConfigNode1("ClickPrnConfig",%session.Get("LOGON.GROUPID"))
 ;1:当前状态为留观,2:曾经留观但当前非留观,-1:非留观
 s GetStayStatusFlag=##class(web.DHCADMVisitStat).GetStayStatus(EpisodeID)
 ;获取医保分类
 s GetArcimInsurCat=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderListCommon.GetArcimInsurCat"))
 ;知识库
 s CheckLibPha=##Class(%CSP.Page).Encrypt($lb("web.DHCDocService.CheckLibPha"))
 s GetDurgArcimMesage=##Class(%CSP.Page).Encrypt($lb("web.DHCDocService.GetDurgArcimMesage"))
 ;医保用药控制
 s CheckInsuCostControlMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommonExpand.CheckInsuCostControl"))
 ;获取医嘱类型的描述和Code
 s GetPrioCodeAndDesc=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetPrioCodeAndDesc"))
 
 s EpisodeID=%request.Get("EpisodeID")
 ;可用##class(web.DHCPAADM).CurrAdm(EpisodeID)替换
 s EpisodeID=$$curradm^COEOrdItem(EpisodeID)
 i EpisodeID'="" d
 . s orderrow=$o(^OEORD(0,"Adm",+EpisodeID,"")) d:'orderrow
 . .s oeord=##class(User.OEOrder).%New()
 . .d oeord.OEORDAdmDRSetObjectId(EpisodeID)
 . .s oeord.OEORDDate=+$h
 . .s oeord.OEORDTime=$p($h,",",2)
 . .s save=oeord.%Save(0)
 . .s orderrow=+oeord.%Id()
 . .d oeord.%Close()
 .;w "<SCRIPT Language=""Javascript"">"
 .;w "alert('"_orderrow_"');"
 .;w "</script>"
 
 n warning,cmpDisabled
 i %request.Get("EpisodeID")'="" d
 . s warning="",cmpDisabled=0
 . s VisitStatus=$p($g(^PAADM(%request.Get("EpisodeID"))),"^",20)
 . s FinFlag=$p($g(^PAADM(%request.Get("EpisodeID"))),"^",45)
 . s PAADMDate=$p($g(^PAADM(%request.Get("EpisodeID"))),"^",6)
 . s PAADMDocDR=$p($g(^PAADM(%request.Get("EpisodeID"))),"^",9)
 . s PAADMBedDR=$p($g(^PAADM(%request.Get("EpisodeID"))),"^",73)
 . s today=$P($h,",",1)
 . s DocID=$P(^SSU("SSUSR",%session.Data("LOGON.USERID")),"^",14)
 . i (PAAdmType="I") d
 . . i (PAADMBedDR="") d
 . . . s warning="此病人未分配床位,不允许开医嘱."
 . . i (PAADMDocDR="")&&(CFIPNeedDoctor=1) d
 . . . s warning="此病人未分配医生,不允许开医嘱." 
 . . s OrderUnabled=##class(web.DHCDocOrderCommon).CheckOrderUnabled(EpisodeID)
 . . i OrderUnabled=1 d
 . . . s warning="此病人正在结算中,不允许再开医嘱."
 . . i FinFlag="Y" d
 . . . s warning="此病人已结算出院,不允许再开医嘱."
 . . i ((VisitStatus="D")!(VisitStatus="C"))&(DocID'="") d
 . . . s warning="此病人已做最终结算,不允许医护人员再开医嘱."
 . . i ((HaveMidDischarged=1)&&(CareProvType="DOCTOR")&&(PAAdmType="I")) d
 . . . s warning="此病人已做医疗结算,不允许医生再开医嘱."
 . e  d
 . . i (" 1 2 "[(" "_GetStayStatusFlag_" "))&&(VisitStatus="D") d
 . . . s warning="此病人已结算出院,不允许再开医嘱."
 . i ((VisitStatus="C")!((OPAdmDayLimit'=0)&(today-PAADMDate>(OPAdmDayLimit-1))))&(PAAdmType="O") d
 . . s IfPilotAdm=##Class(web.PilotProject.DHCDocPilotProCommon).CheckPilotAdm(EpisodeID)
 . . i VisitStatus="C" s warning="此病人已退号,不允许再开医嘱."
 . . e  i (today-PAADMDate>(OPAdmDayLimit-1))&&(IfPilotAdm'=1)  s warning="此就诊记录的挂号日期在"_OPAdmDayLimit_"天以前,不允许再开医嘱."
 . i warning="",PAAdmType="I",IPDefaultDurRowId="" d
 . . s warning="住院没有设定默认的疗程?请与系统维护部门联系."
 . i (OrderEntryLock=1)&(warning="") d
 . . i '##Class(websys.Lock).Lock($lb(orderrow,"User.OEOrder"),%session.SessionId,%session.Get("LOGON.USERID"),.warning,%session.Get("LOGON.CTLOCID")) s cmpDisabled=1
 . s ^zdenise($zn,"warning")=warning
 . ;查询当前患者的该次就诊是否有院感退回报告    2010.03.09
 . s Medwarning=##Class(web.DHCMedInfService).IsReturnReport(%request.Get("EpisodeID"))
 . s warning=warning_Medwarning  
 . i warning'="" d
 . . s cmpDisabled=1
 . . s EnableButton=0
 . i warning'="" &html<<DIV><STRONG><FONT COLOR=RED><%=warning%></FONT></STRONG></DIV>>
 ;CA:数字签名加载JS  ---START---
 s CAInit=0
 i ##Class(web.DHCDocSignVerify).GetCAServiceStatus(%session.Get("LOGON.CTLOCID"),%session.Get("LOGON.USERID"))="1" d
 .s CAInit=1
 .d ##Class(CA.DigitalSignatureService).OutPutSecXCommon()
 ;得到CA认证的XML信息串
 s GetOEORIItemXMLMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocSignVerify.GetOEORIItemXML"))   //
 ;插入CA认证后的信息串
 s InsertCASignInfoMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocSignVerify.InsertBatchSignRecord"))
 ;------END-----
 ;web.DHCandDaTongInterface.GetDTYDTS
 s GetDTYDTS=##Class(%CSP.Page).Encrypt($lb("web.DHCandDaTongInterface.GetDTYDTS"))
 ;布局控制
 s layoutConfig=##class(web.DHCDocOrderListCommon).GetEntryLayout(%session.Get("LOGON.USERID"),PAAdmType)
 ;医嘱类型选择显示配置项  1:下拉  2：横向
 s OrderPriorConfig=##class(web.DHCDocConfig).GetConfigNode1("OrderPriorConfig",%session.Get("LOGON.USERID"))
 i OrderPriorConfig="" d ##class(web.DHCDocConfig).SaveConfig1("OrderPriorConfig",%session.Get("LOGON.USERID"),"2")	
 ;医嘱类型控制  1：强制改变 不可以选  2：只设置默认 可以选
 s OrderPriorContrlConfig=2
 ;得到页面用户UI设置 ^DHCDocConfig("UIConfigObj")
 s UIConfigObj=##class(web.DHCDocConfig).GetConfigNode1("UIConfigObj",%session.Get("LOGON.USERID"))
 i UIConfigObj="" s UIConfigObj="{}"
 d ##class(web.DHCDocUtil).GetArrayByObjStr(UIConfigObj,.UIConfigArray)
 
 ;得到医嘱录入的表格配置对象
 s ListColSetCls="web.DHCDocOrderListCommon"
 s ListColSetMth="GetListColSet"
 k colNames,colModelAry,ParamAry
 s colNames=""
 //从后台返回的下拉列表数据
 s ParamAry("OrderPrior")=" : " ;OrderPriorStr  //改从前台产生
 s ParamAry("OrderPriorRemarks")=OrderPriorRemarksStr
 i OrderPriorRemarksStr'="" s ParamAry("OrderPriorRemarks")=":"_";"_OrderPriorRemarksStr
 s ParamAry("OrderAction")=OrderActionJSON
 i OrderActionStr'="" s ParamAry("OrderAction")=":"_";"_OrderActionJSON
 s ParamAry("OrderFlowRateUnit")=OrderFlowRateUnitStr
 i OrderFlowRateUnitStr'="" s ParamAry("OrderFlowRateUnit")=":"_";"_OrderFlowRateUnitStr
 s ParamAry("OrderBillType")=PrescriptTypeStr
 s ParamAry("ExceedReason")=GetExceedStr
 i GetExceedStr'="" s ParamAry("ExceedReason")=":"_";"_GetExceedStr
 s ParamAry("OrderBodyPart")=MRCBodyPartStr  
 i MRCBodyPartStr'="" s ParamAry("OrderBodyPart")=":"_";"_MRCBodyPartStr
 s ParamAry("OrderStage")=OrderStageStr  
 i OrderStageStr'="" s ParamAry("OrderStage")=":"_";"_OrderStageStr
 s ParamAry("AntUseReason")=AntUseReasonStr  
 i AntUseReasonStr'="" s ParamAry("AntUseReason")=":"_";"_AntUseReasonStr
 d ##class(web.DHCDocOrderListCommon).ReadListColSet(ListColSetCls,ListColSetMth,.colNames,.colModelAry,.ParamAry)
 
 s PageName=%request.PageName
 w "<SCRIPT Language=""Javascript"">",!
 w "var ListConfigObj={colNames:null,colModel:null};",!
 w "var colNamesAry=new Array();",!
 w "var colModelAry=new Array();",!
 for i=1:1:$l(colNames,",") {
	 s colName=$p(colNames,",",i)
	 continue:colName=""
	 s colModel=colModelAry(colName)
	 w "colNamesAry.push('"_colName_"');",!
	 w "colModelAry.push("_colModel_");",!
 }
 w "ListConfigObj.colNames=colNamesAry;",!
 w "ListConfigObj.colModel=colModelAry;",!
 d ##class(web.DHCDocOrderListCommon).GetMessageArray(PageName,%session.Get("LOGON.LANGID"))
 w "</SCRIPT>",!
 
</server>
 <!--<csp:Include Page="oeorder.oplistcustom.show.csp">-->
 <csp:Include Page="oeorder.oplistcustom.show.csp">
	
<script type="text/javascript">
//录入列表对象ListConfigObj
//用户配置对象
var UIConfigObj=eval('('+"#(UIConfigObj)#"+')');
//全局参数对象
var GlobalObj={
	HospitalCode:"#(HospitalCode)#",
	CheckRecLocMethod:"#(CheckRecLocMethod)#",
	GetARCIMBillGrpDescMehtod:"#(GetARCIMBillGrpDescMehtod)#",
	SelectOrderItemMethod:"#(SelectOrderItemMethod)#",
	GetARCIMDefaultPackQtyMehthod:"#(GetARCIMDefaultPackQtyMehthod)#",
	CheckItemInDurationMethod:"#(CheckItemInDurationMethod)#",
	GetPHCDPoisonMethod:"#(GetPHCDPoisonMethod)#",
	GetARCIMBillClassMethod:"#(GetARCIMBillClassMethod)#",
	CheckStockEnoughMethod:"#(CheckStockEnoughMethod)#",
	GetBillItemsMethod:"#(GetBillItemsMethod)#",
	GetEPARCIMDetailMehtod:"#(GetEPARCIMDetailMehtod)#",
	LookUpFrequencyMethod:"#(LookUpFrequencyMethod)#",
	LookUpDurationMethod:"#(LookUpDurationMethod)#",
	LookUpInstrMethod:"#(LookUpInstrMethod)#",
	CalDoseMethod:"#(CalDoseMethod)#",
	GetCurrentDateTimeMethod:"#(GetCurrentDateTimeMethod)#",
	CheckConflictMethod:"#(CheckConflictMethod)#",
	GetConflictMethod:"#(GetConflictMethod)#",
	CheckOrderItemMethod:"#(CheckOrderItemMethod)#",
	InsertOrderItemMethod:"#(InsertOrderItemMethod)#",
	SaveOrderItemsMethod:"#(SaveOrderItemsMethod)#",
	PinNumberMethod:"#(PinNumberMethod)#",
	BillTypeID:"#(BillTypeID)#",
	BillTypeDesc:"#(BillTypeDesc)#",
	PatientNo:'#(PatientNo)#',
	DefaultOrderPriorRowid:"#(DefaultOrderPriorRowid)#",
	OutOrderPriorRowid:"#(OutOrderPriorRowid)#",
	OneOrderPriorRowid:"#(OneOrderPriorRowid)#",
	LongOrderPriorRowid:"#(LongOrderPriorRowid)#",
	ShortOrderPriorRowid:"#(ShortOrderPriorRowid)#",
	OMOrderPriorRowid:"#(OMOrderPriorRowid)#",
	OMSOrderPriorRowid:"#(OMSOrderPriorRowid)#",
	STATOrderPriorRowid:"#(STATOrderPriorRowid)#",
	LogonDoctorID:"#(DoctorID)#",
	LogonDoctorType:"#(DoctorType)#",
	PhSpecInstrList:"#(PhSpecInstrList)#",
	EnableButton:"#(EnableButton)#",
	DirectSave:"#(DirectSave)#",
	DHCDTInterface:"#(DHCDTInterface)#",
	DHCDTUploadFlag:"#(DHCDTUploadFlag)#",
	DTDepNotDoYDTS:"#(DTDepNotDoYDTS)#",
	DTDepNotDoXHZY:"#(DTDepNotDoXHZY)#",
	DTDepNotDoUpLoad:"#(DTDepNotDoUpLoad)#",
	STFreqRowid:"#(STFreqRowid)#",
	QDFreqRowid:"#(QDFreqRowid)#",
	STFreq:"#(STFreq)#",
	WYInstr:"#(WYInstr)#",
	NotFollowInstr:"#(NotFollowInstr)#",
	SkinTestInstr:"#(SkinTestInstr)#",
	IPDosingInstr:"#(IPDosingInstr)#",
	/*
	if (WYInstr!=""){WYInstr="^"+WYInstr+"^"}
	if (NotFollowInstr!=""){NotFollowInstr="^"+NotFollowInstr+"^"}
	if (SkinTestInstr!=""){SkinTestInstr="^"+SkinTestInstr+"^"}
	if (IPDosingInstr!=""){IPDosingInstr="^"+IPDosingInstr+"^"}
	*/
	OrderActionStr:"#(OrderActionStr)#",
	OrderActionJSON:"#(OrderActionJSON)#",
	OrderPhamacyWithDiagnos:"#(OrderPhamacyWithDiagnos)#",
	IPOrderPhamacyWithDiagnos:"#(IPOrderPhamacyWithDiagnos)#",
	CheckIPDepositMethod:"#(CheckIPDepositMethod)#",
	CheckDepositOrderMethod:"#(CheckDepositOrderMethod)#",
	IPDefaultDurRowId:"#(IPDefaultDurRowId)#",
	IPDefaultDur:"#(IPDefaultDur)#",
	IPDefaultDurFactor:"#(IPDefaultDurFactor)#",
	DTCheckCNMed:"#(DTCheckCNMed)#",
	SetArrivedStatusMethod:"#(SetArrivedStatusMethod)#",
	AddToFavMethod:"#(AddToFavMethod)#",
	GetOneOrderPriorQtyMethod:"#(GetOneOrderPriorQtyMethod)#",
	CheckRepeatLabSpecMethod:"#(CheckRepeatLabSpecMethod)#",
	FindRecLocByLogonLoc:"#(FindRecLocByLogonLoc)#",
	FindARCOSInputByLogonLoc:"#(FindARCOSInputByLogonLoc)#",
	OneOrderPriorInstrs:"#(OneOrderPriorInstrs)#",
	CurrentDeposit:"#(CurrentDeposit)#",
	CheckBillTypeSumMethod:"#(CheckBillTypeSumMethod)#",
	CreateOneOrder:"#(CreateOneOrder)#",
	GetStockQtyMethod:"#(GetStockQtyMethod)#",
	SetUserUnSaveDataMethod:"#(SetUserUnSaveDataMethod)#",
	GetUserUnSaveDataMethod:"#(GetUserUnSaveDataMethod)#",
	GetUserUnSaveCountMethod:"#(GetUserUnSaveCountMethod)#",
	SetSessionDataMethod:"#(SetSessionDataMethod)#",
	GetSessionDataMethod:"#(GetSessionDataMethod)#",
	StoreUnSaveData:"#(StoreUnSaveData)#",
	GetInstrGroupCodeMethod:"#(GetInstrGroupCodeMethod)#",
	PrescByInstr:"#(PrescByInstr)#",
	ReclocByInstr:"#(ReclocByInstr)#",
	GetInstrReclocMethod:"#(GetInstrReclocMethod)#",
	OPUnRepeatItemCat:"#(OPUnRepeatItemCat)#",
	FindSameOrderItemCatMethod:"#(FindSameOrderItemCatMethod)#",
	OutOrderNeedPackQty:"#(OutOrderNeedPackQty)#",
	IPShortOrderPriorST:"#(IPShortOrderPriorST)#",
	CheckBeforeUpdateMethod:"#(CheckBeforeUpdateMethod)#",
	OrderPhamacyOnlyPackQty:"#(OrderPhamacyOnlyPackQty)#",
	LogonLocIsAdmLoc:"#(LogonLocIsAdmLoc)#",
	LogonLocType:"#(LogonLocType)#",
	PrescByAuto:"#(PrescByAuto)#",
	GetARCIMEQResMethod:"#(GetARCIMEQResMethod)#",
	GetOrderPriceMethod:"#(GetOrderPriceMethod)#",
	Epissubtype:"#(Epissubtype)#",
	IPDosingRecLoc:"#(IPDosingRecLoc)#",
	GetDefaultBillTypeMethod:"#(GetDefaultBillTypeMethod)#",
	LookUpSingleFrequencyMethod:"#(LookUpSingleFrequencyMethod)#",
	LookUpSingleDurationMethod:"#(LookUpSingleDurationMethod)#",
	LookUpSingleInstrMethod:"#(LookUpSingleInstrMethod)#",
	MLUOMRowId:"#(MLUOMRowId)#",
	IVInstrRowId:"#(IVInstrRowId)#",
	CFSameRecDepForGroup:"#(CFSameRecDepForGroup)#",
	CFSameRecDepForARCOSGroup:"#(CFSameRecDepForARCOSGroup)#",
	CFNotAutoChangeRecloc:"#(CFNotAutoChangeRecloc)#",
	CFIPDispensingRecLoc:"#(CFIPDispensingRecLoc)#",
	CFNotAlertZeroPrice:"#(CFNotAlertZeroPrice)#",
	CFConfirmInsurSYMM:"#(CFConfirmInsurSYMM)#",
	EPDSYMCodeStr:"#(EPDSYMCodeStr)#",
	MRCBodyPartStr:"#(MRCBodyPartStr)#",
	OrderStageStr:"#(OrderStageStr)#",

	//AnaesthesiaID:GetAnaesthesiaID(),
	AnaesthesiaID:GetMenuPara("AnaesthesiaID"),
	CFAllConfirmInsurSYMM:"#(CFAllConfirmInsurSYMM)#",
	GetTodayDispTimesMethod:"#(GetTodayDispTimesMethod)#",
	GetDosingDateTimeMethod:"#(GetDosingDateTimeMethod)#",
	CFOPNotRepeatGenericName:"#(CFOPNotRepeatGenericName)#",
	CFOutAndOneDefaultPackQty:"#(CFOutAndOneDefaultPackQty)#",
	CalEqDoseMethod:"#(CalEqDoseMethod)#",
	//*************************************************
	InUseCPWRowId:"#(InUseCPWRowId)#",
	AddMRCPWItemToListMethod:"#(AddMRCPWItemToListMethod)#",
	//*************************************************
	CFNotCheckSameSpecItem:"#(CFNotCheckSameSpecItem)#",
	CFLongOrderNotAllowPackQty:"#(CFLongOrderNotAllowPackQty)#",
	PAADMMedDischarged:"#(PAADMMedDischarged)#",
	CheckOutOrderSumMethod:"#(CheckOutOrderSumMethod)#",
	CheckPriorAllowRangeMethod:"#(CheckPriorAllowRangeMethod)#",
	ChangeOEPrefMethod:"#(ChangeOEPrefMethod)#",
	ReChangeOEPrefMethod:"#(ReChangeOEPrefMethod)#",
	GetOEPrefMethod:"#(GetOEPrefMethod)#",
	SaveItemDefaultMethod:"#(SaveItemDefaultMethod)#",
	GetUserItemDefaultSingleMethod:"#(GetUserItemDefaultSingleMethod)#",
	ONCEFreq:"#(ONCEFreq)#",
	ONCEFreqRowid:"#(ONCEFreqRowid)#",
	OrderPriorRemarksStr:"#(OrderPriorRemarksStr)#",
	PRNOrderPriorRowid:"#(PRNOrderPriorRowid)#",
	OrderFlowRateUnitStr:"#(OrderFlowRateUnitStr)#",
	AntUseReasonStr:"#(AntUseReasonStr)#",
	SetArriveByOrder:"#(SetArriveByOrder)#",
	NotAlertRepeatItemCat:"#(NotAlertRepeatItemCat)#",
	//抗生素3****
	DoctorTypePoisonStr:"#(DoctorTypePoisonStr)#",
	DeleteAntibApplyMethod:"#(DeleteAntibApplyMethod)#",
	GetPHCPoisonByCode:"#(GetPHCPoisonByCode)#",
	CheckSusceptMethod:"#(CheckSusceptMethod)#",
	CheckInDurSameIMMethod:"#(CheckInDurSameIMMethod)#",
	DeleteAntReasonMethod:"#(DeleteAntReasonMethod)#",
	ReasonCanBeDeletedMethod:"#(ReasonCanBeDeletedMethod)#",
	AddAuditItemToListMethod:"#(AddAuditItemToListMethod)#",
	//抗生素3****
	LogonLocRowId:"#(LogonLocRowId)#",
	ConverDateMethod:"#(ConverDateMethod)#",
	ISLongOrderPriorMethod:"#(ISLongOrderPriorMethod)#",
	CheckLabItemActiveMethod:"#(CheckLabItemActiveMethod)#",
	CheckSpecOrdLinkedMethod:"#(CheckSpecOrdLinkedMethod)#",
	GetLocalInfusionInstrMethod:"#(GetLocalInfusionInstrMethod)#",
	CalcDurByArcimMethod:"#(CalcDurByArcimMethod)#", 
	GetInsurFlagMethod:"#(GetInsurFlagMethod)#",
	GetArcimFormRowidMethod:"#(GetArcimFormRowidMethod)#",
	GetItemServiceFlagMethod:"#(GetItemServiceFlagMethod)#",
	AllowEntryDecimalItemCat:"#(AllowEntryDecimalItemCat)#",
	OrderPriorStr:"#(OrderPriorStr)#",
	PatientID:"#(PatientID)#",
	EpisodeID:"#(EpisodeID)#",	
	PAAdmType:"#(PAAdmType)#",
	lookupListComponetId:1872,
	ListColSetCls:"#(ListColSetCls)#",
	ListColSetMth:"#(ListColSetMth)#",
	CTLOC:"#($g(%request.Data("CTLOC",1)))#",
	CFOrderMsgAlert:"#(CFOrderMsgAlert)#",
	GetPrescLimitMethod:"#(GetPrescLimitMethod)#",
	FindSameOrderItemMethod:"#(FindSameOrderItemMethod)#",
	//CA:-------------------start 数字签名-----------------
   	CAInit:"#(CAInit)#",
	GetOEORIItemXMLMethod:"#(GetOEORIItemXMLMethod)#",
	InsertCASignInfoMethod:"#(InsertCASignInfoMethod)#",
	strServerRan:"#($g(%session.Data("ServerRan")))#",
	strServerCert:"#($g(%session.Data("ServerCert")))#",
	strServerSignedData:"#($g(%session.Data("ServerSignedData")))#",
	IsCAWin:"",
	//-------------------------------
	UnloadUpdateFlag:false,
	GetARCItemSubCatID:"#(GetARCItemSubCatID)#",
	CheckItemDiagnos:"#(CheckItemDiagnos)#",
	GetOneFrequencyStrMethod:"#(GetOneFrequencyStrMethod)#",
	GetOneDurationStrMethod:"#(GetOneDurationStrMethod)#",
	GetOneInstrStrMethod:"#(GetOneInstrStrMethod)#",
	SelectContrlConfig:"#(SelectContrlConfig)#",
	CFSwithGlobalPriorUpdate:"#(CFSwithGlobalPriorUpdate)#",
	GetOrderPriorMethod:"#(GetOrderPriorMethod)#",
	PatTypeID:"#(PatTypeID)#",
	CardBillCardTypeValue:"#(CardBillCardTypeValue)#",
	warning:"#(warning)#",
	GetArcimByLabel:"#(GetArcimByLabel)#",
	GetIncItmHighValueFlag:"#(GetIncItmHighValueFlag)#",
	HighValueControl:"#(HighValueControl)#",
	MRDiagnoseCount:"#(MRDiagnoseCount)#",
	CheckOutOrderOtherMethod:"#(CheckOutOrderOtherMethod)#",
	FindSameOutOrderItemMethod:"#(FindSameOutOrderItemMethod)#",
	CheckArcimType:"#(CheckArcimType)#",
	PrescriptTypes:"#(PrescriptTypes)#",
	GetExceedDate:"#(GetExceedDate)#",
	IsHourItem:"#(IsHourItem)#",
	GetCopyItems:"#(GetCopyItems)#",
	layoutConfig:"#(layoutConfig)#",
	UpdateFinshAdm:"#(UpdateFinshAdm)#",
	GetUnActiveOrderItems:"#(GetUnActiveOrderItems)#",
	OrderPriorContrlConfig:"#(OrderPriorContrlConfig)#",
	isNurseLogin:"#(isNurseLogin)#",
	XCONTEXT:session["CONTEXT"],
	InsertUserARCOSS:"#(InsertUserARCOSS)#",
	GetPrescXML:"#(GetPrescXML)#",
	GetDTYDTS:"#(GetDTYDTS)#",
	CheckOnlyShort:"#(CheckOnlyShort)#",
	GetVerifiedOrder:"#(GetVerifiedOrder)#",
	IPDosingRecLocStr:"#(IPDosingRecLocStr)#",
	IsDeceased:"#(IsDeceased)#",
	FindPAPMIID:"#(FindPAPMIID)#",
	NotAlertZeroItemCatStr:"#(NotAlertZeroItemCatStr)#",
	GetBillUOMStrMethod:"#(GetBillUOMStrMethod)#",
	GetOrderPriceConUomMethod:"#(GetOrderPriceConUomMethod)#",
	GetDiagnosLimitDurMethod:"#(GetDiagnosLimitDurMethod)#",
	CheckDateTime:"#(CheckDateTime)#",
	PPRowId:GetMenuPara("PPRowId"),
	PilotProStr:"#(PilotProStr)#",
	CFPilotPatAdmReason:"#(CFPilotPatAdmReason)#",
	CFIPPilotPatAdmReason:"#(CFIPPilotPatAdmReason)#",
	CheckPilotCat:"#(CheckPilotCat)#",
	mradm:"#(mradm)#",
	OnePrintFlag:"#(OnePrintFlag)#",
	GetStayStatusFlag:"#(GetStayStatusFlag)#",
	GetArcimInsurCat:"#(GetArcimInsurCat)#",
	PilotProWarning:"",
	AuditFlag:"",
	INAdmTypeLoc:"#(INAdmTypeLoc)#",
	//知识库
	CheckLibPha:"#(CheckLibPha)#",
    GetDurgArcimMesage:"#(GetDurgArcimMesage)#",
    ZSKOpen:"#(ZSKOpen)#",
	CheckInsuCostControlMethod:"#(CheckInsuCostControlMethod)#",
	GetPrioCodeAndDesc:"#(GetPrioCodeAndDesc)#"

}
if (GlobalObj.PPRowId=="") {
	GlobalObj.PilotProStr="";
	GlobalObj.CFPilotPatAdmReason="";
	GlobalObj.CFIPPilotPatAdmReason="";
}else{
	GlobalObj.PilotProWarning=tkMakeServerCall("web.PilotProject.DHCDocPilotProject","ifWarning",GlobalObj.PPRowId,session['LOGON.USERID']);
}

//补录关联医嘱主医嘱信息
var VerifiedOrderObj={
	LinkedMasterOrderName:"",
	LinkedMasterOrderRowid:"",
	LinkedMasterOrderSeqNo:"",
	LinkedMasterOrderPriorRowid:"",
	LinkedMasterOrderFreRowId:"",
	LinkedMasterOrderFreFactor:"",
	LinkedMasterOrderFreInterval:"",
	LinkedMasterOrderFreDesc:""
}
function GetList_pnp() 
 {
   var strTemp =GetUserList();
   if (strTemp!="") IsCAWin=strTemp;
   else IsCAWin="";
 }
if(GlobalObj.CAInit==1) GetList_pnp();

//医嘱录入列表编辑属性默认值
/*
var DefaultStyleConfigObj={OrderDur:true,OrderFreq:true,OrderPackQty:true,OrderDoseQty:true,
	OrderDoseUOM:true,OrderInstr:true,OrderMasterSeqNo:false,OrderPrice:false,OrderAction:true,
	OrderLabSpec:true,OrderNotifyClinician:true,OrderInsurCat:true,OrderSpeedFlowRate:true,
	OrderFlowRateUnit:true,OrderNeedPIVAFlag:true,AntUseReason:true,OrderLabEpisodeNo:true
}
*/
if ((#(PatInIPAdmission)#==1)&&(GlobalObj.PAAdmType!="I")){
		alert('患者正在住院!');
	}
if (GlobalObj.IsDeceased=="Y"){
	 	alert('患者已故')
	}
//使用局部刷新,这样除第一次渲染较慢重复使用较快
function xhrRefresh(obj){
	var papmi=obj.papmi;
	var adm=obj.adm;
	var madm=obj.madm;
}

var EpisodeID="#(EpisodeID)#";
var PatientID="#(PatientID)#";
var mradm="#(mradm)#";
var XCONTEXT=session["CONTEXT"];
var escapedCTLOC="#($zcvt($g(%request.Data("CTLOC",1)),"O","URL"))#";
if (escapedCTLOC!="") escapedCTLOC=escape(escapedCTLOC);

	
//模板数据加载
var lnkFav="oeorder.entry.redrawprefs.new.csp?EpisodeID="+EpisodeID+"&CTLOC="+escapedCTLOC+"&XCONTEXT="+session["CONTEXT"]+"&OEWIN="+window.name+"&TABIDX=0";
//alert("lnkFav="+lnkFav)
websys_createWindow(lnkFav+'&PREFTAB=1','TRAK_hidden');

//KSS update by shp
GetKSSOrderStopInfo();

</script>
</body>
</HTML>
