<!-- Copyright (c) 2008 DTHealth Pty Limited. ALL RIGHTS RESERVED. dhcmrdiagnosnew.csp -->
<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
 //i ##Class(websys.SessionEvents).SessionExpired()
 i ##Class(ext.websys.SessionEvents).SessionExpired() 
 q 1
</csp:method>
<HTML XMLNS=TRAK>
<HEAD>
<TITLE><TRAK:TRANSLATE id=title>##(%session.Get("TITLE"))##</TRAK:TRANSLATE></TITLE>
<EXTHEALTH:EXT321></EXTHEALTH:EXT321>
<EXTHEALTH:HEAD></EXTHEALTH:HEAD>
<script language='javascript' src='../scripts/framework/dhcc.icare.lu.js'></script>
<Server>
;s DHTMXPath="../scripts_lib/dhtmx/"
s DHTMXPath=##class(ext.websys.DHTMLXLib).BasePath()
w "<LINK REL=""stylesheet"" TYPE=""text/css"" HREF="""_DHTMXPath_"dhtmlxTabbar/codebase/dhtmlxtabbar.css"">",!
;w "<LINK REL=""stylesheet"" TYPE=""text/css"" HREF="""_DHTMXPath_"dhtmlxTabbar/samples/common/style.css"">",!
w "<LINK REL=""stylesheet"" TYPE=""text/css"" HREF="""_DHTMXPath_"tagbox.css"">",!
w "<SCRIPT SRC='"_DHTMXPath_"dhtmlxTabbar/codebase/dhtmlxcommon.js'></SCRIPT>",!
w "<SCRIPT SRC='"_DHTMXPath_"dhtmlxTabbar/codebase/dhtmlxtabbar.js'></SCRIPT>",!
w "<SCRIPT SRC='"_DHTMXPath_"dhtmlxCombo/codebase/dhtmlxcombo.js'></SCRIPT>",!
w "<SCRIPT SRC='../SCRIPTS/DHCOPAdm.Common.js'></SCRIPT>",!
w "<SCRIPT SRC='../SCRIPTS/DHCWeb.OPCommon.js'></SCRIPT>",!
w "<SCRIPT SRC='../SCRIPTS/websys.js'></SCRIPT>",!
//add by zf 20150330 引用医政组接口
w "<SCRIPT SRC='../scripts/dhcmed/ss/interface/MRDiagnos.js'></SCRIPT>",!
</Server>
<!--
<LINK REL="stylesheet" TYPE="text/css" HREF="../scripts_lib/dhtmx/dhtmlxTabbar/codebase/dhtmlxtabbar.css">
<LINK REL="stylesheet" TYPE="text/css" HREF="../scripts_lib/dhtmx/dhtmlxTabbar/samples/common/style.css">
<LINK REL="stylesheet" TYPE="text/css" HREF="../scripts_lib/dhtmx/tagbox.css">
<SCRIPT SRC='../scripts_lib/dhtmx/dhtmlxTabbar/codebase/dhtmlxcommon.js'></SCRIPT>
<SCRIPT SRC='../scripts_lib/dhtmx/dhtmlxTabbar/codebase/dhtmlxtabbar.js'></SCRIPT>
<SCRIPT SRC='../scripts_lib/dhtmx/dhtmlxCombo/codebase/dhtmlxcombo.js'></SCRIPT>
-->
<!-- <TRAK:HEAD></TRAK:HEAD> -->
<Server>
  
  ;id要设为空?表示这是新插入纪录
  s id=""
  s mradm=##class(web.PAAdm).GetMRAdm(%request.Get("EpisodeID"))
  s EpisodeType=$P($G(^PAADM(%request.Get("EpisodeID"))),"^",2)
  S MRDiagnosType=##class(web.DHCDocDiagnosNew).GetDiagnosType(EpisodeType)
  d %request.Set("GetMRDiagnosType",MRDiagnosType)
  S MRDiagnosState=##class(web.DHCMRDiagnos).GetDiagnosStatus()
  d %request.Set("GetDiagnosStatus",MRDiagnosState)
  S GetPrivateTabName=##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetPrivateList"))
  S GetICDMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetICD"))
  s DiagnosDescLookup=##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.LookUpWithAliasBroker"))
  s GetHistoryMRDiagnoseList=##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetHistoryMRDiagnoseList"))
  s GetMRDiagnoseList=##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetMRDiagnoseList"))
  s InsertMRDiagnos=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.InsertMRDiagnos"))
  s GetDelInsuDiagnosMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOPAdmReg.DelInsuDiagnos"))
  s UpdateMRDiagnosNote=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.UpdateMRDiagnosNoteBroker")) 
  s SetArrivedStatus=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetArrivedStatus"))
  s DeleteMRDiagnos=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.DeleteMRDiagnos"))
  s Docid=$P(^SSU("SSUSR",%session.Get("LOGON.USERID")),"^",14)
  s FindClinicPathWayByICDMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCMRClinicalPathWays.FindClinicPathWayByICD"))
  s InsuPatTypeCheck=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.InsuPatTypeCheck"))
  s GetSeriousDiseaseByICDMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.GetSeriousDiseaseByICD"))
  s InfectiousAlertMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCMedEpidemicCtl.CheckCurrPaadm"))
  s UpdatePAADM=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.UpdatePAADM"))
  s FlagMarchDiagnose=##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.FlagMarchDiagnose"))
  s FindMRDIAICDCodeDR =##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetOneICD"))
  s UpdateMRDiagnosMethod =##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.UpdateMRDiagnos"))
  s CheckAdd=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.CheckAdd"))
  ;必须录入血压(科室扩展第12位)
  s NeedStolicMast=+(##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Get("LOGON.CTLOCID"),12))
  ;医保控费限制添加 Begin---
  s InsuSingleDisInfo=##Class(web.DHCDocOrderCommonExpand).GetInsuSingleDisInfo(%request.Get("EpisodeID"))
  s SetPAADMSingleDisMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommonExpand.SetPAADMSingleDis"))
  s PAADMSingleDisInfo=##Class(web.DHCDocOrderCommonExpand).PAADMSingleDisInfo(%request.Get("EpisodeID"))
  ;医保控费限制添加 End---

  ;获取审核的诊断是否是中医诊断
  s GetZYMRDiagnosFlag =##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetZYMRDiagnosFlag"))
  ;获取诊断对应的证描述
  s GetDiaSyndDesc =##Class(%CSP.Page).Encrypt($lb("web.DHCDocDiagnosNew.GetDiaSyndDesc"))
  
  
  s EpisodeID=%request.Get("EpisodeID")
  s FirstAdm=0,ReAdmis=0,OutReAdm=0,TransAdm=0,ILIFlag=0,AdmWay=""
  s FirstOrReadmis=$p(^PAADM(EpisodeID),"^",72)
  s AdmReadm=$p(^PAADM(EpisodeID),"^",56)
  s TransFlag=$p($g(^PAADM(EpisodeID,"DHC")),"^",5)
  s ILIFlag=$p($g(^PAADM(EpisodeID,"DHC")),"^",13)
  
  //血压
  s BPSystolic=$p($g(^MR(mradm,"PRO",1)),"^",4)
  s BPDiastolic=$p($g(^MR(mradm,"PRO",1)),"^",5)
  s Weight=$p($g(^MR(mradm,"PRO",1)),"^",27)
  s SpecialFlag=""
  //特殊人群
  s SpecialistStr=$p($G(^MR(mradm,"DHC")),"^",8) 
  s SpecialStrCreat=""
  if (SpecialistStr'=""){
	  s LengSpec=$L(SpecialistStr,"!")
	  for Sub=1:1:LengSpec
	  {
	   s SubStr=$P(SpecialistStr,"!",Sub)
	   s Va=$P(SubStr,$C(1),1)
	   continue:Va=""
	   i SpecialStrCreat="" s SpecialStrCreat=Va
	   e  s SpecialStrCreat=SpecialStrCreat_"^"_Va
	  }
  }
  
  ;默认初诊
  s FirstAdm=1
  s AdmWayID=$p($g(^PAADM(EpisodeID,2)),"^",47)
  I AdmWayID'="" S AdmWay=$P(^PAC("RTR",AdmWayID),"^",1)
  if (FirstOrReadmis="R")&&(AdmWay="CYFZ") s OutReAdm=1
  if (FirstOrReadmis="F") s FirstAdm=1
  if (AdmReadm="R")&&(AdmWay="MZFZ") s ReAdmis=1
  if (TransFlag="Y")&&(AdmWay="ZZ") s TransAdm=1
  
  if ILIFlag="Y" s ILIFlag=1
   s defaultDiagnosType=%request.Get("DefaultDiagnosType")
  if defaultDiagnosType="" {
	  if EpisodeType="I" {
	  	s defaultDiagnosTypeID=$O(^MRC("DTYP",0,"Code","M",0))
	  }else{
		s defaultDiagnosTypeID=$O(^MRC("DTYP",0,"Code","OP",0))
	  }
  }
  ;诊断类型
  s INDiaType=$O(^MRC("DTYP",0,"Code","C008",0)) ;入院诊断
  s OutDiaType=$O(^MRC("DTYP",0,"Code","DIS",0)) ;出院诊断
  s MainDiaType=$O(^MRC("DTYP",0,"Code","M",0)) ;主诊断
  s PREDiaType=$O(^MRC("DTYP",0,"Code","PRE",0)) ;初步诊断
  s OPDiaType=$O(^MRC("DTYP","OP",0)) ;门诊诊断
  ;诊断状态
  s DiaW=$O(^MRC("DSTAT",0,"Desc","待诊",0))
  s DiaH=$O(^MRC("DSTAT",0,"Desc","疑诊",0))
  s DiaD=$O(^MRC("DSTAT",0,"Desc","确诊",0))
 
  w "<input id='PatientID' name='PatientID' type='hidden' value='"_%request.Get("PatientID")_"'>",$C(13,10)
  w "<input id='mradm' name='mradm' type='hidden' value='"_mradm_"'>",$C(13,10)
  w "<input id='EpisodeType' name='EpisodeType' type='hidden' value='"_EpisodeType_"'>",$C(13,10)
  w "<input id='EpisodeID' name='EpisodeID' type='hidden' value='"_%request.Get("EpisodeID")_"'>",$C(13,10)
  w "<input id='GetPrivateTabName' name='GetPrivateTabName' type='hidden' value='"_GetPrivateTabName_"'>",$C(13,10)
  w "<input id='GetICDMethod' name='GetICDMethod' type='hidden' value='"_GetICDMethod_"'>",$C(13,10)
  w "<input id='DiagnosDescLookup' name='DiagnosDescLookup' type='hidden' value='"_DiagnosDescLookup_"'>",$C(13,10)
  w "<input id='ICDType' name='ICDType' type='hidden' value='"_%request.Get("ICDType")_"'>",$C(13,10)
  w "<input id='GetMRDiagnosType' name='GetMRDiagnosType' type='hidden' value='"_%request.Get("GetMRDiagnosType")_"'>",$C(13,10)
  w "<input id='GetDiagnosStatus' name='GetDiagnosStatus' type='hidden' value='"_%request.Get("GetDiagnosStatus")_"'>",$C(13,10)
  w "<input id='MRDiagnosState' name='MRDiagnosState' type='hidden' value='"_%request.Get("MRDiagnosState")_"'>",$C(13,10)
  w "<input id='AdmReason' name='AdmReason' type='hidden' value='"_%request.Get("AdmReason")_"'>",$C(13,10)
  w "<input id='GetMRDiagnoseList' name='GetMRDiagnoseList' type='hidden' value='"_GetMRDiagnoseList_"'>",$C(13,10)
  
  w "<input id='FlagMarchDiagnose' name='FlagMarchDiagnose' type='hidden' value='"_FlagMarchDiagnose_"'>",$C(13,10)
   
  w "<input id='InsertMRDiagnos' name='InsertMRDiagnos' type='hidden' value='"_InsertMRDiagnos_"'>",$C(13,10)
  w "<input id='GetDelInsuDiagnosMethod' name='GetDelInsuDiagnosMethod' type='hidden' value='"_GetDelInsuDiagnosMethod_"'>",$C(13,10)
  w "<input id='UpdateMRDiagnosNote' name='UpdateMRDiagnosNote' type='hidden' value='"_UpdateMRDiagnosNote_"'>",$C(13,10)
  w "<input id='SetArrivedStatus' name='SetArrivedStatus' type='hidden' value='"_SetArrivedStatus_"'>",$C(13,10)
  w "<input id='DeleteMRDiagnos' name='DeleteMRDiagnos' type='hidden' value='"_DeleteMRDiagnos_"'>",$C(13,10)
  w "<input id='GetHistoryMRDiagnoseList' name='GetHistoryMRDiagnoseList' type='hidden' value='"_GetHistoryMRDiagnoseList_"'>",$C(13,10)
  w "<input id='DocID' name='DocID' type='hidden' value='"_Docid_"'>",$C(13,10)
  w "<input id='InsuPatTypeCheck' name='InsuPatTypeCheck' type='hidden' value='"_InsuPatTypeCheck_"'>",$C(13,10)
  w "<input id='FindMRDIAICDCodeDR' name='FindMRDIAICDCodeDR' type='hidden' value='"_FindMRDIAICDCodeDR_"'>",$C(13,10)
  w "<input id='CheckAdd' name='CheckAdd' type='hidden' value='"_CheckAdd_"'>",$C(13,10)
  w "<input id='GetZYMRDiagnosFlag' name='GetZYMRDiagnosFlag' type='hidden' value='"_GetZYMRDiagnosFlag_"'>",$C(13,10)
  w "<input id='GetDiaSyndDesc' name='GetDiaSyndDesc' type='hidden' value='"_GetDiaSyndDesc_"'>",$C(13,10)


  //w "<div id='a_tabbar' style='width:1080; height:410'></DIV>",$C(13,10)
</Server>
<DHCDOC:JSCOMMON></DHCDOC:JSCOMMON>
</HEAD>

<BODY onload="BodyLoadHandler();">
<SCRIPT language = 'javascript' >
var combo_DiagnosDesc;
var combo_DiagnosType;
var w1, w2, w3, dhxWins;
var PrivateFirstListRowid;
var PatientID, MRADMID;
var MRDiagnosStatus = false;
var MRDiagnosNoteId;
var PreDiagnosText="";
var DiagnosValue1="";

var EpisodeType="#(EpisodeType)#";
var FirstAdm="#(FirstAdm)#"
var ReAdmis="#(ReAdmis)#"
var OutReAdm="#(OutReAdm)#"
var TransAdm="#(TransAdm)#"
var ILIFlag="#(ILIFlag)#"
var defaultDiagnosTypeID=#(defaultDiagnosTypeID)#;
var INDiaType="#(INDiaType)#"
var OutDiaType="#(OutDiaType)#"
var MainDiaType="#(MainDiaType)#"
var PREDiaType="#(PREDiaType)#"
var OPDiaType="#(OPDiaType)#"
var DiaW="#(DiaW)#"
var DiaH="#(DiaH)#"
var DiaD="#(DiaD)#"
var BPSystolic="#(BPSystolic)#"
var BPDiastolic="#(BPDiastolic)#"
var Weight="#(Weight)#"
var SpecialStrCreat="#(SpecialStrCreat)#"
var NeedStolicMast="#(NeedStolicMast)#"

var InsuSingleDisInfo="#(InsuSingleDisInfo)#"
var SetPAADMSingleDisMethod="#(SetPAADMSingleDisMethod)#"
var PAADMSingleDisInfo="#(PAADMSingleDisInfo)#"
//alert(FirstAdm+","+ReAdmis+","+OutReAdm+","+TransAdm+","+ILIFlag)
//定义已加载的标签
var initedTabbar=""

//加载模板
function inittabbar(){
  PatientID = document.getElementById('PatientID').value;
  var obj = document.getElementById("mradm");
  if (obj) var MRADMID = obj.value;
  
  //ChangeStrToPhoto(PatientID);
  //显示图片
  //ShowPicByPatientID(PatientID,"PicElement");

  tabbar2 = new dhtmlXTabBar("a_tabbar", "top");
  var ImagePath="#(DHTMXPath)#"+"dhtmlxTabbar/codebase/imgs/"
  tabbar2.setImagePath(ImagePath);
  tabbar2.setSkinColors("#FFFFFF", "#FFFACD");
  var USERID = session['LOGON.USERID'];
  var GetPrivateTabNameMethod = document.getElementById('GetPrivateTabName').value;
  Ret = cspRunServerMethod(GetPrivateTabNameMethod, USERID);
  if (Ret != '') {
    var PrivateIndexNum = Ret.split(String.fromCharCode(2))[1];
    var ListStr = Ret.split(String.fromCharCode(2))[0];
    if (ListStr != '') {
      PrivateListArray = ListStr.split(String.fromCharCode(1));
      for (i = 0; i < PrivateListArray.length; i++) {
        PrivateListRowid = PrivateListArray[i].split("^")[0];
        PrivateListDesc = PrivateListArray[i].split("^")[1];
        if ((PrivateListRowid != '') & (i == 0)) {
          PrivateFirstListRowid = PrivateListRowid
        }
        tabbar2.addTab('Tab' + PrivateListRowid, PrivateListDesc, 100);
        if(i==0){initChart(PrivateListRowid,"")}
      }
    }
    tabbar2.attachEvent("onSelect",initChart);
  }
}
function initChart(first_id,last_id){
	var PrivateListRowid=first_id.replace("Tab","")
	//已加载的放弃加载
	if (initedTabbar.indexOf("^"+PrivateListRowid+"^")>=0) {return true;}    		
	//alert("Active"+tabbar2.getActiveTab()+",initedTabbar:"+initedTabbar+",PrivateListRowid:"+PrivateListRowid+",last_id:"+last_id)
	initedTabbar=initedTabbar+"^"+PrivateListRowid+"^"
	///
	HtmlStr = '<html><body><table width="1050" heigh="99%" id="' + ('T' + PrivateListRowid) + '">';
	if (PrivateListRowid != '') {
		var DiagnosICDArry = new Array();
		var MaxLength = 0;
		var GetICDMethod = document.getElementById('GetICDMethod').value;
		for (k = 0; k < 5; k++) {
			DiagnosICDArry[k] = new Array();
			ICDStr = cspRunServerMethod(GetICDMethod, PrivateListRowid, k + 1);
			if (ICDStr != '') {
				DiagnosListArray = ICDStr.split(String.fromCharCode(1));
				if (DiagnosListArray.length > MaxLength) {
					MaxLength = DiagnosListArray.length
				};
				for (k1 = 0; k1 < DiagnosListArray.length; k1++) {
					DiagnosDesc = DiagnosListArray[k1].split('^')[1];
					DiagnosValue = DiagnosListArray[k1].split('^')[0];
					DiagnosICDArry[k][k1] = DiagnosValue + '^' + DiagnosDesc;
				}
			}
		}
		for (z1 = 0; z1 < MaxLength; z1++) {
			HtmlStr += '<tr>';
			for (z = 0; z < 5; z++) {
				if (z1 < DiagnosICDArry[z].length) {
					ICDDesc = DiagnosICDArry[z][z1].split('^')[1];
					ICDvalue = DiagnosICDArry[z][z1].split('^')[0];
					HtmlStr += '<td width="210" height="16"  id="Tag' + ICDvalue + '" ' + 'value="' + ICDvalue + '">' + ICDDesc + '</td>'
				} else {
					HtmlStr += '<td width="210" height="16"  id="TagNull" value="" ></td>'; //&nbsp;
				}
			}
			HtmlStr += '</tr>';
		}	
	}
	if (PrivateFirstListRowid != '') {
		tabbar2.setTabActive('Tab' + PrivateFirstListRowid);
	}

	HtmlStr += '</table></body></html>'  
	tabbar2.setContentHTML('Tab' + PrivateListRowid, HtmlStr);
	Obj = document.getElementById('T' + PrivateListRowid);
	if (Obj) {
		Obj.ondblclick = DocumentOnDBClickHandler;
          
        Obj.onmouseover = DocumentOnOverHandler;
        Obj.onmouseout = DocumentOnOutHandler;
	}   				
	return true;
}
function BodyLoadHandler() {
  PatientID = document.getElementById('PatientID').value;
  var obj = document.getElementById("mradm");
  if (obj) var MRADMID = obj.value;
  inittabbar();
  
  MydiagnosEditObj = document.getElementById('MyDiagnosEdit')
  if (MydiagnosEditObj) MydiagnosEditObj.onclick = MydiagnosEditshow;
  
  var obj=document.getElementById('BSaveMRDiagnos');
  if (obj) obj.onclick = SaveMRDiagnos;
  
  var obj=document.getElementById('BMoveUp');
  if (obj) obj.onclick = BMoveUpclickhandler;

  var obj=document.getElementById('BMoveDown');
  if (obj) obj.onclick = BMoveDownclickhandler;

  ///保存当前诊断界面的级别和顺序
  var obj=document.getElementById('BSave');
  if (obj) obj.onclick = BSaveclickhandler;
	   
  //查看本次就诊所有诊断
  var Obj = document.getElementById("BShowMRDiagnos");
  if (Obj) Obj.onclick = function(){
	var repUrl="dhcdocdiagnostype.csp?mradm="+document.getElementById("mradm").value+"&ICDType="+"ALL";
	window.open(repUrl,"_blank","height=600,width=800,left=50,top=50,status=yes,toolbar=no,menubar=no")
  }

	var obj=document.getElementById('DiagnosDesc1');
	if (obj) obj.onkeydown=DiagnosDesc_lookuphandler;
	
	var obj=document.getElementById('DiagnosDescimg');
	if (obj) obj.onclick=DiagnosDescimg;
 //SubWindowsShow();
 //诊断
  /*combo_DiagnosDesc = new dhtmlXCombo("DiagnosDesc1", "alfa", 200);
  combo_DiagnosDesc.attachEvent("onChange", combo_DiagnosDescKeydownhandler)
  combo_DiagnosDesc.attachEvent("onKeyPressed", combo_DiagnosDescKeyenterhandler);*/
  if (document.getElementById("MRDiagType")){
	  combo_DiagnosType = new dhtmlXCombo("MRDiagType", "alfa", 100);
	  MRDiagnosTypestr = document.getElementById("GetMRDiagnosType").value;
	  var Arr = DHCC_StrToArray(MRDiagnosTypestr);
	  combo_DiagnosType.addOption(Arr);
	  combo_DiagnosType.setComboValue(defaultDiagnosTypeID);
	  combo_DiagnosType.enableFilteringMode(false);
  }
  //
  combo_DiagnosStatus = new dhtmlXCombo("MRDiagStatus", "alfa", 100);
  MRDiagnosStatusstr = document.getElementById("GetDiagnosStatus").value;
  //combo_DiagnosStatus.attachEvent("onChange", combo_DiagnosStatusKeydownhandler)
  combo_DiagnosStatus.attachEvent("onKeyPressed",combo_DiagnosStatusKeydownhandler)
  //诊断状态
  if (MRDiagnosStatusstr!="") {
	var Arr = DHCC_StrToArray(MRDiagnosStatusstr);
  	combo_DiagnosStatus.addOption(Arr);
  	combo_DiagnosStatus.setComboValue(DiaD);
  }
  combo_DiagnosStatus.enableFilteringMode(false);
  //单病种
  combo_SingleDisList=new dhtmlXCombo("SingleDisList", "alfa", 100)
  combo_SingleDisList.attachEvent("onChange", combo_SingleDisListKeydownhandler)
  if (InsuSingleDisInfo!="") {
	var Arr = DHCC_StrToArray(InsuSingleDisInfo);
	combo_SingleDisList.addOption(Arr);
	if (PAADMSingleDisInfo!=""){
		combo_SingleDisList.setComboValue(PAADMSingleDisInfo);
	}
  }
  
  HisMRdiagnosShow();
  MRDiagnosShow(); //本次诊断初始化
  ReAdmStatusInit();
  //zlj--------------------------2013-01-15--------------------add发病日期默认为当天
  var obj=document.getElementById("IDate");
  if (obj) {
	   var tiannetMonthNew=tiannetMonth;	   
	  if ((tiannetMonthNew<10)&&(tiannetMonthNew.toString().length==1)) {
		   tiannetMonthNew="0"+tiannetMonthNew;
	  }
	  obj.value=tiannetYear+"-"+tiannetMonthNew+"-"+tiannetDay;	 
  }
  //zlj--------------------------2013-01-15--------------------end
}
function DiagnosDescimg(){
		var url='websys.lookup.csp';
		url += "?ID=DiagnosDesc1";
		url += "&CONTEXT=Kweb.DHCMRDiagnos:LookUpWithAlias";
		url += "&TLUJSF=DiagnosDeschandler";
		var obj=document.getElementById('DiagnosDesc1');
		if (obj) url += "&P1=" + obj.value;

		ShowFreqLookup=1;
		websys_lu(url,1,'');
		return websys_cancel();
	}
function DiagnosDesc_lookuphandler(e) {
	ShowFreqLookup=0;
	var type=websys_getType(e);
	var key=websys_getKey(e);
	var obj=websys_getSrcElement(e);
	if ((type=='click')||((type=='keydown')&&(key==117))||((type=='keydown')&&(key==13))){
		var url='websys.lookup.csp';
		url += "?ID=DiagnosDesc1";
		url += "&CONTEXT=Kweb.DHCMRDiagnos:LookUpWithAlias";
		url += "&TLUJSF=DiagnosDeschandler";
		var obj=document.getElementById('DiagnosDesc1');
		if (obj) url += "&P1=" + obj.value;

		ShowFreqLookup=1;
		websys_lu(url,1,'');
		return websys_cancel();
	}
}
function ReAdmStatusInit(){

	DHCC_SetElementData("ReAdmis",false);
	DHCC_SetElementData("FirstAdm",false);
	DHCC_SetElementData("ReAdmis",false);
	DHCC_SetElementData("TransAdm",false);
			
	if (ReAdmis==1){ReAdmis=true;}else{ReAdmis=false;}
	if (FirstAdm==1){FirstAdm=true;}else{FirstAdm=false;}
	if (OutReAdm==1){OutReAdm=true;}else{OutReAdm=false;}
	if (TransAdm==1){TransAdm=true;}else{TransAdm=false;}
	if (ILIFlag==1){ILIFlag=true;}else{ILIFlag=false;}
	
	var objReAdmis=document.getElementById("ReAdmis");
	if (objReAdmis) objReAdmis.onclick=function(){
		if (objReAdmis.checked==true){
			DHCC_SetElementData("FirstAdm",false);
			DHCC_SetElementData("OutReAdm",false);
			DHCC_SetElementData("TransAdm",false);
		}
	}

	var objFirstAdm=document.getElementById("FirstAdm");
	if (objFirstAdm) objFirstAdm.onclick=function(){
		if (objFirstAdm.checked==true){
			DHCC_SetElementData("ReAdmis",false);
			DHCC_SetElementData("OutReAdm",false);
			DHCC_SetElementData("TransAdm",false);
		}
	}
	var objOutReAdm=document.getElementById("OutReAdm");
	if (objOutReAdm) objOutReAdm.onclick=function(){
		if (objOutReAdm.checked==true){
			DHCC_SetElementData("FirstAdm",false);
			DHCC_SetElementData("ReAdmis",false);
			DHCC_SetElementData("TransAdm",false);
		}
	}
	var objTransAdm=document.getElementById("TransAdm");
	if (objTransAdm) objTransAdm.onclick=function(){
		if (objTransAdm.checked==true){
			DHCC_SetElementData("FirstAdm",false);
			DHCC_SetElementData("OutReAdm",false);
			DHCC_SetElementData("ReAdmis",false);
		}
	}
	
	DHCC_SetElementData("ReAdmis",ReAdmis);
	DHCC_SetElementData("FirstAdm",FirstAdm);
	DHCC_SetElementData("OutReAdm",OutReAdm);
	DHCC_SetElementData("TransAdm",TransAdm);
	DHCC_SetElementData("ILI",ILIFlag);
	DHCC_SetElementData("BPSystolic",BPSystolic);
	DHCC_SetElementData("BPDiastolic",BPDiastolic);
	DHCC_SetElementData("Weight",Weight);
	
	//初始化特殊人群
	CreaterSpecial();
	
}
function my_func(idn, ido) {
  return true;
}

function DocumentOnOverHandler(){
	var eSrc = window.event.srcElement;
	if (eSrc.id) {
    	if (eSrc.id == 'TagNull') return;
    	eSrc.style.color="#0080FF";
  	}
}
function DocumentOnOutHandler(){
	var eSrc = window.event.srcElement;
	if (eSrc.id) {
    	if (eSrc.id == 'TagNull') return;
    	eSrc.style.color="";
  	}
}
function DocumentOnDBClickHandler() {

  var eSrc = window.event.srcElement;
  if (eSrc.id) {
    if (eSrc.id == 'TagNull') return;
    eSrc.style.color="";
    //alert(document.getElementById(eSrc.id).innerText+' '+document.getElementById(eSrc.id).value);
    var DiagnosValue = eSrc.parentElement.getElementsByTagName("td")[eSrc.id].getAttribute("value");
    if (!DiagnosValue) return;
    if (!CheckIDate()) return;
    var obj = combo_DiagnosType.getSelectedText();
   if (obj=="") {
		    alert("请选择诊断类型！");
		    return;
	    }
   	var Str=MarchDiagnosis(DiagnosValue);
   	if (Str==1){
	   	var vaild = window.confirm("所加诊断在本次诊断中已经存在，请确认是否重复增加");
		if(vaild) {  
			EpisodeID1=document.getElementById("EpisodeID").value;
 			var encmeth=document.getElementById("InsuPatTypeCheck").value;
 			if (encmeth!=""){
	    		var ret = cspRunServerMethod(encmeth, EpisodeID1);
	     		if (ret==1){
			      	var bln = window.confirm("请先核对是否是医保病人,谢谢!");
			      	if (bln==false){return;}   
	     		}
 			}
   			InsertMRDiagnos(DiagnosValue);
		}else{return;}
	}else{
		EpisodeID1=document.getElementById("EpisodeID").value;
		var encmeth=document.getElementById("InsuPatTypeCheck").value;
		if (encmeth!=""){
			var ret = cspRunServerMethod(encmeth, EpisodeID1);
	 		if (ret==1){
		      	var bln = window.confirm("请先核对是否是医保病人,谢谢!");
		      	if (bln==false){return;}   
		   }
		}
		InsertMRDiagnos(DiagnosValue);

	}
  }
}

//返会诊断是否重复标识
function MarchDiagnosis(DiagnosValue)
{
      var Str=""
	  var obj = document.getElementById("mradm");
  	  if (obj) var MRADMID = obj.value;
  	  var obj = document.getElementById('FlagMarchDiagnose');
 	  if (obj) {var encmeth = obj.value;} 
      else {var encmeth = ''};
      if (encmeth != "") {
                   			Str = cspRunServerMethod(encmeth,MRADMID,DiagnosValue);
                   		 }
     
      return Str;
	}
function SaveMRDiagnos(){
	var EpisodeID=""
	var obj=document.getElementById('EpisodeID');
	if (obj){EpisodeID=obj.value}
	var CheckAdd=document.getElementById("CheckAdd").value
	if (CheckAdd){
		var CheckAddret=cspRunServerMethod(CheckAdd,EpisodeID);
	if (CheckAddret!=""){
		if(CheckAddret=='Discharged'){
	  alert("由于病人已出院,不能增加新诊断");
	  return;
  	}else if(CheckAddret=='Cancel'){
	  alert("由于病人已经退院，不能增加新诊断");
	  return;
  	}else{
	  alert("增加失败");	
	  return;
		}
	}
	}
	if (!CheckIDate()) return;
	//加入对非标准icd诊断录入是否为空的判断
	var obj = combo_DiagnosType.getSelectedText();
   if (obj=="") {
		    alert("请选择诊断类型！");
		    return;
	    }
	var Str=""
	//DiagnosValue = combo_DiagnosDesc.getSelectedValue();
	DiagnosValue=DiagnosValue1
	if ((DiagnosValue==null)||(DiagnosValue=="")) {
	  //MRDIADesc=combo_DiagnosDesc.getComboText();
	  MRDIADesc=document.getElementById("DiagnosDesc1").value
	  if ((MRDIADesc=="")) {alert("录入的非标准icd诊断注释不允许为空,请在诊断处输入诊断注释!");return;}
	  
  }
	//加入对本次就诊是否为重复诊断的判断
	var Str=MarchDiagnosis(DiagnosValue);
	if(Str==1)
	{var vaild = window.confirm("所加诊断在本次诊断中已经存在，请确认是否重复增加！");
		if(vaild)
		{
		 combo_DiagnosStatusKeydownhandler();
		 InsertOtherInfo(true);
			}
		else{   
				
        		//combo_DiagnosDesc.clearAll();
        		document.getElementById("DiagnosDesc1").value=""
        		DiagnosValue1=""
  				//combo_DiagnosDesc.setComboText('');
  				combo_DiagnosStatus.setComboValue(3);
  				return;}
	}
	else{
	
	combo_DiagnosStatusKeydownhandler();
	InsertOtherInfo(true);
	}
}

function MydiagnosEditshow() {
  url = "websys.default.csp?WEBSYS.TCOMPONENT=DHCMRDiagnosEdit"
  websys_createWindow(url, true, "status=1,scrollbars=1,top=0,left=0,width=1200,height=700")
}

function SubWindowsShow() {

  dhxWins = new dhtmlXWindows();
  dhxWins.vp.style.border = "#909090 1px solid";
  dhxWins.enableAutoViewport(true);
  //dhxWins.setViewport(0, 260, 1024, 200);
  //dhxWins.vp.style.border = "#909090 1px solid";
  
  var ImagePath="#(DHTMXPath)#"+"dhtmlxWindows/codebase/imgs/"
  dhxWins.setImagePath(ImagePath);
  
  var w1 = dhxWins.createWindow("w1", 0, 462, 1024, 60);
  w1.setText("诊 断");
  //dhxWins.window("w1").bringToTop();
  dhxWins.window("w1").denyResize();
  w1.button("close").disable();
  var w2 = dhxWins.createWindow("w2", 0, 260, 820, 200);
  w2.setText("本 次 诊 断");
  //dhxWins.window("w2").denyResize();
  w2.button("close").disable();
  var w3 = dhxWins.createWindow("w3", 824, 260, 200, 200);
  w3.setText("历 史 诊 断");
  //dhxWins.window("w3").denyResize();
  w3.button("close").disable();

}

function combo_DiagnosDescKeydownhandler() {


  DiagnosDesc = combo_DiagnosDesc.getSelectedText();
 
  DiagnosValue = combo_DiagnosDesc.getSelectedValue();
  //if ((DiagnosDesc == '') || (DiagnosValue == '')) return;
  if (DiagnosValue == combo_DiagnosDesc.getComboText()) {
	
    combo_DiagnosDesc.clearAll();
    combo_DiagnosDesc.setComboText('');
    return;
  }
  EpisodeID1=document.getElementById("EpisodeID").value;
  var encmeth=document.getElementById("InsuPatTypeCheck").value;
 // s InsuPatTypeCheck=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.InsuPatTypeCheck"))
   if (encmeth!=""){
	    var ret = cspRunServerMethod(encmeth, EpisodeID1);
	    if (ret==1){
		   var bln = window.confirm("请先核对是否是医保病人,谢谢!");
		   if (bln==false){return;}   
	   }
   }
  //InsertMRDiagnos(DiagnosValue);
  combo_DiagnosStatus.DOMelem_input.focus();
}
function DiagnosDeschandler(value){
	var listArry=value.split("^")
	DiagnosDesc=listArry[0];
	DiagnosValue=listArry[1];
	if(DiagnosDesc!==""){
		  EpisodeID1=document.getElementById("EpisodeID").value;
		  var encmeth=document.getElementById("InsuPatTypeCheck").value;
		 // s InsuPatTypeCheck=##Class(%CSP.Page).Encrypt($lb("web.DHCMRDiagnos.InsuPatTypeCheck"))
		   if (encmeth!=""){
			    var ret = cspRunServerMethod(encmeth, EpisodeID1);
			    if (ret==1){
				   var bln = window.confirm("请先核对是否是医保病人,谢谢!");
				   if (bln==false){return;}   
			   }
		   }
	}
	document.getElementById("DiagnosDesc1").value=DiagnosDesc
	DiagnosValue1=DiagnosValue
	
}
function combo_DiagnosDescKeyenterhandler() {
  var Str = combo_DiagnosDesc.getComboText();
  if (Str == '') {
    return
  };
  var DiagnosDescLookup = document.getElementById('DiagnosDescLookup').value;
  var CNDiagnoseFlag = document.getElementById("CNDiagnoseFlag").checked;
  if (CNDiagnoseFlag) CNDiagnoseFlag="1";
  Ret = cspRunServerMethod(DiagnosDescLookup, Str,CNDiagnoseFlag)
  combo_DiagnosDesc.clearAll();
  var Arr = DHCC_StrToArray(Ret);
  combo_DiagnosDesc.addOption(Arr);
}

function DHCC_StrToArray(str) {
  var x = new Array();
  var Arr = str.split('^');
  for (var i = 0; i < Arr.length; i++) {
    var Arr1 = Arr[i].split(String.fromCharCode(1));
    var label = Arr1[1];
    var val = Arr1[0];
    if ((typeof(val) == "undefined") || (val === null)) val = label;
    x[i] = [val, label];
  }
  return x;
}

function combo_DiagnosStatusKeydownhandler(){

	//下边屏蔽为验证与上一次所开医嘱是否重复，但是页面刷新会失效。
   //var Str = combo_DiagnosDesc.getComboText();
   //if (Trim(Str) == '') return;
   //if (PreDiagnosText==Str) return;
   //PreDiagnosText=Str;
   //DiagnosDesc = combo_DiagnosDesc.getSelectedText();
   //DiagnosValue = combo_DiagnosDesc.getSelectedValue();
   DiagnosDesc = document.getElementById("DiagnosDesc1").value;
   DiagnosValue = DiagnosValue1;
   //if ((DiagnosDesc == '') || (DiagnosValue == '')) return;
   /*if (DiagnosValue == combo_DiagnosDesc.getComboText()) {
     combo_DiagnosDesc.clearAll();
     combo_DiagnosDesc.setComboText('');
     return;
   }*/
   EpisodeID1=document.getElementById("EpisodeID").value;
   var encmeth=document.getElementById("InsuPatTypeCheck").value;
   if (encmeth!=""){
	    var ret = cspRunServerMethod(encmeth, EpisodeID1);
	    if (ret==1){
		   var bln = window.confirm("请先核对是否是医保病人,谢谢!");
		   if (bln==false){return;}   
	   }
   }
   
  
  InsertMRDiagnos(DiagnosValue);
  
  //combo_DiagnosDesc.clearAll();
  //combo_DiagnosDesc.setComboText('');
  document.getElementById("DiagnosDesc1").value=""
  DiagnosValue1=""
  combo_DiagnosStatus.setComboValue(3);

}
function Trim(str)
{
	return str.replace(/[\t\n\r ]/g, "");
}
function HisdiagnosObjDbclick() {

  if (!window.frames.DHCHisDiagnos.event.srcElement) return;
  var eSrc = window.frames.DHCHisDiagnos.event.srcElement;
  if (!eSrc) return;
  if (eSrc.id) {
    if ((eSrc.id == 'TagNull') || (eSrc.id == '')) return;
	if (eSrc.id.indexOf("w3")<0) return;
    //alert(document.getElementById(eSrc.id).innerText+' '+document.getElementById(eSrc.id).value)
    var DiagnosValue = eSrc.parentElement.getElementsByTagName("div")[eSrc.id].getAttribute("value");;
    //DiagnosValue = window.frames.DHCHisDiagnos.document.getElementById(eSrc.id).value;
    DiagnosDesc=eSrc.parentElement.getElementsByTagName("div")[eSrc.id].innerText;
    if  (!DiagnosValue){
	    //combo_DiagnosDesc.setComboText(DiagnosDesc)
		DiagnosValue1=DiagnosValue
	    InsertMRDiagnos("")
	    DiagnosValue=""
    }
    if (!DiagnosValue) return;
	if (!CheckIDate()) return;
 
    var Str=MarchDiagnosis(DiagnosValue);
   	if (Str==1){
	   	
	   	var vaild = window.confirm("所加诊断在本次诊断中已经存在，请确认是否重复增加");
		if(vaild)
			{  
			EpisodeID1=document.getElementById("EpisodeID").value;
  			var encmeth=document.getElementById("InsuPatTypeCheck").value;
  			if (encmeth!=""){
	 							ret = cspRunServerMethod(encmeth, EpisodeID1);
			 if (ret==1){
	    				var bln = window.confirm("请先核对是否是医保病人,谢谢!");
				if (bln==false){return;}   
	 					}
  							}
    		InsertMRDiagnos(DiagnosValue);
			
				}
		else{return;}
   	}
    else{ EpisodeID1=document.getElementById("EpisodeID").value;
  		var encmeth=document.getElementById("InsuPatTypeCheck").value;
  		if (encmeth!=""){
		 ret = cspRunServerMethod(encmeth, EpisodeID1);
	 	if (ret==1){
	    var bln = window.confirm("请先核对是否是医保病人,谢谢!");
		if (bln==false){return;}   
	 				}
  						}
    InsertMRDiagnos(DiagnosValue);
    }
  }
}

function GetRow(Rowindex){
	try{
	var objtbl=window.DHCAllocframe.document.getElementById('w3table');
	var RowObj=objtbl.rows[Rowindex];
	//var rowitems=RowObj.all;
	//if (!rowitems) rowitems=RowObj.getElementsByTagName("LABEL");
	for (var j=0;j<RowObj.childNodes.length;j++) {
		if (RowObj.childNodes[j].id) {
			var Id=RowObj.childNodes[j].id;
			var arrId=Id.split("z");
			var Row=arrId[arrId.length-1];
			break;
		}
		if (RowObj.childNodes[j].firstChild.id) {
			var Id=RowObj.childNodes[j].firstChild.id;
			var arrId=Id.split("z");
			var Row=arrId[arrId.length-1];
			break;
		}
	}
	return Row;
	}
	catch(e){return 1;}
}
var SelectedRowIndex="";
function MRDiagnosShowObjClick() {
  if (!window.DHCAllocframe.event.srcElement) return;
  var eSrc = window.DHCAllocframe.event.srcElement;
  var eSrcId=eSrc.id
  while(eSrc.tagName != "TR") {
	  if (eSrc.tagName == "TH") break;
	  eSrc=websys_getParentElement(eSrc);
	  if (eSrc==null) return
  }
  var rowIndex=eSrc.rowIndex;
  /*
  var elem=eSrcId.split("z");
  if (elem.length==1) return;
  row=elem[elem.length-1];
  */
  row=GetRow(rowIndex);
  if ((SelectedRowIndex!="")&&(SelectedRowIndex!=rowIndex)) {
		selectrow=GetRow(SelectedRowIndex);
		if (eSrc.getElementsByTagName("div")["RowImagez"+selectrow]){
	 		eSrc.getElementsByTagName("div")["RowImagez"+selectrow].innerHTML="";
		}
  }
  SelectedRowIndex=rowIndex;
  if  (eSrc.getElementsByTagName("div")["RowImagez"+row]){
  	eSrc.getElementsByTagName("div")["RowImagez"+row].innerHTML='<img SRC="../images/websys/pagenext.gif" BORDER="0" >'
  }
  if (eSrcId) {
	  
    if (eSrcId == '') return;
    if (eSrcId.indexOf('MRDiagnosDel') > -1) {
      return;
      if (eSrc.document.getElementById(eSrc.id).value == '') return;
      if (MRDiagnosStatus == true) return;
      MRDiagnosDelValue = eSrc.getElementsByTagName("div")[eSrcId].getAttribute("value");  //eSrc.document.getElementById(eSrc.id).value;
      var MRDiagnosDelConfirm = window.confirm('是否删除 ' + MRDiagnosDelValue.split('^')[1]);
      if (MRDiagnosDelConfirm == true) {
        MRDiagnosRowid = MRDiagnosDelValue.split('^')[0];
        DeleteMRDiagnos(MRDiagnosRowid)
      } else {
        return;
      }
    }
    if (eSrcId.indexOf('MRDiagnosNote') > -1) {
      if (MRDiagnosStatus == false) {
        MRDiagnosStatus = true;
        MRDiagnosNoteId = eSrc.getElementsByTagName("div")[eSrcId].getAttribute("value"); //eSrc.document.getElementById(eSrcId).value;
        MRDiagnosNoteSource = eSrc.getElementsByTagName("div")[eSrcId].innerText;  //eSrc.document.getElementById(eSrcId).innerText;
        MRDiagnosEdit(MRDiagnosNoteId);
      } else {
	      
        if (!eSrc.getElementsByTagName("div")['DiagnosNotechange']) return;
       
        if (eSrc.getElementsByTagName("div")['DiagnosNotechange'].getAttribute("value") != MRDiagnosNoteSource) {
          DiagnosNotechangevalue = eSrc.getElementsByTagName("div")['DiagnosNotechange'].getAttribute("value");
         
          
          UpdateMrdiagNote(MRDiagnosNoteId, DiagnosNotechangevalue);
        } else {
	      
          MRDiagnosStatus = false;
          MRDiagnosNoteId = '';
          MRDiagnosNoteSource = '';
          MRDiagnosShow();
        }
      }
    }
    
    if (eSrcId == 'TagNull') {
      if (!eSrc.getElementsByTagName("div")['DiagnosNotechange']) return;
      if (eSrc.getElementsByTagName("div")['DiagnosNotechange'].getAttribute("value") != MRDiagnosNoteSource) {
        DiagnosNotechangevalue = eSrc.getElementsByTagName("div")['DiagnosNotechange'].getAttribute("value");
     
        UpdateMrdiagNote(MRDiagnosNoteId, DiagnosNotechangevalue);
      } else {
	      
        MRDiagnosStatus = false;
        MRDiagnosNoteId = '';
        MRDiagnosNoteSource = '';
        MRDiagnosShow();
      }
    }
    
  }
}

function HisMRdiagnosShow() {
	
  var GetHistoryMRDiagnoseList = document.getElementById('GetHistoryMRDiagnoseList');
  if (GetHistoryMRDiagnoseList) {
    var encmeth = GetHistoryMRDiagnoseList.value
  } else {
    var encmeth = ''
  };
  if (encmeth != "") {
    ret = cspRunServerMethod(encmeth, PatientID, '',session['LOGON.CTLOCID'])
    if (ret != '') {
      //var htmlString = "<div style='font-size: 14px;'>"+ret+"</div>";
      
      var HtmlStr = '<html><HEAD><LINK REL="stylesheet" TYPE="text/css" HREF="'+"#(DHTMXPath)#"+'tagbox.css"></HEAD><body ondblclick="window.parent.HisdiagnosObjDbclick()"><table width="300" border="0" cellspacing="0" cellpadding="0" id="w3table" >'
      HtmlStr += '<THEAD><TH id=1 width=100px NOWRAP>ICD描述</TH><TH id=2 width=45px NOWRAP>医生</TH><TH id=3 width=60px NOWRAP>诊断日期</TH><TH id=4 width=60px NOWRAP>重复记录</TH></THEAD>'
      retarry = ret.split(String.fromCharCode(1));
      for (i = 0; i < retarry.length; i++) {
        retItemArry = retarry[i].split('^');
        if ((i % 2) == 1) {
          HtmlStr += '<tr class="RowOdd">';
        } else {
          HtmlStr += '<tr class="RowEven">';
        }
        OldDiagnosDesc = retItemArry[0];
        OldDiagnosValue = retItemArry[1];
        OldDiagnosMRDesc= retItemArry[2];
        OldDiagnosDoctor = retItemArry[3];
        OldDiagnosDate = retItemArry[4];
        OldDiagnosTime = retItemArry[5];
        if (OldDiagnosValue=="") OldDiagnosDesc=OldDiagnosMRDesc;
        var Row=parseInt(i)+1
        var Rowname="BHisMRDiagRepBtnz"+OldDiagnosValue;
        var HisMRDiagRepBtn='<input type="submit" name='+Rowname+' id='+Rowname+' onclick="window.parent.HisMRDiagRepClick(this)" Value="重复记录"/>';
        
        HtmlStr += '<td width="100"><div id="w3' + i + '" value="' + OldDiagnosValue + '" style="font-size: 12px; color: #FF6600;">' + OldDiagnosDesc + '</div></td>';
        HtmlStr += '<td width="45"><div id="TagNull" style="font-size: 10px;color: #000000">' + OldDiagnosDoctor + '</div></td>';
        HtmlStr+='<td width="60"><div id="TagNull" style="font-size: 10px;color: #000000">'+OldDiagnosDate+'</div></td>';
        HtmlStr+='<td width="60"><div id="TagNull" style="font-size: 10px;color: #000000">'+HisMRDiagRepBtn+'</div></td>';
        //HtmlStr+='<td width="80"><div id="TagNull" style="font-size: 10px;color: #000000">'+OldDiagnosTime+'</div></td>';
        HtmlStr += '</tr>';
      }
      HtmlStr += '</table></body></html>';
      //dhxWins.window("w3").attachHTMLString(HtmlStr);
      window.frames.DHCHisDiagnos.document.write(HtmlStr);

    }
  }
}
function HisMRDiagRepClick(e)
{
	var SrcName=e.id
	if (SrcName!="") {
		var ICDRowid=SrcName.split("z")[1];
		if (ICDRowid!="") {
			//得到这个ICDRowid的重复记录
			var repUrl="websys.default.csp?WEBSYS.TCOMPONENT=DHCHisMRDiagRep&PatientID="+PatientID+"&ICDCodeRowId="+ICDRowid;
			window.open(repUrl,"_blank","height=600,width=600,left=50,top=50,status=yes,toolbar=no,menubar=no,location=no")
		}
	}
}

function BSaveclickhandler(e)  {
	var MRDiagnosDoc=window.DHCAllocframe.document;
	var objtbl=MRDiagnosDoc.getElementById('w3table');
	var rows=objtbl.rows.length;
	for (var i=1;i<rows;i++) {
		selectrow=GetRow(i);
		var MRDiagnosRowId=MRDiagnosDoc.getElementById("MRDiagnosDescz"+selectrow).getAttribute("value");
		var MRDiagnosLevel=MRDiagnosDoc.getElementById("TagLevelz"+selectrow).innerHTML;
		var MRDiagnosSequence=i;
		var info=MRDiagnosLevel+"^"+MRDiagnosSequence
		//alert(MRDiagnosRowId+","+info)
		ret = cspRunServerMethod("#(UpdateMRDiagnosMethod)#", MRDiagnosRowId, info)
	}
}
function BMoveUpclickhandler(e) {
	try {
		var objtbl=window.DHCAllocframe.document.getElementById('w3table');
		var CurrentRowobj=objtbl.rows[SelectedRowIndex];
		var objpar=websys_getParentElement(CurrentRowobj);
		CurrentRowobj=objpar.rows[SelectedRowIndex-1];
		var objnew=window.DHCAllocframe.document.createElement(CurrentRowobj.tagName);
		objnew=CurrentRowobj;
		if ((SelectedRowIndex!="")&&(SelectedRowIndex!=1)) {
			selectrow=GetRow(SelectedRowIndex);
			var PreRow=SelectedRowIndex-1;
			var PreRowobj=CurrentRowobj.previousSibling;
			SelectedRowIndex=PreRow;		
			objnew=objpar.insertBefore(objnew,PreRowobj);
			//alert(objpar.rows.length);
		}
		
		BSaveclickhandler();
	}catch(e){alert(e.message)}
}
function BMoveDownclickhandler() {
	try {
		var objtbl=window.DHCAllocframe.document.getElementById('w3table');
		var CurrentRowobj=objtbl.rows[SelectedRowIndex];
		var objpar=websys_getParentElement(CurrentRowobj);
		CurrentRowobj=objpar.rows[SelectedRowIndex-1];
		var objnew=window.DHCAllocframe.document.createElement(CurrentRowobj.tagName);
		objnew=CurrentRowobj;
		if ((SelectedRowIndex!="")&&(SelectedRowIndex!=objpar.rows.length)) {
			var NextRow=SelectedRowIndex+1;
			var NextRowobj=CurrentRowobj.nextSibling;
			if (NextRowobj==objpar.lastChild) {
				objnew=objpar.appendChild(objnew);
			} else if ((NextRowobj)&&(NextRowobj!=objpar.lastChild)) {
				objnew=objpar.insertBefore(objnew,NextRowobj.nextSibling);
			} 
			SelectedRowIndex=NextRow;
			//alert(objpar.rows.length);
		}
		
		BSaveclickhandler();
	}catch(e){alert(e.message)}
}


function MRDiagnosEdit(MRDiagnosNoteId) {
  var obj = document.getElementById("mradm");
  if (obj) var MRADMID = obj.value;
  var GetMRDiagnoseList = document.getElementById('GetMRDiagnoseList');
  if (GetMRDiagnoseList) {
    var encmeth = GetMRDiagnoseList.value
  } else {
    var encmeth = ''
  };
  if (encmeth != "") {
    ret = cspRunServerMethod(encmeth, MRADMID, '','CURRENT')
    if (ret != '') {
      if (window.DHCAllocframe.document.getElementById("w3table")) {
        window.DHCAllocframe.document.getElementById("w3table").removeNode(true);
      }
      var HtmlStr = '<html><body onclick="window.parent.MRDiagnosShowObjClick()"; ><table width="730" border="0" cellspacing="0" cellpadding="0" id="w3table" >';
      var HtmlStr = '<html><HEAD><LINK REL="stylesheet" TYPE="text/css" HREF="'+"#(DHTMXPath)#"+'tagbox.css"></HEAD><body onclick="window.parent.MRDiagnosShowObjClick()"; ><table width="730" border="0" cellspacing="0" cellpadding="0" id="w3table" >';
      HtmlStr += '<THEAD><TH id=1 width=10px NOWRAP></TH><TH id=2 width=60px NOWRAP>诊断类型</TH><TH id=3 width=200px NOWRAP>ICD描述</TH><TH id=4 width=180px NOWRAP>诊断注释</TH><TH id=5 width=60px NOWRAP>诊断状态</TH><TH id=6 width=60px NOWRAP>ICD代码</TH><TH id=7 width=38px NOWRAP>删除</TH><TH id=8 width=20px NOWRAP>升级</TH><TH id=9 width=20px NOWRAP>降级</TH><TH id=5 width=80px NOWRAP>日期</TH><TH id=12 width=60px NOWRAP>诊断级别</TH><TH id=13 width=60px NOWRAP>中医证型</TH></THEAD>'
      retarry = ret.split(String.fromCharCode(1));
      for (i = 0; i < retarry.length; i++) {
        retItemArry = retarry[i].split('^');
        if ((i % 2) == 1) {
          HtmlStr += '<tr class="RowOdd">';
        } else {
          HtmlStr += '<tr class="RowEven">';
        }

      DiagnosDesc = retItemArry[0];
      DiagnosValue = retItemArry[1];
      DiagnosCodeRowid = retItemArry[2];
      DiagnosMRDesc = retItemArry[3];
      DiagnosICDCode = retItemArry[4];
      DiagnosType = retItemArry[5];
      DiagnosNote = retItemArry[6];
      DiagnosDate = retItemArry[7];
      DiagnosTime = retItemArry[8];
      DiagnosStatus = retItemArry[9];
      DiagnosLevel =retItemArry[10];
      DiagnosSequence =retItemArry[11];
      if (DiagnosLevel=="") DiagnosLevel=1;
      var SpaceHTML="&nbsp";
	  var SpaceHTML1="";
	  if (DiagnosLevel>1) {
		var num=(DiagnosLevel-1)*6
		for (var j=1; j<num; j++) SpaceHTML1=SpaceHTML1+SpaceHTML;
	 }
	 var DiagnosDesc1=SpaceHTML1+DiagnosDesc;
	  //获取中医诊断标志
	 var ZYFlag="N"
	 var Obj=document.getElementById('GetZYMRDiagnosFlag');
	 if (Obj){
		ZYFlag=cspRunServerMethod(Obj.value, DiagnosValue)
	 }
	 
	 
        var row=i+1;
        HtmlStr += '<td width="10"><div id="RowImagez' + row + '">&nbsp&nbsp&nbsp</div></td>';
        HtmlStr += '<td width="60"><div id="DiagnosTypez' + row + '">'+DiagnosType + '</div></td>';
        HtmlStr += '<td width="200" NOWRAP><div id="MRDiagnosDescz' + row + '" value="' + DiagnosValue + '">' + DiagnosDesc1 + '</div><input type="hidden" id="DiagnosDescz'+row+'" value="' + DiagnosDesc + '"/></td>';
         if (DiagnosValue != MRDiagnosNoteId) {
          HtmlStr += '<td width="180"><div id="MRDiagnosNotez' + row + '" value="' + DiagnosValue + '" style="width:200; height:16 ">' + DiagnosNote + '</div></td>';
        } else {
          HtmlStr += '<td width="180"><div align="left" id="TagNull">' + '<input type="text" name="DiagnosNote" id="DiagnosNotechange" Value="' + DiagnosNote + '"/><input type="submit" name="BDiagnosNote" id="BDiagnosNote" onclick="window.parent.SaveMRDiagnosNote()" Value="保存"/></div></td>';
        }
       
        HtmlStr += '<td width="60"><div id="DiagnosStatusz' + row + '">'+DiagnosStatus + '</div></td>';
        HtmlStr += '<td width="60"><div id="DiagnosICDCodez' + row + '">'+DiagnosICDCode + '</div></td>';
        
        //HtmlStr += '<td width="0"><div id="TagNull">' + DiagnosTime + '</div></td>';
        HtmlStr += '<td width="38"><div id="MRDiagnosDelz' + row + '" value="' + DiagnosValue + '^' + DiagnosDesc + '">' + '<a href="javascript:window.parent.DeleteMRDiagnos(' + "'" + DiagnosValue + '^' + DiagnosDesc + "'" + ')"><img SRC="../images/websys/delete.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="20"><div id="LevelUpz' + row + '" value="">' + '<a href="javascript:window.parent.AdjustMRDiagnosLevel('+"'" + row +"'"+ ',-1'+')"><img SRC="../images/websys/arrow_left.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="20"><div id="LevelDownz' + row + '" value="">' + '<a href="javascript:window.parent.AdjustMRDiagnosLevel('+"'" + row+"'"+ ',1'+')"><img SRC="../images/websys/arrow_right.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="80"><div id="DiagnosDatez' + row + '">'+DiagnosDate + '</div></td>';
        HtmlStr += '<td width="60"><div id="TagLevelz'+ row+'">' + DiagnosLevel + '</div></td>';
        if (ZYFlag=="Y"){
        	HtmlStr += '<td width="60"><div id="DiagnosZXz'+ row + '" value="' + DiagnosValue + '">' + '<input type="button" name="DiagnosZX" id="BDiagnosZX" onclick="window.parent.DiagnosZXShow()" Value="证型"/>' + '</div></td>';
        }else{
	        HtmlStr += '<td width="60"><div id="DiagnosZXz'+ row + '" value="' + DiagnosValue + '">' + '</div></td>';
	    }
       
        //HtmlStr += '<td width="38"><div id="MRDiagnosEdit' + i + '" value="' + DiagnosValue + '">' + '<img SRC="../images/websys/edit.gif" BORDER="0">' + '</div></td>';
        HtmlStr += '</tr>';
      }
      HtmlStr += '</table>';
      //dhxWins.window("w2").attachHTMLString(HtmlStr);
      window.frames.DHCAllocframe.document.write(HtmlStr);
    }
  }
}

function MRDiagnosShow() {
	
  var obj = document.getElementById("mradm");
  if (obj) var MRADMID = obj.value;
  var GetMRDiagnoseList = document.getElementById('GetMRDiagnoseList');
  if (GetMRDiagnoseList) {
    var encmeth = GetMRDiagnoseList.value
  } else {
    var encmeth = ''
  };
  if (encmeth != "") {
    ret = cspRunServerMethod(encmeth, MRADMID, '','CURRENT')
    if (ret != '') {
      if (window.DHCAllocframe.document.getElementById("w3table")) {
        window.DHCAllocframe.document.getElementById("w3table").removeNode(true);
      }
      var HtmlStr = '<html><HEAD><LINK REL="stylesheet" TYPE="text/css" HREF="'+"#(DHTMXPath)#"+'tagbox.css"></HEAD><body onclick="window.parent.MRDiagnosShowObjClick()"; ><table width="730" border="0" cellspacing="0" cellpadding="0" id="w3table" >';
      HtmlStr += '<THEAD><TH id=1 width=10px NOWRAP></TH><TH id=2 width=60px NOWRAP>诊断类型</TH><TH id=3 width=200px NOWRAP>ICD描述</TH><TH id=4 width=100px NOWRAP>诊断注释</TH><TH id=5 width=40px NOWRAP>诊断状态</TH><TH id=6 width=60px NOWRAP>ICD代码</TH><TH id=7 width=38px NOWRAP>删除</TH><TH id=8 width=20px NOWRAP>升级</TH><TH id=9 width=20px NOWRAP>降级</TH><TH id=10 width=20px NOWRAP>上移</TH><TH id=11 width=20px NOWRAP>下移</TH><TH id=12 width=40px NOWRAP>诊断级别</TH><TH id=13 width=80px NOWRAP>日期</TH><TH id=14 width=80px NOWRAP>发病日期</TH><TH id=15 width=80px NOWRAP>中医证型</TH></THEAD>'      //zlj add 发病日期
      retarry = ret.split(String.fromCharCode(1));
      for (i = 0; i < retarry.length; i++) {
        retItemArry = retarry[i].split('^');
        if ((i % 2) == 1) {
          HtmlStr += '<tr class="RowOdd">';
        } else {
          HtmlStr += '<tr class="RowEven">';
        }
        
      DiagnosDesc = retItemArry[0];
      DiagnosValue = retItemArry[1];
      DiagnosCodeRowid = retItemArry[2];
      DiagnosMRDesc = retItemArry[3];
      DiagnosICDCode = retItemArry[4];
      DiagnosType = retItemArry[5];
      DiagnosNote = retItemArry[6];
      DiagnosDate = retItemArry[7];
      DiagnosTime = retItemArry[8];
      DiagnosStatus = retItemArry[9];
      DiagnosLevel =retItemArry[10];
      DiagnosSequence =retItemArry[11];
      DiagnosOnsetDate =retItemArry[12];    //zlj add  2013-01-16
      
      if (DiagnosLevel=="") DiagnosLevel=1;
      var SpaceHTML="&nbsp";
	  var SpaceHTML1="";
	  if (DiagnosLevel>1) {
		var num=(DiagnosLevel-1)*6
		for (var j=1; j<num; j++) SpaceHTML1=SpaceHTML1+SpaceHTML;
	 }
	 var DiagnosDesc1=SpaceHTML1+DiagnosDesc;

	 //获取中医诊断标志
	 var ZYFlag="N"
	 var Obj=document.getElementById('GetZYMRDiagnosFlag');
	 if (Obj){
		ZYFlag=cspRunServerMethod(Obj.value, DiagnosValue)
	 }
	 
        var row=i+1;
        HtmlStr += '<td width="10"><div id="RowImagez' + row + '">&nbsp&nbsp&nbsp</div></td>';
        HtmlStr += '<td width="60"><div id="DiagnosTypez' + row + '">'+DiagnosType + '</div></td>';
        HtmlStr += '<td width="200" NOWRAP><div id="MRDiagnosDescz' + row + '" value="' + DiagnosValue + '">' + DiagnosDesc1 + '</div><input type="hidden" id="DiagnosDescz'+row+'" value="' + DiagnosDesc + '"/></td>';
        HtmlStr += '<td width="100"><div id="MRDiagnosNotez' + row + '" value="' + DiagnosValue + '" style="width:200; height:16 ">' + DiagnosNote + '</div></td>';
       
        HtmlStr += '<td width="40"><div id="DiagnosStatusz' + row + '">'+DiagnosStatus + '</div></td>';
        HtmlStr += '<td width="60"><div id="DiagnosICDCodez' + row + '">'+DiagnosICDCode + '</div></td>';
        
        //HtmlStr += '<td width="0"><div id="TagNull">' + DiagnosTime + '</div></td>';
        HtmlStr += '<td width="38"><div id="MRDiagnosDelz' + row + '" value="' + DiagnosValue + '^' + DiagnosDesc + '">' + '<a href="javascript:window.parent.DeleteMRDiagnos(' + "'" + DiagnosValue + '^' + DiagnosDesc + "'" + ')"><img SRC="../images/websys/delete.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="20"><div id="LevelUpz' + row + '" value="">' + '<a href="javascript:window.parent.AdjustMRDiagnosLevel('+"'" + row +"'"+ ',-1'+')"><img SRC="../images/websys/arrow_left.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="20"><div id="LevelDownz' + row + '" value="">' + '<a href="javascript:window.parent.AdjustMRDiagnosLevel('+"'" + row+"'"+ ',1'+')"><img SRC="../images/websys/arrow_right.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="20"><div id="MoveUpz' + row + '" value="">' + '<a href="javascript:window.parent.BMoveUpclickhandler('+"'" + i +"'"+ ',-1'+')"><img SRC="../images/websys/arrow_up.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="20"><div id="MoveDownz' + row + '" value="">' + '<a href="javascript:window.parent.BMoveDownclickhandler('+"'" + i+"'"+ ',1'+')"><img SRC="../images/websys/arrow_down.gif" BORDER="0"></a>' + '</div></td>';
        HtmlStr += '<td width="40"><div id="TagLevelz'+ row+'">' + DiagnosLevel + '</div></td>';
        HtmlStr += '<td width="80"><div id="DiagnosDatez' + row + '">'+DiagnosDate + '</div></td>';
        HtmlStr += '<td width="80"><div id="DiagnosOnsetDatez' + row + '">'+DiagnosOnsetDate + '</div></td>';     //zlj  add 2013-01-16
        if (ZYFlag=="Y"){
        	HtmlStr += '<td width="60"><div id="DiagnosZXz'+ row + '" value="' + DiagnosValue + '">' + '<input type="button" name="BDiagnosZX" id="BDiagnosZX" onclick="window.parent.DiagnosZXShow()" Value="证型"/>' + '</div></td>';
        }else{
	        HtmlStr += '<td width="60"><div id="DiagnosZXz'+ row + '" value="' + DiagnosValue + '">' + '</div></td>';
	    }
        //HtmlStr += '<td width="38"><div id="MRDiagnosEdit' + i + '" value="' + DiagnosValue + '">' + '<img SRC="../images/websys/edit.gif" BORDER="0">' + '</div></td>';
        HtmlStr += '</tr>';
      }
      HtmlStr += '</table></body></html>';
      window.frames.DHCAllocframe.document.write(HtmlStr);
      HtmlStr = "";
      MRDiagnosStatus = false;
    } else {
      //dhxWins.window("w2").attachHTMLString("没有诊断");
      if (window.DHCAllocframe.document.getElementById("w3table")) {
        window.DHCAllocframe.document.getElementById("w3table").removeNode(true);
      }
      window.frames.DHCAllocframe.document.write('<table width="730" border="0" cellspacing="0" cellpadding="0" id="w3table" ><THEAD><TH>没有诊断</TH></table>');
      MRDiagnosStatus = false;
    }
  }
}
function AdjustMRDiagnosLevel(Row,Direction){
	var diagnosframe=window.DHCAllocframe.document;
	var obj=diagnosframe.getElementById("MRDiagnosDescz"+Row);
	if (obj) {
		var DiagnosDesc=diagnosframe.getElementById("DiagnosDescz"+Row).value;
		var Level=parseInt(diagnosframe.getElementById("TagLevelz"+Row).innerHTML);
		var Level=Level+Direction;
		var SpaceHTML="&nbsp";
		var SpaceHTML1="";
		if (Level>1) {
			var num=(Level-1)*6
			for (var i=1; i<num; i++){
				SpaceHTML1=SpaceHTML1+SpaceHTML
			}
		}else{
			Level=1;
		}
		obj.innerHTML=SpaceHTML1+DiagnosDesc;
		diagnosframe.getElementById("TagLevelz"+Row).innerHTML=Level;
	}
	
	BSaveclickhandler();
}
function InsertOtherInfo(AlertFlag){
	
	var EpisodeID=document.getElementById("EpisodeID").value;
	var ReAdmis=DHCC_GetElementData("ReAdmis");
	var FirstAdm=DHCC_GetElementData("FirstAdm");
	var OutReAdm=DHCC_GetElementData("OutReAdm");
	var TransAdm=DHCC_GetElementData("TransAdm");
	var DiagnosValue=1
	var Admway=""
	
	var ILI=DHCC_GetElementData("ILI");
	
	if (ReAdmis==true){ReAdmis="R";Admway="MZFZ";}else{ReAdmis="";}
	if (FirstAdm==true){FirstAdm="F";Admway="CZ"}else{FirstAdm="";}
	if (OutReAdm==true){OutReAdm="R";Admway="CYFZ"}else{OutReAdm="";}
	if (TransAdm==true){TransAdm="Y";Admway="ZZ"}else{TransAdm="";}
	
	if (ILI==true){ILI="Y";}else{ILI="";}
	var BPSystolic=DHCC_GetElementData("BPSystolic");	//收缩压
	var BPDiastolic=DHCC_GetElementData("BPDiastolic"); //舒张压
	var Weight=DHCC_GetElementData("Weight");
	var Specialist=GetSaveSpecialList(); //特殊人群
	var Subject="";
	var AdmPara=ReAdmis+"^"+Specialist+"^"+Subject+"^"+Weight+"^"+FirstAdm+"^"+OutReAdm+"^"+TransAdm+"^"+ILI+"^"+DiagnosValue+"^"+Admway+"^"+BPSystolic+"^"+BPDiastolic;

	var ret=cspRunServerMethod("#(UpdatePAADM)#",EpisodeID,AdmPara,"Hidden","Hidden")
	if ((AlertFlag==true)&&(ret=="0")) {
		//成功后自动插入到诊断记录列表,无需提示.	
		//alert("保存成功!")
	}
}
function InsertMRDiagnos(MRCICDRowid) {
	var EpisodeID = document.getElementById('EpisodeID').value;
	if(!CheckIsAdmissions(EpisodeID)) return false;	  
	var obj = combo_DiagnosType.getSelectedText();
   	if (obj=="") {
		    alert("请选择诊断类型！");
		    return;
	    }
	if (!CheckIDate()) return;
	if (NeedStolicMast==1){
		var BPSystolic=DHCC_GetElementData("BPSystolic").replace(/(^\s*)|(\s*$)/g,'');	
		var BPDiastolic=DHCC_GetElementData("BPDiastolic").replace(/(^\s*)|(\s*$)/g,'');
		if ((BPSystolic=="")||(BPDiastolic=="")){
			 alert("请录入血压！");
			 return false;
			}
	}
	
  
  //传染病上报诊断提示
  var encmeth="#(GetSeriousDiseaseByICDMethod)#";
  if (encmeth!="") {
	  if ((MRCICDRowid!="")&&(MRCICDRowid!=null)){
	  	var SeriousDisease=cspRunServerMethod(encmeth,MRCICDRowid);
	  	if (SeriousDisease=="Y") alert("此诊断为传染病诊断,请注意及时上报.");
	  }
  }
  
  
  var DiagnosStatus = combo_DiagnosStatus.getSelectedValue();
  var LogDepRowid = session['LOGON.CTLOCID'];
  var LogUserRowid = session['LOGON.USERID'];
  var EpisodeID = document.getElementById('EpisodeID').value;
  var AdmReason = document.getElementById('AdmReason').value;
  var MRADMID = document.getElementById('mradm').value;
  var DiagnosLevel=1
 
  var GetDetail = document.getElementById('InsertMRDiagnos');
  if (GetDetail) {
    var encmeth = GetDetail.value
  } else {
    var encmeth = '';
    return
  }
  var MRDIADesc="";
  if ((MRCICDRowid==null)||(MRCICDRowid=="")) {
	  //MRDIADesc=combo_DiagnosDesc.getComboText();
		MRDIADesc=document.getElementById("DiagnosDesc1").value
	  MRCICDRowid="";
	  var conflag=confirm("是否确定录入非标准ICD诊断?",false);
	  if (conflag==false) return;
	  //lxz 在此处统一设置禁止录入为空的非标准ICD
	  MRDIADesc=MRDIADesc.replace(/(^\s*)|(\s*$)/g,'');
	  if (MRDIADesc=="")
	  {
		  alert("禁止录入描述为空的为空的非标准ICD诊断.")
		  return ;
	  }

	 UpdateMrdiagNote(MRADMID,MRDIADesc)
	  
  }
  DiagnosType="";
  if (combo_DiagnosType) DiagnosType = combo_DiagnosType.getSelectedText();
  MRDiagnosRowid = cspRunServerMethod(encmeth, LogDepRowid, MRADMID, MRCICDRowid, LogUserRowid, MRDIADesc, DiagnosType,"","","","","",DiagnosStatus,DiagnosLevel);
  if (MRDiagnosRowid != '') UpdateArriveStatus();
  //zlj--------------2013-01-15-----------------add
  var obj=document.getElementById("IDate");
  if (obj) {
	  var OnsetDate=obj.value;	  
	  var ret=tkMakeServerCall("web.DHCMRDiagnos","UpdateOnsetDate",MRDiagnosRowid,OnsetDate);
  }
  //zlj--------------2013-01-15-----------------end
  MRDiagnosShow();
  
  //InfectiousAlert();
  CheckDisease(MRDiagnosRowid);
  
  //add by wuqk 2012-06-12 
  ShowCPW(MRCICDRowid,MRDiagnosRowid); //临床路径准入提示校验,提示是否入径
  
  if (MRCICDRowid=="") return;
  var encmeth="#(FindClinicPathWayByICDMethod)#";
  if (encmeth!="") {
  	var ClinicPathWayRowId = cspRunServerMethod(encmeth,MRCICDRowid);
  	if (ClinicPathWayRowId!="") {
		var posn="height="+(screen.availHeight-400)+",width="+(screen.availWidth-200)+",top=200,left=100,toolbar=no,location=no,directories=no,status=yes,menubar=no,scrollbars=yes,resizable=yes";
		var path="websys.default.csp?WEBSYS.TCOMPONENT=UDHCOEOrder.CPW.Edit&CPWRowId="+ClinicPathWayRowId+"&EpisodeID="+EpisodeID;
		websys_createWindow(path,false,posn);
  	}
  }
  
  InsertOtherInfo(false);//插入诊断界面其他录入信息
 
}

function DeleteMRDiagnos(MRDiagnosRowid) {
  var LinkFlag = MRDiagnosRowid.indexOf("^")
  if (LinkFlag != '-1') {
    MRDiagnosDesc = MRDiagnosRowid.split("^")[1];
    MRDiagnosRowid1 = MRDiagnosRowid.split("^")[0];
    var DelMRDiagnosMessage = window.confirm('是否删除 ' + MRDiagnosDesc);
    if (DelMRDiagnosMessage == false) {
      return
    };
    MRDiagnosRowid = MRDiagnosRowid1
  }
  var GetDetail = document.getElementById('DeleteMRDiagnos');
  if (GetDetail) {
    var encmeth = GetDetail.value
  } else {
    var encmeth = ''
  };

  var ret = cspRunServerMethod(encmeth, MRDiagnosRowid);
  if (ret != '0') {
    if(ret=='Discharged'){
	  alert("由于病人已出院,诊断不能删除");
	  return;
  	}else if(ret=='Timeout'){
	  alert("您不能删病人以前诊断");
	  return;
  	}else{
	  alert("删除失败");	
	  return;
	}
  }else {
	 //MRDiagnosShow();
	  //msieversion()
	  if (ie>6) {
    		MRDiagnosShow();
	  }else{
    		window.location.reload(); //IE6.0
	  }
	  
  }

}
var ie = (function(){  
    var undef, v = 3, div = document.createElement('div');  
    while (  
        div.innerHTML = '<!--[if gt IE '+(++v)+']><i></i><![endif]-->',  
        div.getElementsByTagName('i')[0]  
    );  
    return v > 4 ? v : undef;  
}());  


function msieversion() { 
	 var ua = window.navigator.userAgent 
	 var msie = ua.indexOf("MSIE ") 
	 if (msie > 0)  {    // If Internet Explorer, return version number 
	     return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie))) 
	 }else  {               // If another browser, return 0 
	     return 0 
	 }
} 


function SaveMRDiagnosNote(){
	var DiagnosNotechangeObj=window.frames.DHCAllocframe.document.getElementById("DiagnosNotechange");
	if (DiagnosNotechangeObj)DiagnosNotechangevalue=DiagnosNotechangeObj.value;
	
	if (MRDiagnosNoteId!=""){
	
		UpdateMrdiagNote(MRDiagnosNoteId, DiagnosNotechangevalue);
	}
}
//去掉左右空格
function ltrim(str) {
str = str + "";
var i;
var l = str.length;
for (i = 0; i < l; i++) {
if (str.indexOf(" ") == 0) {
str = str.substring(1, str.length);
} else {
break;
}
}
return str;
}
function rtrim(str) {
str = str + "";
var i;
var l = str.length;
for (i = 0; i < l; i++) {
if (str.lastIndexOf(" ") == str.length - 1) {
str = str.substring(0, str.length - 1);
} else {
break;
}
}
return str;
}
function trim(str) {
str = str + "";
str = rtrim(str);
str = ltrim(str);
return str;
}

function UpdateMrdiagNote(MRDiagnosNoteId, DiagnosNotechangevalue) {
	//对产生变动的诊断查看是否是标准icd
	var icd=""
	var GetMRicd=document.getElementById("FindMRDIAICDCodeDR");
	if (GetMRicd){var encmeth = GetMRicd.value;} else{var encmeth=""};
	if ((encmeth!="")&&(MRDiagnosNoteId!="")){icd = cspRunServerMethod(encmeth,MRDiagnosNoteId);}

	if ((icd=="")&&(DiagnosNotechangevalue==""))
	{var vaild=window.confirm("录入了为空的非标准icd诊断,!");
	if(vaild)
	{
	 //lxz
	 //在Insert的时候去强制判断禁止录入描述为空的非标准的ICD诊断。
	 //这边只是提示不在强制删除MRDiagnosNoteId传入的并不是诊断的ID删除失败。
	 //DeleteMRDiagnos(MRDiagnosNoteId+"^");
	 
      MRDiagnosStatus = false;
     MRDiagnosNoteId = '';
   MRDiagnosNoteSource = '';
 MRDiagnosShow();
	 MRDiagnosShow();
	 return;

	
	
	} else
	{
          MRDiagnosStatus = false;
          MRDiagnosNoteId = '';
          MRDiagnosNoteSource = '';
          MRDiagnosShow();
			return;}
	}

	
	var FlagDiagnosNote=0;
	//加入对非标准icd诊断录入时候是否重复的判断  MRDiagnosShowObjClick
		var obj = document.getElementById("mradm");
  		if (obj) var MRADMID = obj.value;
 	 var GetMRDiagnoseList = document.getElementById('GetMRDiagnoseList');
  			if (GetMRDiagnoseList) {var encmeth = GetMRDiagnoseList.value; } 
  	else { var encmeth = ''};
  	if (encmeth != "") {
    ret = cspRunServerMethod(encmeth, MRADMID, '');
    if (ret != '') {
      retarry = ret.split(String.fromCharCode(1));
      for (i = 0; i < retarry.length; i++) {
        retItemArry = retarry[i].split('^');
          id=retItemArry[1];
          DiagnosICDCode = retItemArry[4];
          DiagnosNote = retItemArry[6];
          if ((DiagnosICDCode=="")&&(DiagnosNote!="")&&(DiagnosNotechangevalue!="")&&(MRDiagnosNoteId!=id))
				//alert(DiagnosNotechangevalue+","+DiagnosNote)
				{var Str1=trim(DiagnosNote);
				 var Str2=trim(DiagnosNotechangevalue);
				 if((Str1==Str2)&&(Str1!="")&&(Str2!="")) var FlagDiagnosNote=1
				 if (icd!=""){var FlagDiagnosNote=0};
				}
	  			}
      		}

     }
	if (FlagDiagnosNote==1)
          {var vaild = window.confirm("非标准icd诊断注释重复,是否确定添加?");
				if(vaild){} else{return;}}
				

  //alert(MRDiagnosNoteId+' '+DiagnosNotechangevalue)
  var Note = DiagnosNotechangevalue;
  var GetDetail = document.getElementById('UpdateMRDiagnosNote');
  if (GetDetail) {
    var encmeth = GetDetail.value
  } else {
    var encmeth = ''
  };
  if (encmeth != "") {
    var ret = cspRunServerMethod(encmeth, MRDiagnosNoteId, Note);
  }
  MRDiagnosStatus = false;
  MRDiagnosNoteId = '';
  MRDiagnosNoteSource = '';
  MRDiagnosShow();
}

function UpdateArriveStatus() {
	
  var EpisodeID = ""
  var obj = document.getElementById('EpisodeID');
  if (obj) {
    EpisodeID = obj.value
  }
  var obj = document.getElementById('DocID');

  if (obj) {
    var DocID = obj.value;
    //alert(DocID+"DocID");
    //return;
    var SetArrivedStatus = document.getElementById('SetArrivedStatus');
    if (SetArrivedStatus) {
      var encmeth = SetArrivedStatus.value
    } else {
      var encmeth = ''
    };
    if (encmeth != "") {
      var LogonUserID = session['LOGON.USERID']
      //alert("DocID:"+DocID+"session['LOGON.CTLOCID']"+session['LOGON.CTLOCID'])
      if (cspRunServerMethod(encmeth, EpisodeID, DocID, session['LOGON.CTLOCID'], session['LOGON.USERID']) != '1') {}
    }
  }
}

//返回false:单次就诊不存在未上报传染病,反之则报
function InfectiousAlert()
{
	var EpisodeID=""
	var obj=document.getElementById('EpisodeID');
	if (obj){EpisodeID=obj.value}
	if(obj) {var encmeth="#(InfectiousAlertMethod)#"} else {var encmeth=""}
	var ExistStr="";
	var Ret=cspRunServerMethod(encmeth,EpisodeID);

	if (Ret!=""){
		var TempArr=Ret.split(";");
		var Len=TempArr.length;
		for (var i=0;i<Len;i++){
			var TempItemStr=TempArr[i];
			if (TempItemStr=="") continue;
			var InfectiousDesc=TempItemStr.split(" ")[0];
			var ReportFlag=TempItemStr.split(" ")[1];
			if (ReportFlag.indexOf("N")>-1){
				if (ExistStr==""){ExistStr=InfectiousDesc;} else{ExistStr=ExistStr+";"+InfectiousDesc;}
			}
		}
	}
	
	if (ExistStr!=""){
		alert("存在传染病:"+ExistStr+",未上报.请上报!");
		return true;
		/*
		var conflag=confirm("存在传染病:"+ExistStr+",未上报.是否上报?",true);
		if (conflag){
			//add Infectious interface
			
		}
		return conflag;
		*/
	}
	
	return false;
}

function CheckIDate(){
	var obj=document.getElementById("IDate");
	if (obj) {
	    if (obj.value=="") {
		    alert("请选择发病日期！");
		    return false;
	    }
	    else {
		   var sd=(obj.value).split("-");
           var IDateCompare = new Date(sd[0],sd[1]-1,sd[2]);
           var TodayDate=new Date()
           if (IDateCompare>TodayDate){
	           alert("发病日期大于今天日期，请重新选择"); return false; 
	           }
		}
	}
	return true
}
//特殊人群 begin---------------------------------
function CreaterSpecial()
{
	//初始化List
	var Obj=document.getElementById("Special");
	if (Obj){
		$('#Special').combo({
		required:false,
		editable:false,
		panelWidth:150,
		multiple:true,
		panelHeight:250,
		onHidePanel:(function(){
				var Str=GetSpecialList().split(String.fromCharCode(1))
				var s= Str[0].split("^").join(",");
				$('#Special').combo('setValue', Str[1]).combo('setText', s);
				if (s!="") tooltipSpecialP(s);
			})
		});
		$('#sp').appendTo($('#Special').combo('panel'));
		$('#sp input').click(function(){
			var v = $(this).val();
			//选择确定按钮为空
			var Checkvalue=DHCC_GetElementData(v);
			if (v=="确定"){
				$('#Special').combo('hidePanel');
			}
		});
	   //list初始化选择值
	   SetSpecialList(SpecialStrCreat)
	}
	
	
}
//设置说明值
function tooltipSpecialP(s){
	$("#SpecialPlist").tooltip(
	{   	position: 'bottom',    
			content:s,
			trackMouse: true,
			title:'内容',
		  	deltaX:100,
		  	deltaY:0,
		  	onShow: function(){ 
			$(this).tooltip('tip').css({          
			   backgroundColor: '#FFFFFF',           
			   borderColor: '#99FFFF'
			  }); 
		 }}
		 );
	
}
//设置初始化
function SetSpecialList(SetStr)
{
	var SpecialStr=""
	var SpecialValue=""
	var SpecialLen=$('#sp input').length;
	for(var i=0;i<SpecialLen;i++)
	{
		var Check=$('#sp input')[i].checked;
		var val=$('#sp input')[i].value;
		if (val=="Sure"){continue}
		if (val!=""){
				if (("^"+SetStr+"^").indexOf("^"+val+"^")>=0){$('#sp input')[i].checked=true }
	    }
	}
	var Str=GetSpecialList().split(String.fromCharCode(1))
	var s= Str[0].split("^").join(",");
	$('#Special').combo('setValue', Str[1]).combo('setText', s).combo('hidePanel');
	if (s!="") tooltipSpecialP(s);
	return true
}

///获取下拉选择串
function GetSpecialList()
{
	var SpecialStr=""
	var SpecialValue=""
	var SpecialLen=$('#sp input').length;
	for(var i=0;i<SpecialLen;i++)
	{
		var Check=$('#sp input')[i].checked;
		if (Check){
			var str = $('#sp span')[i].innerText; //描述
			//var str=(i+1)
			var val=$('#sp input')[i].value
			if (SpecialValue==""){SpecialStr=str;SpecialValue=val}
			else {SpecialStr=SpecialStr+"^"+str;SpecialValue=SpecialValue+val}
		}
		
	}
	return SpecialStr+String.fromCharCode(1)+SpecialValue;
}
///获取保存数据
function GetSaveSpecialList()
{
	var SaveSpecialStr=""
	var Obj=document.getElementById("Special");
	if (Obj){
		var SpecialLen=$('#sp input').length;
		for(var i=0;i<SpecialLen;i++)
		{
			var Check=$('#sp input')[i].checked;
			if (Check){
				var str = $('#sp span')[i].innerText; //描述
				var val=$('#sp input')[i].value;
				if (SaveSpecialStr==""){SaveSpecialStr=val+String.fromCharCode(1)+str;}
				else{SaveSpecialStr=SaveSpecialStr+"!"+val+String.fromCharCode(1)+str;}
			}
		
		}
	}
	return SaveSpecialStr
}

//特殊人群 End---------------------------------

//单病种
function combo_SingleDisListKeydownhandler(){
	
	var EpisodeID=""
	var obj=document.getElementById('EpisodeID');
	if (obj){EpisodeID=obj.value}
	var SingleDisList=combo_SingleDisList.getSelectedValue()
	if (SingleDisList==null) {
		alert("请选择有效的单病种")
		return;
	}
	var rtn=cspRunServerMethod(SetPAADMSingleDisMethod,EpisodeID,SingleDisList)
	//alert(rtn)
	if (rtn!=1){
		alert("保存单病种信息失败"+rtn)
	}
	combo_DiagnosStatus.DOMelem_input.focus();
}
//证型选择查看
function DiagnosZXShow()
{
	
	var EpisodeID=""
	var obj=document.getElementById('EpisodeID');
	if (obj){EpisodeID=obj.value}
	if (!window.DHCAllocframe.event.srcElement) return;
  	var eSrc = window.DHCAllocframe.event.srcElement.parentElement
  	var DiagnosDr=eSrc.value;
	var url ="websys.default.csp?WEBSYS.TCOMPONENT=DHCDocDiagnosSyndSelect&Adm="+EpisodeID+"&MRDiagnoeRowId="+DiagnosDr+"&CTLoc="+session['LOGON.CTLOCID'];
	var winName="newWin";       
	var awidth=screen.availWidth/6*2;      
	var aheight=screen.availHeight/5*2;       
	var atop=(screen.availHeight - aheight)/2;   
	var aleft=(screen.availWidth - awidth)/2;  
	var param0="scrollbars=1,status=0,menubar=1,resizable=no,location=0";
	var params="top=" + atop + ",left=" + aleft + ",width=" + awidth + ",height=" + aheight + "," + param0 ;  
	win=window.open(url,winName,params); 
	win.focus();
	
}
//判断是否可以接诊
function CheckIsAdmissions(EpisodeID) {
	if (EpisodeID=="") return false;
	var UserID=session['LOGON.USERID'];
	var ret=tkMakeServerCall("web.DHCDocOutPatientList","CheckIsAdmissions",EpisodeID,UserID);
	if (ret!="") {
		alert("接诊失败,"+ret);
		return false;
	}
	return true;
}
</SCRIPT>
<STYLE type='text/css'>
#BODYTABLE {
	width:1300;
	border:1px solid;
}
#BODYFORMTABLE {
	width:1300;
	border:1px solid;
}

TH, TD {
  white-space: nowrap;
  background-color: #FFFFFF;
  text-align:right;
}

</STYLE>
<table id="BODYTABLE">
	<tr>
		<THEAD ondblclick="return;">
		<!--<TH style='display:none;'></TH>-->
		<TH id=1 width="1000" bgcolor="#0033CC" NOWRAP><div align="center" style="color:#FFFFFF">本次诊断</div></TH>
		<TH id=2 width="300" bgcolor="#0033CC" NOWRAP><div align="center" style="color:#FFFFFF">历史诊断</div></TH>
		</THEAD>
	</tr>
  <tr>
  	<!--
  	<td><div id="PicElement" align="left"></div>照片</td>
  	-->
    <td ><iframe id="DHCAllocframe" name="DHCAllocframe" width="100%" height="200px" frameborder="0" src="" style="border: 0px solid #cecece;"></iframe></td>
    <td ><iframe id="DHCHisDiagnos" name="DHCHisDiagnos" width="100%" height="200px" frameborder="0" src="" style="border: 0px solid #cecece;"></iframe></td>
  	
  </tr>
</table>
<table id="BODYFORMTABLE">
  <tr>
    <td width="65"><div>诊断</div></td>
    <td width="200"><input id="DiagnosDesc1" type="text" style="width:160px; height:30px;"><IMG id="DiagnosDescimg" name="DiagnosDescimg" src="../images/websys/lookup.gif"></input></td>
    <td width="80" ><div>诊断状态</div></td>
    <td width="100" ><div id="MRDiagStatus" style="width:100px; height:30px;"></div></td>
    <td width="70" ><div>诊断类型</div></td>
    <td width="150" ><div id="MRDiagType" style="width:70px; height:30px;"></div></td> 
    <td check width="100" ><div align="right">中医诊断<label><input type="checkbox" name="CNDiagnoseFlag" id="CNDiagnoseFlag" /></label></div></td>
	<td width="70" ><div>单病种</div></td>
   	<td width="100" ><div><div id="SingleDisList"></div></div></td>
   
    <td ><div><label><input type="submit" name="MyDiagnosEdit" id="MyDiagnosEdit" value="常用诊断模板维护" /></label></div></td>
  </tr>
  <tr>
    <td colspan="2">
    	<span align="left">收缩压:<input id="BPSystolic" type="text" style="width:50px; height:22px;"> 舒张压:<input id="BPDiastolic" type="text" style="width:50px; height:22px;"></span>	
    </td>
    <td><div>特殊人群</div></td>
    <td >
     <div id="SpecialPlist">
	   <select id="Special" style="width:100px"></select>
		<div id="sp">
		<div style="color:#99BBE8;background:#fafafa;padding:5px;"></div>
		<div style="padding:10px">
			<input type="checkbox" name="YF" value="1"><span>孕妇</span><br/>
			<input type="checkbox" name="PRQ" value="2"><span>哺乳期</span><br/>
			<input type="checkbox" name="JQ" value="3"><span>经期</span><br/>
			<input type="checkbox" name="GNQ" value="4"><span>更年期妇女</span><br/>
			<input type="checkbox" name="GGN" value="5"><span>肝功能不全</span><br/>
			<input type="checkbox" name="SGN" value="6"><span>肾功能不全</span><br/>
			<input type="checkbox" name="JHRS" value="7"><span>计划妊娠</span><br/>
			<br/><input type="button" name="Sure" value="确定">
		</div>
		</div>
	</div>
	</td>
  	<!--<td colspan="2" ><div align="right"><input type='image' id='BMoveUp' SRC="../images/websys/arrow_up.gif" />&nbsp&nbsp<input type='image' id='BMoveDown' SRC="../images/websys/arrow_down.gif" />&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<input type="button" name="BSave" id="BSave" value="保存关系" style="width: 60; height: 21"/><input id="BShowMRDiagnos" type="button" value="查看" style="width: 60; height: 21"/></div></td>-->
   	<td><div>发病日期:</div></td>
   	<td><input type="text" name="date" id="IDate" style="width=100;" readOnly onClick="setDay(this);"></td>
	<td colspan="3" style="height: 21"><div align="right"><input type="submit" name="BSaveMRDiagnos" id="BSaveMRDiagnos" value="增加" style="width: 60; height: 21"/></div></td>   	  
   	<td ><div><input id="BShowMRDiagnos" type="button" value="查看全部诊断" style="width: 90; height: 21"/></div></td>
  </tr>
  <tr>
    <td colspan="4" >
    	<span align="left">
    	门诊复诊<input id="ReAdmis" type="checkbox" >
    	初诊<input id="FirstAdm" type="checkbox" ></span>
    	出院复诊<input id="OutReAdm" type="checkbox" >
    	转诊<input id="TransAdm" type="checkbox" >
    	流感样<input id="ILI" type="checkbox" >
    	</span>
    </td>
    <td><div>体重:</div></td>
    <td><span><input id="Weight" type="text" style="width:80px;">Kg</span></td> 
    <td colspan="3"></td>
    <td ></td>
  </tr>
</table>
<div id='a_tabbar' style='width:1300; height:410'></DIV>
<script language="JavaScript"> 
	



//------------------ 样式定义 ---------------------------// 
//功能按钮同样样式 
var s_tiannet_turn_base = "height:16px;font-size:9pt;color:blue;border:0 solid #CCCCCC;cursor:hand;background-color:#2650A6;"; 
//翻年、月等的按钮 
var s_tiannet_turn = "width:28px;" + s_tiannet_turn_base; 
//关闭、清空等按钮样式 
var s_tiannet_turn2 = "width:22px;" + s_tiannet_turn_base; 
//年选择下拉框 
var s_tiannet_select = "width:64px;display:none;"; 
//月、时、分选择下拉框 
var s_tiannet_select2 = "width:46px;display:none;"; 
//日期选择控件体的样式 
var s_tiannet_body = "width:150;background-color:#2650A6;display:none;z-index:9998;position:absolute;" + 
"border-left:1 solid #CCCCCC;border-top:1 solid #CCCCCC;border-right:1 solid #999999;border-bottom:1 solid #999999;"; 
//显示日的td的样式 
var s_tiannet_day = "width:21px;height:20px;background-color:#D8F0FC;font-size:10pt;"; 
//字体样式 
var s_tiannet_font = "color:#FFCC00;font-size:9pt;cursor:hand;"; 
//链接的样式 
var s_tiannet_link = "text-decoration:none;font-size:9pt;color:#2650A6;"; 
//横线 
var s_tiannet_line = "border-bottom:1 solid #6699CC"; 
//------------------ 变量定义 ---------------------------// 
var tiannetYearSt = 1950;//可选择的开始年份 
var tiannetYearEnd = 2020;//可选择的结束年份 
var tiannetDateNow = new Date(); 
var tiannetYear = tiannetDateNow.getFullYear(); //定义年的变量的初始值 
var tiannetMonth = tiannetDateNow.getMonth()+1; //定义月的变量的初始值 
var tiannetDay = tiannetDateNow.getDate(); 
var tiannetHour = 8;//tiannetDateNow.getHours(); 
var tiannetMinute = 0;//tiannetDateNow.getMinutes(); 
var tiannetArrDay=new Array(42); //定义写日期的数组 
var tiannetDateSplit = "-"; //日期的分隔符号 
var tiannetDateTimeSplit = " "; //日期与时间之间的分隔符 
var tiannetTimeSplit = ":"; //时间的分隔符号 
var tiannetOutObject; //接收日期时间的对象 
var arrTiannetHide = new Array();//被强制隐藏的标签 
var m_bolShowHour = false;//是否显示小时 
var m_bolShowMinute = false;//是否显示分钟 

var m_aMonHead = new Array(12); //定义阳历中每个月的最大天数 
m_aMonHead[0] = 31; m_aMonHead[1] = 28; m_aMonHead[2] = 31; m_aMonHead[3] = 30; m_aMonHead[4] = 31; m_aMonHead[5] = 30; 
m_aMonHead[6] = 31; m_aMonHead[7] = 31; m_aMonHead[8] = 30; m_aMonHead[9] = 31; m_aMonHead[10] = 30; m_aMonHead[11] = 31; 
// ---------------------- 用户可调用的函数 -----------------------------// 
//用户主调函数－只选择日期 
function setDay(obj){ 
tiannetOutObject = obj; 
//如果标签中有值，则将日期初始化为当前值 
var strValue = tiannetTrim(tiannetOutObject.value); 
if( strValue != "" ){ 
tiannetInitDate(strValue); 
} 
tiannetPopCalendar(); 
} 
//设置开始日期和结束日期 
function setYearPeriod(intDateBeg,intDateEnd){ 
tiannetYearSt = intDateBeg; 
tiannetYearEnd = intDateEnd; 
} 
//设置日期分隔符。默认为"-" 
function setDateSplit(strDateSplit){ 
tiannetDateSplit = strDateSplit; 
} 
//设置默认的日期。格式为：YYYY-MM-DD 
function setDefaultDate(strDate){ 
tiannetYear = strDate.substring(0,4); 
tiannetMonth = strDate.substring(5,7); 
tiannetDay = strDate.substring(8,10); 
} 
// ---------------------- end 用户可调用的函数 -----------------------------// 
//------------------ begin 页面显示部分 ---------------------------// 
var weekName = new Array("日","一","二","三","四","五","六"); 
document.write('<div id="divTiannetDate" style="'+s_tiannet_body+'" style="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">'); 
document.write('<div align="center" id="divTiannetDateText" Author="tiannet" style="padding-top:2px;">'); 
document.write('<span id="tiannetYearHead" Author="tiannet" style="'+s_tiannet_font+'" '+ 
'onclick="spanYearCEvent();"> 年</span>'); 
document.write('<select id="selTianYear" style="'+s_tiannet_select+'" Author="tiannet" '+ 
' onChange="tiannetYear=this.value;tiannetSetDay(tiannetYear,tiannetMonth);document.all.tiannetYearHead.style.display=\'\';'+ 
'this.style.display=\'none\';">'); 
for(var i=tiannetYearSt;i <= tiannetYearEnd;i ++){ 
document.writeln('<option value="' + i + '">' + i + '年</option>'); 
} 
document.write('</select>'); 
document.write('<span id="tiannetMonthHead" Author="tiannet" style="'+s_tiannet_font+'" '+ 
'onclick="spanMonthCEvent();"> 月</span>'); 
document.write('<select id="selTianMonth" style="'+s_tiannet_select2+'" Author="tiannet" '+ 
'onChange="tiannetMonth=this.value;tiannetSetDay(tiannetYear,tiannetMonth);document.all.tiannetMonthHead.style.display=\'\';'+ 
'this.style.display=\'none\';">'); 
for(var i=1;i <= 12;i ++){ 
document.writeln('<option value="' + i + '">' + i + '月</option>'); 
} 
document.write('</select>'); 
//document.write('</div>'); 
//document.write('<div align="center" id="divTiannetTimeText" Author="tiannet">'); 
document.write('<span id="tiannetHourHead" Author="tiannet" style="'+s_tiannet_font+'display:none;" '+ 
'onclick="spanHourCEvent();"> 时</span>'); 
document.write('<select id="selTianHour" style="'+s_tiannet_select2+'display:none;" Author="tiannet" '+ 
' onChange="tiannetHour=this.value;tiannetWriteHead();document.all.tiannetHourHead.style.display=\'\';' + 
'this.style.display=\'none\';">'); 
for(var i=0;i <= 23;i ++){ 
document.writeln('<option value="' + i + '">' + i + '时</option>'); 
} 
document.write('</select>'); 
document.write('<span id="tiannetMinuteHead" Author="tiannet" style="'+s_tiannet_font+'display:none;" '+ 
'onclick="spanMinuteCEvent();"> 分</span>'); 
document.write('<select id="selTianMinute" style="'+s_tiannet_select2+'display:none;" Author="tiannet" '+ 
' onChange="tiannetMinute=this.value;tiannetWriteHead();document.all.tiannetMinuteHead.style.display=\'\';'+ 
'this.style.display=\'none\';">'); 
for(var i=0;i <= 59;i ++){ 
document.writeln('<option value="' + i + '">' + i + '分</option>'); 
} 
document.write('</select>'); 
document.write('</div>'); 
//输出一条横线 
document.write('<div style="'+s_tiannet_line+'"></div>'); 
document.write('<div align="center" id="divTiannetTurn" style="border:0;" Author="tiannet">'); 
document.write('<input type="button" style="'+s_tiannet_turn+'" value="年↑" title="上一年" onClick="tiannetPrevYear();">'); 
document.write('<input type="button" style="'+s_tiannet_turn+'" value="年↓" title="下一年" onClick="tiannetNextYear();"> '); 
document.write('<input type="button" style="'+s_tiannet_turn+'" value="月↑" title="上一月" onClick="tiannetPrevMonth();">'); 
document.write('<input type="button" style="'+s_tiannet_turn+'" value="月↓" title="下一月" onClick="tiannetNextMonth();">'); 
document.write('</div>'); 
//输出一条横线 
document.write('<div style="'+s_tiannet_line+'"></div>'); 
document.write('<table border=0 cellspacing=0 cellpadding=0 bgcolor=white onselectstart="return false">'); 
document.write(' <tr style="background-color:#2650A6;font-size:10pt;color:white;height:22px;" Author="tiannet">'); 
for(var i =0;i < weekName.length;i ++){ 
//输出星期 
document.write('<td width="21" align="center" Author="tiannet">' + weekName[i] + '</td>'); 
} 
document.write(' </tr>'); 
document.write('</table>'); 
//输出天的选择 
document.write('<table border=0 cellspacing=1 cellpadding=0 bgcolor=white onselectstart="return false">'); 
var n = 0; 
for (var i=0;i<5;i++) { 
document.write (' <tr align=center id="trTiannetDay' + i + '" >'); 
for (var j=0;j<7;j++){ 
document.write('<td align="center" id="tdTiannetDay' + n + '" '+ 
'onClick="tiannetDay=this.innerText;tiannetSetValue(true);" ' 
+' style="' + s_tiannet_day + '"> </td>'); 
n ++; 
} 
document.write (' </tr>'); 
} 
document.write (' <tr align=center id="trTiannetDay5" >'); 
document.write('<td align="center" id="tdTiannetDay35" onClick="tiannetDay=this.innerText;tiannetSetValue(true);" ' 
+' style="' + s_tiannet_day + '"> </td>'); 
document.write('<td align="center" id="tdTiannetDay36" onClick="tiannetDay=this.innerText;tiannetSetValue(true);" ' 
+' style="' + s_tiannet_day + '"> </td>'); 
document.write('<td align="right" colspan="5"><a href="javascript:tiannetClear();" style="' + s_tiannet_link + '">清空</a>'+ 
' <a href="javascript:tiannetHideControl();" style="' + s_tiannet_link + '">关闭</a>' + 
' <a href="javascript:tiannetSetValue(true);" style="' + s_tiannet_link + '">确定</a> ' + 
'</td>'); 
document.write (' </tr>'); 
document.write('</table>'); 
document.write('</div>'); 
//------------------ end 页面显示部分 ---------------------------// 
//------------------ 显示日期时间的span标签响应事件 ---------------------------// 
//单击年份span标签响应 
function spanYearCEvent(){ 
hideElementsById(new Array("selTianYear","tiannetMonthHead"),false); 
hideElementsById(new Array("tiannetYearHead","selTianMonth","selTianHour","selTianMinute"),true); 
} 
//单击月份span标签响应 
function spanMonthCEvent(){ 
hideElementsById(new Array("selTianMonth","tiannetYearHead"),false);
hideElementsById(new Array("tiannetMonthHead","selTianYear","selTianHour","selTianMinute"),true); 
} 
function spanHourCEvent(){
}
function spanMinuteCEvent(){
}
//根据标签id隐藏或显示标签 
function hideElementsById(arrId,bolHide){ 
var strDisplay = ""; 
if(bolHide) strDisplay = "none"; 
for(var i = 0;i < arrId.length;i ++){ 
var obj = document.getElementById(arrId[i]); 
obj.style.display = strDisplay; 
} 
} 
//------------------ end 显示日期时间的span标签响应事件 ---------------------------// 
//判断某年是否为闰年 
function isPinYear(year){ 
var bolRet = false; 
if (0==year%4&&((year%100!=0)||(year%400==0))) { 
bolRet = true; 
} 
return bolRet; 
} 
//得到一个月的天数，闰年为29天 
function getMonthCount(year,month){ 
var c=m_aMonHead[month-1]; 
if((month==2)&&isPinYear(year)) c++; 
return c; 
} 
//重新设置当前的日。主要是防止在翻年、翻月时，当前日大于当月的最大日 
function setRealDayCount() { 
if( tiannetDay > getMonthCount(tiannetYear,tiannetMonth) ) { 
//如果当前的日大于当月的最大日，则取当月最大日 
tiannetDay = getMonthCount(tiannetYear,tiannetMonth); 
} 
} 
//在个位数前加零 
function addZero(value){ 
if(value < 10 ){ 
value = "0" + value; 
} 
return value; 
} 
//取出空格 
function tiannetTrim(str) { 
return str.replace(/(^\s*)|(\s*$)/g,""); 
} 
//为select创建一个option 
function createOption(objSelect,value,text){ 
var option = document.createElement("OPTION"); 
option.value = value; 
option.text = text; 
objSelect.options.add(option); 
} 
//往前翻 Year 
function tiannetPrevYear() { 
if(tiannetYear > 999 && tiannetYear <10000){tiannetYear--;} 
else{alert("年份超出范围（1000-9999）！");} 
tiannetSetDay(tiannetYear,tiannetMonth); 
//如果年份小于允许的最小年份，则创建对应的option 
if( tiannetYear < tiannetYearSt ) { 
tiannetYearSt = tiannetYear; 
createOption(document.all.selTianYear,tiannetYear,tiannetYear + "年"); 
} 
checkSelect(document.all.selTianYear,tiannetYear); 
tiannetWriteHead(); 
} 
//往后翻 Year 
function tiannetNextYear() { 
if(tiannetYear > 999 && tiannetYear <10000){tiannetYear++;} 
else{alert("年份超出范围（1000-9999）！");return;} 
tiannetSetDay(tiannetYear,tiannetMonth); 
//如果年份超过允许的最大年份，则创建对应的option 
if( tiannetYear > tiannetYearEnd ) { 
tiannetYearEnd = tiannetYear; 
createOption(document.all.selTianYear,tiannetYear,tiannetYear + "年"); 
} 
checkSelect(document.all.selTianYear,tiannetYear); 
tiannetWriteHead(); 
} 
//选择今天 
function tiannetToday() { 
tiannetYear = tiannetDateNow.getFullYear(); 
tiannetMonth = tiannetDateNow.getMonth()+1; 
tiannetDay = tiannetDateNow.getDate(); 
tiannetSetValue(true); 
//tiannetSetDay(tiannetYear,tiannetMonth); 
//selectObject(); 
} 
//往前翻月份 
function tiannetPrevMonth() { 
if(tiannetMonth>1){tiannetMonth--}else{tiannetYear--;tiannetMonth=12;} 
tiannetSetDay(tiannetYear,tiannetMonth); 
checkSelect(document.all.selTianMonth,tiannetMonth); 
tiannetWriteHead(); 
} 
//往后翻月份 
function tiannetNextMonth() { 
if(tiannetMonth==12){tiannetYear++;tiannetMonth=1}else{tiannetMonth++} 
tiannetSetDay(tiannetYear,tiannetMonth); 
checkSelect(document.all.selTianMonth,tiannetMonth); 
tiannetWriteHead(); 
} 
//向span标签中写入年、月、时、分等数据 
function tiannetWriteHead(){ 
document.all.tiannetYearHead.innerText = tiannetYear + "年"; 
document.all.tiannetMonthHead.innerText = tiannetMonth + "月"; 
//if( m_bolShowHour ) document.all.tiannetHourHead.innerText = " "+tiannetHour + "时"; 
//if( m_bolShowMinute ) document.all.tiannetMinuteHead.innerText = tiannetMinute + "分"; 
tiannetSetValue(false);//给文本框赋值，但不隐藏本控件 
} 
//设置显示天 
function tiannetSetDay(yy,mm) { 

setRealDayCount();//设置当月真实的日 
tiannetWriteHead(); 
var strDateFont1 = "", strDateFont2 = "" //处理日期显示的风格 
for (var i = 0; i < 37; i++){tiannetArrDay[i]=""}; //将显示框的内容全部清空 
var day1 = 1; 
var firstday = new Date(yy,mm-1,1).getDay(); //某月第一天的星期几 
for (var i = firstday; day1 < getMonthCount(yy,mm)+1; i++){ 
tiannetArrDay[i]=day1;day1++; 
} 

for (var i = 0; i < 37; i++){ 
var da = eval("document.all.tdTiannetDay"+i) //书写新的一个月的日期星期排列 
if (tiannetArrDay[i]!="") { 
//判断是否为周末，如果是周末，则改为红色字体 
if(i % 7 == 0 || (i+1) % 7 == 0){ 
strDateFont1 = "<font color=#f0000>" 
strDateFont2 = "</font>" 
} else { 
strDateFont1 = ""; 
strDateFont2 = "" 
} 
da.innerHTML = strDateFont1 + tiannetArrDay[i] + strDateFont2; 
//如果是当前选择的天，则改变颜色 
if(tiannetArrDay[i] == tiannetDay ) { 
da.style.backgroundColor = "#CCCCCC"; 
} else { 
da.style.backgroundColor = "#EFEFEF"; 
} 
da.style.cursor="hand" 
} else { 
da.innerHTML="";da.style.backgroundColor="";da.style.cursor="default" 
} 
}//end for 

tiannetSetValue(false);//给文本框赋值，但不隐藏本控件 
}
function checkSelect(objSelect,selectValue) { 
var count = parseInt(objSelect.length); 
if( selectValue < 10 && selectValue.toString().length == 2) { 
selectValue = selectValue.substring(1,2); 
} 
for(var i = 0;i < count;i ++){ 
if(objSelect.options[i].value == selectValue){ 
objSelect.selectedIndex = i; 
break; 
} 
}//for 
} 
//选中年、月、时、分等下拉框 
function selectObject(){ 
//如果年份小于允许的最小年份，则创建对应的option 
if( tiannetYear < tiannetYearSt ) { 
for( var i = tiannetYear;i < tiannetYearSt;i ++ ){ 
createOption(document.all.selTianYear,i,i + "年"); 
} 
tiannetYearSt = tiannetYear; 
} 
//如果年份超过允许的最大年份，则创建对应的option 
if( tiannetYear > tiannetYearEnd ) { 
for( var i = tiannetYearEnd+1;i <= tiannetYear;i ++ ){ 
createOption(document.all.selTianYear,i,i + "年"); 
} 
tiannetYearEnd = tiannetYear; 
} 
checkSelect(document.all.selTianYear,tiannetYear); 
checkSelect(document.all.selTianMonth,tiannetMonth); 
} 
//给接受日期时间的控件赋值 
//参数bolHideControl - 是否隐藏控件 
function tiannetSetValue(bolHideControl){ 
var value = ""; 
if( !tiannetDay || tiannetDay == "" ){ 
tiannetOutObject.value = value; 
return; 
} 
var mm = tiannetMonth; 
var day = tiannetDay; 
if( mm < 10 && mm.toString().length == 1) mm = "0" + mm; 
if( day < 10 && day.toString().length == 1) day = "0" + day; 
value = tiannetYear + tiannetDateSplit + mm + tiannetDateSplit + day; 
tiannetOutObject.value = value; 

if( bolHideControl ) { 
tiannetHideControl(); 
} 
} 

//弹出显示日历选择控件，以让用户选择 
function tiannetPopCalendar(){ 
//隐藏下拉框，显示相对应的head 
hideElementsById(new Array("selTianYear","selTianMonth","selTianHour","selTianMinute"),true); 
hideElementsById(new Array("tiannetYearHead","tiannetMonthHead","tiannetHourHead","tiannetMinuteHead"),false); 
tiannetSetDay(tiannetYear,tiannetMonth); 
tiannetWriteHead(); 
//showTime(); 
var dads = document.all.divTiannetDate.style; 
var iX, iY; 

var h = document.all.divTiannetDate.offsetHeight; 
var w = document.all.divTiannetDate.offsetWidth; 
//计算left 
if (window.event.x + h > document.body.offsetWidth - 10 ) 
iX = window.event.x - h - 5 ; 
else 
iX = window.event.x + 5; 
if (iX <0) 
iX=0; 
//计算top 
iY = window.event.y; 
if (window.event.y + w > document.body.offsetHeight - 10 ) 
iY = document.body.scrollTop + document.body.offsetHeight - w - 5 ; 
else 
iY = document.body.scrollTop +window.event.y + 5; 
if (iY <0) 
iY=0; 
dads.left = iX; 
dads.top = iY; 
tiannetShowControl(); 
selectObject(); 
} 
//隐藏日历控件(同时显示被强制隐藏的标签) 
function tiannetHideControl(){ 
document.all.divTiannetDate.style.display = "none"; 
tiannetShowObject(); 
arrTiannetHide = new Array();//将被隐藏的标签对象清空 
} 
//显示日历控件(同时隐藏会遮挡的标签) 
function tiannetShowControl(){ 
document.all.divTiannetDate.style.display = ""; 
tiannetHideObject("SELECT"); 
tiannetHideObject("OBJECT"); 
} 
//根据标签名称隐藏标签。如会遮住控件的select，object 
function tiannetHideObject(strTagName) { 

x = document.all.divTiannetDate.offsetLeft; 
y = document.all.divTiannetDate.offsetTop; 
h = document.all.divTiannetDate.offsetHeight; 
w = document.all.divTiannetDate.offsetWidth; 

for (var i = 0; i < document.all.tags(strTagName).length; i++) 
{ 

var obj = document.all.tags(strTagName)[i]; 
if (! obj || ! obj.offsetParent) 
continue; 
// 获取元素对于BODY标记的相对坐标 
var objLeft = obj.offsetLeft; 
var objTop = obj.offsetTop; 
var objHeight = obj.offsetHeight; 
var objWidth = obj.offsetWidth; 
var objParent = obj.offsetParent; 

while (objParent.tagName.toUpperCase() != "BODY"){ 
objLeft += objParent.offsetLeft; 
objTop += objParent.offsetTop; 
objParent = objParent.offsetParent; 
} 

var bolHide = true; 
if( obj.style.display == "none" || obj.style.visibility == "hidden" || obj.getAttribute("Author") == "tiannet" ){ 
//如果标签本身就是隐藏的，则不需要再隐藏。如果是控件中的下拉框，也不用隐藏。 
bolHide = false; 
} 
if( ( (objLeft + objWidth) > x && (y + h + 20) > objTop && (objTop+objHeight) > y && objLeft < (x+w) ) && bolHide ){ 
//arrTiannetHide.push(obj);//记录被隐藏的标签对象 
arrTiannetHide[arrTiannetHide.length] = obj; 
obj.style.visibility = "hidden"; 
} 


} 
} 
//显示被隐藏的标签 
function tiannetShowObject(){ 
for(var i = 0;i < arrTiannetHide.length;i ++){ 
//alert(arrTiannetHide[i]); 
arrTiannetHide[i].style.visibility = ""; 
} 
} 
//初始化日期。 
function tiannetInitDate(strDate){ 
var arr = strDate.split(tiannetDateSplit); 
tiannetYear = arr[0]; 
tiannetMonth = arr[1]; 
tiannetDay = arr[2]; 
} 
//清空 
function tiannetClear(){ 
tiannetOutObject.value = ""; 
tiannetHideControl(); 
} 
//任意点击时关闭该控件 
document.onclick=function()
{
with(window.event.srcElement){ 
if (tagName != "INPUT" && getAttribute("Author") != "tiannet") 
tiannetHideControl(); 
} 
} 
//按ESC键关闭该控件 
document.onkeypress=function()
{ 
if( event.keyCode == 27 ){ 
tiannetHideControl(); 
} 
} 
</script> 
</BODY>

</HTML>
