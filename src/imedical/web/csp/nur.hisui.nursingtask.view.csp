<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
    i ##Class(ext.websys.SessionEvents).SessionExpired() q 1 
    q 1
</csp:method>
<html lang="zh-CN">
<head>
	<meta http-equiv="Content-Type"
		  content="text/html; charset=utf-8">
	<!-- nur.hisui.nursereferconfig.csp -->
	<title>#(..Get("任务总览"))#</title>
	<EXTHEALTH:HEAD></EXTHEALTH:HEAD>
	<HISUI />
	<script type="text/javascript" src="../scripts/dhcnewpro/js/commonfun.js"></script>	
	<STYLE type='text/css'>
		body {
            background-color: #fff;
            padding:10px!important;
        }
        .panel-body.panel-body-noheader{
			border-color: #ccc;
		}
        .datagrid .panel-body{
			border: none;
			border-radius: 0;
		}
		#add-dialog {
			top:120px;
			width:480px;
			height:423px;
			padding: 0px 10px;
		}
		#property-dialog {
			top:120px;
			width:470px;
			height:274px;
			padding: 0px 10px;
		}
		.td-button{
			padding: 10px;
		}
		.td-blank {
			width: 80px;
		}
		.form-table {
			width:100%;
			border-collapse: separate; 
			border-spacing:10px;
		}
		.form-table td, .form-table th {
			margin: 0px !important;
			padding: 0px !important;
		}
		.textareabox-text, input.textbox, textarea.textbox{
			width: 368px;	
		}
		#Align {
			width: 375px;
		}
		textarea{
			border-color: #40a2de;
			width: 368px;	
		}
		.form-group{
			padding: 10px 10px 9px 10px;
			border-bottom: 1px dashed #ccc;
		}
		.form-group a {
			margin-left: 10px;	
		}
		.button-group{
			margin: 2px 0;	
		}
		.textEdit {
			width: 100%;
			height: 100%;
			border-color: #ccc;
			border: none;
		}
		.right-hisui-panel{
			
			height: calc(50% - 5px);
		}
		.hisui-datebox{
			width:120px !important;	
		}
		.taskCount {
			position: relative;
		    display: inline-block;
		   padding-right: 10px;
		    min-width: calc(10%);
		    height: 30px;
		    line-height: 30px;
		    margin-top: 5px;
		    box-shadow: 0px 0px 5px #ccc;
		    border-radius: 5px 5px 5px 5px;
		    cursor: pointer;
		    vertical-align: top;
		    /*background:#afdcf8;*/
		    text-align:center;
		     white-space: nowrap;
		}
		.taskCount span.task-type{
			/*line-height: 45px !important;*/
			/*position: absolute;
    		top: 0px;
			font-weight:bold;*/
			vertical-align: top;
		}
		.taskCountSelect{
			box-shadow: 0px 0px 5px #1584D2;
			background: #46a4da !important;
			color:#fff !important;
		}
	
		.taskCount:hover{
			box-shadow: 0px 0px 5px #46a4da;
		}
		.taskTimeCount {
		    border: 1px solid;
		    display: inline-block;
		    width: 90%;
		    margin-top: 5px;
		    color: #CCC;
		    box-shadow: 0px 0px 5px #ccc;
		    border-radius: 3px;
		    margin: 8px;
		    cursor: pointer;
		}
		.taskTime{
			margin-left: 8px;
    		font-weight: bold;	
		}
		.taskTimeCount{
			display:none;	
		}
		.taskTimeCount li{
			position: relative;	
			padding:5px
		}
		.taskTimeCount li:hover{
			color: #1584D2;	
			font-weight: bold;	
			box-shadow: 0px 0px 5px #ccc;
		}
		
		.taskTimeCount li span:nth-of-type(even){
			position: absolute;	
			right:10px;
		}
		.excuteState_disposeState{
			background-color: rgb(159, 197, 232);
			box-sizing: content-box;
		    margin-top: 2px;
		    margin-bottom: 2px;
		    margin-left: 10px;
		    position: relative;
		    display: block;
		    width: 105px;
		    height: 15px;
		    line-height: 15px;
		    font-weight: 400;
		    text-align: left;
		    color: rgb(0, 0, 0);
		    font-size: 12px;
		    padding: 5px;
		    padding-left:10px;
		}
		.excuteState_disposeState .excuteState_triangle{
			display: block;
		    width: 0;
		    height: 1;
		    position: absolute;
		    border-width: 12.5px;
		    border-style: solid;
		    border-top-color: transparent;
		    border-left-color: transparent;
		    border-bottom-color: transparent;
		    left: -24px;
		    top: 0;	
					
		}
		.excuteState_disposeState .excuteState_triangle .excuteState_circle{
			position: absolute;
		    top: -4px;
		    left: 10px;
		    background-color: #fff;
		    content: "";
		    display: block;
		    width: 8px;
		    height: 8px;
		    border-radius: 5px
		}
		.datagrid-body{
			/*overflow-y: auto !important;	*/
		}
		.excuteState_disposeState .excuteState_num{
		    display: inline-block;
		    position: absolute;
		    right: 4px;
		    line-height: 14px;
		    font-size: 14px;
		    font-weight: 700;
		    margin: 0;
		    padding: 1px 0;
		    border-radius: 2px;
		    min-width: 10px;
		    text-align: center;
		}
		td.panelIcon div{
			background-color: transparent;
    		opacity: .5;
		} 
		span.not-finsh {
		    display: inline-block;
		    /* width: calc(15%);*/
		    /* height: 90%; */
		    /* margin-top: 5px; */
		    box-shadow: 0px 0px 5px #ccc;
		    border-radius: 0 0 0 5px;
		    cursor: pointer;
		    vertical-align: top;
		    background: #afdcf8;
		    text-align: center;
		    font-weight: bold;
		}
		lable.not-finsh-val{
			font-size: 19px;
    color: red;
    font-weight: bold;
		}
		.tabItem_badge{
			position: absolute;
    display: inline-block;
    height: 10px;
    width: 10px;
    background-color: #ee4f38;
    text-align: center;
    color: #fff;
    -webkit-transform: translateY(-50%) translateX(100%);
    transform: translateY(-50%) translateX(100%);
    font-size: 14px;
    line-height: 18px;
    border: 1px solid transparent;
    border-radius: 10px;
    top: 0;
    right: 10px;
		}
		/* 护理问题悬浮窗展示相关因素样式 start */
.related-factors li {
	display: flex;
}
.related-factors .assess-source {
	width: 90px;
}
.related-factors .assess-status {
	width: 60px;
}
.related-factors .assess-trggerTime {
	width: 110px;
	white-space: nowrap;
}
.related-factors .assess-id {
	width: 60px;
}
.related-factors .assess-factors {
	width: 160px;
}
.related-factors .title{
	border-bottom:1px solid rgba(204,204,204,0.5);
}
.related-factors li p{
	padding: 5px;
}
.webui-popover.in {
	opacity:0.8;
}
table.related-factors{
	border-collapse: collapse;
}
table.related-factors td{
	color:#FFF;	
	padding:0px 2px 0px 2px;
  
}
table.related-factors tr.title td{
	padding: 5px;
	border-bottom: 1px solid #FFF alpha(opacity=30);
}
table.related-factors tr td{
	padding: 5px;
}

div.left-bracket {
    border-style: solid;
    border-color: #97a8be;
    width: 20px;
    height: 15px;
    border-width: 0 0 0 1px;
}
div.right-bracket {
    border-style: solid;
    border-color: #97a8be;
    width: 20px;
    height: 15px;
    border-width: 1px 0 0 1px;
}
div.arcimdesc>div:last-child .right-bracket {
    border-width: 1px 0 0 0;
}
div.arcimdesc>div:first-child .left-bracket {
    border-width: 0;
}
 .orderArcimDesc_sealSpanWrapper {
    position: absolute;
    overflow: hidden;
    width: 50px;
    height: 50px;
    top: 0;
    right: 0;
    text-align: center;
    font-size: 16px;
}
 .orderArcimDesc_sealSpanWrapper .orderArcimDesc_sealSpan {
    position: relative;
    display: block;
    top: -7px;
    left: 8px;
    width: 34px;
    height: 34px;
    line-height: 34px;
    -webkit-transform: rotate(-30deg);
    transform: rotate(-30deg);
    border: 2px dotted rgba(255,0,0,.7);
    text-align: center;
    z-index: auto;
    border-radius: 15px;
    color: rgba(255,0,0,.7);
}
.lzc_timeline .content{
	display:none;	
}
.taskCount .taskNum{
	font-size: 18px;
    font-weight: bold;
    color:#4DA8DD;
   /* position: absolute;
    display: block;
    line-height: 45px;	*/
}
.taskCountSelect .taskNum{
	color:#FFF !important;
}
.taskCount .taskImg{
	
    display: inline-block;
    width: 50px;
	height: 100%;
    left: 0px;
    border: 0px solid #ddd;
   
    left: 0px;	
}

	</STYLE>
	<style type="text/css">

		#chart {  
			width: 100%;  
			height: 100%;  
			display: block;
		}
		#chart #numbers {  
			width: 50px;  
			height: 100%;  
			margin: 0;  
			padding: 0;  
			display: inline-block;  
			float: left;
		}
		#chart #numbers li {  
			text-align: right;  
			padding-right: 1em;  
			list-style: none;  
			height: 29px;  
			border-bottom: 1px solid #444;  
			position: relative;  
			bottom: 30px;
		}
		#chart #numbers li:last-child {  height: 30px;}
		#chart #numbers li span {  color: #eee;  position: absolute;  bottom: 0;  right: 10px;}
		#chart #bars { display: inline-block;min-width:100%;   width: auto;  height: 400px;   margin: 0;  border-bottom: 1px solid #017bec;}
		#chart #bars li {  display: table-cell;  width: 100px;min-width:100px;  height: 400px;  margin: 0;  text-align: center;  position: relative;}
		#chart #bars li .bar {height:0px;  display: block;  width: 50px;margin-bottom: 10px;  margin-left: 25px;  background: #017bec;  position: absolute;  bottom: 0;}
		#chart #bars li .bar:hover {  background: #5AE;  cursor: pointer;}
		#chart #bars li span {  display: block;height: 40px;width: 100%;  position: absolute;  bottom: -45px;  left: 0;  text-align: center;}
		
		
		#right span.value{position: absolute;right: 10px;}
		#right span.text{position: absolute;left: 10px;}
		#right div.print{
			position: relative;
			display: block;
			height: 40px;
			line-height: 40px;
			background:#efefef;
			border-radius: 2px;
			margin: 0px 5px 5px 5px;
		}
		#right table.right-table div.print:hover{
			color: #1890ff;
			background: #d8efff;
			cursor:pointer;
		}
		.settingTag{
			color: #000;
			border: 1px solid #ccc;
			width: 100%;
			display: block;
			position: absolute;
			background: #fff;
			right: -1px;
		}
		.settingContent{
			position: absolute;
			right: -1px;
			width: 400px;
			top: 31px;
			background: #fff;
			height: 150px;
			border: 1px solid #ccc;
			display:none;
		}
		.dialog-content{
			overflow: hidden;
		}
		span.tsnum {
		    color: red;
		    margin-left: 5px;
		    font-weight: bold;
		}
		.all-main{
			height: calc(100% - 90px);
		}
		.order{
			padding-left:10px;	
		}
		.order .text {
		    border: 1px solid #ddd;
		    width: 100px;
		    display: inline-block;
		    text-align: center;
		    height: 30px;
		    line-height: 30px;
		    border-radius: 5px;
		    background-color: #f9f9f9;
		    white-space: nowrap;
		    margin-left: 10px;
		    padding-left: 10px;
		    padding-right: 10px;
		    margin-top: 10px;
		    position: relative;
		}
		.combo .combo-text,.spinner .spinner-text{
			
		}
		table.related-factors td{
			white-space: nowrap;
		}
		.panel-body.panel-body-noheader.panel-body-noborder{
			overflow: hidden;
		}
	</style>
	<script type="text/javascript" src="../scripts/hisui/websys.comm.js" charset=gbk></script>
	<script language="cache" runat="SERVER">
            s EpisodeID = $G(%request.Data("EpisodeID", 1))
            s IsShowPatList=$G(%request.Data("IsShowPatList", 1))
    </script>
	<script language="javascript">
        var EpisodeID = "#(EpisodeID)#";
        var EpisodeIDStr="#(EpisodeID)#";
        var TWflag = true;
		var TWsheetCode =""; //DefaultSee、WZX（单据code）
		var TWstartDate = ""; //开始日期
		var TWstartTime=""; //开始时间
		var TWendDate=""; //结束日期
		var TWendTime="";//结束时间
		var IsShowPatList="#(IsShowPatList)#"
		
		
    </script>
</head>
<body>
	<div id="Loading" style="position:absolute;z-index:1000;top:0px;left:0px;width:100%;height:100%;background:#ffffff;text-align:center;padding-top:25%;filter:alpha(opacity=80);opacity:0.5;">
		<img src="../scripts/bdp/Framework/icons/mkb/page_loading.gif"/>
		<div>正在加载，请稍等！</div>
	</div>
	<div id="nrLayout" class="hisui-layout" data-options="fit:true,border:false">
		<csp:if condition='IsShowPatList="Y"'>
			<csp:Include Page="nur.hisui.common.patientlistnew.csp">
		</csp:if>
		<div class="center_templates" data-options="region:'center',split:true" style="border:0px;">
			
			<div class="hisui-layout" id="rwzl"  data-options="fit:true,split:true">
				<div id="main-tabs" class="hisui-tabs tabs-gray" data-options="tools:'#tab-tools'" style="height:auto;">   
					<div title="#(..Get("任务总览"))#" > 
		
	
			<div data-options="region:'north'" style="padding:10px;position:relative;min-height:20px;border-bottom: 0px dashed #ccc;">
				<span style="margin-right:7px;">#(..Get("开始时间"))#</span>
				<span style="margin-right:7px;"><input id="execStDate" class="hisui-datebox"  type="text"></span>
				
				
				
				<span style="margin-right:7px;"> <input id="execStTime"class="hisui-timespinner" data-options="showSeconds:false" style="border-radius: 2px;width:80px;" value="00:00"></span>
				<span style="margin-right:7px;">#(..Get("结束时间"))#</span>
				<span style="margin-right:7px;"><input id="execEndDate" class="hisui-datebox"></span>
				<span style="margin-right:7px;"><input id="execEndTime" class="hisui-timespinner" data-options="showSeconds:false" style="border-radius: 2px;width:80px;" value="23:59"></span>
				<span style="margin-right:7px;">
					<a class="hisui-linkbutton" id="serachBtn" data-options="iconCls:'icon-w-find'">#(..Get("查询"))#</a>
				</span>
				<span style="margin-right:7px;">
					<a class="hisui-linkbutton" id="settingBtn" data-options="iconCls:'icon-w-setting'">#(..Get("设置"))#</a>
				</span>
				<span style="margin-right:7px;">
					 <div  class="hisui-switchbox" style="padding: 0 1px" data-options="onText:$g('正常'),offText:$g('超时'),size:'small',animated:true,onClass:'primary',offClass:'gray',onSwitchChange:toggleSwitch"></div>
				</span>
				
			</div>
			
			<div class="hisui-layout all-main" data-options="region:'center',split:true,border:false" style="height: calc(100% - 90px);margin-left: 10px;">
				<div class="westpanel" data-options="region:'west',border:false,split:true" style="width:200px;height:100%;">
					<div class="hisui-panel waitTask"  title="#(..Get("待办任务"))#" style="padding:0px;padding-top:5px;overflow-x: hidden;height:100%;" data-options="fit:true,iconCls:'icon-batch-cfg',headerCls:'panel-header-gray'">

						<csp:Include Page="nur.hisui.nursingtask.view.time.csp">
					</div>
				</div>
				<div data-options="region:'center',border:false,split:true" style="padding-left:0px;height:100%;" >
					<div class="hisui-panel tabpanel" style="border: none;padding:0px;padding-bottom:0px;overflow-x: hidden;" data-options="fit:true,iconCls:'icon-batch-cfg',headerCls:'panel-header-gray'">
					
						<div id="tabsDoctorOrderExe" style="height:480px;margin-bottom:10px;" class="hisui-tabs tabs-gray" data-options="isBrandTabs:true"></div>
						<div id="tabsTasksAssess" style="height:480px;margin-bottom:10px;" class="hisui-tabs tabs-gray" data-options="isBrandTabs:true"></div>
						<div id="tabsTasksSign" style="height:480px;margin-bottom:10px;" class="hisui-tabs tabs-gray" data-options="isBrandTabs:true"></div>
						<div id="tabsNurseOrderExe" style="height:480px;margin-bottom:10px;" class="hisui-tabs tabs-gray" data-options="isBrandTabs:true"></div>
						<div id="tabsEduTask" style="height:480px;margin-bottom:10px;" class="hisui-tabs tabs-gray" data-options="isBrandTabs:true"></div>
						
				
					</div>
					<div class="hisui-panel tabpanelchar" style="border: none;padding:0px;padding-bottom:200px;overflow-x: hidden;" data-options="fit:true,iconCls:'icon-batch-cfg',headerCls:'panel-header-gray'">
					
					</div>
				</div>
			</div>
		</div>
	</div>
	</div>
	</div>
	</div>
<!-- 待宣任务模态框 -->
<div id="eduTaskModal" class="hisui-dialog" title="#(..Get("待宣任务"))#" style="height: 700px;top: 50px;left: 50px;width: 880px;" data-options="iconCls:'icon-w-batch-cfg',modal:true,closed:true"> 
	
	<table style="height: 500px;border:1px solid #cccccc;" id="eduTaskTable" class="hisui-datagrid">
	</table>
</div>
<div id="dialogRefer"></div>
<script type="text/javascript">
var htmlObj = $(".all-main");
$(".all-main").height(htmlObj.height())
var obj_parmas={}
$(function(){
	$("#Loading").hide();
	
	
	InitTabs()

	console.log(obj_parmas)
	$("#serachBtn").trigger("click")
})
/**查询操作**/
$("#serachBtn").on("click",function(){
	$(".itemHover").removeClass("itemHover")
	

	///定时任务防止页面卡顿
	setTimeout(function(){
		var isExitPatientTree = $("#patient_search").length
		var EpisodeID="#(EpisodeID)#";
		if(isExitPatientTree>0){
			EpisodeID = resultPatIds();
		}
		
		if(EpisodeID==""){
			EpisodeID="#(EpisodeID)#";
		}
		if(EpisodeID==""){
			$("#Loading").hide();
			$.messager.alert($g('提示'),$g('请选择左侧列表患者！') , "info");
			return false;
		}
		$("div.contentShow").removeClass("contentShow").hide()
		InitGridData()
		
	},100)
})
///加载表单数据
function InitGridData(){
	var data={hospDR:session['LOGON.HOSPID'],WardID:session['LOGON.WARDID'],ShowHide:1}
	runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","GetAllTabTitles",data,function(rtn){	
		for(var i=0;i<rtn.length;i++){
			var tabID=rtn[i].itemId
			$("#"+tabID).show()
			if(typeof(GetTabs[tabID].data)!="undefined"){
				GetTabs[tabID].data(tabID)
			}
		}
		
	},'json',false);
}

/**获取左侧树状图的患者**/
function resultPatIds(){
	var nodes = $('#patientTree').tree('getChecked')
	var episodeIdStr="#(EpisodeID)#";
	if(nodes.length > 0){
		episodeIdStr=getAllCheckedPatient()
	}
	if(episodeIdStr==""){
		episodeIdStr="#(EpisodeID)#";
	}
	return episodeIdStr;
}


/**
*查询通用设置中的时间配置
*/
function setInputValue(code){
	var parmas={
		hospID:session['LOGON.HOSPID'],
		wardID:session['LOGON.WARDID'],
		code:code
		}
	runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","getSeleteNursingTask",parmas,function(rtn){
			obj_parmas[code]=rtn.value
		},'json',false);	
}




/**动态添加每个区域的tab标签**/
function addTab(tabID,datas){
	$HUI.tabs("#"+tabID).add({
		title: $g(GetTabs[tabID].name),
		iconCls:"icon-batch-add",
		closable:false,
		selected:false 	     		
	});
	
	$HUI.tabs("#"+tabID).add({
		title: '<span><span class="text">'+$g("未执行")+"</span><span class='tsnum'></span></span>",
		closable:false,
		selected:false 	  
	});
	for(var i=0;i<datas.length;i++){
		var data=datas[i]
		if(data.text=="" || typeof(data.text)=="undefined"){
			data.text=data.desc	
		}
		$HUI.tabs("#"+tabID).add({
			title:'<span itemId="'+data.itemId+'"><span class="text">'+$g(data.text)+"</span><span class='tsnum'></span></span>",
			closable:false,
			selected:false 	  
		});
		
	}
	$HUI.tabs("#"+tabID,{
		onSelect:function(title,index){
			//tabOnSelect(tabID,index)
			if(typeof(GetTabs[tabID].data)!="undefined"){
				//GetTabs[tabID].data(tabID)
				//alert()
				var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
				addTable(tabID,tabs[index],tabID+""+index)
				GetTabs[tabID].data(tabID)
			}		
		}
	});
	$("#"+tabID).tabs('select',1);
	var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
	addTable(tabID,tabs[1],tabID+"1")
	GetTabs[tabID].data(tabID)
}

function addGridTable(tabID){
	var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
	/*for(var i=1;i<tabs.length;i++){
		$("#"+tabID).tabs('select',i);
		addTable(tabID,tabs[i],tabID+i)
	}*/	
	$("#"+tabID).tabs('select',1);
	var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
	addTable(tabID,tabs[1],tabID+"1")
	GetTabs[tabID].data(tabID)
	
}

function addTable(tabID,thisTab,tableID){
	$HUI.tabs("#"+tabID).update({
		tab:thisTab,
		options:{
			content:'<div style="display: inline-block;width:100%;height:calc(100% - 4px);margin-top: 2px;border-top:1px solid #ccc;"><table id="'+tableID+'"></table></div>'
		}	
	});	
	var columns=[]
	if(typeof(GetTabs[tabID].columns)!="undefined"){
		columns=GetTabs[tabID].columns(tabID)
		if(typeof(GetTabs[tabID].formatter)!="undefined"){
			for(var i=0;i<columns.length;i++){
				columns[i].formatter=GetTabs[tabID].formatter
			}
		}
		
	}
	var fitColumns=false
	if(typeof(GetTabs[tabID].fitColumns)!="undefined"){
		fitColumns=GetTabs[tabID].fitColumns
	}
	$("#"+tableID).datagrid({
		fit : true,
		width : 'auto',
		striped : false,
		singleSelect : true,//true 单选 
		fitColumns : fitColumns,		//表格是否自定义宽度
		autoRowHeight : false,
		loadMsg : '加载中..',  
		pagination : false, 		//是否开启分页
		rownumbers : true,//是否开启行号
		idField:"ID",
		pageSize: 10,//分页数量
		pageList : [10,50,100,200],
		autoRowHeight:true,
		nowrap:false,  /*此处为false*/
		columns:[columns],
		onDblClickRow:function(rowIndex, rowData){
			if(typeof(GetTabs[tabID].onDblClickRow)!="undefined"){
				GetTabs[tabID].onDblClickRow(tabID,rowData)
			}
		}
	})
}

function tabOnSelect(tabID,index){
	var thisTab=$("#"+tabID).tabs('getSelected'); 
	var tableID=tabID+index
	if($("#"+tableID).length>0){
		return false;
	}
	
	$HUI.tabs("#"+tabID).update({
		tab:thisTab,
		options:{
			content:'<div style="display: inline-block;width:100%;height:100%"><table id="'+tableID+'"></table></div>'
		}	
	});	
	var columns=[]
	if(typeof(GetTabs[tabID].columns)!="undefined"){
		columns=GetTabs[tabID].columns(tabID)
		if(typeof(GetTabs[tabID].formatter)!="undefined"){
			for(var i=0;i<columns.length;i++){
				columns[i].formatter=GetTabs[tabID].formatter
			}
		}
		
	}
	var fitColumns=false
	if(typeof(GetTabs[tabID].fitColumns)!="undefined"){
		fitColumns=GetTabs[tabID].fitColumns
	}
	$("#"+tableID).datagrid({
		fit : true,
		width : 'auto',
		striped : true,
		singleSelect : true,//true 单选 
		fitColumns : fitColumns,		//表格是否自定义宽度
		autoRowHeight : false,
		loadMsg : '加载中..',  
		pagination : false, 		//是否开启分页
		rownumbers : true,//是否开启行号
		idField:"ID",
		pageSize: 10,//分页数量
		pageList : [10,50,100,200],
		autoRowHeight:true,
		nowrap:false,  /*此处为false*/
		columns:[columns],
		onDblClickRow:function(rowIndex, rowData){
			if(typeof(GetTabs[tabID].onDblClickRow)!="undefined"){
				GetTabs[tabID].onDblClickRow(tabID,rowData)
			}
		}
	})

}

function InitTabs(){
	
	getTabsGrid()
}


function getTabsGrid(){
	
	$(".tabpanel").html("")	
		
	var data={hospDR:session['LOGON.HOSPID'],WardID:session['LOGON.WARDID'],ShowHide:1}
	runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","GetAllTabTitles",data,function(rtn){	
		for(var i=0;i<rtn.length;i++){
			var tabsID=rtn[i].itemId
			var html='<div id="'+tabsID+'" style="height:480px;margin-bottom:10px;" class="hisui-tabs tabs-gray" data-options=""></div>'
			$(".tabpanel").append(html)	
			$('#'+tabsID).tabs()
			if(typeof(GetTabs[tabsID].title)!='undefined'){
				GetTabs[tabsID].name=rtn[i].desc
				if(typeof(rtn[i].text)!="undefined"){
					if(rtn[i].text!=""){
						GetTabs[tabsID].name=rtn[i].text
					}
				}
				
				GetTabs[tabsID].title(tabsID)
				if(1==2){
				/*for(var i=0;i<30;i++){
					$HUI.tabs("#"+tabsID).add({
						title: "测试tab"+i,
						iconCls:'icon-batch-cfg',
						closable:true,
						selected:false 		
					});
				}*/
				
				$HUI.tabs("#"+tabsID).add({
					title: $g(GetTabs[tabsID].name),
					iconCls:"icon-batch-add",
					closable:false,
					selected:false 	  		
				});
				
				$HUI.tabs("#"+tabsID).add({
					title: '<span><span class="text">'+$g("未执行")+"</span><span class='tsnum'></span></span>",
					closable:false,
					selected:false 	
				});
				
				var parmas={
					hospDR:session['LOGON.HOSPID'],
					WardID:session['LOGON.WARDID'],
					TaskType:3,
					ShowHide:1
				}
				
				runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","GetTabTitles",parmas,function(datas){	
					for(var i=0;i<datas.length;i++){
						var data=datas[i]
						if(data.text=="" || typeof(data.text)=="undefined"){
							data.text=data.desc	
						}
						$HUI.tabs("#"+tabsID).add({
							title:'<span itemId="'+data.itemId+'"><span class="text">'+$g(data.text)+"</span><span class='tsnum'></span></span>",
							closable:false,
							selected:false 	
						});
						
					}
				},'json',false);
				
				}
			}
		}
		
	},'json',false);
		
		
	//}
	
}

/**
查询Demo配置的体征、评估、处置治疗任务项
1：体征 2：评估 3 处置治疗
**/
function signItem(tabID,taskType){
	var parmas={
		hospDR:session['LOGON.HOSPID'],
		WardID:session['LOGON.WARDID'],
		TaskType:taskType,
		ShowHide:1
	}
	
	runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","GetTabTitles",parmas,function(datas){	
		addTab(tabID,datas)
	},'json',false);
	
}

function signData(tabID,taskType){
	//setTimeout(function(){
		var episodeIDStr = resultPatIds() 
		if(episodeIDStr==""){
			return false;	
		} 
		var tab = $('#'+tabID).tabs('getSelected');
		var index = $('#'+tabID).tabs('getTabIndex',tab);
		var tableID=tabID+index
		var title=tab.panel('options').title
		var itemId=$(title).attr("itemId")
		if(typeof(itemId)=="undefined"){
			itemId=""
		}
		
		var data = {
			EpisodeIDs:episodeIDStr,
			WardID:session['LOGON.WARDID'],
			UserId:session['LOGON.USERID'],
			LocID:session['LOGON.CTLOCID'],
			HospDR:session['LOGON.HOSPID'],
			GroupID: session['LOGON.GROUPID'],
			StartDate:$("#execStDate").datebox("getValue"),
			StartTime:$("#execStTime").timespinner("getValue"),
			EndDate:$("#execEndDate").datebox("getValue"),
			EndTime:$("#execEndTime").timespinner("getValue"),
		 	TaskType:taskType,
		 	ItemId:""
		}
		var param = JSON.stringify(data)
		runClassMethod("Nur.NIS.Service.NursingTask.TaskController","GetNursingTaskRecordByStr",{data:param},function(rtnData){
			
			var wzxData=[]
			for(var j=0;j<rtnData.length;j++){
				if(typeof(rtnData[j].itemValue)=="undefined" || rtnData[j].itemValue==""){
					wzxData.push(rtnData[j])
				}
				
			}
			var leftTime=""
			if($("li.time-line-item.itemHover").length>0){
				var leftTime=$("li.time-line-item.itemHover").find("span.time-str").attr("sttime")
				var timeData=[]
				for(var j=0;j<wzxData.length;j++){
					var exeTime=wzxData[j].exeTime
					if(leftTime==exeTime){
						timeData.push(wzxData[j])
					}
					
				}
				wzxData=timeData
				
			}
			
			rtnData=wzxData
			var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
			var tCount = tabs.length;
			var titleArr={}
			var allGridList={}
			for(var i=0;i<tCount;i++){
				var title=tabs[i].panel('options').title
				var key = $(title).attr("itemId");
				var text= $(title).find("span.text").text();
				if(key!="" && typeof(key)!="undefined"){
					var taskList=[]
					for(var j=0;j<rtnData.length;j++){
						if(key==rtnData[j].itemId){
							taskList.push(rtnData[j])
						}
					}
					allGridList[key]=taskList
					if(taskList.length>0){
						$($("#"+tabID).find("ul li")[i]).find("span.tsnum").text(taskList.length);
					}else{
						$($("#"+tabID).find("ul li")[i]).find("span.tsnum").text("");
					}
				}
			}
			
			if(itemId!=""){
				$("#"+tableID).datagrid("unselectAll");
				$("#"+tableID).datagrid('loadData', allGridList[itemId])	
			}else{
				$("#"+tableID).datagrid("unselectAll");
				$("#"+tableID).datagrid('loadData', rtnData)
			}
			if(rtnData.length>0){
				$($("#"+tabID).find("ul li")[1]).find("span.tsnum").text(rtnData.length);
			}else{
				$($("#"+tabID).find("ul li")[1]).find("span.tsnum").text("");
			}
			if(leftTime==""){
				//添加左侧时间点对应的统计值
				var leftTimeArrs={}
				for(var j=0;j<rtnData.length;j++){
					var exeTime=rtnData[j].exeTime
					var time=exeTime.split(":")[0]
					var leftTimeData=[]
					if(typeof(leftTimeArrs[time])!="undefined"){
						leftTimeData=leftTimeArrs[time]
					}
					leftTimeData.push(rtnData[j])
					leftTimeArrs[time]=leftTimeData
					
				}
				for(var time in leftTimeArrs){
					var leftTimeData=leftTimeArrs[time]
					$("#"+tabID+"-"+time).text(leftTimeData.length)	
					$("#"+tabID+"-"+time).parents(".content").addClass("contentShow").show()
				}
			}
			
			
				
				
			
			
		},'json',true);
		
	//}, 20);	
}
function patientTreeCheckChangeHandle(){
	$("#serachBtn").trigger("click")
}
function addMainTab(title, content){
		$('#main-tabs').tabs('close', title);
		if ($('#main-tabs').tabs('exists', title)){
			$('#main-tabs').tabs('close', title);
			
			addMainTab(title, content)
		} else {
			$HUI.tabs("#main-tabs").add({
				title: title,
				content: content,
				closable:true  		
			});
			$('#main-tabs').tabs({    
				onSelect:function(title,index){    
					if(index==0){
						$("#serachBtn").trigger("click")
					}else{
						var tabsId = $(this).attr("id");
						var tab = $HUI.tabs("#"+tabsId).getTab(index)
						console.log(tab)
						$HUI.tabs("#"+tabsId).update({
							tab:tab	
						});
					}
				}
			})
			
		}
	}
var GetTabs={
	

	
	"tabsTasksSign":{
		name:"体征任务",
		fitColumns:true,
		title:function(tabID){
			signItem(tabID,1)
			addGridTable(tabID)
			
		},
		data:function(tabID){
			signData(tabID,1)	

		},
		formatter:function(value,row,index){
			var newValue='<span name="tabsTasksSign" index= "' + index + '" onmouseover="ShowQueAssessList(this)">'+$g(value)+'</span>';
			return newValue;
		},
		columns:function(tabID){
			var Columns=[ 
				
				{ field: 'bedCode', title: '床号',width:50},
				{ field: 'patName', title: '姓名',width:80},
				{ field: 'exeDate', title: '需测日期',width:100},
				{ field: 'exeTime', title: '需测时间',width:100},
				{ field: 'itemName', title: '需测项目',width:100},
				//{ field: 'itemCode', title: '需测项目',width:100},
				
				//{ field: 'itemValue', title: '值',width:100},
				
			]	
			return Columns
		},
		onDblClickRow:function(tabID,rowData){
			var dataObj={
				startDate:$("#execStDate").datebox("getValue"),
				startTime:$("#execStTime").timespinner("getValue"),
				endDate:$("#execEndDate").datebox("getValue"),
				endTime:$("#execEndTime").timespinner("getValue")
			}
			var stdate = dataObj.startDate +' '+ dataObj.startTime
			var etDate = dataObj.endDate + ' ' + dataObj.endTime
			
			var EpisodeIDS = resultPatIds() 
			var EpisodeID = EpisodeIDS.split("^")[0]
			var arrs = EpisodeIDS.split("^") 
			var h = $("#nrLayout").find(".tabs-panels").eq(0).height()
			var TWsheetCodeName = rowData.exeItemName
			var TWsheetCode = rowData.itemCode
			var tab = $('#'+tabID).tabs('getSelected');  
			var title = tab.panel('options').title
			 TWsheetCodeName = $(title).text()
			var iframeUrl = getIframeUrl('nur.hisui.multivitalsignbyday.csp?componentArgs={}&codeStr='+TWsheetCode+'&EpisodeIDS='+EpisodeIDS+'&startDateTime='+stdate+'&endDateTime='+etDate+'&EpisodeID='+arrs[0])
			
			if(TWsheetCode=="FBS"){
				iframeUrl = getIframeUrl('nur.hisui.SingleBG.csp?componentArgs={}&startDateTime='+dataObj.startDate+'&endDateTime='+dataObj.endDate+'&EpisodeID='+arrs)
			}
			if(iframeUrl !=""){
				var content = '<iframe scrolling="auto" frameborder="0"  src="'+iframeUrl+'" style="width:100%;height:'+h+'px;"></iframe>';
				addMainTab(TWsheetCodeName,content)
			}	
			
		},
	},
	"tabsTasksAssess":{
		name:"评估任务",
		fitColumns:true,
		title:function(tabID){
			signItem(tabID,2)
			addGridTable(tabID)
		},
		formatter:function(value,row,index){
			var newValue='<span name="tabsTasksAssess" index= "' + index + '" onmouseover="ShowQueAssessList(this)">'+$g(value)+'</span>';
			return newValue;
		},
		columns:function(tabID){
			var Columns=[ 
				
				{ field: 'bedCode', title: '床号',width:50},
				{ field: 'patName', title: '姓名',width:80},
				{ field: 'exeDate', title: '需评日期',width:100},
				{ field: 'exeTime', title: '需评时间',width:100},
				{ field: 'itemName', title: '需评项目',width:100},
				//{ field: 'itemValue', title: '值',width:100},
				
				
			]
			return Columns
		},
		data:function(tabID){
			signData(tabID,2)	

		},
		onDblClickRow:function(tabID,rowData){
					
				var dataObj={
					startDate:$("#execStDate").datebox("getValue"),
					startTime:$("#execStTime").timespinner("getValue"),
					endDate:$("#execEndDate").datebox("getValue"),
					endTime:$("#execEndTime").timespinner("getValue")
				}
				var stdate = dataObj.startDate +' '+ dataObj.startTime
				var etDate = dataObj.endDate + ' ' + dataObj.endTime
				var h = $("#nrLayout").find(".tabs-panels").eq(0).height()
				

				//text="常规护理任务-护理评估"
				var TWsheetCode=rowData.itemId
				var templateName=rowData.templateName
				var EpisodeIDS = rowData.EpisodeID
				var text = rowData.itemName
	            var episodeID=rowData.EpisodeID
				var winWidth = $("body").width()*0.96;
				var winHeight = $("body").height()*0.9;
				var dialogHtml = "<iframe style='border:0px;' id='dialogFrame' src=''></iframe>";
				
				
				$('#dialogRefer').dialog({    
	    		title: text,
			    width: winWidth, 
			    height: winHeight,
	    		closed: false,    
	    		cache: false,
	    		iconCls:'icon-w-edit',
		        content: dialogHtml,
	    		modal: true ,
	    		onLoad: function () {},
			        onBeforeClose: function () {},
			        onOpen: function () {
			            $('body').css({
			                "overflow-y": "hidden"
			            });
			        },
			        onClose: function () {
			            $('body').css({
			                "overflow-y": "auto"
			            });
			            //$(this).dialog('destroy');
			            
			            
			            GetTabs[tabID].data(tabID)
			        }
				})
				
				
				
				
				/*var dialog = $(dialogHtml).dialog({
			        title: text,
			        width: winWidth, 
			        height: winHeight,
			        closed: false,
			        cache: false,
			        modal: true,
					iconCls:'icon-w-edit',
			        onLoad: function () {},
			        onBeforeClose: function () {},
			        onOpen: function () {
			            $('body').css({
			                "overflow-y": "hidden"
			            });
			        },
			        onClose: function () {
			            $('body').css({
			                "overflow-y": "auto"
			            });
			            $(this).dialog('destroy');
			            
			            
			            GetTabs[tabID].data(tabID)
			        }
			    });*/
			    $("#dialogFrame").attr("height", winHeight - 37);
    			$("#dialogFrame").attr("width", winWidth);
 				$("#dialogFrame").attr("src", getIframeUrl(templateName+".csp?EmrCode="+TWsheetCode+"&EpisodeID="+episodeID));
				
				
				
				//iframe加载完成后，对其子元素进行操作
			    var iframe = document.getElementById("dialogFrame");
			    if (iframe.attachEvent) {
			        iframe.attachEvent("onload", function() {
			              var dateEdit = $('#dialogFrame').contents().find('input[savefield='+rowData.dateFild+']')[0];
			         	  var timeEdit = $('#dialogFrame').contents().find('input[savefield='+rowData.timeFild+']')[0];
						  if($(dateEdit).length>0){
							 $(dateEdit).val(rowData.exeDate); 
						  }
						  if($(timeEdit).length>0){
							  $(timeEdit).val(rowData.exeTime);
						  }
			        });
			    } else {
			        iframe.onload = function() {
				     	  var dateEdit = $('#dialogFrame').contents().find('input[savefield='+rowData.dateFild+']')[0];
			         	  var timeEdit = $('#dialogFrame').contents().find('input[savefield='+rowData.timeFild+']')[0];
						  if($(dateEdit).length>0){
							 $(dateEdit).val(rowData.exeDate); 
						  }
						  if($(timeEdit).length>0){
							  $(timeEdit).val(rowData.exeTime);
						  }
				         	  
			         
			        };
			    }
			    //if...else...是一种兼容ie的写法
				
				
				
			},
	},
	"tabsDoctorOrderCzzl":{
		name:"治疗处置",
		title:function(tabID){
			signItem(tabID,3)
			addGridTable(tabID)
		},
		columns:function(tabID){
			return GetTabs["tabsDoctorOrderExe"].columns(tabID)
		},
		onDblClickRow:function(tabID,rowData){
			GetTabs["tabsDoctorOrderExe"].onDblClickRow(tabID,rowData)
		},
		data:function(tabID){
			var episodeIDStr = resultPatIds()  
			 if(episodeIDStr==""){
			 	return false;
			 }
			 
			var tab = $('#'+tabID).tabs('getSelected');
			var index = $('#'+tabID).tabs('getTabIndex',tab);
			var tableID=tabID+index
			var title=tab.panel('options').title
			var itemId=$(title).attr("itemId")
			if(typeof(itemId)=="undefined"){
				itemId=""
			}
			
			
			var data={
				 episodeIDStr: episodeIDStr,
				 currentSheetCode:"HLZLD",
				 groupID:session['LOGON.GROUPID'],
				 startDate:$("#execStDate").datebox("getValue"),
				 startTime:$("#execStTime").timespinner("getValue"),
				 endDate:$("#execEndDate").datebox("getValue"),
				 endTime:$("#execEndTime").timespinner("getValue"),
				 hospID:session['LOGON.HOSPID'],
				 wardID:session['LOGON.WARDID'],
				 locID:session['LOGON.CTLOCID'],
				 doctorOrderFlag:true,
				 createOrderFlag:false,
				 orderType:"A",
				 excutedOrderFlag:false,
				 ifPrint:false,
				 longOrderFlag:false,
				 tempOrderFlag:false,
				 newCreateFlag:false,
				 newDisconFlag:false,
				 confirmFlag:"" 
			}
			
			
			
			var orderData={}
			var param=""
			var paramWzx = $.extend(param,data)
			runClassMethod("Nur.NIS.Service.OrderExcute.QueryOrder","GetOrders",paramWzx,function(rtn){
				
				var leftTime=""
				if($("li.time-line-item.itemHover").length>0){
					var leftTime=$("li.time-line-item.itemHover").find("span.time-str").attr("sttime")
					var rtnOrdersNew=[]
					for(var i=0;i<rtn.orders.length;i++){
						var exeInfoList=rtn.orders[i].execInfos
						var execInfosNew=[]
						for(var j=0;j<exeInfoList.length;j++){
							var time=exeInfoList[j].sttTime
							if(time!=""){
								time=time.split(":")[0]+":00"	
							}
							
							if(time==leftTime){
								execInfosNew.push(exeInfoList[j])
							}
						}
						if(execInfosNew.length>0){
							rtn.orders[i].execInfos=execInfosNew
							
							rtnOrdersNew.push(rtn.orders[i])
						}
					}
					rtn.orders=rtnOrdersNew
					
				}
				
				var allTaskList=[]
				var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
				for(var i=0;i<tabs.length;i++){
					var title=tabs[i].panel('options').title
					var key = $(title).attr("itemId");
					if(key!="" && typeof(key)!="undefined"){
						
						for(var j=0;j<rtn.orders.length;j++){
							var exeInfoList=rtn.orders[j].execInfos
							var cmArcim=rtn.orders[j].cmArcim
							if(key==cmArcim){
								allTaskList.push(rtn.orders[j])
							}
						}
					}
				}
				rtn.orders=allTaskList
				
				
				var allGridList={}
				var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
				for(var i=0;i<tabs.length;i++){
					var title=tabs[i].panel('options').title
					var key = $(title).attr("itemId");
					if(key!="" && typeof(key)!="undefined"){
						var taskList=[]
						for(var j=0;j<rtn.orders.length;j++){
							var exeInfoList=rtn.orders[j].execInfos
							var cmArcim=rtn.orders[j].cmArcim
							if(key==cmArcim){
								taskList.push(rtn.orders[j])
							}
						}
						allGridList[key]=taskList
						if(taskList.length>0){
							var exeInfoLength=0
							for(var k=0;k<taskList.length;k++){
								
								exeInfoLength=exeInfoLength+taskList[k].execInfos.length
								
							}
							
							
							$($("#"+tabID).find("ul li")[i]).find("span.tsnum").text(exeInfoLength);
						}else{
							$($("#"+tabID).find("ul li")[i]).find("span.tsnum").text("");
						}
						
					}
				}
				
				
				if(itemId!=""){
					$("#"+tableID).datagrid("unselectAll");
					$("#"+tableID).datagrid('loadData', allGridList[itemId])	
				}else{
					$("#"+tableID).datagrid("unselectAll");
					$("#"+tableID).datagrid('loadData', rtn.orders)
				}
				if(rtn.orders.length>0){
					var exeInfoLength=0
					for(var j=0;j<rtn.orders.length;j++){
						var exeInfoList=rtn.orders[j].execInfos
						exeInfoLength=exeInfoLength+exeInfoList.length	
					}
					$($("#"+tabID).find("ul li")[1]).find("span.tsnum").text(exeInfoLength);
				}else{
					$($("#"+tabID).find("ul li")[1]).find("span.tsnum").text("");
				}
				
				
				
				if(leftTime==""){
					var rowData=rtn.orders
					var leftTimeArrs={}
					for(var i=0;i<rowData.length;i++){
						var exeInfoList=rowData[i].execInfos
						var cmArcim=rowData[i].cmArcim
						var rtnlist=[]
						for(var j=0;j<exeInfoList.length;j++){
							var exeInfo=exeInfoList[j]
							var sttDateTime=exeInfo.sttDateTime
							var exeTime=exeInfo.sttTime
							var time=exeTime.split(":")[0] 
							var leftTimeData=[]
							if(typeof(leftTimeArrs[time])!="undefined"){
								leftTimeData=leftTimeArrs[time]
							}
							leftTimeData.push(exeInfo)
							leftTimeArrs[time]=leftTimeData
						}
					}
					for(var time in leftTimeArrs){
						var leftTimeData=leftTimeArrs[time]
						$("#"+tabID+"-"+time).text(leftTimeData.length)	
						$("#"+tabID+"-"+time).parents(".content").addClass("contentShow").show()
					}
				}
				
				
				
				
			},'json',true)
			
			
		}
	},
	 "tabsEduTask":{
		name:"健康宣教",
		fitColumns:true,
		title:function(tabID){
			addTab(tabID,[])
			addGridTable(tabID)
		},
		columns:function(tabID){
			var Columns=[ 
				{ field: 'bedCode', title: '床号',width:50},
				{ field: 'name', title: '姓名',width:80},
				{ field: 'planDate', title: '待宣日期',width:100},
				{ field: 'subCount', title: '待宣任务数',width:100},
				
			]	
			return Columns
		},
		data:function(tabID){
				
					var episodeIDStr = resultPatIds()  
					if(episodeIDStr==""){
						return false	
					}
					
					
					var tab = $('#'+tabID).tabs('getSelected');
					var index = $('#'+tabID).tabs('getTabIndex',tab);
					var tableID=tabID+index
					var dataObj={
							startDate:$("#execStDate").datebox("getValue"),
							startTime:$("#execStTime").timespinner("getValue"),
							endDate:$("#execEndDate").datebox("getValue"),
							endTime:$("#execEndTime").timespinner("getValue")
					}
					
					var data = {
						Adm:episodeIDStr,
						WardID:session['LOGON.WARDID'],
						UserId:session['LOGON.USERID'],
						LocId:session['LOGON.CTLOCID'],
						HospDR:session['LOGON.HOSPID'],
						NoReturn: "", 
						StartDate:dataObj.startDate,
		 				EndDate:dataObj.endDate
					}
					var param = $.extend(param,data)
					runClassMethod("Nur.NIS.Service.NursingTask.TaskController","UpdateEduTaskAndReturnList",param,function(res){

					
						$("#"+tableID).datagrid("unselectAll");
						$("#"+tableID).datagrid('loadData', res.taskList)
						
					},'json',true);
					
				
			},	
			onDblClickRow:function(tabID,rowData){
				var EpisodeID=rowData.patId
				
			    var winWidth = $("body").width()*0.96;
				var winHeight = $("body").height()*0.9;
				//var dialogHtml = "<iframe id='dialogFrame' src=''></iframe>";
				
			
				
				
				
				var dialogHtml = "<iframe style='border:0px;' id='dialogFrame' src=''></iframe>";
				
				
				$('#dialogRefer').dialog({    
	    		title: $g('待宣任务'),
			    width: winWidth-200, 
			    height: winHeight,
	    		closed: false,    
	    		cache: false,
	    		iconCls:'icon-w-edit',
		        content: dialogHtml,
	    		modal: true ,
	    		onLoad: function () {},
			        onBeforeClose: function () {},
			        onOpen: function () {
			            $('body').css({
			                "overflow-y": "hidden"
			            });
			        },
			        onClose: function () {
			            $('body').css({
			                "overflow-y": "auto"
			            });
			            //$(this).dialog('destroy');
			            
			            
			            GetTabs[tabID].data(tabID)
			        }
				})
			     
			    
			    
			    
			    var dataObj={
					startDate:$("#execStDate").datebox("getValue"),
					startTime:$("#execStTime").timespinner("getValue"),
					endDate:$("#execEndDate").datebox("getValue"),
					endTime:$("#execEndTime").timespinner("getValue")
				}
			     $("#dialogFrame").attr("height", winHeight - 37);
				$("#dialogFrame").attr("width", winWidth-200);
 				$("#dialogFrame").attr("src", getIframeUrl("nur.hisui.nursingtask.view.edu.csp?EpisodeID="+EpisodeID+"&StartDate="+dataObj.startDate+"&EndDate="+dataObj.endDate));

			}, 
	  },
	"tabsNurseOrderExe":{
		name:"护理计划",
		title:function(tabID){
			var parmas={
				hospDR:session['LOGON.HOSPID'],
				WardID:session['LOGON.WARDID'],
				TaskType:4,ShowHide:1
			}
		
			runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","GetPlanTabTitles",parmas,function(datas){	
				
				addTab(tabID,datas)
				addGridTable(tabID)
					
					
				},'json',false);
		},
		columns:function(tabID){
			var Columns=[ 
				<!--{ field: 'recordId', checkbox: 'true'},-->
				{ field: 'patientBedNo', title: '床号',width:50},
				{ field: 'patientName', title: '姓名',width:150},
				{ field: 'interventionTypeName', title: '类型',width:100},
				{ field: 'planDateTime', title: '计划执行时间',width:140},
				{ field: 'executeItemName', title: '执行项目',width:250,wordBreak:"break-all"},
				{ field: 'itemInfo', title: '执行任务',width:180,
					formatter: function(itemInfo,row,index){
						itemInfo=eval("("+itemInfo+")");
						var itemExecutedCount=itemInfo.itemExecutedCount;
						var itemTotalCount=itemInfo.itemTotalCount;
						if ((itemExecutedCount>0)||(itemTotalCount>0)) {
							return $g("任务总数：")+itemTotalCount+"；"+$g("已执行：")+itemExecutedCount;
						}else{
							return "";
						}
					},
					styler: function(itemInfo,row,index){
						itemInfo=eval("("+itemInfo+")");
						var itemExecutedCount=itemInfo.itemExecutedCount;
						var itemTotalCount=itemInfo.itemTotalCount;
						if ((itemTotalCount>0)&&(itemExecutedCount<itemTotalCount)) {
							return "background-color:#fda632;color:white;";
						}
					}
				},
				{ field: 'executeNote', title: '执行备注',width:95},
				{ field: 'freqName', title: '频次',width:100},
				{ field: 'executeUserName', title: '执行人',width:100},
				{ field: 'executeDateTime', title: '执行时间',width:140},
				{ field: 'insertDateTime', title: '开始时间',width:140},
				{ field: 'stopDateTime', title: '结束时间',width:140},
				{ field: 'transferDateTime', title: '转入护理记录时间',width:150},
				{ field: 'executeContent', title: '执行结果',width:250},
				{ field: 'tkStatusName', title: '状态',width:100}
				
		    ];
		    return Columns
				
		},
		data:function(tabID){
			var episodeIDStr = resultPatIds()
			if(episodeIDStr==""){
				return false;	
			}
			var parm={
				startDate:$("#execStDate").datebox("getValue"),
				startTime:$("#execStTime").timespinner("getValue"),
				endDate:$("#execEndDate").datebox("getValue"),
				endTime:$("#execEndTime").timespinner("getValue")
			}
			var rtnData=$.cm({
				ClassName:"Nur.NIS.Service.NursingPlan.TaskRecord",
				QueryName:"GetTaskList",
				episodeIDString:episodeIDStr,
				dateFrom:parm.startDate+" "+parm.startTime,
				dateTo:parm.endDate+" "+parm.endTime,
				taskStatus:0,
				intType:"",
				rows:9999999
			},false)
			//rtnData=rtnData.rows
			///过滤隐藏的项目
			var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
			var allTaskList=[]
			for(var i=0;i<tabs.length;i++){
				var title=tabs[i].panel('options').title
				var key = $(title).attr("itemId");
				var text= $(title).find("span.text").text();
				if(key!="" && typeof(key)!="undefined"){
					
					for(var j=0;j<rtnData.rows.length;j++){
						if(key==rtnData.rows[j].interventionTypeId){
							allTaskList.push(rtnData.rows[j])
						}
					}
					
				}
			}
			rtnData=allTaskList
			
			
			
			
			var tab = $('#'+tabID).tabs('getSelected');
			var index = $('#'+tabID).tabs('getTabIndex',tab);
			
			var title=tab.panel('options').title
			var itemId=$(title).attr("itemId")
			if(typeof(itemId)=="undefined"){
				itemId=""
			}
			
			var tableID=tabID+index
			
			
			var tCount = tabs.length;
			var titleArr={}
			var allGridList={}
			for(var i=0;i<tCount;i++){
				var title=tabs[i].panel('options').title
				var key = $(title).attr("itemId");
				var text= $(title).find("span.text").text();
				if(key!="" && typeof(key)!="undefined"){
					var taskList=[]
					for(var j=0;j<rtnData.length;j++){
						if(key==rtnData[j].interventionTypeId){
							taskList.push(rtnData[j])
						}
					}
					allGridList[key]=taskList
					if(taskList.length>0){
						$($("#"+tabID).find("ul li")[i]).find("span.tsnum").text(taskList.length);
					}else{
						$($("#"+tabID).find("ul li")[i]).find("span.tsnum").text("");
					}
				}
			}
			
			if(itemId!=""){
				$("#"+tableID).datagrid("unselectAll");
				$("#"+tableID).datagrid('loadData', allGridList[itemId])	
			}else{
				$("#"+tableID).datagrid("unselectAll");
				$("#"+tableID).datagrid('loadData', rtnData)
			}
			if(rtnData.length>0){
				$($("#"+tabID).find("ul li")[1]).find("span.tsnum").text(rtnData.length);
			}else{
				$($("#"+tabID).find("ul li")[1]).find("span.tsnum").text("");
			}
			
			//添加左侧时间点对应的统计值
			var leftTimeArrs={}
			for(var j=0;j<rtnData.length;j++){
				
				var planDateTime=rtnData[j].planDateTime
				var exeDate=planDateTime.split(" ")[0]
				var exeTime=planDateTime.split(" ")[1]
				
				var time=exeTime.split(":")[0]
				var leftTimeData=[]
				if(typeof(leftTimeArrs[time])!="undefined"){
					leftTimeData=leftTimeArrs[time]
				}
				leftTimeData.push(rtnData[j])
				leftTimeArrs[time]=leftTimeData
				
			}
			for(var time in leftTimeArrs){
				var leftTimeData=leftTimeArrs[time]
				$("#"+tabID+"-"+time).text(leftTimeData.length)	
				$("#"+tabID+"-"+time).parents(".content").addClass("contentShow").show()
			}
			
		},
		onDblClickRow:function(tabID,rowData){
				
				console.log(rowData)
				var h = $("#nrLayout").find(".tabs-panels").eq(0).height()-20
				var EpisodeIDS = resultPatIds() 
				var EpisodeID = EpisodeIDS.split("^")[0]

				TWstartDate = $("#execStDate").datebox("getValue");
				TWstartTime = $("#execStTime").timespinner("getValue");
				TWendDate = $("#execEndDate").datebox("getValue");
				TWendTime = $("#execEndTime").timespinner("getValue");
				
				var thisTab = $('#'+tabID).tabs('getSelected'); 
				var title=thisTab.panel('options').title
				TWsheetCode=$(title).attr("itemId")
				//var text=$(title).text()
				//if(TWsheetCode==""){
					TWsheetCode=rowData.interventionTypeId	
					text=rowData.interventionTypeName
				//}
				
				var ptext =encodeURI(text);  
				var iframeUrl=getIframeUrl('nur.hisui.nurseplantaskexecute.csp?1=1&episodeIDString='+EpisodeIDS+'&dateFrom='+TWstartDate+'&timeFrom='+TWstartTime+'&dateTo='+TWendDate+'&timeTo='+TWendTime+'&showTaskTabName='+ptext)

				if(iframeUrl !=""){
					console.log(iframeUrl)
					console.log(iframeUrl)
					var mainW=$("#main-tabs").width()-20
					
					var content = '<iframe scrolling="auto" frameborder="0"  src="'+iframeUrl+'" style="width:'+mainW+'px;height:'+h+'px;padding:10px;padding-bottom:0px;margin-bottom:10px;"></iframe>';
					addMainTab(text,content)
				}
				
				
			},
	 },
	
	 "tabsDoctorOrderExe":{
		name:"医嘱执行",
		initflag:0,
		addTab:function(tabID,datas){
		
			$HUI.tabs("#"+tabID).add({
				title: $g(GetTabs[tabID].name),
				iconCls:"icon-batch-add",
				closable:false,
				selected:false    		
			});
			

			for(var i=0;i<datas.length;i++){
				var data=datas[i]
				if(data.text=="" || typeof(data.text)=="undefined"){
					data.text=data.desc	
				}
				$HUI.tabs("#"+tabID).add({
					title:'<span itemId="'+data.itemId+'"><span class="text">'+$g(data.text)+"</span></span>",
					closable:false,
					selected:false 	 
				});
			}
			$HUI.tabs("#"+tabID,{
				onSelect:function(title,index){
					if(typeof(GetTabs[tabID].data)!="undefined"){
						if(GetTabs[tabID].initflag==1){
								//GetTabs[tabID].data(tabID)
							
								var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
								addTable(tabID,tabs[index],tabID+""+index)
								GetTabs[tabID].data(tabID)
							
						}
					}		
				}
			});
			
			addGridTable(tabID)
			
		
			/*var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
			for(var i=1;i<tabs.length;i++){
				$("#"+tabID).tabs('select',i);
				addTable(tabID,tabs[i],tabID+i)
			}*/
			$("#"+tabID).tabs('select',1);
			
			GetTabs[tabID].initflag=1
		},
		title:function(tabID){
			var locId = session['LOGON.CTLOCID']
			var hospId = session['LOGON.HOSPID']
			var groupId = session['LOGON.GROUPID']
			var datas=[]
			var data={
				GroupID:session['LOGON.GROUPID'],
				WardID:session['LOGON.WARDID'],
				LocID:session['LOGON.CTLOCID'],ShowHide:1}
			runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","GetOrderTabTitles",data,function(datas){	
				GetTabs[tabID].addTab(tabID,datas)
			},'json',false);
		 },
		 columns:function(tabID){
			var Columns=[
					{ field: 'bedCode',title:'床号',width:50,wordBreak:"break-all"},
					{ field: 'patName',title:'病人姓名',width:150,wordBreak:"break-all"},
					{ field: 'regNo',title:'登记号',width:100,wordBreak:"break-all"},
					{ field: 'createDateTime',title:'开医嘱时间',width:200,wordBreak:"break-all"},
					{ field: 'oecprDesc',title:'优先级',width:80,wordBreak:"break-all"},
					{ field: 'disposeStatCode',title:'处置状态',width:150,wordBreak:"break-all",
						formatter:function(value,row,index){
							var disposeStatCode=""
							//var ahtml=""
							var statCodeArr={}
							var statCodeHtmlArr={}
							if(!isUndefined(row.execInfos)){
								var len = row.execInfos.length
								if(len>0){
									//ahtml = '<span class="excuteState_num">'+len+'</span>'	
									//row.disposeStatCode = row.execInfos[0].disposeStatCode
								}
								
								for(var i=0;i<len;i++){
									var stcode=row.execInfos[i].disposeStatCode
									var isExitCode=statCodeArr[stcode]
									if(isUndefined(isExitCode)){
										statCodeArr[stcode]=1
									}else{
										var codeNum=statCodeArr[stcode]
										statCodeArr[stcode]=codeNum+1
									}
								}
								for(key in statCodeArr){
									var codeNum=statCodeArr[key]
									statCodeHtmlArr[key]='<span class="excuteState_num">'+codeNum+'</span>'	
								}
								//statCodeArr.push(row.execInfos[i].disposeStatCode)
							}else{
								statCodeHtmlArr[row.disposeStatCode]='<span class="excuteState_num"></span>'	
							}
							
							
							
							var stateArr={
								"NeedToStop":{"name":"需处理停止","bgcolor":"#20BF97"},
								"NeedToDeal":{"name":" 需处理医嘱","bgcolor":"#9FC5E8"},
								"LongUnnew":{"name":" 非新长嘱","bgcolor":"#93C47D"},
								"Temp":{"name":" 临时医嘱","bgcolor":"#F9CB9C"},
								"LongNew":{"name":" 新开长嘱","bgcolor":"#7CBB56"},
								"PreStopOrder":{"name":" 预停","bgcolor":"#7CBB56"}
								}
							var html=""
							for(var key in statCodeHtmlArr){
								var statCode=key
								var ahtml=statCodeHtmlArr[key]
								var state=stateArr[statCode]
								if(isUndefined(state)){
									state={"name":statCode,"bgcolor":"#9FC5E8"}
								}
								
								html=html+'<a name="'+tabID+'" index= "' + index + '" class="excuteState_disposeState" onmouseover="ShowOrderExe(this)" style="background-color: '+state.bgcolor+';">'
								html=html+$g(state.name)
								html=html+'<span class="excuteState_triangle" style="border-right-color: '+state.bgcolor+';"><span class="excuteState_circle"></span></span>'
								html=html+ahtml
								html=html+"</a>"
							}
							return html
						}
					},
					{ field: 'arcimDesc',title:'医嘱名称',width:300,wordBreak:"break-all",
						formatter: function(value,row,index){
							var values=[]
							values.push('<span style="font-weight:bold">'+value+'</span>')
							if(row.childs.length>0){
								
								for(var i=0;i<row.childs.length;i++){
									var childOrder=row.childs[i]
									var childArcimDesc=childOrder.arcimDesc
									
									//value=value+","+childArcimDesc
									values.push('<span>'+childArcimDesc+'</span>')
								}	
							}
							
							var text = '',style='';
							
							var html=""
							var jiHtml='<span class="orderArcimDesc_sealSpanWrapper"><span class="orderArcimDesc_sealSpan is-emergency">急</span></span>'
							if(!isUndefined(row.firstDayTimes)){
								html=html+'<span style="font-weight:bold;color:#F37476;margin-left: 10px;">'+row.firstDayTimes+'</span>'
							}
							if(!isUndefined(row.lastExecTimes)){
								html=html+'<span style="font-weight:bold;color:#F37476;margin-left: 10px;">'+row.lastExecTimes+'</span>'
							}
							
							if(values.length==1){
								for (var j = 0; j < values.length; j++) {
									var desc=values[j]
									text += '<div style="margin:5px 0 0 5px">' + desc +html+ '</div>';
								}
							}else{
								for (var j = 0; j < values.length; j++) {
									var desc=values[j]
									text += '<div style="display:flex">'
									text += '<div>'
									text += '<div class="left-bracket"' + style + '></div>'
									text += '<div class="right-bracket"' + style + '></div>'
									text += '</div>';
									text += '<div style="margin:5px 0 0 5px">'+desc+'</div>';
									text += '</div>';
								}
							}
							text = '<div class="arcimdesc" style="padding: 5px 0px 5px 0px">' + text +'</div>';
							return text
							return value +""+row.disposeStatCode+row.lastExecTimes
						}
					},
					{ field: 'notes',title:'备注',width:200,wordBreak:"break-all"},
					{ field: 'doseQtyUnit',title:'剂量',width:100,wordBreak:"break-all"},
					{ field: 'phcfrCode',title:'频率',width:100,wordBreak:"break-all"},
					{ field: 'phcinDesc',title:'用药途径',width:100,wordBreak:"break-all"},
					{ field: 'phOrdQtyUnit',title:'总量',width:100,wordBreak:"break-all"}
			
			    ];	
				return 	Columns	 
		 },
		 data:function(tabID){
			 var episodeIDStr = resultPatIds()  
			 if(episodeIDStr==""){
			 	return false;
			 }
			 
			var tab = $('#'+tabID).tabs('getSelected');
			var index = $('#'+tabID).tabs('getTabIndex',tab);
			
			var title=tab.panel('options').title
			var itemId=$(title).attr("itemId")
			if(typeof(itemId)=="undefined"){
				itemId=""
			}
			var data={
				 episodeIDStr: episodeIDStr,
				 currentSheetCode:"DefaultSee",
				 groupID:session['LOGON.GROUPID'],
				 startDate:$("#execStDate").datebox("getValue"),
				 startTime:$("#execStTime").timespinner("getValue"),
				 endDate:$("#execEndDate").datebox("getValue"),
				 endTime:$("#execEndTime").timespinner("getValue"),
				 hospID:session['LOGON.HOSPID'],
				 wardID:session['LOGON.WARDID'],
				 locID:session['LOGON.CTLOCID'],
				 doctorOrderFlag:true,
				 createOrderFlag:false,
				 orderType:"A",
				 excutedOrderFlag:false,
				 ifPrint:false,
				 longOrderFlag:false,
				 tempOrderFlag:false,
				 newCreateFlag:false,
				 newDisconFlag:false,
				 confirmFlag:"" 
			}
			
			
			var tabs = $("#"+tabID).tabs("tabs");//获得所有小Tab
			var tCount = tabs.length;
			var sheetCodes=[]
			
			if((itemId=="")){
				sheetCodes=["DefaultSee","WZX"]
			}else{
				sheetCodes=[itemId]
			}
			for(var s=0;s<sheetCodes.length;s++){
				data.currentSheetCode=sheetCodes[s]
				var thisSheetCode=sheetCodes[s]
				var param=""
				var paramWzx = $.extend(param,data)
				runClassMethod("Nur.NIS.Service.OrderExcute.QueryOrder","GetOrders",paramWzx,function(rtn){
					var leftTime=""
					if($("li.time-line-item.itemHover").length>0){
						var leftTime=$("li.time-line-item.itemHover").find("span.time-str").attr("sttime")
						if(data.currentSheetCode=="DefaultSee"){
							var ordersNew=[]
							for(var i=0;i<rtn.orders.length;i++){
								var createDateTime=rtn.orders[i].createDateTime
								var	createTime=createDateTime.split(" ")[1]
								var time=createTime.split(":")[0]+":00"
								
								if(time==leftTime){
									ordersNew.push(rtn.orders[i])
								}
								
								
							}
							rtn.orders=ordersNew
							
						}else{
							var rtnOrdersNew=[]
							for(var i=0;i<rtn.orders.length;i++){
								var exeInfoList=rtn.orders[i].execInfos
								var execInfosNew=[]
								for(var j=0;j<exeInfoList.length;j++){
									var time=exeInfoList[j].sttTime
									if(time!=""){
										time=time.split(":")[0]+":00"	
									}
									
									if(time==leftTime){
										execInfosNew.push(exeInfoList[j])
									}
								}
								if(execInfosNew.length>0){
									rtn.orders[i].execInfos=execInfosNew
									
									rtnOrdersNew.push(rtn.orders[i])
								}
							}
							rtn.orders=rtnOrdersNew
						}
					}
					
					
					
					var tableID=tabID+index
					$("#"+tableID).datagrid("unselectAll");
					$("#"+tableID).datagrid('loadData', rtn.orders)
					
					for(var i=0;i<tCount;i++){
						var title=tabs[i].panel('options').title
						var key = $(title).attr("itemId");
						if(key!="" && typeof(key)!="undefined"){
							if(typeof(rtn[key])!="undefined"){
								$($("#"+tabID).find("ul li")[i]).append('<sup class="tabItem_badge"></sup>');
							}else{
								$($("#"+tabID).find("ul li")[i]).find(".tabItem_badge").remove();	
							}
						}
					}
					
					
					
					if(leftTime==""){
						var rowData=rtn.orders
						var leftTimeArrs={}
						
						
						if(data.currentSheetCode=="DefaultSee"){
							leftTimeArrs={}
							for(var i=0;i<rowData.length;i++){
								var createDateTime=rowData[i].createDateTime
								var	createTime=createDateTime.split(" ")[1]
								var time=createTime.split(":")[0] 
								var leftTimeData=[]
								if(typeof(leftTimeArrs[time])!="undefined"){
									leftTimeData=leftTimeArrs[time]
								}
								leftTimeData.push(exeInfo)
								leftTimeArrs[time]=leftTimeData
								
								
								
							}
						}else{
							for(var i=0;i<rowData.length;i++){
								var exeInfoList=rowData[i].execInfos
								var cmArcim=rowData[i].cmArcim
								var rtnlist=[]
								for(var j=0;j<exeInfoList.length;j++){
									var exeInfo=exeInfoList[j]
									var sttDateTime=exeInfo.sttDateTime
									var exeTime=exeInfo.sttTime
									var time=exeTime.split(":")[0] 
									var leftTimeData=[]
									if(typeof(leftTimeArrs[time])!="undefined"){
										leftTimeData=leftTimeArrs[time]
									}
									leftTimeData.push(exeInfo)
									leftTimeArrs[time]=leftTimeData
								}
							}
								
						}
						
						for(var time in leftTimeArrs){
							var leftTimeData=leftTimeArrs[time]
							if(time=="09"){
								var a=0	
							}
							$("#"+tabID+"-"+data.currentSheetCode+"-"+time).text(leftTimeData.length)	
							$("#"+tabID+"-"+data.currentSheetCode+"-"+time).parents(".content").addClass("contentShow").show()
						}
					}
					
					
					
					
				},'json',true)
			}
		 },
		 onDblClickRow:function(tabID,rowData){
				console.log(rowData)
				
				var EpisodeIDS = resultPatIds() 
				var h = $("#nrLayout").find(".tabs-panels").eq(0).height()-20
				
				TWstartDate = $("#execStDate").datebox("getValue");
				TWstartTime = $("#execStTime").timespinner("getValue");
				TWendDate = $("#execEndDate").datebox("getValue");
				TWendTime = $("#execEndTime").timespinner("getValue");
				
				var thisTab = $('#'+tabID).tabs('getSelected'); 
				var title=thisTab.panel('options').title
				TWsheetCode=$(title).attr("itemId")
				if(TWsheetCode==""){
					TWsheetCode="WZX"	
				}
				
				if(tabID=="tabsDoctorOrderCzzl"){
					TWsheetCode="HLZLD"
				}	
				
				TWflag = true;
		        EpisodeIDStr=EpisodeIDS;
				TWsheetCode =TWsheetCode; //DefaultSee、WZX（单据code）
				TWstartDate = TWstartDate; //开始日期
				TWstartTime=TWstartTime; //开始时间
				TWendDate=TWendDate; //结束日期
				TWendTime=TWendTime;//结束时间
				
				console.log(EpisodeIDStr+","+TWstartDate+","+TWstartTime+","+TWendDate+","+TWendTime+","+TWsheetCode)
				var text=$(title).text()
				var curUrl = window.location.href.split("/csp/")[0] + "/csp/";
				var iframeUrl = getIframeUrl(curUrl + "dhc.nurse.vue.nis.csp?1=1&pageName=orderExcute/biz/excute")
				if(iframeUrl !=""){
					console.log(iframeUrl)
					var mainW=$("#main-tabs").width()-20
					
					var content = '<iframe scrolling="auto" frameborder="0"  src="'+iframeUrl+'" style="width:'+mainW+'px;height:'+h+'px;padding:10px;overflow: hidden;"></iframe>';
					addMainTab(text,content)
				}
				
				
			},
	 }
	}


function isUndefined(value){
	return typeof(value) =="undefined"
}



</script>
<script type="text/javascript">
function ShowOrderExe(that){
	var tabID=$(that).attr("name")
	var rowIndex=$(that).attr("index")
	var tab = $("#"+tabID).tabs('getSelected');
	var index = $('#'+tabID).tabs('getTabIndex',tab);
	var tableID=tabID+index
	var rows = $('#'+tableID).datagrid('getRows');
	var exeInfoList=rows[rowIndex].execInfos
	var height=31;
		// 来源 触发因素 状态 触发时间 记录ID
	$(that).webuiPopover({
		title:'',
		content:function(){
			var html=[];
			html.push('<table class="related-factors" style="height:100%;">');
			
			//var exeInfoList=rtn.orders[i].execInfos
			for(var j=0;j<exeInfoList.length;j++){
				var exeInfo=exeInfoList[j]
				var sttDateTime=exeInfo.sttDateTime
				var planData={
					exeDate:exeInfo.sttDate,
					exeTime:exeInfo.sttTime,
					DspStat:exeInfo.dspStat,
					freqNo:exeInfo.freqNo
				}	
				html.push('<tr>');
				html.push('<td style="height:28px;white-space: nowrap">'+exeInfo.sttDate+'</td>');
				html.push('<td white-space: nowrap>'+exeInfo.sttTime+'</td>')
				html.push('<td style="font-weight: bold;color:#E0495A;white-space: nowrap">'+exeInfo.freqNo+'</td>');
				html.push('<td style="font-weight: bold;white-space: nowrap">'+exeInfo.dspStat+'</td>');

				html.push('</tr>');
			}
			
			html.push('</table>');
			var htmlCode= html.join('');
			delete html;
			return htmlCode;
		},
		trigger:'hover',
		placement:'right',
		style:'inverse',
		height:(height*exeInfoList.length),
		maxHeight:550
	});
	$(that).webuiPopover('show');
}




function ShowQueAssessList(that){
	
	var tabID=$(that).attr("name")
	var rowIndex=$(that).attr("index")
	var tab = $("#"+tabID).tabs('getSelected');
	var index = $('#'+tabID).tabs('getTabIndex',tab);
	var tableID=tabID+index
	

	
	

	var rows = $('#'+tableID).datagrid('getRows');
	
	var tkDataList=rows[rowIndex].pointTaskList
	
	
	var height=31;
		// 来源 触发因素 状态 触发时间 记录ID
	$(that).webuiPopover({
		title:'',
		content:function(){
			var html=[];
			html.push('<table class="related-factors">');
			html.push('<tr class="title"><td>'+$g("ID")+'</td><td class="assess-source"  style="display:none;">'+$g("来源")+'</td><td class="assess-factors">'+$g("触发因素")+'</td><td class="assess-trggerTime">'+$g("触发时间")+'</td><td class="assess-status">'+$g("触发值")+'</td></tr>');
			for(var i=0;i<tkDataList.length;i++){
				var id=tkDataList[i].id
				var type=tkDataList[i].type
				var desc=tkDataList[i].desc
				var pointDate=tkDataList[i].pointDateTime
				var pointValue=tkDataList[i].pointValue
				//var exeItemName=tkDataList[i].exeItemName
				
				if(isUndefined(pointValue)){
					pointValue=""		
				}
				if(typeof(pointValue ) == 'object'){
					pointValue=pointValue[0].Value
				}
				html.push('<tr>');
				html.push('<td>'+id+'</td>');
				html.push('<td  style="display:none;" class="assess-source">'+type+'</td>')
				html.push('<td>'+desc+'</td>');
				//html.push('<td>'+exeItemName+'</td>');
				html.push('<td class="assess-trggerTime">'+pointDate+'</td>');
				html.push('<td class="assess-status">'+pointValue+'</td>');
				//html.push('<td style="width:30px;"></td>');
				html.push('</tr>');
			}
			
			html.push('</table>');
			var htmlCode= html.join('');
			delete html;
			return htmlCode;
		},
		trigger:'hover',
		placement:'right',
		style:'inverse',
		height:(height*tkDataList.length)+30
	});
	$(that).webuiPopover('show');
}

</script>
<script type="text/javascript">

$("#settingBtn").on("click",function(){
	var winWidth = $("body").width()*0.96;
	var winHeight = $("body").height()*0.9;
	var dialogHtml = "<iframe  id='dialogFrame' src=''></iframe>";
	var dialog = $(dialogHtml).dialog({
        title: $g("通用设置"),
        width: 680, 
        height: winHeight,
        closed: false,
        cache: false,
        modal: true,
        iconCls:'icon-w-setting',
        onLoad: function () {},
        onBeforeClose: function () {},
        onOpen: function () {
            $('body').css({
                "overflow-y": "hidden"
            });
        },
        onClose: function () {
            $('body').css({
                "overflow-y": "auto"
            });
            $(this).dialog('destroy');
       		
       		//$("#serachBtn").trigger("click")
       		$.messager.confirm($g('确认'),$g('是否刷新界面'),function(r){    
				if (r){
					//window.location.reload()
					setTimeout(function(){
						$(".tabpanel").html("")
						InitTabs()
						setGenral()
						$("#serachBtn").trigger("click")
					},100)
					
	    
				}
       		})
        }
    });
    $("#dialogFrame").attr("height", winHeight - 37);
	$("#dialogFrame").attr("width", 680);
	$("#dialogFrame").attr("src", getIframeUrl("nur.hisui.nursingtask.view.setting.csp?wardID="+session['LOGON.WARDID']));
	
})

function getIframeUrl(url){
	if ('undefined'!==typeof websys_getMWToken){
		url = url+"&MWToken="+websys_getMWToken()
	}
	return url
}
function toggleSwitch(e, d) {
    
    
    if(d.value){
	    
		$("#execEndTime").val(obj_parmas.endTime)
		$("#serachBtn").trigger("click")	
	}else{
		runClassMethod("Nur.NIS.Service.NursingTask.TaskOptions","systemDateTime",{},function(rtn){
			var date=rtn.date
			var time=rtn.time
			$("#execEndDate").datebox("setValue",date);
			$("#execEndTime").val(time)
			$("#serachBtn").trigger("click")
			
			
		},'json',false);
	}
    
    
}
</script>

<!--初始化时间start-->
<script type="text/javascript">
	function setDateValue(n){
		n=n==""?0:n
		var num=parseInt(n)
		//var opt = $("#execStDate").datebox('options');
		//opt.maxDate = formatDate(num);
		var execStDate=formatDate(0)
		var execEndDate=formatDate(num)
		$("#execStDate").datebox("setValue",execStDate);
		$("#execEndDate").datebox("setValue",execEndDate);
		var optB = $("#execEndDate").datebox('options');
		//optB.minDate = formatDate(0); 
	};
	function formatDate(t){
		var curr_Date = new Date();  
		curr_Date.setDate(curr_Date.getDate() + parseInt(t)); 
		var Year = curr_Date.getFullYear();
		var Month = curr_Date.getMonth()+1;
		var Day = curr_Date.getDate();
		//return Year+"-"+Month+"-"+Day;
		
		if(typeof(DateFormat)=="undefined"){ //2017-03-15 cy
			return Year+"-"+Month+"-"+Day;
		}else{
			if(DateFormat=="4"){ //日期格式 4:"DMY" DD/MM/YYYY 2017-03-07 cy
				return Day+"/"+Month+"/"+Year;
			}else if(DateFormat=="3"){ //日期格式 3:"YMD" YYYY-MM-DD
				return Year+"-"+Month+"-"+Day;
			}else if(DateFormat=="1"){ //日期格式 1:"MDY" MM/DD/YYYY
				return Month+"/"+Day+"/"+Year;
			}else{ //2017-03-15 cy
				return Year+"-"+Month+"-"+Day;
			}
		}
	}
</script>
<!--初始化时间end-->

<script type="text/javascript">



function updateSbgTableSize() {
    var n = 0;
    var timer = setInterval(function() {
	   
        clearInterval(timer);
    	window.parent.location.reload()    
    }, 200);
}
window.addEventListener("resize", updateSbgTableSize)
//$("#main-tabs").addEventListener("resize", updateSbgTableSize)

$("body").on("click",".layout-button-left",function(){
	alert()	
})
function leftTimeRecordList(){}
function updateModalPos(id) {
  var offsetLeft=(window.innerWidth-$('#'+id).parent().width())/2;
  var offsetTop=(window.innerHeight-$('#'+id).parent().height())/2;
  $('#'+id).dialog({
    left: offsetLeft,
    top: offsetTop
  }).dialog("open");
}
</script>
</body>
</html>