<!-- Copyright (c) 2010 DHC Software Co.,Ltd. ALL RIGHTS RESERVED. --> 
<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
 i ##Class(ext.websys.SessionEvents).SessionExpired() q 1
 //CA:-------------------start初始化CA服务环境session--------
 i ##Class(web.DHCDocSignVerify).GetCAServiceStatus(%session.Get("LOGON.CTLOCID"),%session.Get("LOGON.USERID"))="1" d
 .d ##Class(CA.DigitalSignatureService).CASessionDataInit()
 //-------------------end初始化CA服务环境session--------
 q 1
 </csp:method>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<HTML XMLNS=TRAK>
<HEAD>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="Content-Type" content="text/html; charset=GB18030"/>
<TITLE><EXTHEALTH:TRANSLATE id=title>##(%session.Get("TITLE"))##</EXTHEALTH:TRANSLATE></TITLE>
<EXTHEALTH:HEAD></EXTHEALTH:HEAD>
<!--EXTHEALTH:EXT321></EXTHEALTH:EXT321-->
<HISUI></HISUI>
<ADDINS require="RWCard"/>
<!--link rel="stylesheet" type="text/css" href="../scripts_lib/jquery-easyui-1.3.5/themes/default/easyui.css">
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery-easyui-1.3.5/themes/icon.css">
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/css/dhcdocCustomEasyUI.css">
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/css/easyuicom.1.3.5.css">
<LINK REL="stylesheet" TYPE="text/css" HREF="../skin/default/css/websys.easyui.1.3.5.css "></LINK>
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/css/uiimage.css">

<script type="text/javascript" src="../scripts_lib/jquery-easyui-1.3.5/jquery-1.8.0.min.js"></script>
<script type="text/javascript" src="../scripts_lib/jquery-easyui-1.3.5/jquery.easyui.min.js"></script-->
<!-- jqgrid js and css-->
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery.jqGrid-4.6.0/css/themes/ui.multiselect.css">
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery.jqGrid-4.6.0/css/themes/redmond/jquery-ui-1.8.2.custom.css">
<link rel="stylesheet" type="text/css" href="../scripts_lib/jquery.jqGrid-4.6.0/css/ui.jqgrid.css">
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/ipdoc/css/dhcdocCustomjqGrid.css">
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/css/dhcdocCustomEasyUI.css">
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/tools/flatpickr/flatpickr.css">

<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/json2.js"></script>
<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/jquery.jqGrid.src.js"></script>
<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/i18n/grid.locale-cn.js"></script>
<script type="text/javascript" src="../scripts/dhcdoc/tools/flatpickr/flatpickr.js"></script>

<!--减少抖动布局方法-->
<script type="text/javascript" src="../scripts/dhcdoc/tools/fastdom-master/fastdom.min.js"></script>
<script type="text/javascript" src="../scripts/dhcdocant/kss_hui/apply.js"></script>
<script defer="defer" type="text/javascript" src="../scripts/DHCWeb.OPCommonManageCard.JS"></script>
<script defer="defer" type="text/javascript" src="../scripts/DHCOPBillLocCheckOut.js"></script>
<script defer="defer" type="text/javascript" src="../scripts/DHCPrtComm.js"></script>
<script type="text/javascript" src="../scripts/DHCWeb.OPCommon.JS"></script>
<!-- datePicker-->
<script type="text/javascript" src="../scripts_lib/jquery.jqGrid-4.6.0/js/calendar-js/js/WdatePicker.js"></script>
<!-- 布局JS-->
<script type="text/javascript" src="../scripts/dhcdoc/oeorder.oplistcustom.show.js"></script>
<!-- 业务控制JS-->
<script type="text/javascript">
	var ServerObj={
		pageCode:'oeorder.oplistcustom.new.csp',
		domSelector:'.textbox'
	}
</script>
<script type="text/javascript" src="../scripts/dhcdoc/tools/pageDom.js"></script>
<script type="text/javascript" src="../scripts/dhcdoc/UDHCOEOrder.List.Custom.New.js"></script>
<!--LINK REL="stylesheet" TYPE="text/css" HREF="../scripts/dhcmed/css/main.css"-->
<STYLE type='text/css'>
body {
	background:#fff;
}
object{
	display:none;
}
.tab_body{
	white-space:nowrap;
	float:left;
	height:0;
	padding:0 0 35px;
	line-height:35px;
	z-index:200;
	border-top:1px solid #ccc;
}
.tab_body li{
	float:left;
	border:0;
	height:35px;
	line-height:35px;
	overflow-y:hidden;
	border-right:1px solid #ccc;
	border-bottom:1px solid #ccc;
}
.tabItem.is-selected{
	position:relative;
	top:-1px;
	height:32px;
	line-height:32px;
	border-top:3px solid #509de1;
	border-bottom:0;
	background-color:#fff;
	color:#509de1;
	pointer-events:none
}
.tabItem{
	padding:0 12px;
	display:inline-block;
}
#webuiPopover0{
	left:0 !important;
}
#webuiPopover0 .webui-arrow{
	left:25px !important;
}
.datagrid-toolbar .l-btn-plain .l-btn-icon-left .l-btn-text{
	padding:0 4px 0 25px;
}
.datagrid-toolbar .l-btn-plain .l-btn-icon-left .l-btn-empty{
	padding:0 3px 0 0;
}
.datagrid-toolbar .l-btn-plain .l-btn-icon-left .l-btn-icon{
	left:0;
}
</STYLE>
</HEAD>
<body>
<server>
 ;初始化前端配置和全局变量对象
 ;不支持多就诊.1.多就诊查看使用chat;2.多就诊录入使用提交多就诊参数到后端
 s LocID=""
 n EpisodeID,PatientID,notMatch,mobj
 s (EpisodeID,PatientID,notMatch)=""
 s EpisodeID=%request.Get("EpisodeID")
 s PatientID=%request.Get("PatientID")
 i EpisodeID'="" s PatientID=$p(^PAADM(EpisodeID),"^",1)
 ;治疗科室预约记录ID
 s DCAARowId=%request.Get("DCAARowId")
 ;危急值ID
 s AntCVID=%request.Get("AntCVID")
 ;会诊记录ID
 s EmConsultItm=$g(%request.Data("EmConsultItm",1))
 ;语言
 Set langid=20
 if ($d(%session)){
	set langid=+$g(%session.Data("LOGON.LANGID"))
 }
 ;医嘱录入需要的系统配置审查
 ;d ##Class(web.DHCDocOrderCommon).CheckSysConfig()
 s isNurseLogin = ##class(web.DHCDocMain).isNurseLogin()
 ;菜单传递的病人和就诊是否匹配
 i PatientID,EpisodeID d
 . i $p($g(^PAADM(EpisodeID)),"^",1)'=PatientID d
 . . s notMatch=1
 . . w "<SCRIPT Language=""Javascript"">"
 . . w "document.write('"_$g(t("PatientID_Not_Match_EpisodeID"))_"');"
 . . w "</script>"
 . . q
 
 i EpisodeID="" d
 .s notMatch=1
 .w "<SCRIPT Language=""Javascript"">"
 .w "document.write('请选择患者');"
 .w "</script>"
 i notMatch q
 
 ;临时科室处理
 i EpisodeID'="",$l(EpisodeID,"^")=1 d
 . s obj=##Class(User.PAAdm).%OpenId(EpisodeID,0)
 . i obj.PAADMTempLocDR d 
 . . d %request.Set("TempLocID",obj.PAADMTempLocDR.%Id())
 . . d %request.Set("TempLoc",obj.PAADMTempLocDR.CTLOCDesc)	
 . . d obj.%Close()
 . ;未使用
 . ;d %request.Set("EligibilityStatus",##Class(web.OEOrder).EligibilityStatus(EpisodeID))
 
 ;
 n app,params,oeord,orderrow
 s app=""
 k %request.Data("OEPARAMS")
 s LocDesc=##Class(web.PAAdm).getPatEpisLoc(%request.Get("EpisodeID"))
 s LocID=##Class(web.CTLoc).GetIdFromCodeOrDescription(LocDesc)
 s LocDesc=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",LocDesc,langid)
 s %request.Data("CTLOC",1)=LocDesc
 s LogLocDesc=$p(^CTLOC(%session.Get("LOGON.CTLOCID")),"^",2)
 s LogLocDesc=##class(User.CTLoc).GetTranByDesc("CTLOCDesc",LogLocDesc,langid)
 ;s params=##Class(websys.Preferences).GetDataExPlus(%session.Get("LOGON.USERID"),%session.Get("LOGON.GROUPID"),%session.Get("LOGON.SITECODE"),LocID,"",.app,"ORDER","OEOrder.Favourites")
 ;d %request.Set("OEPARAMS",params)
 ;d %request.Set("EpisodeID",%request.Get("EpisodeID"))
 ;d ##Class(web.OEOrder).webGetFavouriteGroupNames(LocID)
 
 ; ;add by zhouzq
 s PrescTypeDetailDelim="!"
 s firstprescparameter=""
 s DefaultPrescTypeTab=1
 s ToBillSum=0
 s PatTypeID=""
 
 s Hospital=##Class(web.DHCDocConfig).GetConfigNode("CurrentHospital")
 i Hospital'="" s HospitalCode=$P(Hospital,"^",1)
 e  s HospitalCode=""

 s PAAdmType=##class(web.DHCDocOrderEntry).GetPAAdmType(EpisodeID)
 i (PAAdmType'="I") {
	  s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
 }else{
	  s IPDefaultPriorShort=##Class(web.DHCDocConfig).GetConfigNode("IPDefaultPriorShort")
	  i IPDefaultPriorShort=1 s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
	  e  s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","S",0))
	  //登录非就诊科室默认为临时医嘱
	  s AdmLocRowId=$O(^PAC("ADMLOC",0,"AdmType","I",%session.Get("LOGON.CTLOCID"),0))
	  i AdmLocRowId=""  s DefaultOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
 }  

 ;出院带药医嘱
 s OutOrderPriorRowid=$O(^OECPR(0,"Code","OUT",0))
 ;取药医嘱
 s OneOrderPriorRowid=$O(^OECPR(0,"Code","ONE",0))
 ;长期医嘱
 s LongOrderPriorRowid=$O(^OECPR(0,"Code","S",0))
 ;临时医嘱
 s ShortOrderPriorRowid=$O(^OECPR(0,"Code","NORM",0))
 ;自备药临时医嘱
 s OMOrderPriorRowid=$O(^OECPR(0,"Code","OM",0))
 ;自备药长期医嘱
 s OMSOrderPriorRowid=$O(^OECPR(0,"Code","OMST",0))
 ;即刻医嘱
 s STATOrderPriorRowid=$O(^OECPR(0,"Code","STAT",0))
 ;PRN医嘱
 s PRNOrderPriorRowid=$O(^OECPR(0,"Code","PRN",0))
 ;长期嘱托
 s OMCQZTOrderPriorRowid=$O(^OECPR(0,"Code","OMCQZT",0))
 ;临时嘱托
 s OMLSZTOrderPriorRowid=$O(^OECPR(0,"Code","OMLSZT",0))
 
 s STFreq=""
 s STFreqRowid=$O(^PHCFR(0,"Desc1","ST",0))
 i HospitalCode="ZGYKDFSYY" s STFreqRowid=$O(^PHCFR(0,"Code","ST",0))
 i HospitalCode="SDWFYY"    s STFreqRowid=$O(^PHCFR(0,"Code","ST",0))
 i STFreqRowid'="" s STFreq=$P(^PHCFR(STFreqRowid),"^",3)
 
 ;copy oe_orditem 2012-05-31 wanghc
 s CopyOeoris = $g(%request.Data("copyOeoris",1))
 s CopyPriorCode = $g(%request.Data("copyTo",1))
 s len = $l(CopyOeoris,"^")
 s CopyPriorCodeRowid=""

 if (CopyOeoris'=""){
	if (CopyPriorCode'="") s CopyPriorCodeRowid = $O(^OECPR(0,"Code",CopyPriorCode,0)) 
	else  s CopyPriorCodeRowid=""
 	w "<script type=""text/javascript"">",$c(13,10)
 		w "var CopyOeoriDataArr = [];",$c(13,10)
 	f OrdIndex=1:1:len {
		s dataItem = ##class(web.DHCDocMain).CreateCopyItem($p(CopyOeoris,"^",OrdIndex),CopyPriorCodeRowid,%session.Get("LOGON.USERID"))
		if (dataItem="") continue
		w "CopyOeoriDataArr["_(OrdIndex-1)_"] = """_dataItem_""";",$c(13,10)
	}
	w "</script>",$c(13,10)
 }
 
 ;临时医嘱
 s ONCEFreq=""
 s ONCEFreqRowid=$O(^PHCFR(0,"Code","ONCE",0))
 i ONCEFreqRowid'="" s ONCEFreq=$P(^PHCFR(ONCEFreqRowid),"^",3)
 
 s QDFreq=""
 s QDFreqRowid=$O(^PHCFR(0,"Desc1","QD",0))
 i QDFreqRowid'="" s QDFreq=$P(^PHCFR(QDFreqRowid),"^",3)


 ;PCS就诊科室,就诊类型
 s PCSPatTypeID=##Class(web.DHCDocConfig).GetPCSConfigNode("PatientType")
 s PCSLocIDs=##Class(web.DHCDocConfig).GetPCSLoc()
 s CheckRecLocMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetRecLocCount"))
 s GetARCIMBillGrpDescMehtod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMDetail"))
 s SelectOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.SelectOrderItem"))
 s GetARCIMDefaultPackQtyMehthod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMDefaultPackQty"))
 s CheckItemInDurationMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckItemInDuration"))
 s GetPHCDPoisonMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetDrgFormPoison"))
 s GetARCIMMaxQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMMaxQty"))
 s GetARCIMBillClassMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCIMBillClass"))
 s CheckConflictMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckConflict"))
 s GetBillItemsMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetBillItems"))
 s GetConflictMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocConfig.GetConflict"))
 s CheckOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckOrderItem"))
 s GetEPARCIMDetailMehtod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetEPARCIMDetail"))
 s GetItemCongeriesToListMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItemView.GetItemCongeriesToList"))
 s LookUpFrequencyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerFrequency"))
 s GetOneFrequencyStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneFrequencyStr"))
 s LookUpSingleFrequencyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerSingleFrequency"))
 s LookUpDurationMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerDuration"))
 s GetOneDurationStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneDurationStr"))
 s LookUpSingleDurationMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerSingleDuration"))
 s LookUpInstrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerInstr"))
 s GetOneInstrStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneInstrStr"))
 s LookUpSingleInstrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.LookUpBrokerSingleInstr"))
 ;s CheckStockEnoughMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckStockEnough")) 
 ;s CheckStockEnoughMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOPCashier.CheckStockEnough")) 
 s CheckStockEnoughMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckStockEnough")) 
 s CalDoseMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CalDose"))
 s GetCurrentDateTimeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetCurrentDateTime"))
 s InsertOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.InsertOrderItem"))
 s CheckDiagnosCatArcimPassMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckDiagnosCatArcimPass"))
 s OutDocEntryMTR=+##class(web.DHCDocConfig).GetConfigNode1("OutDocEntryMTR",%session.Get("LOGON.GROUPID"))
 s NotDoCheckDeposit=+##class(web.DHCDocConfig).GetConfigNode1("NotDoCheckDeposit",%session.Get("LOGON.GROUPID"))
 ;医嘱检索显示记录条数
 s EntryQueryLimitNum=+##class(web.DHCDocConfig).GetConfigNode("EntryQueryLimit")
 
 ;获取新医嘱录入是否可录入长期标识
 s INAdmTypeLoc=##Class(web.DHCDocOrderCommon).CheckINAdmTypeLoc(%session.Get("LOGON.CTLOCID"),EpisodeID)
 ;判断登陆科室是否患者就诊科室及就诊科室的linklocation中的科室
 s LoginAdmLocFlag=##class(web.DHCDocOrderCommon).IsLoginAdmLoc(%session.Get("LOGON.CTLOCID"),EpisodeID)
 s IsShowOrdList=LoginAdmLocFlag //是否显示医嘱列表
 if (PAAdmType="I"){
	 //住院患者临床科室(访问类型是住院)及科室类型是Ward的，都显示医嘱列表
	 if (isNurseLogin=1)||($d(^PAC("ADMLOC",0,"AdmType","I",%session.Get("LOGON.CTLOCID")))){
		 s IsShowOrdList="Y"
	 }
 }else{
	 if ($d(^PAC("ADMLOC",0,"AdmType","O",%session.Get("LOGON.CTLOCID"))))||($d(^PAC("ADMLOC",0,"AdmType","E",%session.Get("LOGON.CTLOCID")))){
		 s LoginAdmLocFlag="Y"
	 }
 }
 ;取可用频次串
 s ValidFreqStr=##Class(web.DHCDocOrderCommon).CheckDataValidByAdmType("Freq",PAAdmType)
 s ForbidDosing=$P($G(^CTLOC(%session.Get("LOGON.CTLOCID"),"DHC")),"^",18)
 s ForbidDosingInstr=""
 i (ForbidDosing="1"){
	if (PAAdmType="I"){
		s ForbidDosingInstr=##Class(web.DHCDocConfig).GetConfigNode("IPDosingInstr")
	}elseif (PAAdmType="O"){
		s ForbidDosingInstr=##Class(web.DHCDocConfig).GetConfigNode("OPInfusionInstr")
	}
 }
 //登录时以此取接收科室 
 s RecLocByLogonLocFlag=$P($g(^CTLOC(%session.Get("LOGON.CTLOCID"),"DHC")),"^",1)
 if (ForbidDosingInstr'="") s ForbidDosingInstr="^"_ForbidDosingInstr_"^"
 s OrderPriorRemarksStr=##Class(web.DHCDocOrderCommon).GetOrderPriorRemarks(PAAdmType,"JSON")
 s PhSpecInstrList=##class(web.DHCDocConfig).GetConfigNode("CNMedItemPhSpecInstr")
 s DoctorID=##class(web.SSUser).GetDefaultCareProvider(%session.Get("LOGON.USERID"))
 s DoctorType=##class(web.SSUser).GetDefaultCareProviderType(%session.Get("LOGON.USERID")) s %request("DoctorID")=DoctorID
 s SaveOrderItemsMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.SaveOrderItems"))
 s PinNumberMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.PinNumberValid"))
 ; 得到是否是或者有检查医嘱标识
 s GetItemServiceFlagMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetItemServiceFlag"))
 ; 得到将审核医嘱中需要做检查申请的医嘱项目与序号
 s GetItemServiceARCIMStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetItemServiceARCIMStrMethod"))
 ; 得到将审核医嘱中需要做治疗申请的医嘱项目与序号
 s GetCureItemARCIMStrMethod=##Class(%CSP.Page).Encrypt($lb("DHCDoc.DHCDocCure.ApplyTree.GetCureItemARCIMStr"))
 s ContrlOrderPackQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItemView.ContrlOrderPackQty"))
 ;外用用法
 s WYInstr=##Class(web.DHCDocConfig).GetConfigNode("WYInstr")
  if WYInstr'="" s WYInstr="^"_WYInstr_"^"
 ;滴速用法
 s DrippingSpeedInstr=##Class(web.DHCDocConfig).GetConfigNode("DrippingSpeedInstr")
 if DrippingSpeedInstr'="0" s DrippingSpeedInstr="^"_DrippingSpeedInstr_"^"
 ;医嘱录入是否实时查询
 s OEORIRealTimeQuery=##Class(web.DHCDocConfig).GetConfigNode("OEORIRealTimeQuery")
 ;不随主医嘱变化的用法
 s NotFollowInstr=##Class(web.DHCDocConfig).GetConfigNode("NotFollowInstr")
 if NotFollowInstr'="" s NotFollowInstr="^"_NotFollowInstr_"^"
 ;皮试用法
 s SkinTestInstr=##Class(web.DHCDocConfig).GetConfigNode("SkinTestInstr")
 if SkinTestInstr'="" s SkinTestInstr="^"_SkinTestInstr_"^"
 ;住院需配液用法
 s IPDosingInstr=##Class(web.DHCDocConfig).GetConfigNode("IPDosingInstr")
 if IPDosingInstr'="" s IPDosingInstr="^"_IPDosingInstr_"^"
 ;过敏记录药学子类需提示
 s AllergyChildNotice=##Class(web.DHCDocConfig).GetConfigNode("AllergyChildNotice")
 ;不能关联的医嘱子类
 s NotLinkItemCat=##Class(web.DHCDocConfig).GetConfigNode("NotLinkItemCat")
 s CheckAllergyChildNotice=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckAllergyChildNotice"))
 ;医嘱/药学项设置】-【医嘱扩展设置】-需要备注
 s GetARCIMRequireNoteFlag=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetARCIMRequireNoteFlag"))
 ;医嘱/药学项设置】-【医嘱扩展设置】-需要提示
 s GetARCIMShowOEMessageFlag=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetARCIMShowOEMessageFlag"))
 ;知识库打开标志 默认打开建议医嘱按钮显示.调用知识库接口。权限按照知识库自己配置的授权进行管理
 s ZSKOpen=1
 if ZSKOpen=1  d
 .w "<DIV id='dd'></DIV>"
 s OPAdmDayLimit=##Class(web.DHCDocConfig).GetConfigNode("OPAdmDayLimit")
 i OPAdmDayLimit="" s OPAdmDayLimit=1
 ;不受就诊有效天数限制
 s NoAdmValidDaysLimit=##Class(web.DHCDocConfig).GetConfigNode1("NoAdmValidDaysLimit",%session.Get("LOGON.GROUPID"))
 ;补录模式
 s SupplementMode=##Class(web.DHCDocConfig).GetConfigNode1("SupplementMode",%session.Get("LOGON.GROUPID"))
 s OrderEntryLock=##Class(web.DHCDocConfig).GetConfigNode("OrderEntryLock")
 i OrderEntryLock="" s OrderEntryLock=1
 s OrderActionJSON=##Class(web.DHCDocOrderCommon).GetOrderAction("JSON")
 s OrderActionStr=##Class(web.DHCDocOrderCommon).GetOrderAction()
 ;开药品时是否需要开诊断有两级控制?医生站设置和页面参数?
 s OrderPhamacyWithDiagnos=%request.Get("OrderPhamacyWithDiagnos")
 i OrderPhamacyWithDiagnos="" {
	 s OrderPhamacyWithDiagnos=##Class(web.DHCDocConfig).GetConfigNode("OrderPhamacyWithDiagnos")
	 i OrderPhamacyWithDiagnos="" s OrderPhamacyWithDiagnos=1
 }
 s IPOrderPhamacyWithDiagnos=##Class(web.DHCDocConfig).GetConfigNode("IPOrderPhamacyWithDiagnos")
 ;是否进行欠费控制及科室是否进行欠费控制
 s CheckIPDepositMethod=""
 s CheckDepositOrderMethod=""
 s CheckIPDeposit=##Class(web.DHCDocConfig).GetConfigNode("CheckIPDeposit")
 i CheckIPDeposit="1" d
 .s CheckIPLocDeposit=##Class(web.UDHCJFARREARSMANAGE).CheckLoc(%session.Get("LOGON.CTLOCID"))
 .i CheckIPLocDeposit=0 d
 ..s CheckIPDepositMethod=##Class(%CSP.Page).Encrypt($lb("web.UDHCJFARREARSMANAGE.CheckArrears")) 
 ..s CheckDepositOrderMethod=##Class(%CSP.Page).Encrypt($lb("web.UDHCJFARREARSMANAGE.CheckOrderE")) 

 s IPDefaultDurRowId=##Class(web.DHCDocConfig).GetConfigNode("IPDefaultDuration")
 s IPDefaultDur="",IPDefaultDurFactor=0
 if (+IPDefaultDurRowId'=0) {
	s IPDefaultDur=$P($g(^PHCDU(IPDefaultDurRowId)),"^",3)
	s IPDefaultDurFactor=$P($g(^PHCDU(IPDefaultDurRowId)),"^",2)
 }else{
 	s IPDefaultDurRowId=""
 }
 ;医嘱重分类串
 s OrdCateGoryStr=##class(DHCDoc.DHCDocConfig.SubCatContral).GetOrdCateGoryStr()
 s DirectSave=##Class(web.DHCDocConfig).GetConfigNode("DirectSave")
 ;草药是否进行合理用药判断
 s DTCheckCNMed=##class(web.DHCDocConfig).GetConfigNode("DTCheckCNMed")
 s SetArrivedStatusMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetArrivedStatus")) 
 s AddToFavMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.websysSaveOETabsOne"))
 s GetOneOrderPriorQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOneOrderPriorQty"))
 
 ;当天是否其他就诊已经开此医嘱
 s CheckTodaySameItem=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckSameItem"))
 s CheckRepeatLabSpecMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckRepeatLabSpec"))
 s FindRecLocByLogonLoc=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),1)
 ;本科室医嘱套按顺序录入数量
 s FindARCOSInputByLogonLoc=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),5)
 ;本科室修改医嘱开始日期时间权限
 s ModifySttDateTimeAuthority=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),9)
 //开医嘱日期修改权限
 s ModifyDateTimeAuthority=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),25) 
 ;本科室不允许录入整包装数量
 s LocNotPackQty=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Data("LOGON.CTLOCID"),4)
 ;住院临时药品医嘱不允许录入整数量
 s ShortDrugOrdNotAllowPackQty=##Class(web.DHCDocConfig).GetConfigNode("ShortDrugOrdNotAllowPackQty")
 s OneOrderPriorInstrs=$G(^DHCCLNurseExec("VarDef","CQYZQY","PhcIn"))
 i OneOrderPriorInstrs'="" s OneOrderPriorInstrs="^"_OneOrderPriorInstrs_"^"
 ;检查本日医嘱金额不能超过限定值
 s CheckBillTypeSumMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckBillTypeSum"))
 s CreateOneOrder=##Class(web.DHCDocConfig).GetConfigNode("CreateOneOrder")
 s GetStockQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetStockQty"))
 s SetUserUnSaveDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetUserUnSaveData"))
 s GetUserUnSaveDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetUserUnSaveData"))
 s GetUserUnSaveCountMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetUserUnSaveCount"))
 s SetSessionDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.SetSessionData"))
 s GetSessionDataMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetSessionData"))
 ;保留界面数据
 s StoreUnSaveData=##Class(web.DHCDocConfig).GetConfigNode("StoreUnSaveData")
 ;按用法分处方
 s PrescByInstr=##Class(web.DHCDocConfig).GetConfigNode("PrescByInstr")
 ;按用法取接收科室
 s ReclocByInstr=##Class(web.DHCDocConfig).GetConfigNode("ReclocByInstr")
 s GetInstrReclocMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetInstrRecLocStr"))
 s GetInstrGroupCodeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetInstrGroupCode"))
 ;不允许重复录入的子类
 s OPUnRepeatItemCat=##Class(web.DHCDocConfig).GetConfigNode("OPUnRepeatItemCat")
 ;可选择用法的非药品子分类
 s SelectInstrNotDrugCat=##Class(web.DHCDocConfig).GetConfigNode("SelectInstrNotDrugCat")
 s FindSameOrderItemCatMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.FindSameOrderItemCat"))
 ;出院带药必须录入整包装
 s OutOrderNeedPackQty=##Class(web.DHCDocConfig).GetConfigNode("OutOrderNeedPackQty")
 ;住院临时医嘱频次默认为ST 已弃用
 ;s IPShortOrderPriorST=##Class(web.DHCDocConfig).GetConfigNode("IPShortOrderPriorST")
 s CheckBeforeUpdateMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckBeforeUpdate"))
 ;开药品时是否只需开整包装
 s OrderPhamacyOnlyPackQty=%request.Get("OrderPhamacyOnlyPackQty")
 ;登陆的是否看诊科室
 s LogonLocRowId=%session.Get("LOGON.CTLOCID")
 s RowId=$O(^PAC("ADMLOC",0,"AdmType",PAAdmType,LogonLocRowId,0))
 s LogonLocIsAdmLoc=0
 if RowId'="" s LogonLocIsAdmLoc=1
 s LogonLocType=$P(^CTLOC(LogonLocRowId),"^",13)
 
 Set PrescByAuto=##Class(web.DHCDocConfig).GetConfigNode("PrescByAuto")
 s GetARCIMEQResMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetARCIMEQRes"))
 s GetOrderPriceMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPrice"))
 s IPDosingRecLoc=##Class(web.DHCDocConfig).GetConfigNode("IPDosingRecLoc")
 s GetDosingDateTimeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetDosingDateTime"))
 s MLUOMRowId=$O(^CT("UOM",0,"Code","ML",0))
 s IVInstrRowId=$O(^CT("UOM",0,"Code","IV",0))
 ;成组医嘱接收科室一致
 s CFSameRecDepForGroup=##Class(web.DHCDocConfig).GetConfigNode("SameRecDepForGroup")
 ;医嘱套内成组医嘱接收科室一致
 s CFSameRecDepForARCOSGroup=##Class(web.DHCDocConfig).GetConfigNode("SameRecDepForARCOSGroup")
 s GetDefaultBillTypeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCPAAdmSheets.GetDefaultBillType"))
 
 ;库存不足是不自动切换药房
 s CFNotAutoChangeRecloc=##Class(web.DHCDocConfig).GetConfigNode("NotAutoChangeRecloc")
 if (CFNotAutoChangeRecloc=0){
 	s CFNotAutoChangeRecloc=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Get("LOGON.CTLOCID"),17)
 }
 ;不提示零价格医嘱
 s CFNotAlertZeroPrice=##Class(web.DHCDocConfig).GetConfigNode("NotAlertZeroPrice")
 ;确认适应症
 s CFConfirmInsurSYMM=##Class(web.DHCDocConfig).GetConfigNode("ConfirmInsurSYMM")
 ;非医保提示适应症
 s CFAllConfirmInsurSYMM=##Class(web.DHCDocConfig).GetConfigNode("AllConfirmInsurSYMM")
 ;身体部位串
 s MRCBodyPartStr=##class(web.DHCDocOrderCommon).GetMRCBodyPart("JSON")
 s OrderStageStr=##class(web.DHCDocOrderCommon).GetOrderStage("JSON")
 ;抗生素使用理由
 s AntUseReasonStr=##class(web.DHCDocOrderCommon).GetAntUseReason("JSON")
 s GetOrderFirstDayTimesMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItemView.GetOrderFirstDayTimes"))
 s CalPackQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItemView.CalPackQty"))
 
 ;通用名相同的药品不允许重复
 s CFOPNotRepeatGenericName=##Class(web.DHCDocConfig).GetConfigNode("OPNotRepeatGenericName")
 ;取药和出院带药默认按整包装开
 s CFOutAndOneDefaultPackQty=##Class(web.DHCDocConfig).GetConfigNode("OutAndOneDefaultPackQty")
 ;取等效剂量
 s CalEqDoseMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CalEqDose"))
  //********************************************************
 ;临床路径的处理
 s InUseCPWRowId=""
 
 s AddMRCPWItemToListMethod=##Class(%CSP.Page).Encrypt($lb("DHCMA.CPW.IO.ToDoc.AddMRCPWItemToList"))
 //********************************************************
 ;检验设置是否按院区区分
 s UseHospSepLabConfig=##Class(web.DHCDocConfig).GetConfigNode("UseHospSepLabConfig")
 if (UseHospSepLabConfig=1){ 
    s CFNotCheckSameSpecItem=+##Class(web.DHCDocConfig).GetConfigNode1("NotCheckSameLabSpecItem",%session.Get("LOGON.HOSPID"))
 }else{
   ;不允许重复的检验项
   s CFNotCheckSameSpecItem=##Class(web.DHCDocConfig).GetConfigNode("NotCheckSameLabSpecItem")
 }
 ;长期医嘱不允许录入整数量
 s CFLongOrderNotAllowPackQty=##Class(web.DHCDocConfig).GetConfigNode("LongOrderNotAllowPackQty")
 
  ;医嘱录入界面不显示未交费医嘱(仅门诊)
 s NotDisplayNoPayOrd=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Get("LOGON.CTLOCID"),20)
	
 ;出院带药费用控制
 s CheckOutOrderSumMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOutOrderSum"))
 ;出院带药扩展设定
 s CheckOutOrderOtherMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOutOrderOtherContral"))
 ;判断是否有相同出院带药
 s FindSameOutOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindSameOutOrderItem"))
 ;出院带药不能下的子类和管制分类控制
 s CheckPriorAllowRangeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.CheckPriorAllow"))
 ;医嘱模板切换
 s ChangeOEPrefMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocPatchUpdate.ChangeOEPref")) 
 s ReChangeOEPrefMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocPatchUpdate.ReChangeOEPref"))
 ;检测是否有个人医嘱模板
 s GetOEPrefMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocPatchUpdate.GetOEPref"))
 ;保存医嘱常用信息
 s SaveItemDefaultMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.SaveItemDefault"))
 ;住院有主管医生才能录医嘱
 s CFIPNeedDoctor=##Class(web.DHCDocConfig).GetConfigNode("IPNeedDoctor")
 s GetUserItemDefaultSingleMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocItemDefault.GetUserItemDefaultSingle")) 
 ;输液流速单位
 s OrderFlowRateUnitStr=##Class(web.DHCDocOrderCommon).GetOrderFlowRateUnit("JSON")
 ;下医嘱后置为到达
 s SetArriveByOrder=##Class(web.DHCDocConfig).GetConfigNode("SetArriveByOrder")
  ;不需要重复提示的子类
 s NotAlertRepeatItemCat=##class(web.DHCDocConfig).GetConfigNode("NotAlertRepeatItemCat")
 ;转换日期方法
 s ConverDateMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.ConverDate"))
 ;是否长期医嘱
 s ISLongOrderPriorMethod=##Class(%CSP.Page).Encrypt($lb("appcom.OEOrdItem.ISLongOrderPrior"))
 //抗生素2***
 ;医护人员管制分类级别
 s DoctorTypePoisonStr=##class(DHCAnt.KSS.MainBusiness).GetDoctorTypePoisonStrNew(DoctorID,PAAdmType)
 s DeleteAntibApplyMethod=##Class(%CSP.Page).Encrypt($lb("DHCAnt.KSS.MainBusiness.DeleteAntibApply"))
 s DeleteAntReasonMethod=##Class(%CSP.Page).Encrypt($lb("DHCAnt.KSS.MainBusiness.DeleteAntReason"))
 ;由管制分类的代码取其描述
 Set GetPHCPoisonByCode=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetPHCPoisonByCode")) 
 ;抗菌药物医嘱处理  121113
 s AddAuditItemToListMethod=##Class(%CSP.Page).Encrypt($lb("DHCAnt.KSS.MainInterface.GetAddToListArcimInfo"))
 ;抗菌药物耐药结果  121201
 s CheckSusceptMethod=##Class(%CSP.Page).Encrypt($lb("DHCAnt.KSS.MainBusiness.CheckIsSuscept"))
 ;抗菌药物疗程控制处理  121226
 s CheckInDurSameIMMethod=##Class(%CSP.Page).Encrypt($lb("DHCAnt.KSS.MainBusiness.CheckInDurSameIM"))
 s ReasonCanBeDeletedMethod=##Class(%CSP.Page).Encrypt($lb("DHCAnt.KSS.MainBusiness.ReasonCanBeDeleted"))
 //抗生素2*****
 ;检验不可用标志审查
 s CheckLabItemActiveMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckLabItemActive"))
  ;判断医嘱需开特定医嘱设置
 s CheckSpecOrdLinkedMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckSpecOrdLinked"))
 ;门诊不计算整包装的剂型
 s PHCFormStr=##Class(web.DHCDocConfig).GetConfigNode("NotCalcPackQtyPHCForm")
 ;得到剂型
 s GetArcimFormRowidMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetArcimFormRowid"))
 ;获取输液次数
 s GetOrderLocalInfusionQtyMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItemView.GetOrderLocalInfusionQty"))
 ;北京医保医嘱保存时审查提示剩余天数
 s CalcDurByArcimMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CalcDurByArcim"))
 ;医保标识
 s GetInsurFlagMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetInsurFlag"))
 ;可以录入小数的子类
 s AllowEntryDecimalItemCat=##class(web.DHCDocConfig).GetConfigNode("AllowEntryDecimalItemCat")
 ;判断是否是小时医嘱
 s IsHourItem=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.IsHourItem"))
 
 ;医嘱项提示是否弹出窗口
 s CFOrderMsgAlert=##class(web.DHCDocConfig).GetConfigNode("OrderMsgAlert")
 if (SupplementMode=1){
 	s CFOrderMsgAlert=1
 }
 ;根据处方名称,费别rowid,就诊类型,得到唯一处方的限制属性
 s GetPrescLimitMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCPAADMPrescType.GetPrescLimitStr"))
 s FindSameOrderItemFlagMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindSameOrderItemFlagMethod"))
 s FindSameGenericNameOrderItemMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindSameGenericNameOrderItem"))
 
 s CheckDataValidMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckDataValid"))
 //2014-05-14
 s GetARCItemSubCatID=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCItemSubCatIDBroker"))
 s GetARCItemSubCatDesc=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCItemSubCatDesc"))
 s CheckItemDiagnos=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.CheckItemDiagnos"))
 ;d ##Class(epr.GroupSettings).GetDetails(%session.Get("LOGON.GROUPID")) 
 //2014-05-20 关联医嘱选择控制
 s SelectContrlConfig=##class(web.UDHCStopOrderLook).GetStopGroupOrder(%session.Get("LOGON.USERID"))
 //2014-05-20 切换医嘱类型是否提示审核的配置
 s CFSwithGlobalPriorUpdate=##Class(web.DHCDocConfig).GetConfigNode("SwithGlobalPriorUpdate")
 //2014-05-20 根据医嘱ID取医嘱类型描述
 s GetOrderPriorMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPriorByID"))
 s GetOrderPriorByCodeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPriorByCode"))
 ;通过高职条码获得医嘱项先关信息
 s GetArcimByLabel=##Class(%CSP.Page).Encrypt($lb("web.DHCSTM.PCHCOLLSM.GetArcimByLabel"))
 ;判断医嘱项是否是高值材料
 s GetIncItmHighValueFlag=##Class(%CSP.Page).Encrypt($lb("web.DHCSTM.PCHCOLLSM.GetArcimHighValueFlag"))
 ;高值录入控制标志(科室扩展第13位)
 s HighValueControl=##class(web.DHCDocConfig).GetDHCCTLOCFieldValue(%session.Get("LOGON.CTLOCID"),13)
 
 ;按照医嘱项上的门诊用药、急诊用药、住院用药标志来检测医嘱项是否可用
 s CheckArcimType=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckArcimType"))
 
 //插入个人医嘱套 web.DHCUserFavItems.InsertUserARCOSS
 s InsertUserARCOSS=##Class(%CSP.Page).Encrypt($lb("web.DHCUserFavItems.InsertUserARCOSS"))
 ;超量疗程原因
 s GetExceedStr=##Class(web.DHCDocExceedReason).GetExceedStr("","json")
 ;获得超量限制天数
 s GetExceedDate=##Class(%CSP.Page).Encrypt($lb("web.DHCDocExceedReason.GetExceedDate"))
  ;判断是否是小时医嘱
 s IsHourItem=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.IsHourItem"))
 ;根据医嘱ID获取医嘱项ID
 s GetCopyItems=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetCopyItems"))
 ;根据医嘱ID获取补录主医嘱信息
 s GetVerifiedOrder=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetVerifiedOrder"))
 //完成接诊
 s UpdateFinshAdm=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.UpdateFinshAdm"))
 //获取未激活医嘱
 s GetUnActiveOrderItems=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.GetUnActiveOrderItems"))
 //是否设置医嘱类型为临时
 s CheckOnlyShort=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOnlyShort"))
 ;此段代码本意是根据这个病人当前未结束的就诊记录,但由于门诊病人的状态都是A,
 ;所以查出的病人指针始终找到第一个门诊就诊记录
 ;静脉配液中心接收可是ID串
 s IPDosingRecLocStr=##class(web.DHCDocConfig).GetConfigNode("IPDosingRecLoc")
 
 s HaveMidDischargedMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetIsMidDischarged"))
 ;登陆用户身份类型
 s CareProvType=##class(web.DHCDocOrderCommon).GetCareProvType(%session.Get("LOGON.USERID"))
 s CareProvType=$zcvt(CareProvType,"U")
 
 ;获取身份证信息
 s FindPAPMIID=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.FindPAPMIID"))
 ;0费用不提示的医嘱子类
 s NotAlertZeroItemCatStr=##class(web.DHCDocConfig).GetConfigNode("NotAlertZeroItemCat") // $G(^DHCDocConfig("NotAlertZeroItemCat"))
 s GetNotAlertZeroItemCatMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocConfig.GetConfigNode"))
 ;协议包装
 s GetBillUOMStrMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetBillUOMStr"))
 s GetOrderPriceConUomMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderPriceConUom"))
 ;获取诊断限制最大疗程
 s GetDiagnosLimitDurMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetDiagnosLimitDurFactor"))
 ;校验日期时间格式
 s CheckDateTime=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckDateTime"))
 
 s CFPilotPatAdmReason=##class(web.PilotProject.DHCDocPPGroupSeting).GetConfigNode("PilotPatAdmReason")
 s CFIPPilotPatAdmReason=##class(web.PilotProject.DHCDocPPGroupSeting).GetConfigNode("IPPilotPatAdmReason")
 ;科研项目验证可开医嘱子类(只包括药品)
 s CheckPilotCat=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckPilotCat"))
 ;一键打印设置是否在医嘱审核之后弹出
 s OnePrintFlag=##class(web.DHCDocConfig).GetConfigNode1("ClickPrnConfig",%session.Get("LOGON.GROUPID"))
 
 ;获取医保分类
 s GetArcimInsurCat=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderListCommon.GetArcimInsurCat"))
 ;知识库
 s CheckLibPha=##Class(%CSP.Page).Encrypt($lb("web.DHCDocService.CheckLibPha"))
 s GetDurgArcimMesage=##Class(%CSP.Page).Encrypt($lb("web.DHCDocService.GetDurgArcimMesage"))
 s GetLadArcimMesage=##Class(%CSP.Page).Encrypt($lb("web.DHCDocService.GetLabArcimMesage"))
 s GetARCItemCode=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetARCItemCode"))
 ;医保用药控制
 s CheckInsuCostControlMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommonExpand.CheckInsuCostControl"))
 ;获取医嘱类型的描述和Code
 s GetPrioCodeAndDesc=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetPrioCodeAndDesc"))
 s StopOrderMethod=##Class(%CSP.Page).Encrypt($lb("web.UDHCStopOrderLook.StopOrder"))
 ;皮试医嘱类型控制为临时
 s CFSkinTestPriorShort=##class(web.DHCDocConfig).GetConfigNode("SkinTestPriorShort")
 
 ;得到安全组是否有医嘱模板维护某一个保存菜单权限
 s IsHaveMenuAuthOrderOrgFavMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.IsHaveMenuAuthOrderOrgFav"))
 s UpdateAgencyInfoMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocCheckPoison.UpdateAgencyInfo"))
 ;判断开医嘱日期是否小于就诊日期
 s CheckOrderDateMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.CheckOrderDate"))
 s PrefEditItemMethod=##Class(%CSP.Page).Encrypt($lb("DHCDoc.DocCom.Preferences.PrefEditItem")) //epr.PreferencesQuery
 
 s SetARCOSItemDirectMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.SetARCOSItemDirect"))
 s MedNotOpenARCOS=##class(web.DHCDocConfig).GetConfigNode("MedNotOpenARCOS")
 s ShowOrderOpenForAllHosp=##class(web.DHCDocConfig).GetConfigNode("ShowOrderOpenForAllHosp")
 s GetARCOSInfoMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCUserFavItems.GetARCOSInfo"))
 s GetCountByFreqDispTimeMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItemView.GetCountByFreqDispTime"))
 s defaultDataCache=##Class(websys.Conversions).DateFormat()
 /*
 ;区分医嘱录入多页签的情况下的工作流
 if ($g(%request.Data("ChartID",1))'="") {
	 s XCONTEXT="WNewOrderEntry"_$g(%request.Data("ChartID",1))
 }else{
 	 s XCONTEXT="WNewOrderEntry"
 }
 */
 s XCONTEXT="WNewOrderEntry"
 ;s EpisodeID=%request.Get("EpisodeID")
 ;可用##class(web.DHCPAADM).CurrAdm(EpisodeID)替换
 ;s EpisodeID=$$curradm^COEOrdItem(EpisodeID)
 
 s VisitStatus=$p($g(^PAADM(EpisodeID)),"^",20)
 s OnlyShortPrior="N"
 if VisitStatus="P" s OnlyShortPrior="Y"
 s PAADMMotherAdmId=$p($g(^PAADM(EpisodeID)),"^",75)
 ;CA:数字签名加载JS  ---START---
 s CAInit=0
 i ##Class(web.DHCDocSignVerify).GetCAServiceStatus(%session.Get("LOGON.CTLOCID"),%session.Get("LOGON.USERID"))="1" d
 .s CAInit=1
 .d ##Class(CA.DigitalSignatureService).OutPutSecXCommon()
 ;得到CA认证的XML信息串
 s GetOEORIItemXMLMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocSignVerify.GetOEORIItemXML"))   //
 ;插入CA认证后的信息串
 s InsertCASignInfoMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocSignVerify.InsertBatchSignRecord"))
 ;------END-----
 ;对于医嘱录入非必须前端处理的判断逻辑可以在此处理
 s CheckBeforeSaveMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCOEOrdItem.CheckBeforeSave"))
 ;自动生成检查申请单调用接口
 s InsExaReqNoMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCAPPInterface.InsExaReqNo"))
 ;得到是否需要弹出检查资源预约界面
 s GetExamItemBookMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderEntry.GetExamItemBook"))
 s GetOperInfoMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCANAdaptor.GetOperInfoByAnaId"))
 s GetOrderMsgMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCDocOrderCommon.GetOrderMsg"))
 s GroupCPPFlag=##Class(web.UDHCOPGSConfig).GetGroupCPPFlag(%session.Get("LOGON.GROUPID"),%session.Get("LOGON.HOSPID"))
 //仅可开立临时医嘱
 s NORMLimitInfo=##Class(DHCDoc.DHCDocConfig.ItemPrior).GetPriorLimitInfo("OnlyNORMItemCat","NORM")
 ;皮试医嘱需要走申请流程
 s SkinTestNeedApply=##Class(web.DHCDocConfig).GetConfigNode("SkinTestNeedApply",%session.Get("LOGON.HOSPID"))
 //*******************与选中病人相关的变量集*****************************///
 s EpisPatInfo=##Class(web.DHCDocViewDataInit).InitPatOrderViewGlobal(%request.Get("EpisodeID"),%request.Get("BillTypeID"),EmConsultItm)
 ;------------------------------------------------------------------------------------------------------------
 ;布局控制,内部控制了门诊的固定显示模式
 s layoutConfig=##class(web.DHCDocOrderListCommon).GetEntryLayout(%session.Get("LOGON.USERID")_"Z"_%session.Get("LOGON.GROUPID"),PAAdmType,%session.Get("LOGON.GROUPID"))
 ;布局控制,对于登陆科室非就诊科室及就诊关联科室及不显示医嘱列表的情况下固定不支持列表显示;否则会导致不会计算医嘱录入表格高度
 i LoginAdmLocFlag="N",IsShowOrdList="N" s layoutConfig=1
 ;医嘱类型选择显示配置项  1:下拉  2：横向
 s OrderPriorConfig=##class(web.DHCDocConfig).GetConfigNode1("OrderPriorConfig",%session.Get("LOGON.USERID")_"Z"_%session.Get("LOGON.GROUPID"))
 i OrderPriorConfig="" { 
 	s OrderPriorConfig=##class(web.DHCDocConfig).GetConfigNode1("OrderPriorConfig_Group",%session.Get("LOGON.GROUPID"))
 }
 i OrderPriorConfig="" s OrderPriorConfig=2 //d ##class(web.DHCDocConfig).SaveConfig1("OrderPriorConfig",%session.Get("LOGON.USERID"),"2")	
 ;医嘱类型控制  1：强制改变 不可以选  2：只设置默认 可以选
 s OrderPriorContrlConfig=##class(web.DHCDocConfig).GetConfigNode("OrderPriorContrlConfig")
 s OrderPriorContrlConfig=$CASE(OrderPriorContrlConfig,"1":1,:2)
 ;得到页面用户UI设置 ^DHCDocConfig("UIConfigObj")
 s UIConfigObj=##class(web.DHCDocConfig).GetConfigNode1("UIConfigObj",%session.Get("LOGON.USERID")_"Z"_%session.Get("LOGON.GROUPID"))
 i UIConfigObj="" {
	 //若用户没有设置过，则走安全组设置
	 s UIConfigObj=##class(web.DHCDocConfig).GetConfigNode1("UIConfigObj_Group",%session.Get("LOGON.GROUPID"))
 }
 s OrderLimit=##Class(web.DHCDocConfig).GetConfigNode1("OrderLimit",%session.Get("LOGON.GROUPID"))
 i UIConfigObj="" s UIConfigObj="{}"
 d ##class(web.DHCDocUtil).GetArrayByObjStr(UIConfigObj,.UIConfigArray)
 s DefaultPopTemplate=0
 if (UIConfigObj'="{}")&&($d(UIConfigArray("DefaultPopTemplate")))&&(UIConfigArray("DefaultPopTemplate")="true"){
	 s DefaultPopTemplate=1
 }
 //住院模板弹出模式时,是否默认展开
 s DefaultExpendTemplateOnPopTemplate=0
 if (UIConfigObj'="{}")&&($d(UIConfigArray("DefaultExpendTemplateOnPopTemplate")))&&(UIConfigArray("DefaultExpendTemplateOnPopTemplate")="true"){
	 s DefaultExpendTemplateOnPopTemplate=1
 }
 //默认展开列表
 s DefaultExpendList=0
 if (UIConfigObj'="{}")&&($d(UIConfigArray("DefaultExpendList")))&&(UIConfigArray("DefaultExpendList")="true"){
	 s DefaultExpendList=1
 }
 //默认展开模板
 s DefaultExpendTemplate=0
 if (UIConfigObj'="{}")&&($d(UIConfigArray("DefaultExpendTemplate")))&&(UIConfigArray("DefaultExpendTemplate")="true"){
	 s DefaultExpendTemplate=1
 }
 //默认关闭
 s DefaultCloseList=0
 if (UIConfigObj'="{}")&&($d(UIConfigArray("DefaultCloseList")))&&(UIConfigArray("DefaultCloseList")="true"){
	 s DefaultCloseList=1
 }
 //住院临时医嘱默认频次
 s IPShortOrderPriorDefFreq=""
 s IPShortOrderPriorDefFreqRowId=##Class(web.DHCDocConfig).GetConfigNode("IPShortOrderPriorDefFreq")
 i IPShortOrderPriorDefFreqRowId'="" s IPShortOrderPriorDefFreq=$P(^PHCFR(IPShortOrderPriorDefFreqRowId),"^",3)
 ;得到医嘱录入的表格配置对象
 s ListColSetCls="web.DHCDocOrderListCommon"
 s ListColSetMth="GetListColSet"
 k colNames,colModelAry,ParamAry
 s colNames=""
 //从后台返回的下拉列表数据
 s ParamAry("OrderPrior")=" : " ;OrderPriorStr  //改从前台产生
 s ParamAry("OrderPriorRemarks")=OrderPriorRemarksStr
 i OrderPriorRemarksStr'="" s ParamAry("OrderPriorRemarks")=":"_";"_OrderPriorRemarksStr
 s ParamAry("OrderAction")=OrderActionJSON
 i OrderActionStr'="" s ParamAry("OrderAction")=":"_";"_OrderActionJSON
 s ParamAry("OrderFlowRateUnit")=OrderFlowRateUnitStr
 i OrderFlowRateUnitStr'="" s ParamAry("OrderFlowRateUnit")=":"_";"_OrderFlowRateUnitStr
 ///病人相关，放到js里处理初始化数据
 s ParamAry("OrderBillType")=""	//PrescriptTypeStr
 s ParamAry("ExceedReason")=GetExceedStr
 i GetExceedStr'="" s ParamAry("ExceedReason")=":"_";"_GetExceedStr
 s ParamAry("OrderBodyPart")=MRCBodyPartStr  
 i MRCBodyPartStr'="" s ParamAry("OrderBodyPart")=":"_";"_MRCBodyPartStr
 s ParamAry("OrderStage")=OrderStageStr  
 i OrderStageStr'="" s ParamAry("OrderStage")=":"_";"_OrderStageStr
 s ParamAry("AntUseReason")=AntUseReasonStr  
 i AntUseReasonStr'="" s ParamAry("AntUseReason")=":"_";"_AntUseReasonStr
 i OrdCateGoryStr'="" s ParamAry("OrdCateGory")=":"_";"_OrdCateGoryStr
 d ##class(web.DHCDocOrderListCommon).ReadListColSet(ListColSetCls,ListColSetMth,.colNames,.colModelAry,.ParamAry,XCONTEXT)
 
 s PageName=%request.PageName
 w "<SCRIPT Language=""Javascript"">",!
 w "var ListConfigObj={colNames:null,colModel:null};",!
 w "var colNamesAry=new Array();",!
 w "var colModelAry=new Array();",!
 for i=1:1:$l(colNames,",") {
	 s colName=$p(colNames,",",i)
	 continue:colName=""
	 s colModel=colModelAry(colName)
	 w "colNamesAry.push('"_colName_"');",!
	 w "colModelAry.push("_colModel_");",!
 }
 w "ListConfigObj.colNames=colNamesAry;",!
 w "ListConfigObj.colModel=colModelAry;",!
 d ##class(web.DHCDocOrderListCommon).GetMessageArray(PageName,%session.Get("LOGON.LANGID"))
 w "</SCRIPT>",!
 
 ///加载合理用药,初始化;
 s HLYYConfigObj=##class(web.DHCDocHLYYInterface).Init(%session.Get("LOGON.CTLOCID"),"OEOrd")
 ///是否为实习生
 s practiceFlag=##class(web.DHCOEOrdItem).practice(DoctorID)
 s InsertPrcaticeDocMethod=##Class(%CSP.Page).Encrypt($lb("web.DHCPracticeDocPreOrder.InsertPracticeOrder"))
 //s ApacheFlag=##class(web.DHCICUQualityControlStatistic).isHasApache(548599)
 s ApacheFlag="N"
</server>
<div class="window-mask alldom" style="display: none;width:100%;height:100%;z-index:3;top:0px;left:0px;position:absolute;filter:alpha(opacity=100);opacity: 1;font-size:1px;background-color:#ccc;text-align:center;padding-top: 20%;">
	<h1>
		<font color="#15428B">加载中・・・</font>
	</h1>
</div>
<!--分开三种布局方式:1.补录模式(登陆科室非就诊科室及就诊关联科室) ;2.门诊模式; 3.住院模式-->
<csp:if condition='LoginAdmLocFlag="Y"'>
	<csp:if condition='PAAdmType="I"'>
	 	<csp:Include Page="oeorder.oplistcustom.show.ip.hui.csp">
	<csp:else>
		<!--无模板(即使用上层框架的左侧模板)-->
		<csp:Include Page="oeorder.oplistcustom.show.op.hui.csp">
		<!--有模板(老版本模式,下方5个列表框。启用此模式需反馈郭荣勇)-->
		<!--csp:Include Page="oeorder.oplistcustom.show.opl.hui.csp"-->
	</csp:if>
<csp:else>
	<csp:if condition='IsShowOrdList="Y"'>
		<csp:Include Page="oeorder.oplistcustom.show.ip.hui.csp">
	<csp:else>
		<csp:Include Page="oeorder.oplistcustom.show.append.hui.csp">
	</csp:if>
</csp:if>

<script type="text/javascript">
//录入列表对象ListConfigObj
XCONTEXT="WNewOrderEntry"
//用户配置对象
var UIConfigObj=#(UIConfigObj)#;
//合理用药对象
var HLYYConfigObj=#(HLYYConfigObj)#;
//全局参数对象
var GlobalObj={
	NotDisplayNoPayOrd:"#(NotDisplayNoPayOrd)#",
	HospitalCode:"#(HospitalCode)#",
	CheckRecLocMethod:"#(CheckRecLocMethod)#",
	GetARCIMBillGrpDescMehtod:"#(GetARCIMBillGrpDescMehtod)#",
	SelectOrderItemMethod:"#(SelectOrderItemMethod)#",
	GetARCIMDefaultPackQtyMehthod:"#(GetARCIMDefaultPackQtyMehthod)#",
	CheckItemInDurationMethod:"#(CheckItemInDurationMethod)#",
	GetPHCDPoisonMethod:"#(GetPHCDPoisonMethod)#",
	GetARCIMBillClassMethod:"#(GetARCIMBillClassMethod)#",
	CheckStockEnoughMethod:"#(CheckStockEnoughMethod)#",
	GetBillItemsMethod:"#(GetBillItemsMethod)#",
	GetEPARCIMDetailMehtod:"#(GetEPARCIMDetailMehtod)#",
	GetItemCongeriesToListMethod:"#(GetItemCongeriesToListMethod)#",
	LookUpFrequencyMethod:"#(LookUpFrequencyMethod)#",
	LookUpDurationMethod:"#(LookUpDurationMethod)#",
	LookUpInstrMethod:"#(LookUpInstrMethod)#",
	CalDoseMethod:"#(CalDoseMethod)#",
	GetCurrentDateTimeMethod:"#(GetCurrentDateTimeMethod)#",
	CheckConflictMethod:"#(CheckConflictMethod)#",
	GetConflictMethod:"#(GetConflictMethod)#",
	CheckOrderItemMethod:"#(CheckOrderItemMethod)#",
	InsertOrderItemMethod:"#(InsertOrderItemMethod)#",
	SaveOrderItemsMethod:"#(SaveOrderItemsMethod)#",
	PinNumberMethod:"#(PinNumberMethod)#",
	
	DefaultOrderPriorRowid:"#(DefaultOrderPriorRowid)#",
	OutOrderPriorRowid:"#(OutOrderPriorRowid)#",
	OneOrderPriorRowid:"#(OneOrderPriorRowid)#",
	LongOrderPriorRowid:"#(LongOrderPriorRowid)#",
	ShortOrderPriorRowid:"#(ShortOrderPriorRowid)#",
	OMOrderPriorRowid:"#(OMOrderPriorRowid)#",
	OMSOrderPriorRowid:"#(OMSOrderPriorRowid)#",
	STATOrderPriorRowid:"#(STATOrderPriorRowid)#",
	LogonDoctorID:"#(DoctorID)#",
	LogonDoctorType:"#(DoctorType)#",
	PhSpecInstrList:"#(PhSpecInstrList)#",
	
	DirectSave:"#(DirectSave)#",
	HLYYInterface:HLYYConfigObj.HLYYInterface,
	HLYYLayOut:"OEOrd",
	CurrCompanyCode:HLYYConfigObj.CurrCompanyCode,
    DTDepNotDoUpLoad:HLYYConfigObj.DTDepNotDoUpLoad,
    McSynCheckMode:HLYYConfigObj.McSynCheckMode,
    BaseInfo:HLYYConfigObj.BaseInfo,
	STFreqRowid:"#(STFreqRowid)#",
	QDFreqRowid:"#(QDFreqRowid)#",
	STFreq:"#(STFreq)#",
	WYInstr:"#(WYInstr)#",
	NotFollowInstr:"#(NotFollowInstr)#",
	SkinTestInstr:"#(SkinTestInstr)#",
	IPDosingInstr:"#(IPDosingInstr)#",
	OEORIRealTimeQuery:"#(OEORIRealTimeQuery)#",
	/*
	if (WYInstr!=""){WYInstr="^"+WYInstr+"^"}
	if (NotFollowInstr!=""){NotFollowInstr="^"+NotFollowInstr+"^"}
	if (SkinTestInstr!=""){SkinTestInstr="^"+SkinTestInstr+"^"}
	if (IPDosingInstr!=""){IPDosingInstr="^"+IPDosingInstr+"^"}
	*/
	OrderActionStr:"#(OrderActionStr)#",
	OrderActionJSON:"#(OrderActionJSON)#",
	OrderPhamacyWithDiagnos:"#(OrderPhamacyWithDiagnos)#",
	IPOrderPhamacyWithDiagnos:"#(IPOrderPhamacyWithDiagnos)#",
	CheckIPDepositMethod:"#(CheckIPDepositMethod)#",
	CheckDepositOrderMethod:"#(CheckDepositOrderMethod)#",
	IPDefaultDur:"#(IPDefaultDur)#",
	IPDefaultDurFactor:"#(IPDefaultDurFactor)#",
	DTCheckCNMed:"#(DTCheckCNMed)#",
	SetArrivedStatusMethod:"#(SetArrivedStatusMethod)#",
	AddToFavMethod:"#(AddToFavMethod)#",
	GetOneOrderPriorQtyMethod:"#(GetOneOrderPriorQtyMethod)#",
	CheckRepeatLabSpecMethod:"#(CheckRepeatLabSpecMethod)#",
	FindRecLocByLogonLoc:"#(FindRecLocByLogonLoc)#",
	FindARCOSInputByLogonLoc:"#(FindARCOSInputByLogonLoc)#",
	OneOrderPriorInstrs:"#(OneOrderPriorInstrs)#",
	CheckBillTypeSumMethod:"#(CheckBillTypeSumMethod)#",
	CreateOneOrder:"#(CreateOneOrder)#",
	GetStockQtyMethod:"#(GetStockQtyMethod)#",
	SetUserUnSaveDataMethod:"#(SetUserUnSaveDataMethod)#",
	GetUserUnSaveDataMethod:"#(GetUserUnSaveDataMethod)#",
	GetUserUnSaveCountMethod:"#(GetUserUnSaveCountMethod)#",
	SetSessionDataMethod:"#(SetSessionDataMethod)#",
	GetSessionDataMethod:"#(GetSessionDataMethod)#",
	StoreUnSaveData:"#(StoreUnSaveData)#",
	GetInstrGroupCodeMethod:"#(GetInstrGroupCodeMethod)#",
	PrescByInstr:"#(PrescByInstr)#",
	ReclocByInstr:"#(ReclocByInstr)#",
	GetInstrReclocMethod:"#(GetInstrReclocMethod)#",
	OPUnRepeatItemCat:"#(OPUnRepeatItemCat)#",
	FindSameOrderItemCatMethod:"#(FindSameOrderItemCatMethod)#",
	OutOrderNeedPackQty:"#(OutOrderNeedPackQty)#",
	CheckBeforeUpdateMethod:"#(CheckBeforeUpdateMethod)#",
	OrderPhamacyOnlyPackQty:"#(OrderPhamacyOnlyPackQty)#",
	LogonLocIsAdmLoc:"#(LogonLocIsAdmLoc)#",
	LogonLocType:"#(LogonLocType)#",
	PrescByAuto:"#(PrescByAuto)#",
	GetARCIMEQResMethod:"#(GetARCIMEQResMethod)#",
	GetOrderPriceMethod:"#(GetOrderPriceMethod)#",
	IPDosingRecLoc:"#(IPDosingRecLoc)#",
	GetDefaultBillTypeMethod:"#(GetDefaultBillTypeMethod)#",
	LookUpSingleFrequencyMethod:"#(LookUpSingleFrequencyMethod)#",
	LookUpSingleDurationMethod:"#(LookUpSingleDurationMethod)#",
	LookUpSingleInstrMethod:"#(LookUpSingleInstrMethod)#",
	MLUOMRowId:"#(MLUOMRowId)#",
	IVInstrRowId:"#(IVInstrRowId)#",
	CFSameRecDepForGroup:"#(CFSameRecDepForGroup)#",
	CFSameRecDepForARCOSGroup:"#(CFSameRecDepForARCOSGroup)#",
	CFNotAutoChangeRecloc:"#(CFNotAutoChangeRecloc)#",
	CFNotAlertZeroPrice:"#(CFNotAlertZeroPrice)#",
	CFConfirmInsurSYMM:"#(CFConfirmInsurSYMM)#",
	MRCBodyPartStr:"#(MRCBodyPartStr)#",
	OrderStageStr:"#(OrderStageStr)#",

	CFAllConfirmInsurSYMM:"#(CFAllConfirmInsurSYMM)#",
	GetOrderFirstDayTimesMethod:"#(GetOrderFirstDayTimesMethod)#",
	CalPackQtyMethod:"#(CalPackQtyMethod)#",
	GetDosingDateTimeMethod:"#(GetDosingDateTimeMethod)#",
	CFOPNotRepeatGenericName:"#(CFOPNotRepeatGenericName)#",
	CFOutAndOneDefaultPackQty:"#(CFOutAndOneDefaultPackQty)#",
	CalEqDoseMethod:"#(CalEqDoseMethod)#",
	//*************************************************
	AddMRCPWItemToListMethod:"#(AddMRCPWItemToListMethod)#",
	//*************************************************
	CFNotCheckSameSpecItem:"#(CFNotCheckSameSpecItem)#",
	CFLongOrderNotAllowPackQty:"#(CFLongOrderNotAllowPackQty)#",
	CheckOutOrderSumMethod:"#(CheckOutOrderSumMethod)#",
	CheckPriorAllowRangeMethod:"#(CheckPriorAllowRangeMethod)#",
	ChangeOEPrefMethod:"#(ChangeOEPrefMethod)#",
	ReChangeOEPrefMethod:"#(ReChangeOEPrefMethod)#",
	GetOEPrefMethod:"#(GetOEPrefMethod)#",
	SaveItemDefaultMethod:"#(SaveItemDefaultMethod)#",
	GetUserItemDefaultSingleMethod:"#(GetUserItemDefaultSingleMethod)#",
	ONCEFreq:"#(ONCEFreq)#",
	ONCEFreqRowid:"#(ONCEFreqRowid)#",
	OrderPriorRemarksStr:"#(OrderPriorRemarksStr)#",
	PRNOrderPriorRowid:"#(PRNOrderPriorRowid)#",
	OMCQZTOrderPriorRowid:"#(OMCQZTOrderPriorRowid)#",
	OMLSZTOrderPriorRowid:"#(OMLSZTOrderPriorRowid)#",
	OrderFlowRateUnitStr:"#(OrderFlowRateUnitStr)#",
	AntUseReasonStr:"#(AntUseReasonStr)#",
	SetArriveByOrder:"#(SetArriveByOrder)#",
	NotAlertRepeatItemCat:"#(NotAlertRepeatItemCat)#",
	//抗生素3****
	DoctorTypePoisonStr:"#(DoctorTypePoisonStr)#",
	DeleteAntibApplyMethod:"#(DeleteAntibApplyMethod)#",
	GetPHCPoisonByCode:"#(GetPHCPoisonByCode)#",
	CheckSusceptMethod:"#(CheckSusceptMethod)#",
	CheckInDurSameIMMethod:"#(CheckInDurSameIMMethod)#",
	DeleteAntReasonMethod:"#(DeleteAntReasonMethod)#",
	ReasonCanBeDeletedMethod:"#(ReasonCanBeDeletedMethod)#",
	AddAuditItemToListMethod:"#(AddAuditItemToListMethod)#",
	//抗生素3****
	LogonLocRowId:"#(LogonLocRowId)#",
	ConverDateMethod:"#(ConverDateMethod)#",
	ISLongOrderPriorMethod:"#(ISLongOrderPriorMethod)#",
	CheckLabItemActiveMethod:"#(CheckLabItemActiveMethod)#",
	CheckSpecOrdLinkedMethod:"#(CheckSpecOrdLinkedMethod)#",
	GetOrderLocalInfusionQtyMethod:"#(GetOrderLocalInfusionQtyMethod)#",
	CalcDurByArcimMethod:"#(CalcDurByArcimMethod)#", 
	GetInsurFlagMethod:"#(GetInsurFlagMethod)#",
	GetArcimFormRowidMethod:"#(GetArcimFormRowidMethod)#",
	GetItemServiceFlagMethod:"#(GetItemServiceFlagMethod)#",
	GetItemServiceARCIMStrMethod:"#(GetItemServiceARCIMStrMethod)#",
	GetCureItemARCIMStrMethod:"#(GetCureItemARCIMStrMethod)#",
	ContrlOrderPackQtyMethod:"#(ContrlOrderPackQtyMethod)#",
	AllowEntryDecimalItemCat:"#(AllowEntryDecimalItemCat)#",
		
	lookupListComponetId:1872,
	ListColSetCls:"#(ListColSetCls)#",
	ListColSetMth:"#(ListColSetMth)#",
	CTLOC:"#($g(%request.Data("CTLOC",1)))#",
	CFOrderMsgAlert:"#(CFOrderMsgAlert)#",
	GetPrescLimitMethod:"#(GetPrescLimitMethod)#",
	FindSameOrderItemFlagMethod:"#(FindSameOrderItemFlagMethod)#",
	RecLocByLogonLocFlag:"#(RecLocByLogonLocFlag)#",
	//CA:-------------------start 数字签名-----------------
   	CAInit:"#(CAInit)#",
	GetOEORIItemXMLMethod:"#(GetOEORIItemXMLMethod)#",
	InsertCASignInfoMethod:"#(InsertCASignInfoMethod)#",
	strServerRan:"#($g(%session.Data("ServerRan")))#",
	strServerCert:"#($g(%session.Data("ServerCert")))#",
	strServerSignedData:"#($g(%session.Data("ServerSignedData")))#",
	IsCAWin:"",
	//-------------------------------
	UnloadUpdateFlag:false,
	GetARCItemSubCatID:"#(GetARCItemSubCatID)#",
	CheckItemDiagnos:"#(CheckItemDiagnos)#",
	GetOneFrequencyStrMethod:"#(GetOneFrequencyStrMethod)#",
	GetOneDurationStrMethod:"#(GetOneDurationStrMethod)#",
	GetOneInstrStrMethod:"#(GetOneInstrStrMethod)#",
	SelectContrlConfig:"#(SelectContrlConfig)#",
	CFSwithGlobalPriorUpdate:"#(CFSwithGlobalPriorUpdate)#",
	GetOrderPriorMethod:"#(GetOrderPriorMethod)#",
	GetOrderPriorByCodeMethod:"#(GetOrderPriorByCodeMethod)#",
	GetArcimByLabel:"#(GetArcimByLabel)#",
	/*GetIncItmHighValueFlag:"#(GetIncItmHighValueFlag)#",*/
	HighValueControl:"#(HighValueControl)#",
	CheckOutOrderOtherMethod:"#(CheckOutOrderOtherMethod)#",
	FindSameOutOrderItemMethod:"#(FindSameOutOrderItemMethod)#",
	CheckArcimType:"#(CheckArcimType)#",
	GetExceedDate:"#(GetExceedDate)#",
	IsHourItem:"#(IsHourItem)#",
	GetCopyItems:"#(GetCopyItems)#",
	layoutConfig:"#(layoutConfig)#",
	UpdateFinshAdm:"#(UpdateFinshAdm)#",
	GetUnActiveOrderItems:"#(GetUnActiveOrderItems)#",
	OrderPriorContrlConfig:"#(OrderPriorContrlConfig)#",
	isNurseLogin:"#(isNurseLogin)#",
	XCONTEXT:"#(XCONTEXT)#",
	InsertUserARCOSS:"#(InsertUserARCOSS)#",
	GetPrescXML:HLYYConfigObj.GetPrescXML,
	GetDTYDTS:HLYYConfigObj.GetDTYDTS,
	CheckOnlyShort:"#(CheckOnlyShort)#",
	GetVerifiedOrder:"#(GetVerifiedOrder)#",
	IPDosingRecLocStr:"#(IPDosingRecLocStr)#",
	FindPAPMIID:"#(FindPAPMIID)#",
	/*NotAlertZeroItemCatStr:"#(NotAlertZeroItemCatStr)#",*/
	GetNotAlertZeroItemCatMethod:"#(GetNotAlertZeroItemCatMethod)#",
	GetBillUOMStrMethod:"#(GetBillUOMStrMethod)#",
	GetOrderPriceConUomMethod:"#(GetOrderPriceConUomMethod)#",
	GetDiagnosLimitDurMethod:"#(GetDiagnosLimitDurMethod)#",
	CheckDateTime:"#(CheckDateTime)#",
	CFPilotPatAdmReason:"#(CFPilotPatAdmReason)#",
	CFIPPilotPatAdmReason:"#(CFIPPilotPatAdmReason)#",
	CheckPilotCat:"#(CheckPilotCat)#",
	OnePrintFlag:"#(OnePrintFlag)#",
	GetArcimInsurCat:"#(GetArcimInsurCat)#",
	PilotProWarning:"",
	AuditFlag:"",
	INAdmTypeLoc:"#(INAdmTypeLoc)#",
	//知识库
	CheckLibPha:"#(CheckLibPha)#",
    GetDurgArcimMesage:"#(GetDurgArcimMesage)#",
	GetLadArcimMesage:"#(GetLadArcimMesage)#",
    ZSKOpen:"#(ZSKOpen)#",
	CheckInsuCostControlMethod:"#(CheckInsuCostControlMethod)#",
	GetPrioCodeAndDesc:"#(GetPrioCodeAndDesc)#",
	CFSkinTestPriorShort:"#(CFSkinTestPriorShort)#",
	StopOrderMethod:"#(StopOrderMethod)#",
	CopyPriorCodeRowid:"#(CopyPriorCodeRowid)#",
	GetARCIMRequireNoteFlag:"#(GetARCIMRequireNoteFlag)#",
	GetARCIMShowOEMessageFlag:"#(GetARCIMShowOEMessageFlag)#",
	CheckBeforeSaveMethod:"#(CheckBeforeSaveMethod)#",
	//出院条件Id,在保存时选择赋值
	DischargeConditionRowId:"",
	ModifySttDateTimeAuthority:"#(ModifySttDateTimeAuthority)#",
	ModifyDateTimeAuthority:"#(ModifyDateTimeAuthority)#",
	LocNotPackQty:"#(LocNotPackQty)#",
	CareProvType:"#(CareProvType)#",
	/*HaveMidDischargedMethod:"#(HaveMidDischargedMethod)#",*/
	GetARCItemSubCatDesc:"#(GetARCItemSubCatDesc)#",
	GetARCItemCode:"#(GetARCItemCode)#",
	FindSameGenericNameOrderItemMethod:"#(FindSameGenericNameOrderItemMethod)#",
	IsHaveMenuAuthOrderOrgFavMethod:"#(IsHaveMenuAuthOrderOrgFavMethod)#",
	UpdateAgencyInfoMethod:"#(UpdateAgencyInfoMethod)#",
	AllergyChildNotice:"#(AllergyChildNotice)#",
	NotLinkItemCat:"#(NotLinkItemCat)#",
	CheckAllergyChildNotice:"#(CheckAllergyChildNotice)#",
	CheckOrderDateMethod:"#(CheckOrderDateMethod)#",
	PrefEditItemMethod:"#(PrefEditItemMethod)#",
	CheckDiagnosCatArcimPassMethod:"#(CheckDiagnosCatArcimPassMethod)#",
	OutDocEntryMTR:"#(OutDocEntryMTR)#",
	SelectInstrNotDrugCat:"#(SelectInstrNotDrugCat)#",
	ValidFreqStr:"#(ValidFreqStr)#",
	DeceasedDateTimeStr:"",
	ShortDrugOrdNotAllowPackQty:"#(ShortDrugOrdNotAllowPackQty)#",
	EntryQueryLimitNum:"#(EntryQueryLimitNum)#",
	InsExaReqNoMethod:"#(InsExaReqNoMethod)#",
	GetExamItemBookMethod:"#(GetExamItemBookMethod)#",
	CheckTodaySameItem:"#(CheckTodaySameItem)#",
	NotDoCheckDeposit:"#(NotDoCheckDeposit)#",
	GetOperInfoMethod:"#(GetOperInfoMethod)#",
	OperationStr:"",
	DrippingSpeedInstr:"#(DrippingSpeedInstr)#",
	GetOrderMsgMethod:"#(GetOrderMsgMethod)#",
	SupplementMode:"#(SupplementMode)#",
	ForbidDosingInstr:"#(ForbidDosingInstr)#",
	DCAARowId:"#(DCAARowId)#",
	AntCVID:"#(AntCVID)#",
	CheckDataValidMethod:"#(CheckDataValidMethod)#",

	MedNotOpenARCOS:"#(MedNotOpenARCOS)#",
	SetARCOSItemDirectMethod:"#(SetARCOSItemDirectMethod)#",
	GetARCOSInfoMethod:"#(GetARCOSInfoMethod)#",
	GetCountByFreqDispTimeMethod:"#(GetCountByFreqDispTimeMethod)#",
	LogLocDesc:"#(LogLocDesc)#",
	OrderLimit:"#(OrderLimit)#",
	DefaultExpendTemplateOnPopTemplate:"#(DefaultExpendTemplateOnPopTemplate)#",
	IsShowOrdList:"#(IsShowOrdList)#",
	DefaultCloseList:"#(DefaultCloseList)#",
	LoginAdmLocFlag:"#(LoginAdmLocFlag)#",
	practiceFlag:"#(practiceFlag)#",
	InsertPrcaticeDocMethod:"#(InsertPrcaticeDocMethod)#",
	OrderPriorConfig:"#(OrderPriorConfig)#",
	NORMLimitInfo:"#(NORMLimitInfo)#",
	SkinTestNeedApply:"#(SkinTestNeedApply)#",
	IPShortOrderPriorDefFreqRowId:"#(IPShortOrderPriorDefFreqRowId)#",
	IPShortOrderPriorDefFreq:"#(IPShortOrderPriorDefFreq)#"
}
$.extend(PageLogicObj,{defaultDataCache:"#(defaultDataCache)#"});
InitPatOrderViewGlobal("#(EpisPatInfo)#");

//alert(GlobalObj.PPRowId)
//补录关联医嘱主医嘱信息
var VerifiedOrderObj={
	LinkedMasterOrderName:"",
	LinkedMasterOrderRowid:"",
	LinkedMasterOrderSeqNo:"",
	LinkedMasterOrderPriorRowid:"",
	LinkedMasterOrderFreRowId:"",
	LinkedMasterOrderFreFactor:"",
	LinkedMasterOrderFreInterval:"",
	LinkedMasterOrderFreDesc:""
}

function GetList_pnp() 
{
   var strTemp =GetUserList();
   if (strTemp!="") GlobalObj.IsCAWin=strTemp;
   else GlobalObj.IsCAWin="";
 }
if(GlobalObj.CAInit==1) GetList_pnp();

//医嘱录入列表编辑属性默认值
/*
var DefaultStyleConfigObj={OrderDur:true,OrderFreq:true,OrderPackQty:true,OrderDoseQty:true,
	OrderDoseUOM:true,OrderInstr:true,OrderMasterSeqNo:false,OrderPrice:false,OrderAction:true,
	OrderLabSpec:true,OrderNotifyClinician:true,OrderInsurCat:true,OrderSpeedFlowRate:true,
	OrderFlowRateUnit:true,OrderNeedPIVAFlag:true,AntUseReason:true,OrderLabEpisodeNo:true
}
*/


var XCONTEXT="#(XCONTEXT)#" //session["CONTEXT"];
var escapedCTLOC="#($zcvt($g(%request.Data("CTLOC",1)),"O","URL"))#";
if (escapedCTLOC!="") escapedCTLOC=escape(escapedCTLOC);

var iframeName=window.name
if (iframeName==""){
	iframeName=window.parent.frames("oeordFrame").name
}
if (($("#OrderTemplate").length>0)&&(UIConfigObj.DefaultPopTemplate != true)) {
	//模板数据加载
	var lnkFav="oeorder.entry.redrawprefs.new.csp?EpisodeID="+GlobalObj.EpisodeID+"&CTLOC="+escapedCTLOC+"&XCONTEXT="+XCONTEXT+"&OEWIN="+iframeName+"&TABIDX=0";
	//websys_createWindow(lnkFav+'&PREFTAB=1','TRAK_hidden');
}
</script>
<!--;custom元素或必须元素初始化-->
<server>
	s EpisodeID=%request.Get("EpisodeID")
	d ##class(web.DHCDocOrderListCommon).ComonItemWinte(EpisodeID)
</server>
<!--业务js的引用-->
<!--script defer="defer" type='text/javascript' src='../scripts/framework/ext.icare.Lookup.js'></script-->
<script defer="defer" type="text/javascript" src="../scripts/dhcnewpro/js/common.js"></script>
<script defer="defer" type="text/javascript" src="../scripts/dhcdoc/dhcapp/pisprintcom.js"></script>
<script defer="defer" type="text/javascript" src="../scripts/dhcdoc/dhcapp/dhcappprintcom.js"></script>
<script defer="defer" type="text/javascript" src="../scripts/DHCMA/SS/interface/ToDoctor.js"></script>
<script type="text/javascript" src="../scripts_lib/lodop/LodopFuncs.js"></script>
</body>
</HTML>
