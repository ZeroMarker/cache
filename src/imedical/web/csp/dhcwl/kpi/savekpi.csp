<csp:content charset="gb2312">
<csp:content charset="UTF-8">
<script language="cache" runat="server"> 
	s action = $Get(%request.Data("action",1))
	s id = $Get(%request.Data("id",1))
	s kpiCode = $Get(%request.Data("kpiCode",1))
	s kpiName = $Get(%request.Data("kpiName",1))
	s kpiDesc = $Get(%request.Data("kpiDesc",1))
	s kpiExcode = $Get(%request.Data("kpiExcode",1))
	s createUser = $Get(%request.Data("createUser",1))
	s updateDate = $Get(%request.Data("updateDate",1))
	s nodeMark=$Get(%request.Data("nodeMark",1))
	s dimType=$Get(%request.Data("dimType",1))
	s category=$Get(%request.Data("category",1))
	s section=$Get(%request.Data("section",1))
	s dataNode=$Get(%request.Data("dataNode",1))
	s globalFlag=$Get(%request.Data("globalFlag",1))
	s getValueType=$Get(%request.Data("getValueType",1))
	s copyKpiDimID=$Get(%request.Data("copyKpiDimID",1))
	if getValueType="" s getValueType=1
	s pv("id")=id,pv("kpiCode")=kpiCode,pv("kpiName")=kpiName,pv("createUser")=createUser,pv("updateDate")=updateDate
	s pv("nodeMark")=nodeMark,pv("category")=category
	s pv("dimType")=dimType
	s pv("kpiDesc")=kpiDesc,pv("kpiExcode")=kpiExcode,pv("section")=section
	s pv("dataNode")=dataNode,pv("globalFlag")=globalFlag,pv("getValueType")=getValueType
	//		日志记录模块
	//		;added by JEFF@2013-11-12
	s loginOperator=""
	i $d(%session.Data("LOGON.USERNAME")) s loginOperator=$g(%session.Data("LOGON.USERNAME"))
	
	i (action = "add") d
	.i ($g(id)="")||(+id=0) d
	..s result = ##class(web.DHCWL.KPI.MaintainKpi).Insert(.pv)
	..;w "{success:true,tip:'"_result_"'}"
	..s result1="ok"
	..i ((result="ok")&(copyKpiDimID'="")) d
	...s result1=##class(web.DHCWL.KPI.MaintainKpi).InsertKpiDim(copyKpiDimID,kpiCode)
	...w "{success:true,tip:'"_result1_"'}"
	..else  d
	...w "{success:true,tip:'"_result_"'}"
	..if (result="ok")&&(result1'="ok") d
	...if $d(^DHCWL.MKPI.MKPII("MKPICode",$zcvt(kpiCode,"U"))) d
	....s kpiIdFlag=##class(DHCWL.MKPIIO.XMLIOConfige).GetIdByCode(kpiCode,"DHCWL.MKPI.MKPI")
	....s sc=##class(web.DHCWL.KPI.MaintainKpi).Delete(kpiIdFlag)
	..//	日志记录模块(开始)
	..s loginLoginTypeDr=##class(DHCWL.MKPI.APPLibrary).GetIdByCode("LoginType||KpiLogDefinition")
	..s loginMKPIIdList=##class(DHCWL.MKPIService.ConfigService).GetKPIIdStrByCode(kpiCode)
	..d ##class(DHCWL.MKPILogin.LoginService).GetKpiDefinition(loginMKPIIdList,.arrOld)
	..i $d(arrOld) s loginPrePropertyList=##class(DHCWL.MKPILogin.LoginService).GetJsonStrByCompare(.arrOld)
	..s jsonStr="{Operator:'"_loginOperator_"',MKPIIdList:'"_loginMKPIIdList_"',LoginTypeDr:'"_loginLoginTypeDr_"',PrePropertyList:'"_$g(loginPrePropertyList)_"'}"
	..s shouldBeLogged=##class(DHCWL.MKPILogin.MKPILoginService).ShouldBeLogged("KpiLogDefinition",$g(id))
	..i (("ok"=result)&&(1=shouldBeLogged)) d
	...s loginService=##class(DHCWL.MKPILogin.LoginService).%New()
	...s status=loginService.LoginStart("KpiLogDefinition","",0)	;这里给个初值，最终取值根据LoginContent()方法确定
	...s status=loginService.LoginContent(jsonStr)
	...s status=loginService.LoginEnd()
	..//	日志记录模块(结束)
	.e  d
	..//	日志记录模块(开始)
	..s loginLoginTypeDr=##class(DHCWL.MKPI.APPLibrary).GetIdByCode("LoginType||MKPIDefineUpdate")
	..s loginMKPIIdList=##class(DHCWL.MKPIService.ConfigService).GetKPIIdStrByCode(kpiCode)
	..d ##class(DHCWL.MKPILogin.LoginService).GetKpiDefinition(loginMKPIIdList,.arrOld)
	..i $d(arrOld) s loginPrePropertyList=##class(DHCWL.MKPILogin.LoginService).GetJsonStrByCompare(.arrOld)
	..//	日志记录模块(开始)
	..TSTART
	..s result = ##class(web.DHCWL.KPI.MaintainKpi).Update(id,.pv)
	..i result="ok" TCOMMIT
	..e  TROLLBACK
	..w "{success:true,tip:'"_result_"'}"
	..//	日志记录模块(开始)
	..//	指标更新日志，仅记录修改了记录的日志项
	..d ##class(DHCWL.MKPILogin.LoginService).GetKpiDefinition(loginMKPIIdList,.arrNew)
	..i $d(arrNew) s loginPostPropertyList=##class(DHCWL.MKPILogin.LoginService).GetJsonStrByCompare(.arrOld,.arrNew)
	..s jsonStr="{Operator:'"_loginOperator_"',MKPIIdList:'"_loginMKPIIdList_"',LoginTypeDr:'"_loginLoginTypeDr_"',PrePropertyList:'"_$g(loginPrePropertyList)_"',PostPropertyList:'"_$g(loginPostPropertyList)_"'}"
	..s shouldBeLogged=##class(DHCWL.MKPILogin.MKPILoginService).ShouldBeLogged("KpiLogDefinition",$g(id))
	..i ("ok"=result)&&(""'=$g(loginPostPropertyList))&&(1=shouldBeLogged) d
	...s loginService=##class(DHCWL.MKPILogin.LoginService).%New()
	...s status=loginService.LoginStart("KpiLogDefinition","",0)	;这里给个初值，最终取值根据LoginContent()方法确定
	...s status=loginService.LoginContent(jsonStr)
	...s status=loginService.LoginEnd()
	..//	日志记录模块(结束)
	i action = "delete" {
	//		日志记录模块(开始)
		b
		s IDInfors=""
		s IDs=$Get(%request.Data("ids",1))
		s IDsLength=$l(IDs,",")
		for i=1:1:IDsLength{
			s IDInfor=$p(IDs,",",i)
			continue:IDInfor=" "
			if (IDInfors=""){
				s IDInfors=IDInfor
			}else{
				s IDInfors=IDInfors_","_IDInfor
			}
		}
		s IDs=IDInfors
		s IDsLength=$l(IDs,",")
		//判断要删除的指标是否是运算指标中运算关系的一部分。如果是，就退出
		s usedCodes=""
		d ##class(DHCWL.CSPService.calService).getCalPrtor(.calPrtor)
		f i=1:1:IDsLength { 
			s id=$p(IDs,",",i)
			s kpiCode=##class(DHCWL.MKPIIO.XMLIOConfige).GetCodeById(id,"DHCWL.MKPI.MKPI")
			if $d(calPrtor(kpiCode)) {
				if usedCodes'="" s usedCodes=usedCodes_","
				s usedCodes=usedCodes_calPrtor(kpiCode)
			}
			
		}

		if usedCodes'="" {
			w "{success:true,tip:'要删除的指标被下面的指标配置了运算关系，请先修改下面指标的运算关系:"_usedCodes_"'}"
			q
		}
		
		s loginLoginTypeDr=##class(DHCWL.MKPI.APPLibrary).GetIdByCode("LoginType||MKPIDefineUpdate")
		s hasError=0
		TSTART
		f i=1:1:IDsLength { 
			s id=$p(IDs,",",i)
			s loginMKPIIdList=id
			k arrOld
			d ##class(DHCWL.MKPILogin.LoginService).GetKpiDefinition(loginMKPIIdList,.arrOld)
			i $d(arrOld) s loginPrePropertyList=##class(DHCWL.MKPILogin.LoginService).GetJsonStrByCompare(.arrOld)
			//		日志记录模块(结束)
			;add by wz.2015-6-15.删除指标时也删除数据集中取数规则的指标
			s result=##class(DHCWL.MKPI.MMgrDataSetCfg).RejectKpiFromRule(id)
			i result'="ok" {
				w "{success:true,tip:'"_result_"'}"
				s hasError=1
				q
			}
			
			;add by wz.2015-7-5.删除指标时也删除运算关系表达式
			s result=##class(DHCWL.MKPI.CalExpDef).DelCalExpByKPIIDs(id)
			i result'="ok" {
				w "{success:true,tip:'"_result_"'}"
				s hasError=1
				q
			}
			
			s result = ##class(web.DHCWL.KPI.MaintainKpi).Delete(id)
			;w "{success:true,tip:'"_result_"'}"
			//		日志记录模块(开始)
			s loginPostPropertyList="指标已删除"
			s jsonStr="{Operator:'"_loginOperator_"',MKPIIdList:'"_loginMKPIIdList_"',LoginTypeDr:'"_loginLoginTypeDr_"',PrePropertyList:'"_$g(loginPrePropertyList)_"',PostPropertyList:'"_$g(loginPostPropertyList)_"'}"
			s shouldBeLogged=##class(DHCWL.MKPILogin.MKPILoginService).ShouldBeLogged("KpiLogDefinition",loginMKPIIdList)
			i ("ok"=result)&&(1=shouldBeLogged) {
				s loginService=##class(DHCWL.MKPILogin.LoginService).%New()
				s status=loginService.LoginStart("KpiLogDefinition","",0)	;这里给个初值，最终取值根据LoginContent()方法确定
				s status=loginService.LoginContent(jsonStr)
				s status=loginService.LoginEnd()
			}
			//		日志记录模块(结束)
			//		删除该指标关联的日志配置
			s status=##class(DHCWL.MKPILogin.MKPILoginService).MKPILoginDelete(id)
			i "ok"'=result {
				w "{success:true,tip:'"_result_"'}"
				s hasError=1
				q
			}
		}
		if hasError=1 {
			TROLLBACK
		}else{
			w "{success:true,tip:'ok'}"
			TCOMMIT
		}
	}
</script>