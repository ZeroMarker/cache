<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
	i ##Class(websys.SessionEvents).SessionExpired() q 1
	q ""
</csp:method>
<html>
<head>
<title>	Cache Server Page </title>

<link rel="stylesheet" href="../scripts_lib/bootstrap-3.3.5/css/bootstrap.min.css"></link>
<script type="text/javascript" src="../scripts_lib/jQuery/jquery-1.8.0.min.js"></script>
<script type="text/javascript" src="../scripts_lib/vue.js"></script>
<script type="text/javascript" src="../scripts_lib/SheetJs/xlsx.full.min.js"></script>
<!-- 兼容IE支持promise对象 -->
<script type="text/javascript" src="../scripts_lib/SheetJs/babel-polyfill.js"></script>

<HISUI/>

<style>.icon{width: 20px;height: 20px;margin-right: 10px;float: right;}</style>
<style>

	* {
		margin: 0;
		padding: 0;
	}

	html {
		height: 100%;
		width: 100%;
	}

	body {
		font-family: "微软雅黑";
		min-height: 95%;
		width: 100%;
	}

/*
	.nav-bar {
		padding-top: 20px;
		padding-left: 20px;
		padding-right: 20px;
	}

	button i.glyphicon {
		margin-right: 4px;
	}

	table.table th {
		word-break: keep-all;
		white-space: nowrap;
	}
*/
</style>
</head>

<body>
	<input type="file" id="FileInput" hidden="hidden" style="display: none;" onchange="readfls(this.files)" />
	<div id="app">
		<div class="nav-bar">
			<div class="btn-toolbar" role="toolbar" style="margin-bottom:10px;">
				<div class="input-group" style="width: 350px;" onclick="$('#FileInput')[0].click()">
					<span class="input-group-btn">
				        <button class="btn btn-info" type="button" ><i class="glyphicon glyphicon-folder-open"></i>选择文件</button>
				      </span>
					<input type="text" class="form-control" placeholder="请选择文件" readonly="readonly" v-model="fileInfo.name">
				</div>
				<div class="input-group" style="width: 450px;">
					<span style="line-height: 30px;">
						安全组:	<select id="Group" style="width:220px;"></select>
					</span>
					<span style="line-height: 30px;">
						<input style="width: 70px;height:34px;margin-left:280px;margin-top:-34px;border-radius:2px;"
						class="form-control btn-primary"
						 type="button" id ="saveBtn" value="保存" onclick="Save();" />
					</span>
				</div>
			</div>
		</div>
		<div id="demo" style="overflow: auto;" v-if="tableDemo.tbody.length>0">
			<table class="table table-bordered" style="min-width: 100%;">
				<thead>
					<tr>
						<!-- <th>#</th> -->
						<th v-for="i in tableDemo.thead">
							{{i}}
						</th>
					</tr>
				</thead>
				<tbody>
					<tr v-for="(i,index) in tableDemo.tbody">
						<!-- <th scope="row">{{index}}</th> -->
						<td v-for="j in tableDemo.thead">{{i[j]}}</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	
	<script>
		$(function(){
			
			var GroupBox = $HUI.combobox('#Group', {
				url: $URL + '?ClassName=Nur.NIS.Service.Base.Menu&QueryName=GetGroup&ResultSetType=array',
				valueField: 'RowId',
				textField: 'Description',
				multiple:true,
				rowStyle:'checkbox', //显示成勾选行形式
				
			});
			
			$HUI.combobox('#Group', {
				onLoadSuccess: function (data) {
		            if (data) {
		                //$('#Group').combobox('setValues',[data[0].RowId,data[1].RowId,data[3].RowId]);
		                $cm({
							ClassName:"Nur.NIS.Service.Base.Menu",
							QueryName:"GetDemoGroup",
							ResultSetType:"array", //则rows为[{},{},...]
							page:1,    //可选项，页码，默认1
							rows:20000    //可选项，获取多少条数据，默认50
						},function(rows){
							var arr = []
							for (var i = 0; i < rows.length; i++){
								arr.push(rows[i].groupId)
							}
							$('#Group').combobox('setValues',arr);
						});
		            }
		        }
				
			});
			
			$('#Group').combobox({
				onChange: function (TGroupId,FGroupId) {
						//FGroupId 原来的安全组id ,TGroupId改变后的安全组id
					   Query(TGroupId);
					}
			});
			
			var Query=function(TGroupId){
			$.cm({
					ClassName: 'web.DHCSTMHUI.DicGroup',
					MethodName: 'LoadData',
					DGGroupDR:TGroupId
				},
				function(jsonData){
					if(jsonData.success!=0){
						//
					}else{
						//
					}
				});
			}
			
			/*
			var cbox = $HUI.combobox("#Group",{
				valueField:'id', textField:'text', 
				multiple:true,selectOnNavigation:false,panelHeight:"auto",editable:true,
				data:[
					{id:'css',text:'CSS语言'},{id:'html',text:'HTML语言'}
					,{id:'c',text:'C语言'},{id:'cplus',text:'C++语言'}
					,{id:'java',text:'JAVA语言'},{id:'cache',text:'M语言'}
					,{id:'sql',text:'结构化查询语言'}
				],
				formatter:function(row){  
					var rhtml;
					if(row.selected==true){
						rhtml = row.text+"<span id='i"+row.id+"' class='icon icon-ok'></span>";
					}else{
						rhtml = row.text+"<span id='i"+row.id+"' class='icon'></span>";
					}
					return rhtml;
				},
				onChange:function(newval,oldval){
					$(this).combobox("panel").find('.icon').removeClass('icon-ok');
					for (var i=0;i<newval.length;i++){
						$(this).combobox("panel").find('#i'+newval[i]).addClass('icon-ok');
					}
				}
			});
			*/
		  });
	</script>

	<script>
		var ImportFile = null;
		function readfls(fls) {
			
			if (fls && fls.length > 0) {
				ImportFile = fls[0];
				var fileX = ImportFile.name.split(".").reverse()[0];
				var fileXyes = false;
				["xlsx", "xlc", "xlm", "xls", "xlt", "xlw", "csv"].forEach(function (value, index, array) {
					if (fileX === value) {
						fileXyes = true;
					}
				});
				if (fileXyes) {
					app.fileInfo.name = ImportFile.name;
					app.fileInfo.size = ImportFile.size;
					file2Xce(ImportFile).then(function (t) {
						console.log("执行完毕");
						//清空file，否则产生缓存
						var obj = document.getElementById('FileInput');
						obj.value='';
						if (t && t.length > 0) {
							var tmpHead = [];
							var pmodel = {};
							for (var itm in t[t.length-1]) {
								tmpHead.push(itm);
								pmodel[itm] = itm;
							}
							app.tableDemo.thead = tmpHead;
							app.tableDemo.tbody = t;
						}
					});
				} else {
					alert("格式错误！请重新选择");
				}
			}
		}
		
		//解决不支持IE 自定义extend FileReader
		if (!FileReader.prototype.readAsBinaryString) {
		    FileReader.prototype.readAsBinaryString = function (fileData) {
		       var binary = "";
		       var pt = this;
		       var reader = new FileReader();      
		       reader.onload = function (e) {
		           var bytes = new Uint8Array(reader.result);
		           var length = bytes.byteLength;
		           for (var i = 0; i < length; i++) {
		               binary += String.fromCharCode(bytes[i]);
		           }
		        //pt.result  - readonly so assign binary
		        pt.content = binary;
		        $(pt).trigger('onload');
		    }
		    	reader.readAsArrayBuffer(fileData);
		    }
		}
		
		var wb; //读取完成的数据　
		function file2Xce(f) {
			return new Promise(function (resolve, reject) {
				var reader = new FileReader();
				reader.readAsBinaryString(f);
				reader.onload = function (e) {
					var bsVersion = IEVersion();
					if(bsVersion == "" || bsVersion == "-1"){//不是IE浏览器
						var data = reader.result;
					}else{
						var data = reader.content;
					}
					if (app.rABS) {
						wb = XLSX.read(btoa(fixdata(data)), { //手动转化
							type: 'base64'
						});
					} else {
						wb = XLSX.read(data, {
							type: 'binary'
						});
					}
					resolve(XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]));
				};
				/**
				if (app.rABS) {
					reader.readAsArrayBuffer(f);
				} else {
					reader.readAsBinaryString(f);
				}
				*/
			});
		};

		function fixdata(data) { //文件流转BinaryString
			var o = "",
				l = 0,
				w = 10240;
			for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
			o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
			return o;
		}


		var app = new Vue({
			el: "#app",
			data: {
				rABS: false, //是否将文件读取为二进制字符串
				fileInfo: {
					name: "",
					size: 0
				},
				tableDemo: {
					thead: [],
					tbody: []
				}
			}
		});
		
		function Save (){
			//console.log("数据："+app.tableDemo.tbody)
			//console.log("表头："+app.tableDemo.thead)
			for(var h=0; h<app.tableDemo.thead.length; h++ ){
				let columnName = app.tableDemo.thead[h];
			}
			var info = [];
			for(var b=0;b<app.tableDemo.tbody.length;b++){
				var map = app.tableDemo.tbody[b];
				var jsonStr = "{";
				var i=0;
				for (var key in map) {
					i++
					if (i != (Object.keys(map).length)){
						var objStr = "\""+key+"\""+":"+"\""+map[key]+"\""+",";
					}else{
						var objStr = "\""+key+"\""+":"+"\""+map[key]+"\"";
					}
					jsonStr+=objStr
				}
				jsonStr +="}"
				info.push(jsonStr)
			}
			var jsonStr = "["+info+"]";
			var groupIds = $("#Group").combobox('getValues')
			var gstr = "";
			if(groupIds && groupIds !="" && typeof(groupIds) != 'undefined'){
				for (var j in groupIds){
					gstr+=groupIds[j]+"^"
				}
			}
			
			if(info =="" || info.length == 0){
				alert("请选择文件")
				return
			}
			if(gstr==""){
				alert("请选择安全组")
				return
			}
			
			//先排序
			var json = eval('(' + jsonStr + ')');
			//按层级从小到大排序
			json.sort(function(a,b){
				return a.Level-b.Level;
			});
			console.log(json)
			var infoStr = JSON.stringify(json);
			
			$.messager.confirm("保存", "数据会覆盖处理，确定保存?", function (r) {
				if (r) {
					
					//发起请求
					$.cm({
						ClassName: 'Nur.NIS.Service.Base.Menu',
						MethodName: 'BDPImport',
						info:infoStr,
						groupIds:gstr
					},
					function(data){
						if(data.success!=0){
							window.location.reload()
						}else{
							//
						}
					});
					
					//$.messager.popover({msg:"点击了确定",type:'info'});
				} else {
					//$.messager.popover({msg:"点击了取消"});
				}
			});
		}
		
		function IEVersion() {
            var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串  
            var isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1; //判断是否IE<11浏览器  
            var isEdge = userAgent.indexOf("Edge") > -1 && !isIE; //判断是否IE的Edge浏览器  
            var isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf("rv:11.0") > -1;
            if(isIE) {
                var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
                reIE.test(userAgent);
                var fIEVersion = parseFloat(RegExp["$1"]);
                if(fIEVersion == 7) {
                    return 7;
                } else if(fIEVersion == 8) {
                    return 8;
                } else if(fIEVersion == 9) {
                    return 9;
                } else if(fIEVersion == 10) {
                    return 10;
                } else {
                    return 6;//IE版本<=7
                }   
            } else if(isEdge) {
                return 'edge';//edge
            } else if(isIE11) {
                return 11; //IE11  
            }else{
                return -1;//不是ie浏览器
            }
        }
	</script>
</body>
</html>
