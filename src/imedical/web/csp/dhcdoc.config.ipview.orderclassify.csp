<!--dhcdoc.config.ipview.orderclassify.csp-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<HTML XMLNS=TRAK>
<HEAD>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Type" content="text/html;"/>
<TITLE><EXTHEALTH:TRANSLATE id=title>##(%session.Get("TITLE"))##</EXTHEALTH:TRANSLATE></TITLE>
<EXTHEALTH:HEAD></EXTHEALTH:HEAD>
<DHCDOC:JSCOMMON></DHCDOC:JSCOMMON>
<link type="text/css" rel="stylesheet" href="../scripts/dhcdoc/css/uiimage.css" />
<LINK REL="stylesheet" TYPE="text/css" HREF="../skin/default/css/websys.easyui.1.3.5.css"></LINK>
<link rel="stylesheet" type="text/css" href="../scripts/dhcdoc/css/easyuicom.1.3.5.css">
<script type="text/javascript" src="../scripts_lib/jquery-easyui-1.3.5/locale/easyui-lang-zh_CN.js"></script>
 </head>
<body class="easyui-layout" data-options="fit:true,border:false">

<div data-options="region:'north',title:'病人在院长嘱归类'"style="height:300px;">
	<div class="easyui-layout" data-options="fit:true,border:false">
		<div data-options="region:'west'" style="width:400px;">
			<table id="orderclassify"></table>
		</div>
		<div data-options="region:'center'">
			<table id="classifyDetail"></table>
		</div>
	</div>
</div>
<div data-options="region:'center',title:'特殊医嘱归类'" >
	<table id="OrderKind"></table>
</div>

<SCRIPT language = 'javascript' >
	var OrderClassifyGrid;
	var ClassifyDetailGrid;
	var OrderKindTreeGrid;
	var editRow1;
	var editRow2;
	var editRow3;
	$(function(){
		InitOrderClassify();
		InitClassifyDetailGrid();
		InitOrderKindGrid();
	});
	function InitOrderClassify(){
		var OrderClassifyToolBar = [{
            text: '添加',
            iconCls: 'icon-add',
            handler: function() { //添加列表的操作按钮添加,修改,删除等
				//editRow1 = undefined
			    OrderClassifyGrid.datagrid('unselectAll');
                if (editRow1 != undefined) {
                    return;
                }else{
	                editRow1 = 0;
                    OrderClassifyGrid.datagrid("insertRow", {
                        index: 0,
                        row: {}
                    });
                    OrderClassifyGrid.datagrid("beginEdit", 0);
                }
              
            }
        },
        '-', {
            text: '删除',
            iconCls: 'icon-remove',
            handler: function() {
                var rows = OrderClassifyGrid.datagrid("getSelections");
                if (rows.length > 0) {
                    $.messager.confirm("提示", "你确定要删除吗?",
                    function(r) {
                        if (r) {
							var ClassifyCodeS = [];
                            for (var i = 0; i < rows.length; i++) {
                                ClassifyCodeS.push(rows[i].ClassifyCode);
                            }
                            var ClassifyCodeStr=ClassifyCodeS.join(',')
							$.dhc.util.runServerMethod("DHCDoc.DHCDocConfig.OrderClassify","DelOrderClassify","false",function testget(value){
						        if(value=="0"){
							       OrderClassifyGrid.datagrid('load');
           					       OrderClassifyGrid.datagrid('unselectAll');
           					       $.messager.show({title:"提示",msg:"删除成功"});
						        }else{
							       $.messager.alert('提示',"删除失败:"+value);
						        }
						        editRow1 = undefined;
						   },"","",ClassifyCodeStr);
                        }
                    });
                } else {
                    $.messager.alert("提示", "请选择要删除的行", "error");
                }
            }
        },
        '-', {
            text: '保存',
            iconCls: 'icon-save',
            handler: function() {
	            if (editRow1 == undefined){
		        	 $.messager.show({title:"提示",msg:"没有需要保存的数据"});  
		        }
				var editors = OrderClassifyGrid.datagrid('getEditors', editRow1); 
				var rows = OrderClassifyGrid.datagrid("selectRow",editRow1).datagrid("getSelected");			
				var OrderClassifyCode=editors[0].target.val();
				var OrderClassifyDesc=editors[1].target.val();
				if ((OrderClassifyCode=="")||(OrderClassifyDesc=="")){
					$.messager.alert('提示',"数据为空,无法保存!");
					return false;
				}
				var value=tkMakeServerCall("DHCDoc.DHCDocConfig.OrderClassify","InsertOrderClassify",OrderClassifyCode,OrderClassifyDesc)
				if(value.split("^")[0]=="0"){
					OrderClassifyGrid.datagrid("endEdit", editRow1);
        			editRow1 = undefined;
					OrderClassifyGrid.datagrid('load');
   					OrderClassifyGrid.datagrid('unselectAll');
					$.messager.show({title:"提示",msg:"保存成功"});        					
				}else if(value.split("^")[0]=="-101"){
					$.messager.alert('提示',"保存失败,记录重复!");
					return false;
				}else{
					$.messager.alert('提示',"保存失败:"+value);
					return false;
				}
				editRow1 = undefined;
				
            	
        	}
        },
        '-', {
            text: '取消编辑',
            iconCls: 'icon-redo',
            handler: function() {
                editRow1 = undefined;
                OrderClassifyGrid.datagrid("rejectChanges");
                OrderClassifyGrid.datagrid("unselectAll");
            }
        }];
        
		 var OrderClassifyColumns=[[ 
		 			{field:'Index',hidden:true},
		 			{field:'ClassifyCode',title:'代码',width:200,editor : {type : 'text'}},
		 			{field:'ClassifyDesc',title:'描述',width:200,editor : {type : 'text'}}
    			 ]];
		OrderClassifyGrid=$("#orderclassify").datagrid({  
			fit : true,
			width : 1500,
			border : false,
			striped : true,
			singleSelect : true,
			fitColumns : true,
			autoRowHeight : false,
			url : PUBLIC_CONSTANT.URL.QUERY_GRID_URL,
			loadMsg : '加载中..',  
			pagination : false,  //
			rownumbers : true,  //
			columns :OrderClassifyColumns,
	    	toolbar :OrderClassifyToolBar,
			onSelect : function(rowIndex, rowData) {
			},
			onLoadSuccess:function(data){  
			},
			onClickRow:function(rowIndex, rowData){
				if (rowData.ClassifyCode=="EkgOrd"){
					ClassifyDetailGrid.datagrid('showColumn','NeedOutData')
				}else{
					ClassifyDetailGrid.datagrid('hideColumn','NeedOutData')
				}
				ClassifyDetailGrid.datagrid('reload');
			},
			onDblClickRow:function(rowIndex, rowData){
				if (editRow1!=undefined){
					$.messager.alert('提示',"只允许编辑一行数据");
					return
				}
				editRow1=rowIndex
				OrderClassifyGrid.datagrid("beginEdit", rowIndex);
				var editors = OrderClassifyGrid.datagrid('getEditors', editRow1);
				editors[0].target.attr("disabled",true);
			},
			onBeforeLoad:function(queryParams){
				editRow1=undefined;
				queryParams.ClassName ='DHCDoc.DHCDocConfig.OrderClassify';
				queryParams.QueryName ='FindOrderClassify';
				queryParams.ArgCnt =0;
			}
		});
		
	}
	
	function InitClassifyDetailGrid(){
		var ClassifyDetailToolBar = [{
            text: '添加',
            iconCls: 'icon-add',
            handler: function() { //添加列表的操作按钮添加,修改,删除等
				//editRow2 = undefined
			    ClassifyDetailGrid.datagrid('unselectAll');
                if (editRow2 != undefined) {
                    return;
                }else{
	                editRow2 = 0;
                    ClassifyDetailGrid.datagrid("insertRow", {
                        index: 0,
                        row: {}
                    });
                    ClassifyDetailGrid.datagrid("beginEdit", 0);
                }
            }
        },
        '-', {
            text: '删除',
            iconCls: 'icon-remove',
            handler: function() {
	            var Mainrows = OrderClassifyGrid.datagrid("getSelections");
				if (Mainrows.length!= 1){
					$.messager.show({title:"提示",msg:"请选择医嘱归类"});  
					return;
				}
                var ClassifyCode=Mainrows[Mainrows.length-1].ClassifyCode;
                var rows = ClassifyDetailGrid.datagrid("getSelections");
                if (rows.length!= 1){
                	$.messager.show({title:"提示",msg:"请选择医嘱项"});  
					return;
                }
                var Index=rows[rows.length-1].Index;
                var Params=ClassifyCode+"^"+Index;
                $.dhc.util.runServerMethod("DHCDoc.DHCDocConfig.OrderClassify","DelClassifyDetail","false",function testget(value){
			        if(value=="0"){
				       ClassifyDetailGrid.datagrid('load');
				       ClassifyDetailGrid.datagrid('unselectAll');
				       $.messager.show({title:"提示",msg:"删除成功"});
			        }else{
				       $.messager.alert('提示',"删除失败:"+value);
			        }
			        editRow2 = undefined;
			   },"","",Params);
            }
        },
        '-', {
            text: '保存',
            iconCls: 'icon-save',
            handler: function() {
	            if (editRow2 == undefined){
		        	 $.messager.show({title:"提示",msg:"没有需要保存的数据"}); 
		        	 return; 
		        }
				var editors = ClassifyDetailGrid.datagrid('getEditors', editRow2); 
				var rows = ClassifyDetailGrid.datagrid("selectRow",editRow2).datagrid("getSelected");
				var Index=rows.Index;
				if (Index==undefined){Index=""}
				var ARCIMDR=rows.ARCIMDR;
				if (ARCIMDR==""){
					$.messager.show({title:"提示",msg:"请配置医嘱项目"});  
					return;
				}
				var Mainrows = OrderClassifyGrid.datagrid("getSelections");
				if (Mainrows.length<=0){
					$.messager.show({title:"提示",msg:"请选择医嘱归类"});  
					return;
				}
                var ClassifyCode=Mainrows[Mainrows.length-1].ClassifyCode;
                
                var NeedOutData =  editors[1].target.is(':checked');
				if (NeedOutData) NeedOutData="Y";
				else NeedOutData="N";
				var Params=ClassifyCode+"^"+Index+"^"+ARCIMDR+"^"+NeedOutData;
				//return
				var value=tkMakeServerCall("DHCDoc.DHCDocConfig.OrderClassify","InsertClassifyDetail",Params)
				if(value.split("^")[0]=="0"){
					ClassifyDetailGrid.datagrid("endEdit", editRow2);
        			editRow2 = undefined;
					ClassifyDetailGrid.datagrid('load');
   					ClassifyDetailGrid.datagrid('unselectAll');
					$.messager.show({title:"提示",msg:"保存成功"});        					
				}else if(value.split("^")[0]=="-101"){
					$.messager.alert('提示',"保存失败,记录重复!");
					return false;
				}else{
					$.messager.alert('提示',"保存失败:"+value);
					return false;
				}
				editRow2 = undefined;
        	}
        },
        '-', {
            text: '取消编辑',
            iconCls: 'icon-redo',
            handler: function() {
                editRow2 = undefined;
                ClassifyDetailGrid.datagrid("rejectChanges");
                ClassifyDetailGrid.datagrid("unselectAll");
            }
        }];
		 var ClassifyDetailColumns=[[ 
		 			{field:'Index',hidden:true},
		 			{field:'ARCIMDR',hidden:true},
        			{ field: 'ArcimDesc', title: '医嘱项名称',width:300,align: 'left', sortable: true, 
						editor:{
		              		type:'combogrid',
		                    options:{
								required: true,
								panelWidth:450,
								panelHeight:350,
								delay:200,
								idField:'ArcimRowID',
								textField:'ArcimDesc',
								value:'',//缺省值 
								mode:'remote',
								pagination : true,//是否分页   
								rownumbers:true,//序号   
								collapsible:false,//是否可折叠的   
								fit: true,//自动大小   
								pageSize: 10,//每页显示的记录条数，默认为10   
								pageList: [10],//可以设置每页记录条数的列表  
								url:PUBLIC_CONSTANT.URL.QUERY_GRID_URL,
	                            columns:[[
	                                {field:'ArcimDesc',title:'名称',width:400,sortable:true},
					                {field:'ArcimRowID',title:'ID',width:120,sortable:true},
					                {field:'selected',title:'ID',width:120,sortable:true,hidden:true}
	                             ]],
								 keyHandler:{
									up: function () {
						                var selected = $(this).combogrid('grid').datagrid('getSelected');
						                if (selected) {
						                    var index = $(this).combogrid('grid').datagrid('getRowIndex', selected);
						                    if (index > 0) {
						                        $(this).combogrid('grid').datagrid('selectRow', index - 1);
						                    }
						                } else {
						                    var rows = $(this).combogrid('grid').datagrid('getRows');
						                    $(this).combogrid('grid').datagrid('selectRow', rows.length - 1);
						                }
						             },
						             down: function () {
						                var selected = $(this).combogrid('grid').datagrid('getSelected');
						                if (selected) {
						                    var index = $(this).combogrid('grid').datagrid('getRowIndex', selected);
						                    if (index < $(this).combogrid('grid').datagrid('getData').rows.length - 1) {
						                        $(this).combogrid('grid').datagrid('selectRow', index + 1);
						                    }
						                } else {
						                    $(this).combogrid('grid').datagrid('selectRow', 0);
						                }
						            },
						            left:function(){
										return false
									},
									right:function(){
										return false
									},            
									enter: function () { 
						                var selected = $(this).combogrid('grid').datagrid('getSelected');  
									    if (selected) { 
									      $(this).combogrid("options").value=selected.ArcimDesc;
									      var rows=ClassifyDetailGrid.datagrid("selectRow",editRow2).datagrid("getSelected");
									    }
						                $(this).combogrid('hidePanel');
										$(this).focus();
						            },
									query:function(q){
										var object1=new Object();
										object1=$(this)
										if (this.AutoSearchTimeOut) {
											window.clearTimeout(this.AutoSearchTimeOut)
											this.AutoSearchTimeOut=window.setTimeout(function(){ LoadItemData(q,object1);},400); 
										}else{
											this.AutoSearchTimeOut=window.setTimeout(function(){ LoadItemData(q,object1);},400); 
										}
										$(this).combogrid("setValue",q);
									}
                    			},
								onSelect: function (rowIndex, rowData){
									//debugger
									var rows=ClassifyDetailGrid.datagrid("selectRow",editRow2).datagrid("getSelected");
									rows.ARCIMDR=rowData.ArcimRowID
								},
								onClickRow: function (rowIndex, rowData){
									var rows=ClassifyDetailGrid.datagrid("selectRow",editRow2).datagrid("getSelected");
									rows.ARCIMDR=rowData.ArcimRowID
								}
                    		}
	        			  }
        			},
        			{field : 'NeedOutData',title : '需要外部数据（非医嘱数据）',hidden:true,
                           editor : {
                                type : 'checkbox',
                                options : {
                                    on : 'Y',
                                    off : ''
                                }
                            }
                     }
    			 ]];
		ClassifyDetailGrid=$("#classifyDetail").datagrid({  
			fit : true,
			width : 1500,
			border : false,
			striped : true,
			singleSelect : true,
			fitColumns : true,
			autoRowHeight : false,
			url : PUBLIC_CONSTANT.URL.QUERY_GRID_URL,
			loadMsg : '加载中..',  
			pagination : false,  //
			rownumbers : true,  //
			pageList : [50,100,200],
			columns :ClassifyDetailColumns,
	    	toolbar :ClassifyDetailToolBar,
			onSelect : function(rowIndex, rowData) {
			},
			onLoadSuccess:function(data){  
			},
			onClickRow:function(rowIndex, rowData){
			},
			onDblClickRow:function(rowIndex, rowData){
				if (editRow2!=undefined){
					$.messager.alert('提示',"只允许编辑一行数据");
					return
				}
				editRow2=rowIndex
				ClassifyDetailGrid.datagrid("beginEdit", rowIndex);
				
			},
			onBeforeLoad:function(queryParams){
				editRow2=undefined;
				queryParams.ClassName ='DHCDoc.DHCDocConfig.OrderClassify';
				queryParams.QueryName ='FindClassifyDetails';
				queryParams.Arg1 =function (){
					var rows = OrderClassifyGrid.datagrid("getSelections");
					if (rows.length<=0){
						return "";
					}
                	ClassifyCode=rows[rows.length-1].ClassifyCode;
                	return ClassifyCode;
				};
				queryParams.ArgCnt=1
			}
		});
		
	};
	function LoadItemData(q,obj1){
		var val = q //$('#Combo_Arcim').combogrid('getValue'); 
	    var queryParams = new Object();
		queryParams.ClassName ='DHCDoc.DHCDocConfig.ArcItemConfig';
		queryParams.QueryName ='FindAllItem';
		queryParams.Arg1 =val;
		queryParams.ArgCnt =1;
		var opts = obj1.combogrid("grid").datagrid("options");
		opts.url = PUBLIC_CONSTANT.URL.QUERY_GRID_URL;
		obj1.combogrid("grid").datagrid('load', queryParams);
	};
	function InitOrderKindGrid(){
		var OrderKindColumns=[[    
			{field:'RowID', hidden:true},  
	        {title:'标题',field:'Title',width:180,editor : {
				type : 'text',
				options : {
				}
			}},
	        {field:'ARCIMDR',hidden:true},
	        {title:'医嘱项名称',field:'ArcimDesc',width:180}
	    ]];
		var OrderKindBar = [
	    	{
	            text: '添加',
	            iconCls: 'icon-add',
	            handler: function() {
					var node = $('#OrderKind').treegrid('getSelected');
					var RowID="";
					if (node){
						RowID=node.RowID;
					}
					RowID=RowID.toString();
					if (RowID.indexOf("99999")>=0){
						$.messager.alert('提示',"请选中主节点添加或不选择行添加主节点");
						return
					}
					//添加医嘱项
					if (RowID!=""){
						var URL = "oeorder.orgfav.prefedit.csp?Type=add&OrderType=ARCIM&itemid=";
		                var result = window.showModalDialog(URL, "", "dialogHeight: " + (370) + "px; dialogWidth: " + (650) + "px");
		                if ((typeof result == "undefined") || (typeof result != 'object') || (result == null) || (result.Save == false)) {
		                    $.messager.alert('提示',"没有需要保存的医嘱项");
							return
		                }
		                var NewOrderType = result.NewOrderType;
		                var NewItemID = result.NewItemID;
		                $.ajax({
							type: 'POST',
				            dataType: 'json',
				            url: '../DHCDoc.DHCDocConfig.OrderClassify.cls',
				            async: false,
				            cache: false,
				            data: {
				                action: 'InserOrderKindSub',
				                MainRowID: RowID,
				                ARCIMDR:NewItemID,
                                MWToken:('undefined'!==typeof websys_getMWToken)?websys_getMWToken():""
				            },
							success: function (data){
								$('#OrderKind').treegrid("reload");
								editRow3="";
							},
							error : function (ret) {
								alert("err:" + ret);
							}
						}) 
					}else if ((typeof editRow3=="undefined")||(editRow3=="")){
						editRow3='9999999999';
						$('#OrderKind').treegrid('append',{
							parent: parent,
							data: [{
								RowID:editRow3,
								Title: ''
							}]
						})
						$('#OrderKind').treegrid('beginEdit',editRow3);
					}
	            }
            },"-",{
				text: '保存',
	            iconCls: 'icon-save',
	            handler: function() {
		            
		            if (!editRow3){
			        	return
			        }
		            $('#OrderKind').treegrid('endEdit',editRow3);
		            var EditData=$('#OrderKind').treegrid('find',editRow3);
		            if (!EditData){return}
		            if (EditData.Title.length>10){
				    	$.messager.alert("标题过长")
				    	return
				    }
		            $.ajax({
						type: 'POST',
			            dataType: 'json',
			            url: '../DHCDoc.DHCDocConfig.OrderClassify.cls',
			            async: false,
			            cache: false,
			            data: {
			                action: 'InserOrderKindMain',
			                MainRowID: EditData.RowID,
			                Title: EditData.Title,
                            MWToken:('undefined'!==typeof websys_getMWToken)?websys_getMWToken():""
			            },
						success: function (data){
							$('#OrderKind').treegrid("reload");
							editRow3="";
						},
						error : function (ret) {
							alert("err:" + ret);
						}
					}) 
	            }
			},"-",{
				text: '删除',
	            iconCls: 'icon-remove',
	            handler: function() {
			        var node = $('#OrderKind').treegrid('getSelected');
					if (!node){
						alert("请选择需要编辑的行");
						return
					}
					var RowID=node.RowID;
					if (confirm("确认删除吗？")) {
						$.ajax({
							type: 'POST',
						    dataType: 'json',
						    url: '../DHCDoc.DHCDocConfig.OrderClassify.cls',
						    async: false,
						    cache: false,
						    data: {
						        action: 'DelOrderKind',
						        RowID: RowID,
                                MWToken:('undefined'!==typeof websys_getMWToken)?websys_getMWToken():""
						    },
							success: function (data){
								$('#OrderKind').treegrid("reload");
								EditRowID="";
							},
							error : function (ret) {
								alert("err:" + ret);
							}
						}) 
					}
	            }
			}
		];
		
		$('#OrderKind').treegrid({
		    url:'../DHCDoc.DHCDocConfig.OrderClassify.cls?action=LoadOrderKind',
		    idField:'RowID',    
		    treeField:'Title',
		    fit : true,
		    border: false,   
		    toolbar :OrderKindBar,
		    columns:OrderKindColumns,
		    onDblClickRow :function(node){
				var RowID=node.RowID;
				if (editRow3 && editRow3!=""){
					alert("正在编辑行，请先保存。");
					return;
				}
				
				var ARCIMDR=node.ARCIMDR;
				
				//添加医嘱项
				if (ARCIMDR!=""){
					var URL = "oeorder.orgfav.prefedit.csp?Type=edit&OrderType=ARCIM&itemid="+ARCIMDR;
	                var result = window.showModalDialog(URL, "", "dialogHeight: " + (370) + "px; dialogWidth: " + (650) + "px");
	                if ((typeof result == "undefined") || (typeof result != 'object') || (result == null) || (result.Save == false)) {
	                    $.messager.alert('提示',"无效的医嘱项");
						return
	                }
	                var NewOrderType = result.NewOrderType;
	                var NewItemID = result.NewItemID;
	                var MainRowID=RowID.split("99999")[0];
	                var SubIndex=RowID.split("99999")[1];
	                $.ajax({
						type: 'POST',
			            dataType: 'json',
			            url: '../DHCDoc.DHCDocConfig.OrderClassify.cls',
			            async: false,
			            cache: false,
			            data: {
			                action: 'InserOrderKindSub',
			                MainRowID: MainRowID,
			                SubIndex:SubIndex,
			                ARCIMDR:NewItemID,
                            MWToken:('undefined'!==typeof websys_getMWToken)?websys_getMWToken():""
			            },
						success: function (data){
							$('#OrderKind').treegrid("reload");
							editRow3="";
						},
						error : function (ret) {
							alert("err:" + ret);
						}
					}) 
				}else{
					editRow3=RowID;
					$('#OrderKind').treegrid('beginEdit',editRow3);
					
				}
			}
		});
	}
   </SCRIPT>
  
</body>

</html>