
<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
	i ##Class(websys.SessionEvents).SessionExpired() q 1
	q 1
</csp:method>

<script language="cache" runat="server">
	s start = $Get(%request.Data("start",1))
	s limit = $Get(%request.Data("limit",1))
	
	s sortField = $Get(%request.Data("sort",1))
	s sortDir = $Get(%request.Data("dir",1))
	
	s searchField = $Get(%request.Data("searchfield",1))
	s searchValue = $Get(%request.Data("searchvalue",1))
	
	s action=$Get(%request.Data("action",1))
	s type=$Get(%request.Data("type",1))
	
	s month=$Get(%request.Data("month",1))
	s locDr=$Get(%request.Data("locDr",1))
	s rowid=$Get(%request.Data("rowid",1))
	s fromLocName=$Get(%request.Data("fromLocName",1))
	s costItemName=$Get(%request.Data("costItemName",1))
	s recname=$Get(%request.Data("recname",1))
	s subjdr=$Get(%request.Data("subjdr",1))
	s order=$Get(%request.Data("order",1))
	
	s code=$Get(%request.Data("code",1))
	s name=$Get(%request.Data("name",1))
	s end=$Get(%request.Data("end",1))
	s remark=$Get(%request.Data("remark",1))
	s active=$Get(%request.Data("active",1))
	s id=$Get(%request.Data("id",1))
	s repdr=$Get(%request.Data("repdr",1))
	s itemTypeDr=$Get(%request.Data("itemTypeDr",1))
	s itemDr=$Get(%request.Data("itemDr",1))
	s parRef=$Get(%request.Data("parRef",1))	
	
	s str=$Get(%request.Data("query",1))
	s dataType=$Get(%request.Data("dataType",1))
	s remark= $Get(%request.Data("remark",1))
	

	i action="list" d
	.w ##class(dhc.bonus.uextend.uTargetLeveSet).ListRec(id)	
	
	i action="listhosp" d
	.w ##class(dhc.bonus.uextend.uTargetLeveSet).ListRec(id)	
	
	i action="listitemtype" d
	.w ##class(dhc.bonus.uextend.uDataItemTypes).ListRec(searchField,searchValue,sortField,sortDir,start,limit,"Y")
	
	i action="listsub" d
	.w ##class(dhc.bonus.uextend.uTargetLeveSet).RListRec(searchField,searchValue,sortField,sortDir,start,limit,id,"")	
	
	///////////////////////
	i action="listloc" d
	.w ##class(dhc.bonus.uextend.uTargetLeveSet).GetItems(dataType,start,limit,str)	
	///////////////////////////
	
	i action="listlast" d
	.w ##class(dhc.bonus.uextend.uTargetLeveItem).ListRec(searchField,searchValue,sortField,sortDir,start,limit,id)	
	
	i action = "add" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveSet).InsertRec(code, name, remark, active, "", id,order)
	.i result = 0 d
	..w "{success:'true',info:''}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	i action = "addloc" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveItem).InsertRec(itemDr ,itemTypeDr, id, order,remark)
	.i result = 0 d
	..w "{success:'true',info:''}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	i action = "checkexist" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveItem).CheckExist(itemDr,id,dataType)
	.i result = 0 d
	..w "{success:'true',info:''}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	i action = "check" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveSet).CheckRec(id)
	.i result = "N" d
	..w "{success:'true',info:''}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	i action = "edit" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveSet).UpdateRec(id, code, name, remark, end, active,order)
	.i result = 0 d
	..w "{success:'true',info:''}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	i action = "editloc" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveItem).UpdateRec(itemDr ,itemTypeDr, id, parRef, order,remark)
	.i result = 0 d
	..w "{success:'true',info:''}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	
	i action = "delloc" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveItem).DelRec(id)
	.i result '= 0 d
	..w "{success:'true',info:'"_result_"'}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
	
	i action = "copy" d
	.s result = ##class(dhc.bonus.uextend.uTargetLeveSet).CopyLevels(id)
	.i result = 0 d
	..w "{success:'true',info:'"_result_"'}"
	.e  d
	..w "{success:'false',info:'"_result_"'}"
</script>