<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="20" zv="Cache for Windows (Intel) 5.2.3 (Build 710U)" ts="2010-09-08 16:18:29">
<Class name="web.DHCHM.Abstract">
<Description>
名称: web.DHCHM.Abstract
描述: 所有类的抽象父类
编写者：wuqk
编写日期: 2010-03-24</Description>
<Abstract>1</Abstract>
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeCreated>61811,55391.68503</TimeCreated>

<Parameter name="SEPARATE">
<Description>
默认分隔符</Description>
<Default>^</Default>
</Parameter>

<UDLText name="T">
<Content><![CDATA[
//Projection MyProjection As %Projection.Java(ROOTDIR = "d:\temp\java");

]]></Content>
</UDLText>
</Class>


<Class name="web.DHCHM.ClassMethodService">
<Description>
运行类方法
编写者：wuqk
2010-5-2</Description>
<Import>SQLUser</Import>
<Super>web.DHCHM.Abstract</Super>
<TimeCreated>61848,74053.817327</TimeCreated>

<Method name="StaticObject">
<Description>
w ##class(web.DHCHM.ClassMethodService).StaticObject("web.web.DHCHMAdmLogCtl")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>strClassName</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s cdef = ##class(%Dictionary.ClassDefinition).%OpenId(strClassName)
	s ret=""
	s ret=ret_ "var objTmp = { aafn : function(){return true;}"_$c(13)_$c(10)
	s ind=$I(^web.DHCHM.ClassMethodService)
	s ^web.DHCHM.ClassMethodService(ind)=strClassName
	s intMethodCnt=cdef.Methods.Count()
	f i=1:1:intMethodCnt  d
	.s strMethodName=$tr(cdef.Methods.GetAt(i).Name,"%","_") //处理函数中包含“%”的情况 ADD By LiYang 2010-4-17
	.s strReturnType=cdef.Methods.GetAt(i).ReturnType
	.s ret=ret_","_strMethodName_" : function(){"_$c(13)_$c(10)
	.s ret=ret_"return ExtTool.RunServerMethod1('"_strClassName_"','"_strMethodName_"',arguments);"_$c(13)_$c(10)
	.s ret=ret_"}"_$c(13)_$c(10)
	s ret=ret_"};"
	d cdef.%Close()
	k cdef
	q ret
]]></Implementation>
</Method>

<Method name="RunClassMethod">
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName,MethodName,Arg...</FormalSpec>
<Implementation><![CDATA[
	 s ret=$ZOBJCLASSMETHOD(ClassName,MethodName,Arg...)

	 i $IsObject(ret)=0  d
	 .i $l(ret,$c(0))=1  d
	 ..s ret="<RESULT>OK</RESULT>"_ret
	 .e  d
	 ..s ret=$p(ret,$c(0),2)
	 e  d
	 .i ret.%ClassName(1)="%Library.ListOfObjects"  d
	 ..s retStr="<RESULT>OK</RESULT>["_$c(13)_$c(10)
	 ..s intCnt=ret.Count()
	 ..f i=1:1:intCnt  d
	 ...s tmpObj=ret.GetAt(i)
	 ...s retStr=retStr_..SerializeObject(tmpObj)
	 ...s:i<intCnt retStr=retStr_","_$c(13)_$c(10)
	 ..d ret.%Close()
	 ..k ret
	 ..s ret=retStr_"]"
	 .e  d
	 ..s tmp="<RESULT>OK</RESULT>"_..SerializeObject(ret)
	 ..d ret.%Close()
	 ..k ret
	 ..s ret=tmp
	 
     q ret
]]></Implementation>
</Method>

<Method name="ReplaceString">
<ClassMethod>1</ClassMethod>
<FormalSpec>Str,OldStr,NewStr</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set intCounter = 1
	while (1)
	{
		set tmp =$e(Str, intCounter, intCounter + $l(OldStr) - 1) 
		if (tmp = OldStr)
		{
			 set $e(Str, intCounter, intCounter + $l(OldStr) - 1) = NewStr
			 set intCounter = intCounter + $l(NewStr) - $l(OldStr)
		}
		quit:intCounter>=$l(Str)
		set intCounter = intCounter + 1
	}
	quit Str
]]></Implementation>
</Method>

<Method name="SerializeObject">
<ClassMethod>1</ClassMethod>
<FormalSpec>obj</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s cdef = ##class(%Dictionary.ClassDefinition).%OpenId(obj.%ClassName(1))
	s RowID=""
	s:cdef.Storages.Count()>0 RowID=obj.%Id() //Add By LiYang 2010-4-17 处理没有存储的对象
	s ret="<ResultObject>var objTmp = {"_$c(13)_$c(10)_"RowID : '"_RowID_"'"
	s intPropertyCnt=cdef.Properties.Count()
	f i=1:1:intPropertyCnt  d
	.s ret=ret_","_$c(13)_$c(10)
	.s strPropertyName=cdef.Properties.GetAt(i).Name
	.s strType=cdef.Properties.GetAt(i).Type
	.s expression="s %strValue=obj."_strPropertyName
	.x expression
	.s:strType="%Date" %strValue=$zd(%strValue,3)
	.s:strType="%Time" %strValue=$zt(%strValue,1)
	.s strValue=..ReplaceString(%strValue,$c(13),"\r")
	.s strValue=..ReplaceString(%strValue,$c(10),"\n")
	.s strValue=..ReplaceString(%strValue,"'","\'")
	.s ret=ret_strPropertyName_":'"_%strValue_"'"
	s ret=ret_"};"
	d cdef.%Close()
	k cdef
	q ret
]]></Implementation>
</Method>
</Class>


<Class name="web.DHCHM.ClassMethodServiceHelper">
<Description>
用来生成ClassMethodService.RunServerMethod的加密字符串</Description>
<Super>%CSP.Page</Super>
<TimeCreated>61850,77078.837625</TimeCreated>

<Parameter name="CHARSET">
<Default>utf-8</Default>
</Parameter>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	w ##class(%CSP.Page).Encrypt($LB("web.DHCHM.ClassMethodService.RunClassMethod"))
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="web.DHCHM.QueryService">
<Description>
编写者：wuqk
刷新Ext表格的表头</Description>
<Super>web.DHCHM.Abstract</Super>
<TimeCreated>61849,78596.469691</TimeCreated>

<Method name="GetQueryStore">
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName,QueryName</FormalSpec>
<Implementation><![CDATA[

	Set cdef = ##class(%Dictionary.ClassDefinition).%OpenId(ClassName)
 	set count = cdef.Queries.Count() 
 	s ret="var arryCol = "
 	s ret=ret_"["_$c(13)_$c(10)
 	F i=1:1:count  d
	.i (cdef.Queries.GetAt(i).Name=QueryName)  d
	..s rowSpec=cdef.Queries.GetAt(i).Parameters.GetAt("ROWSPEC")
	..f cnt=1:1:$l(rowSpec,",")  d
	...s col=$p(rowSpec,",",cnt)
	...s:cnt>1 ret=ret_","
	...s ret=ret_"{name: '"_$p(col,":",1)_"',mapping: '"_$p(col,":",1)_"'}"_$c(13)_$c(10)
	..s ret=ret_"];"
 	d cdef.%Close()
 	k cdef	
 	q ret
]]></Implementation>
</Method>

<Method name="GetQueryGridHeaderDeclare">
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName,QueryName</FormalSpec>
<Implementation><![CDATA[

	Set cdef = ##class(%Dictionary.ClassDefinition).%OpenId(ClassName)
 	set count = cdef.Queries.Count() 
 	s ret="var colModel = new Ext.grid.ColumnModel(["_$c(13)_$c(10)
 	s displayCnt=0
 	F i=1:1:count  d
	.i (cdef.Queries.GetAt(i).Name=QueryName)  d
	..s rowSpec=cdef.Queries.GetAt(i).Parameters.GetAt("ROWSPEC")
	..f cnt=1:1:$l(rowSpec,",")  d
	...s col=$p(rowSpec,",",cnt)
	...q:$p(col,":",3)=""
	...s:displayCnt>0 ret=ret_","
	...s ret=ret_"{header: '"_$p(col,":",3)_"',width: 80,dataIndex: '"_$p(col,":",1)_"', sortable: true}"_$c(13)_$c(10)
	...s displayCnt=displayCnt+1
	..s ret=ret_"]);"
 	d cdef.%Close()
 	k cdef	
 	q ret
]]></Implementation>
</Method>

<Method name="GetQueryGridHeaderList">
<Description>
Add By LiYang 2010-07-02 根据Query的声明，生成ExtJS中GridPanel的列声明</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName,QueryName</FormalSpec>
<Implementation><![CDATA[

	Set cdef = ##class(%Dictionary.ClassDefinition).%OpenId(ClassName)
 	set count = cdef.Queries.Count() 
 	s ret="var arryCols = ["_$c(13)_$c(10)
 	s displayCnt=0
 	F i=1:1:count  d
	.i (cdef.Queries.GetAt(i).Name=QueryName)  d
	..s rowSpec=cdef.Queries.GetAt(i).Parameters.GetAt("ROWSPEC")
	..f cnt=1:1:$l(rowSpec,",")  d
	...s col=$p(rowSpec,",",cnt)
	...q:$p(col,":",3)=""
	...s:displayCnt>0 ret=ret_","
	...s ret=ret_"{header: '"_$p(col,":",3)_"',width: 80,dataIndex: '"_$p(col,":",1)_"', sortable: true}"_$c(13)_$c(10)
	...s displayCnt=displayCnt+1
	..s ret=ret_"];"
 	d cdef.%Close()
 	k cdef	
 	q ret
]]></Implementation>
</Method>
</Class>
</Export>
