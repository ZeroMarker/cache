var e = window.event;
var PageLogicObj = {
    m_version: 8.1,
    m_ObjectTypeS: "",
    //医嘱增加到页面的方式:别名录入(LookUp),医嘱套/复制医嘱(ARCOS),医嘱常用(Usage)
    m_AddItemToListMethod: "LookUp",
    defaultDataGridtop: 0,
    //医嘱开始日期的默认日期格式: "3" 代表YYYY-MM-DD 或者 "4" 代表DD/MM/YYYY;默认为:DD/MM/YYYY
    defaultDataCache: tkMakeServerCall("websys.Conversions","DateFormat"),
	FocusRowIndex: 0,
    isComboEnable: true
}

function ResizeGridWidthHeiht(eventName) {
    var ActiveWidth = CalGridWidth();
    $('#Order_DataGrid').setGridWidth(ActiveWidth)
    var ActiveHeight = CalGridHeight(eventName);
    $('#Order_DataGrid').setGridHeight(parseInt(ActiveHeight));
}

function CalGridWidth() {
    //宽度控制 无法自适应  根据工具栏DIV初始化宽度控制
    var gridWidthMax1, gridWidthMin;
    var northDIVMax = $("#layout_main_center_north").innerWidth();
    //gridWidthMax1=northDIVMax+14;
    gridWidthMax1 = northDIVMax;
    gridWidthMin = northDIVMax - 385;
    if (GlobalObj.layoutConfig == 2) {
        //var ButtonListW=$("#ButtonList").outerWidth();
        var ButtonListW = $("#layout2_south").outerWidth();
        gridWidthMax1 = parseInt(ButtonListW);
    }
    return gridWidthMax1
}

function CalGridHeight(eventName) {
    var gridHeightMax;
    var centerHeight = $("#layout_main_center").innerHeight();
    var northH = $("#layout_main_center_north").innerHeight();
    var BtnDivH = $("#handle_BtnDiv").outerHeight();
    var southH = $("#layout_main_south").outerHeight();

    //表格高度基于页面初始化的默认高度的偏移量,需要在高度中减去
    var offSetHeight = $('#Order_DataGrid').offset().top - parseFloat(PageLogicObj.defaultDataGridtop);
    var SouthObj = $('#layout_main').layout('panel', 'south').panel('options');
    var collapsed = SouthObj.collapsed;
    if (collapsed) {
        gridHeightMax = (parseInt(centerHeight) - parseInt(northH) - parseInt(BtnDivH) - offSetHeight - 54);
    } else {
        //需要区分是展开事件方法,还是其他布局变动,如果是展开事件方法,需要减;因为此时在Center布局中还包括south的高度
        //反之则不减
        //54高度为模板展开条,39高度为模板收起条
        if (eventName == "Expand") {
            gridHeightMax = (parseInt(centerHeight) - parseInt(northH) - parseInt(BtnDivH) - parseInt(southH) - offSetHeight - 39);
        } else {
            gridHeightMax = (parseInt(centerHeight) - parseInt(northH) - parseInt(BtnDivH) - offSetHeight - 54);
        }

    }

    //分辨率不同，使用不通过的调整数量
    var RPHeight = window.screen.height;
    var AdjustHeight = 0;
    if (RPHeight != 768) AdjustHeight = (RPHeight / 768) * 10;
    if (GlobalObj.PAAdmType != "I") {
        gridHeightMax = parseInt(gridHeightMax) + 12 + AdjustHeight;
    } else {

        gridHeightMax = parseInt(gridHeightMax) + 7 + AdjustHeight;
    }

    if (GlobalObj.layoutConfig == 2) {
        var layout2southH = $("#layout2_south").innerHeight();
        var ButtonListH = $("#ButtonList").outerHeight();
        gridHeightMax = parseInt(layout2southH) - parseInt(ButtonListH) - 25;
    }
    //alert(parseInt(centerHeight)+"@"+parseInt(northH)+"@"+parseInt(BtnDivH));
    return gridHeightMax;

}

$(window).load(function() {
    SetTimeLog("load", "start");
    $(window).resize(function() {
        window.setTimeout(function() { ResizeGridWidthHeiht("resize"); }, 250);
    });
    SetDefault();
    InitLayOut();
    //抗生素2
    AntLoad();
    /*
    //从医嘱单界面复制医嘱,转到oeorder.oplistcustom.show.js中处理
    if('undefined' !== typeof CopyOeoriDataArr){
    	AddCopyItemToList(CopyOeoriDataArr);
    }
    */
    SetTimeLog("load", "end");
});
//将事件定义放到ready中,对于easyui的异步处理,将初始化的逻辑代码放到页面加载完成之后的window.load()中,且提高速度
$(document).ready(function() {
    SetTimeLog("ready", "start");

    //************************布局操作--开始****************************//
    //表格高度控制
    PageLogicObj.defaultDataGridtop = $('#Order_DataGrid').offset().top;
    //监听
    $('#layout_main').layout('panel', 'south').panel({
        onCollapse: function() {
            //折叠响应函数
            //$('#Order_DataGrid').setGridHeight(gridHeightMax);
            ResizeGridWidthHeiht("Collapse");
        },
        onExpand: function() {
            //if(GlobalObj.layoutConfig=="1"){
            //展开响应函数
            //$('#Order_DataGrid').setGridHeight(gridHeightMin);
            //}
            //控制列表区展开 和折叠
            ContrlSouthLayout();
            //jQuery.parser.parse('#OrderList');
			ResizeGridWidthHeiht("Expand");			
        },
        onResize: function() {
            //大小改变响应函数
            //$.messager.alert("警告",'resize')
        }
    });
    //隐藏模版
    $("#OrderTemplate").hide("fast","swing",function (){ResizeGridWidthHeiht("resize");});

    //************************布局操作--结束****************************//

    //************************按钮操作--开始****************************//
    //UI设置
    $('#UIConfigImg').click(UIConfigHandler)
        //医嘱复制
    $('#Order_copy_btn').click(FindClickHandler);
    //检验检查勾选录入
    $('#Examine_check_btn').click(LnkLabPage_Click);
    //医嘱字典库录入
    $('#Dictionary_check_btn').click(BtnViewArcItemInfoHandler);
    //抗菌药物申请列表
    $('#Antibiotics_apply_btn').click(BtnShowViewAnditAnti);
    //常用模版维护
    $('#Template_maintain_btn').click(OrgFav_Click);
    //个人常用模板维护
    $('#OrgFav_User').click(OrgFav_User_Click);
    //科室常用模板维护
    $('#OrgFav_Location').click(OrgFav_Location_Click);
    //诊间预约
    $('#Appointment_btn').click(DoctorAppoint_Click);
    //卡消费
    $('#Card_pay_btn').click(CardBillClick);
    //添加 空白行 appendRow
    $('#Add_Order_btn').click(Add_Order_row);
    //删除
    $('#Delete_Order_btn').click(Delete_Order_row);
    //保存修改
    //$('#Save_Order_btn').click(Save_Order_row);
    //审核医嘱
    $('#Insert_Order_btn').bind("click", UpdateClickHandler);
    //个人模版
    $('#Personal_Template_Btn').click(OEPrefClickHandler);
    //科室模版
    $('#Departments_Template_Btn').click(OEPrefClickHandler);
    //表单编辑行
    $('#FormEdit_btn').click(FormEditRow);
    //关联 拆关联 按钮合并 程序做统一处理
    $('#ChangeOrderSeq_Btn').click(ChangeOrderSeqhandler);
    //关联 
    //$('#SetOrderSeq_Btn').click(SetSeqNohandler);
    //拆关联 
    //$('#ClearOrderSeq_Btn').click(ClearSeqNohandler);
    //医嘱类型下拉菜单选择
    $('#ShortOrderPrior').click(ChangeOrderPriorContrl);
    $('#LongOrderPrior').click(ChangeOrderPriorContrl);
    $('#DefaultOrderPrior').click(ChangeOrderPriorContrl);
    $('#OutOrderPrior').click(ChangeOrderPriorContrl);
    //打印导诊单
    $('#BtnPrtGuidPat').click(BtnPrtGuidPatHandler);
    //保存为医嘱套
    $('#SaveToArcos').click(SaveToArcos_Click);
    //保存到医嘱模板
	  $('#SaveToTemplate').click(SaveToTemplate_Click);
    //保存用户常用
    $('#SetSaveForUser').click(SetSaveForUserClickHandler);
    //点击列表和模版调用同一个函数
    $('#Orderlist_Btn').click(SetLayoutContrlValue);
    $('#OrderTemplate_Btn').click(SetLayoutContrlValue);
    //完成接诊
    //$('#FinshAdm_btn').click(FinishAdmitClickHandler);
    //相互作用
    $('#XHZY').click(XHZY_Click);
    // 药品说明书
    $('#YDTS').click(YDTS_Click);
    //处方打印
    $('#PrescriptBtn').click(PrescriptList);
    //治疗单打印
    $('#LabPrintBtn').click(LabPrintList);
    //停医嘱
    $('#StopOrderBtn').click(StopOrderItem);
    //一键打印
    $('#BtnPrtClick').click(BtnPrtClickHandler);
    //同步下面医嘱时间
    $('#SynBtn').click(SynBtnClickHandler);
    //知识库建议医嘱
    $('#AdviceOrder').click(AdviceOrder);
    //批量增加模板医嘱
    $('#Add_TemplOrder_btn').click(MultiTemplOrdEntry);
    $('#Up_Order_btn').click(SetUpToRowClickHandler);
	$('#Down_Order_btn').click(SetDownToRowClickHandler);
    document.onkeydown = Doc_OnKeyDown;

    //************************按钮操作--结束****************************//
    jQuery('#Template_tabs').tabs({ onSelect: function(title, index) { RedrawFavourites(index); } });
    //双击列头事件
    jQuery('#Order_DataGrid').closest('.ui-jqgrid-view').find('div.ui-jqgrid-hdiv').bind("dblclick", headerDblClick)
        //,医嘱录入输入别名后的框就可以跟着表格的滚动条移动
    $("#gview_Order_DataGrid .ui-jqgrid-bdiv").scroll(function() {
        if (ItemzLookupGrid && ItemzLookupGrid.store) {
            if (Ext.get(ItemzLookupGrid.lookupName)) ItemzLookupGrid.posiAndSizeResize();
        }
    });
    //$('#Order_DataGrid').bind("click",OrderDataGirdclick)
    SetTimeLog("ready", "end");

});

function StopOrd(rowids) {

    //电子签名
    var ContainerName = "";
    var caIsPass = 0;
    var CAInit = tkMakeServerCall("web.DHCDocSignVerify", "GetCAServiceStatus", session['LOGON.CTLOCID'], session['LOGON.USERID']);
    if (CAInit == 1) {
        if (GlobalObj.IsCAWin == "") {
            alert("请先插入KEY");
            return false;
        }
        var result = window.showModalDialog("../csp/oeorder.oplistcustom.caaudit.csp", window, "dialogWidth:300px;dialogHeight:250px;center:yes;toolbar=no;menubar:no;scrollbars:no;resizable:no;location:no;status:no;help:no;");
        if ((result == "") || (result == "undefined") || (result == null)) {
            return false;
        }
        ContainerName = result;
        caIsPass = 1;
    }
    var OrdList = ""
    for (var i = 0; i < rowids.length; i++) {
        var rowid = rowids[i]

        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderSeqNo = GetCellData(rowid, "id");

        var OrderStartDateStr = GetCellData(rowid, "OrderStartDate")
        if (OrdList == "") {
            OrdList = OrderItemRowid + "&" + OrderStartDateStr.split(" ")[0] + "&" + OrderStartDateStr.split(" ")[1];
        } else {
            OrdList = OrdList + "^" + OrderItemRowid + "&" + OrderStartDateStr.split(" ")[0] + "&" + OrderStartDateStr.split(" ")[1];
        }
    }

    //alert(OrderSeqNo+"@")
    if (OrdList == "") {
        alert("请选择需要停止的医嘱")
        return false
    }

    var OrdListStr = tkMakeServerCall("web.DHCOEOrdItem", "GetOrdList", OrdList)
    var rtn = cspRunServerMethod(GlobalObj.StopOrderMethod, "", "", OrdListStr, session['LOGON.USERID'], "", "N");
    var flag=rtn.split("^")[0];
    if (flag == "-200") {
        alert("存在已收费医嘱，不能删除")
        return false
    }else if (flag == "-2000") {
        alert(rtn.split("^")[1]+"有对应的申请单号,不能删除,请在申请界面取消申请!")
        return false
    }
    if ((flag == "0") && (caIsPass == 1)) var ret = SaveCASign(ContainerName, OrdList, "S");
    return flag + "###" + OrdListStr
}
//DocumentUnloadHandler
function test() {

}
//快捷键设置
$(document).keydown(function(e) {
    //e = window.event || e || e.which;
    //屏蔽F1快捷键
    window.onhelp = function() { return false };
    //F1 添加
    if (e.which == 112) {
        if (!$("#Add_Order_btn").attr("disabled")) {
            Add_Order_row();
        }
    }
    //F2 删除
    if (e.which == 113) {
        if (!$("#Delete_Order_btn").attr("disabled")) {
            Delete_Order_row();
        }
    }
});

//设置默认
function SetDefault() {
    if (GlobalObj.CopyPriorCodeRowid) {
        if (GlobalObj.CopyPriorCodeRowid == GlobalObj.ShortOrderPriorRowid) {
            $('#ShortOrderPrior').click();
        } else if (GlobalObj.CopyPriorCodeRowid == GlobalObj.LongOrderPriorRowid) {
            $('#LongOrderPrior').click();
        }
    } else {
        if (GlobalObj.INAdmTypeLoc != "Y") {
            //$('#ShortOrderPrior').click();
            $("#HiddenOrderPrior").val(GlobalObj.ShortOrderPriorRowid);
        } else {
            $('#LongOrderPrior').click();
        }
    }

    $('#Insert_Order_btn').css({ "color": "#006699", "font-weight": "bold" });
    $('#OrderTemplate_Btn').css({ "color": "#006699", "font-weight": "bold" });

}
//点击按钮只做展开或者折叠动作
function SetLayoutContrlValue(e) {
    var lastLayout = $("#LayoutContrl").val();
    var nowLayout = this.id.split("_")[0];
    //$.messager.alert("警告",lastLayout+"^"+this.id);

    //  $('p').addClass('classadd classadd1');//添加样式
    //  $('p').removeClass('classadd1'); //删除指定名称的样式
    $('#Orderlist_Btn').css({ "color": "", "font-weight": "" });
    $('#OrderTemplate_Btn').css({ "color": "", "font-weight": "" });
    //改变颜色 当前选中  red blue
    $('#' + this.id).css({ "color": "#006699", "font-weight": "bold" });


    //设置隐藏元素值
    $("#LayoutContrl").val(nowLayout);
    //布局设置 layoutConfig
    //alert(GlobalObj.layoutConfig)
    if (GlobalObj.layoutConfig == "1") { //医嘱单在下
        //如果医嘱单显示设置窗口显示
        if (UIConfigObj.ShowList2 == true && nowLayout == "Orderlist") {
            //取配置 医嘱单列表显示 还是 窗口显示
            //UIConfigObj.ShowList2==true -> 窗口显示  UIConfigObj.ShowList1==true -> 列表显示
            ContrlOrderWindow();
        } else {
            //获取south区域显示状态
            var collapsed = $('#layout_main').layout('panel', 'south').panel('options').collapsed;
            if (collapsed == true) {
                $('#layout_main').layout('expand', 'south');
            } else {
                if (lastLayout == nowLayout) {
                    $('#layout_main').layout('collapse', 'south');
                } else {
                    //展开状态时 切换按钮
                    $('#layout_main').layout('expand', 'south');
                    ContrlSouthLayout();
                }
            }
        }
    } else {
        //如果<列表>按钮不存在,则可以通过<医嘱模板>这一个按钮切换模板和列表
        var ShowType = "";
        if (!document.getElementById('Orderlist_Btn')) {
            if (this.value.indexOf('模版') != -1) {
                ShowType = "OrderTemplate";
                this.value = "    医嘱列表";
            } else {
                ShowType = "OrderList";
                this.value = "    医嘱模版";
            }
        }

        if (ShowType == "OrderList") {
            $("#OrderList").show("fast","swing",function (){ResizeGridWidthHeiht("resize");});
            $("#OrderTemplate").hide("fast","swing",function (){ResizeGridWidthHeiht("resize");});
            var HiddenOrderPrior = $("#HiddenOrderPrior").val();
            //医嘱列表只有长期和临时,如果不是选择默认优先级不是长期,就显示临时
            //if (HiddenOrderPrior!="LongOrderPrior") HiddenOrderPrior="ShortOrderPrior";
            ContrlOrderListShow(HiddenOrderPrior);
        } else {
            //医嘱单位置显示医嘱模版
            //var color=$('#DefaultOrderPrior').css("color","#000000");
            //var color=$('#ShortOrderPrior').css("color","#000000");
            //var color=$('#LongOrderPrior').css("color","#000000");
            //var color=$('#OutOrderPrior').css("color","#000000");
            //var color=$('#OrderTemplate_Btn').css("color","#000000");
            //$.messager.alert("警告","显示模版 影藏医嘱单");
            var HiddenOrderPrior = $("#HiddenOrderPrior").val();
            //$.messager.alert("警告",HiddenOrderPrior);
            $("#OrderList").hide("fast","swing",function (){ResizeGridWidthHeiht("resize");});
            $("#OrderTemplate").show("fast","swing",function (){ResizeGridWidthHeiht("resize");});
            $.parser.parse('#ListAddTemplate');
            $.parser.parse('#OrderTemplate');
            //$.parser.parse('#Template_center');	
            //$.parser.parse('#Template_tabs');
            var obj = jQuery('#Template_tabs');
            /*
            选中第2个 tab
            obj.tabs('select',1);
            obj.tabs('select',0);
            */
            //重新选择科室模版 刷新即可
            $('#Departments_Template_Btn').click();
            /*
            var oneobj = obj.tabs('getTab',0);
            var id=oneobj.panel('options').id;
            $.messager.alert("警告",id);
            $.parser.parse('#'+id);

            */
        }
    } 

}
//控制展开后显示内容
function ContrlSouthLayout() {
    //取显示控制值
    var nowLayout = $("#LayoutContrl").val();
    //取全局医嘱类型
    var nowOrderPrior = $("#HiddenOrderPrior").val();
    //布局显示配置 layoutConfig
    if (GlobalObj.layoutConfig == "1") {
        if (nowLayout == "Orderlist") {
            //取配置 医嘱单列表显示 还是 窗口显示
            //UIConfigObj.ShowList2==true -> 窗口显示  UIConfigObj.ShowList1==true -> 列表显示
            if (UIConfigObj.ShowList2 == true) {

            } else {
                //影藏模版
                $('#OrderTemplate').hide("fast","swing",function (){ResizeGridWidthHeiht("resize");});
                //显示列表
                $('#Orderlist').show("fast","swing",function (){ResizeGridWidthHeiht("resize");});
                if (nowOrderPrior == "ShortOrderPrior") {
                    //显示临时医嘱单
                    ContrlOrderListShow("ShortOrderPrior");
                } else if (nowOrderPrior == "LongOrderPrior") {
                    //显示长期医嘱单
                    ContrlOrderListShow("LongOrderPrior");
                } else if (nowOrderPrior == "OutOrderPrior") {
                    //显示临时医嘱单
                    ContrlOrderListShow("OutOrderPrior");
                } else {
                    //显示全部
                    //$.messager.alert("警告","显示全部医嘱单");
                }
            }
        } else {
            //影藏列表
            $('#Orderlist').hide("fast","swing",function (){ResizeGridWidthHeiht("resize");});
            //显示模版
            $('#OrderTemplate').show("fast","swing",function (){ResizeGridWidthHeiht("resize");});
            //第一次是否需要重新渲染才能显示正常
            //$.parser.parse('#OrderTemplate');
            //$.parser.parse('#Template_center');	
            //$.parser.parse('#Template_tabs');
            //重新展开就会渲染
            $('#layout_main').layout('expand', 'south');
        }
    } else {
        //布局显示2 展开响应


    }

}
//传入医嘱类型字符 控制医嘱单显示
function ContrlOrderListShow(OrderPrior) {
    //OrderList
    var src = "";
    if (GlobalObj.isNurseLogin == "1") {
	    src = "dhcdoc.orderviewnurse.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + OrderPrior;
	}else{
		src = "dhcdoc.orderviewdoctor.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + OrderPrior;
	}
    if ((OrderPrior == "ShortOrderPrior") || (OrderPrior == "OutOrderPrior")) {
        /*var src = ""
        if (GlobalObj.isNurseLogin == "1") {
            //护士 
            src = "dhcdoc.sosordernurse.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + OrderPrior;
        } else {
            //医生
            src = "dhcdoc.sosorderdoctor.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + OrderPrior;
        }*/
        //每次切换都重新加载刷新
        if ($("#sosorderdoctor").length == 0) {
            $("#prnorderdoctor").remove();
            $("#sosorderdoctor").remove();

            $("#OrderList").append("<iframe id='sosorderdoctor' width='100%' height='99%' src='" + src + "'></iframe>");
        } else {
            //$.messager.alert("警告","刷新");
            //是否自动刷新医嘱单可以做成配置(以下情况会刷新：1.切换列表和模版 2.审核医嘱)
            $("#sosorderdoctor").attr("src", src);
        }
    } else if (OrderPrior == "LongOrderPrior") {
        /*var src = ""
        if (GlobalObj.isNurseLogin == "1") {
            //护士
            src = "dhcdoc.prnordernurse.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID;
        } else {
            //医生
            src = "dhcdoc.prnorderdoctor.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID;
        }*/
        if ($("#prnorderdoctor").length == 0) {
            $("#sosorderdoctor").remove();
            $("#prnorderdoctor").remove();
            $("#OrderList").append("<iframe id='prnorderdoctor' width='100%' height='99%' src='" + src + "'></iframe>");
        } else {
            //$.messager.alert("警告","刷新");
            $("#prnorderdoctor").attr("src", src);
        }
    } else {
        $("#sosorderdoctor").remove();
        $("#prnorderdoctor").remove();
    }
}
//控制医嘱单窗口显示
function ContrlOrderWindow() {

    //取全局医嘱类型
    var nowOrderPrior = $("#HiddenOrderPrior").val();
    var title = "窗口";
    var iframe = "";
    var src = "";
    if (GlobalObj.isNurseLogin == "1") {
	    src = "dhcdoc.orderviewnurse.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + nowOrderPrior;
	}else{
		src = "dhcdoc.orderviewdoctor.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + nowOrderPrior;
	}
    if ((nowOrderPrior == "ShortOrderPrior") || (nowOrderPrior == "OutOrderPrior")) {
        title = "临时医嘱";
        if (nowOrderPrior == "OutOrderPrior") {
            title = "出院带药";
        }
        /*var src = ""
        if (GlobalObj.isNurseLogin == "1") {
            //护士
            src = "dhcdoc.sosordernurse.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + nowOrderPrior;
        } else {
            //医生
            src = "dhcdoc.sosorderdoctor.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&OrderPriorType=" + nowOrderPrior;
        }*/
        iframe = "<iframe id='sosorderdoctor' width='100%' height='99%' src='" + src + "'></iframe>";
    } else if (nowOrderPrior == "LongOrderPrior") {
        title = "长期医嘱";
        /*var src = ""
        if (GlobalObj.isNurseLogin == "1") {
            //护士
            src = "dhcdoc.prnordernurse.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID;
        } else {
            //医生
            src = "dhcdoc.prnorderdoctor.csp?LayoutControl=NewOrderEntry&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID;
        }*/
        iframe = "<iframe id='prnorderdoctor' width='100%' height='99%' src='" + src + "'></iframe>";
    } else {
        //关闭窗口
        /*
        $("#sosorderdoctor").remove();
        $("#prnorderdoctor").remove();
        $('#OrderListWindow').window('close');
        */
    }
    if (iframe != "") {
        $('#OrderListWindow').window({
            title: title,
            width: 900,
            height: 440,
            zIndex: 9999,
            iconCls: 'icon-save',
            inline: false,
            minimizable: false,
            maximizable: true,
            collapsible: true,
            closable: true,
            top: 35,
            left: 300,
            onBeforeClose: function() { //当面板关闭之前触发的事件
                //关闭窗口去掉医嘱单 
                $("#sosorderdoctor").remove();
                $("#prnorderdoctor").remove();
                /*
　　　　　　			if (dhcsys_confirm('窗口正在关闭，请确认您当前的操作已保存。\n 是否继续关闭窗口？')) { 
　　　　　　　　			$('#OrderListWindow').window('close', true); 
						//这里调用close 方法，true 表示面板被关闭的时候忽略onBeforeClose 回调函数。 
　　　　　　			} else{
							return false; 
						}
						*/
                　　　　　　　　　　
            }
        });
        $('#OrderListWindow').window('open');
        //$('#OrderListWindow').window('close');
        $("#sosorderdoctor").remove();
        $("#prnorderdoctor").remove();
        $("#OrderListWindow").append(iframe);
    }
}

//审核医嘱后刷新医嘱单
function RefreshOderList() {
    var collapsed = $('#layout_main').layout('panel', 'south').panel('options').collapsed;
    var lastLayout = $("#LayoutContrl").val();
    var nowOrderPrior = $("#HiddenOrderPrior").val();
    //布局设置 layoutConfig
    if (GlobalObj.layoutConfig == "1") {
        //医嘱单展开状态时刷新  && lastLayout=="Orderlist"
        if (collapsed == false) {
            ContrlOrderListShow(nowOrderPrior);
        }
    } else {
        //医嘱列表只有长期和临时,如果不是选择默认优先级不是长期,就显示临时
        if (HiddenOrderPrior != "LongOrderPrior") HiddenOrderPrior = "ShortOrderPrior";
        ContrlOrderListShow(nowOrderPrior);
    }

}

function UIConfigHandler() {
    var UIConfigImgURL = "oeorder.oplistcustom.config.csp"
    window.open(UIConfigImgURL, "", "status=1,scrollbars=1,top=100,left=100,width=760,height=420");
}
//获取所有未审核的医嘱行ID
function GetNewOrderIDS() {
    var rowids = GetAllRowId();
    var RowIdArry = new Array();
    for (var i = 0; i < rowids.length; i++) {
        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        if (OrderItemRowid != "" || OrderARCIMRowid == "") { continue; }
        RowIdArry[RowIdArry.length] = rowids[i]
    }
    return RowIdArry;
}

function ChangeOrderPriorContrl(e) {
    var OrderPriorID = this.id;
    //设置隐藏元素值
    $("#HiddenOrderPrior").val(OrderPriorID);
    //改变颜色 全部还原默认  #000000
    var color = $('#DefaultOrderPrior').css({ "color": "", "font-weight": "" });
    var color = $('#ShortOrderPrior').css({ "color": "", "font-weight": "" });
    var color = $('#LongOrderPrior').css({ "color": "", "font-weight": "" });
    var color = $('#OutOrderPrior').css({ "color": "", "font-weight": "" });
    var color = $('#OrderTemplate_Btn').css({ "color": "", "font-weight": "" });
    //改变颜色 当前选中  red blue #006699
    $('#' + OrderPriorID).css({ "color": "#006699", "font-weight": "bold" })

    //改为ID 判断
    var HiddenOrderPrior = $("#HiddenOrderPrior").val();
    //配置
    var Updateflag = GlobalObj.CFSwithGlobalPriorUpdate;
    var SUCCESS = false;
    //检查是否有新开医嘱
    var RowIdArry = GetNewOrderIDS();
    if (RowIdArry.length > 0) {
        if (Updateflag == "1" && dhcsys_confirm("将要切换全局医嘱类型,是否审核未保存医嘱？")) {
            if (GlobalObj.warning != "") {
                dhcsys_alert(GlobalObj.warning);
                return false;
            }
            //切换全局医嘱类型是否必须审核已开医嘱	
            SUCCESS = UpdateClickHandler();
        } else {
            SUCCESS = true;
        }
    } else {
        SUCCESS = true;
    }
    //$.messager.alert("警告",SUCCESS);
    //医嘱类型切换控制
    if (SUCCESS != true) { return; }

    //var OrderPrior=$('#PriorType').text();
    var PriorRowid = "";
    if (HiddenOrderPrior == "ShortOrderPrior") {

        $('#PriorType').menubutton({
            text: "临时医嘱"
        });
        PriorRowid = GlobalObj.ShortOrderPriorRowid;
    } else if (HiddenOrderPrior == "LongOrderPrior") {

        $('#PriorType').menubutton({
            text: "长期医嘱"
        });
        PriorRowid = GlobalObj.LongOrderPriorRowid;
    } else if (HiddenOrderPrior == "OutOrderPrior") {

        $('#PriorType').menubutton({
            text: "出院带药"
        });
        PriorRowid = GlobalObj.OutOrderPriorRowid;
    } else {
        $('#PriorType').menubutton({
            text: "医嘱类型"
        });
        PriorRowid = GlobalObj.DefaultOrderPriorRowid;
    }
    //设置当前最后一行
    var rowid = GetPreRowId();
    if (CheckIsClear(rowid) == true) {
        //设置医嘱类型
        SetOrderPrior(rowid, PriorRowid);
    }
    //医嘱单显示控制
    if (GlobalObj.layoutConfig == "1") {
        if (UIConfigObj.ShowList2 == true) {
            //取配置 医嘱单列表显示 还是 窗口显示
            //UIConfigObj.ShowList2==true -> 窗口显示  UIConfigObj.ShowList1==true -> 列表显示
            if ($("#sosorderdoctor").length != 0 || $("#prnorderdoctor").length != 0) {
                ContrlOrderWindow();
            }
        } else {
            //获取south区域显示状态
            var collapsed = $('#layout_main').layout('panel', 'south').panel('options').collapsed;
            var lastLayout = $("#LayoutContrl").val();
            //医嘱单为展开状态
            if (collapsed == false && lastLayout == "Orderlist") {
                if (OrderPriorID == "ShortOrderPrior") {
                    //显示临时医嘱单
                    ContrlOrderListShow("ShortOrderPrior");
                } else if (OrderPriorID == "LongOrderPrior") {
                    //显示长期医嘱单
                    ContrlOrderListShow("LongOrderPrior");
                } else if (HiddenOrderPrior == "DefaultOrderPrior") {
                    //判断默认类型是 长期 还是 临时  显示相应医嘱单  PriorRowid
                    if (PriorRowid == GlobalObj.LongOrderPriorRowid) {
                        //显示长期
                        ContrlOrderListShow("LongOrderPrior");
                    } else if (PriorRowid == GlobalObj.ShortOrderPriorRowid) {
                        //显示临时
                        ContrlOrderListShow("ShortOrderPrior");
                    }
                } else {
                    //alert(HiddenOrderPrior)
                    //出院带药
                    ContrlOrderListShow("OutOrderPrior");
                    //ContrlOrderListShow("ShortOrderPrior");
                }
            } else if (collapsed == false && lastLayout == "OrderTemplate") {
                //展开为模版显示状态
                //显示模版
                var color = $('#OrderTemplate_Btn').css({ "color": "#006699", "font-weight": "bold" });
                //$('#OrderTemplate_Btn').click();
            }
        }
    } else {
        //$("#OrderTemplate").hide();
        //$("#OrderList").show();
        if ($("#OrderList").css("display") == 'none') {
            return;
        }
        if (OrderPriorID == "ShortOrderPrior") {
            //显示临时医嘱单
            ContrlOrderListShow("ShortOrderPrior");
        } else if (OrderPriorID == "LongOrderPrior") {
            //显示长期医嘱单
            ContrlOrderListShow("LongOrderPrior");
        } else if (HiddenOrderPrior == "DefaultOrderPrior") {
            //判断默认类型是 长期 还是 临时  显示相应医嘱单  PriorRowid
            if (PriorRowid == GlobalObj.LongOrderPriorRowid) {
                //显示长期
                ContrlOrderListShow("LongOrderPrior");
            } else if (PriorRowid == GlobalObj.ShortOrderPriorRowid) {
                //显示临时
                ContrlOrderListShow("ShortOrderPrior");
            }

        } else {
            //ContrlOrderListShow("");
            ContrlOrderListShow("OutOrderPrior");

        }
    }
}
//医嘱类型控制
function SetOrderPrior(rowid, OrderPriorRowid) {
    //GlobalObj.OrderPriorStr
    var HiddenOrderPrior = $("#HiddenOrderPrior").val()
        //如果登陆科室没有加入到访问位置中强制改变也只能录入临时医嘱
    if (GlobalObj.INAdmTypeLoc == "N") { HiddenOrderPrior = "ShortOrderPrior" }
    var Obj = "";
    if ($.isNumeric(rowid) == true) {
        Obj = document.getElementById(rowid + "_OrderPrior");
    } else {
        Obj = document.getElementById("OrderPrior");
    }
    if ((Obj) && (Obj.type == "select-one")) {
        //根据配置  医嘱类型是否可修改  可修改情况下只设置默认类型为当前选中类型
        //医嘱类型控制  1：强制改变  2：只设置默认
        if (GlobalObj.OrderPriorContrlConfig == 1) {

            if (HiddenOrderPrior == "ShortOrderPrior") {

                ClearAllList(Obj);
                //只有临时
                Obj.options[Obj.length] = new Option("临时医嘱", GlobalObj.ShortOrderPriorRowid);
                SetCellData(rowid, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
                SetCellData(rowid, "OrderPriorStr", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
            } else if (HiddenOrderPrior == "LongOrderPrior") {

                ClearAllList(Obj);
                //只有长期
                Obj.options[Obj.length] = new Option("长期医嘱", GlobalObj.LongOrderPriorRowid);
                SetCellData(rowid, "OrderPrior", GlobalObj.LongOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.LongOrderPriorRowid);
                SetCellData(rowid, "OrderPriorStr", GlobalObj.LongOrderPriorRowid + ":" + "长期医嘱");
            } else if (HiddenOrderPrior == "OutOrderPrior") {

                ClearAllList(Obj);
                //出院带药
                Obj.options[Obj.length] = new Option("出院带药", GlobalObj.OutOrderPriorRowid);
                SetCellData(rowid, "OrderPrior", GlobalObj.OutOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.OutOrderPriorRowid);
                SetCellData(rowid, "OrderPriorStr", GlobalObj.OutOrderPriorRowid + ":" + "出院带药");
            } else {
                ClearAllList(Obj);
                //默认类型
                var OrderPrior = cspRunServerMethod(GlobalObj.GetOrderPriorMethod, GlobalObj.DefaultOrderPriorRowid);
                Obj.options[Obj.length] = new Option(OrderPrior, GlobalObj.DefaultOrderPriorRowid);
                SetCellData(rowid, "OrderPrior", GlobalObj.DefaultOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.DefaultOrderPriorRowid);
                SetCellData(rowid, "OrderPriorStr", GlobalObj.DefaultOrderPriorRowid + ":" + OrderPrior);
                /*
			var ArrData=GlobalObj.OrderPriorStr.split(";");
			for (var i=0;i<ArrData.length;i++){
	       	 var ArrData1=ArrData[i].split(":");
	         Obj.options[Obj.length] = new Option(ArrData1[1],ArrData1[0]);
	       }
	       SetCellData(rowid,"OrderPriorStr",GlobalObj.OrderPriorStr);
		   if(OrderPriorRowid == "" || OrderPriorRowid == undefined){
				SetCellData(rowid,"OrderPrior",GlobalObj.DefaultOrderPriorRowid);
				SetCellData(rowid,"OrderPriorRowid",GlobalObj.DefaultOrderPriorRowid);				
		   }else{
				SetCellData(rowid,"OrderPrior",OrderPriorRowid);
				SetCellData(rowid,"OrderPriorRowid",OrderPriorRowid);	
		   }	   	   
			*/
            }

        } else {
            //医嘱类型可选
            //设置默认
            if (HiddenOrderPrior == "ShortOrderPrior") {
                OrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
            } else if (HiddenOrderPrior == "LongOrderPrior") {
                OrderPriorRowid = GlobalObj.LongOrderPriorRowid;
            } else if (HiddenOrderPrior == "OutOrderPrior") {
                OrderPriorRowid = GlobalObj.OutOrderPriorRowid;
            }

            ClearAllList(Obj);
            var ArrData = GlobalObj.OrderPriorStr.split(";");
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(":");
                Obj.options[Obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
            SetCellData(rowid, "OrderPriorStr", GlobalObj.OrderPriorStr);
            if (OrderPriorRowid == "" || OrderPriorRowid == undefined) {
                SetCellData(rowid, "OrderPrior", GlobalObj.DefaultOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.DefaultOrderPriorRowid);
            } else {
                SetCellData(rowid, "OrderPrior", OrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", OrderPriorRowid);
            }

        }
    }
}

function GetDefaultOrderPrior(OrderPrior) {
    var HiddenOrderPrior = $("#HiddenOrderPrior").val();
    var OrderPriorRowid = "";
    var OrderPriorStr = "";
    if (HiddenOrderPrior == "ShortOrderPrior" || OrderPrior == "ShortOrderPrior") {

        //只有临时
        OrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
        OrderPriorStr = GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱";
    } else if (HiddenOrderPrior == "LongOrderPrior" || OrderPrior == "LongOrderPrior") {

        //只有长期	
        OrderPriorRowid = GlobalObj.LongOrderPriorRowid;
        OrderPriorStr = GlobalObj.LongOrderPriorRowid + ":" + "长期医嘱";
    } else if (HiddenOrderPrior == "OutOrderPrior" || OrderPrior == "OutOrderPrior") {

        //出院带药
        OrderPriorRowid = GlobalObj.OutOrderPriorRowid;
        OrderPriorStr = GlobalObj.OutOrderPriorRowid + ":" + "出院带药";
    } else {
        OrderPriorRowid = GlobalObj.DefaultOrderPriorRowid;
        //取名称
        OrderPrior = cspRunServerMethod(GlobalObj.GetOrderPriorMethod, OrderPriorRowid);
        OrderPriorStr = GlobalObj.DefaultOrderPriorRowid + ":" + OrderPrior;
    }
    return OrderPriorRowid + "^" + OrderPriorStr;
}

function InitLayOut() {
    if (GlobalObj.PAAdmType != "I") {
        //jQuery('#layout_main_center_north').css("height","58px")
    }
    if (UIConfigObj.DefaultExpendList == true) {
        jQuery('#Orderlist_Btn').click();
    }
    /*if (UIConfigObj.DefaultExpendTemplate==true) {
    	jQuery('#OrderTemplate_Btn').click();
    }*/
    if (UIConfigObj.BigFont == true) {
        jQuery("DIV", document.body).css("font-size", "12pt");
    } else if (UIConfigObj.SmallFont == true) {
        jQuery("DIV", document.body).css("font-size", "9pt");
    }
    if (UIConfigObj.ShowGridFootBar == true) {
        //jQuery("#Order_DataGrid").jqGrid({pager:'#Order_DataGrid_pagbar',onPaging:uppage});
        //jQuery("#Order_DataGrid").jqGrid('inlineNav',"#Order_DataGrid_pagbar");
    }
    if (GlobalObj.warning != "") {
        //Prompt只用来提示医嘱录入过程中非必要的警示信息。进入界面的信息仍然在头上提示
        //$("#Prompt").text(GlobalObj.warning);
    }
    if (GlobalObj.PilotProWarning != "") {
        $("#Prompt").text(GlobalObj.PilotProWarning);
    }
    if (GlobalObj.EnableButton == 0) {
        $("#Insert_Order_btn").attr('disabled', "true");
        $("#Delete_Order_btn").attr('disabled', "true");
        $("#Add_Order_btn").attr('disabled', "true");

    }
    if (UIConfigObj.DefaultExpendTemplate == true) {
        jQuery('#OrderTemplate_Btn').click();
    }
}

function headerDblClick() {
    //$.messager.alert("警告",GlobalObj.lookupListComponetId);
    if (GlobalObj.lookupListComponetId != "") {
        var flag = tkMakeServerCall("web.SSGroup", "GetAllowWebColumnManager", session['LOGON.GROUPID']);
        if (flag == 1) websys_lu('../csp/websys.component.customiselayout.csp?ID=' + GlobalObj.lookupListComponetId + '&CONTEXT=K' + GlobalObj.ListColSetCls + '.' + GlobalObj.ListColSetMth + '.' + GlobalObj.XCONTEXT + "&GETCONFIG=1", false);
    }
}

//日期编辑器
function InitDatePicker(cl) {
    var CurrentObj = null;
    if (cl.currentTarget) { CurrentObj = cl.currentTarget; } else { CurrentObj = cl; }
    //$(cl).click(function (){
    //WdatePicker(); dateFmt:'yyyy-MM-dd HH:mm:ss'
    //minDate:'%y-%M-%d %H:%m:%s',
    var dateFormate="dd/MM/yyyy HH:mm:ss"
    if (PageLogicObj.defaultDataCache==3){
	    dateFormate="yyyy-MM-dd HH:mm:ss"
	}
    WdatePicker({ el: CurrentObj.id, isShowClear: true, onpicked: function() { $(CurrentObj).change(); }, readOnly: true, skin: 'ext', dateFmt: dateFormate }); //dd/MM/yyyy HH:mm:ss
    //});
}

//******************** 响应函数 *****************//
//表格添加数据之前 使行ID从1开始
/*
function RebuidRowId(id){
	var rowid="";
	$.ajax({
		url: "oeorder.oplistcustom.new.request.csp?action=ReBuidRowId",
		data: {USERID:session['LOGON.USERID'],ADMID:GlobalObj.EpisodeID,id:id},
		async:false,//同步
		success: function(response){		
			rowid=parseInt(response);
			//$.messager.alert("警告",rowid);
			if(rowid==0){
				//var rowid=Add_Order_row();//110
				if($.isNumeric(rowid)==true){
					//EditRowid=rowid;
				}
			}
		}
	})
	return rowid;
}
*/
//本地数据分页
/*
function uppage(pgButton){
	var page = jQuery("#Order_DataGrid").jqGrid('getGridParam','page');
	$("#Order_DataGrid").setGridParam({page:page}).trigger("reloadGrid");
	//添加新一页的数据
} 
*/
//******************模版相关 开始**********************//
function OEPrefClickHandler(e) {
    var obj = websys_getSrcElement(e);
    if (!obj) return;
    var ObjectType = "";
    if (obj.id == 'Personal_Template_Btn') {
        ObjectType = "User.SSUser";
        var obj1 = document.getElementById("OEPrefHosp")
        var obj2 = document.getElementById("Departments_Template_Btn")
        if (obj1) obj1.style.color = "", obj1.style.fontWeight = "";
        if (obj2) obj2.style.color = "", obj2.style.fontWeight = "";
    } else if (obj.id == 'Departments_Template_Btn') {
        ObjectType = "User.CTLoc";
        var obj1 = document.getElementById("OEPrefHosp")
        var obj2 = document.getElementById("Personal_Template_Btn")
        if (obj1) obj1.style.color = "", obj1.style.fontWeight = "";
        if (obj2) obj2.style.color = "", obj2.style.fontWeight = "";
    } else if (obj.id == 'OEPrefHosp') {
        var obj1 = document.getElementById("Departments_Template_Btn")
        var obj2 = document.getElementById("Personal_Template_Btn")
        if (obj1) obj1.style.color = "", obj1.style.fontWeight = "";
        if (obj2) obj2.style.color = "", obj2.style.fontWeight = "";
        ObjectType = "User.CTHospital";
    }
    if (obj.style) obj.style.color = "#006699", obj.style.fontWeight = "bold";
    PageLogicObj.m_ObjectTypeS = ObjectType;
    /*
    if (FocusWindowName=="") lnkFav="oeorder.entry.redrawprefs.csp?EpisodeID="+EpisodeID+"&CTLOC="+escapedCTLOC+"&XCONTEXT="+session["CONTEXT"]+"&OEWIN="+window.name+"&ObjectType="+OrderType;
    else lnkFav="oeorder.entry.redrawprefs.csp?EpisodeID="+EpisodeID+"&CTLOC="+escapedCTLOC+"&FocusWindowName="+FocusWindowName+"&XCONTEXT="+session["CONTEXT"]+"&OEWIN="+window.name;
    if (RepeatOrdersFromEPR=="") websys_createWindow(lnkFav+'&PREFTAB=1','TRAK_hidden');
    */
    websys_createWindow(lnkFav + '&TABIDX=0' + '&ObjectType=' + ObjectType + '&PREFTAB=1', 'TRAK_hidden');
}

function PrefAddItemCustom(tabidx, lstcnt, val, desc, hasdefault, stockqty) {
    var selector = '#ngroup' + lstcnt + 'Z' + tabidx;
    var lstpanel = jQuery(selector);
    var descarr = desc.split(" - ");
    if (descarr.length > 1) { desc = descarr[1] };
    val = val + selector;
    if (!document.getElementById(val)) {
        var Color = "";
        if (hasdefault == "Y") { Color = "blue"; }
        if (stockqty == 0) {
            Color = "red";
        }

        var StyleStr = "style=\"color:" + Color + " \"";
        //var OneLabel="<label "+StyleStr+" id=\""+val+"\" class=\"\" onclick=\"templateItemClickHandler(this)\" ondblclick=\"templateItemdbClickHandler(this)\" onselectstart=\"return false;\" >"+desc+"</label><br>"
        var ItemCustomLabelStr = $("#tempTemplateData").data(selector) || "";
        var length = ItemCustomLabelStr.split("</label>").length || 0;
        var itemid = val.split(String.fromCharCode(4))[2];
        itemid = itemid.replace("||", "_")
        var labelclass = lstcnt + "_" + tabidx + "_" + length;
        var checkvalue = itemid + "_" + labelclass
        var OrderType = val.split("#")[0].split(String.fromCharCode(4))[0] //mPiece(value,String.fromCharCode(4),0);
        var OneLabel = "<label " + StyleStr + " id=\"" + val + "\" class=\"" + labelclass + "\" onclick=\"templateItemClickHandler(this)\" ondblclick=\"templateItemdbClickHandler(this)\" onselectstart=\"return false;\" >" + desc + "</label><br>"
        if (OrderType == "ARCIM") {
            var OneLabel = "<input onclick=\"templateCheckClickHandler(this)\" class=\"ordtemplatecheck\" id=\"" + checkvalue + "\" type='checkbox' style='vertical-align:middle;padding:0px;'>" + OneLabel
        }
        var ItemCustomLabelStr = $("#tempTemplateData").data(selector) || "";
        ItemCustomLabelStr = ItemCustomLabelStr + OneLabel;
        $("#tempTemplateData").data(selector, ItemCustomLabelStr);
    }
}

function PrefAddItemCustomAppend(tabidx, lstcnt) {
    var selector = '#ngroup' + lstcnt + 'Z' + tabidx;
    var lstpanel = jQuery(selector);

    var ItemCustomLabelStr = $("#tempTemplateData").data(selector);
    lstpanel.append(ItemCustomLabelStr);
    $("#tempTemplateData").data(selector, "");

    $("#ngroup" + lstcnt + "Z" + tabidx).click(function() {
        for (var i = 0; i < 5; i++) {
            $("#ngroup" + i + "Z" + tabidx).prev().children(":first").css("background-color", "")
        }
        $("#" + this.id).prev().children(":first").css("background-color", "#87CEFF") //css("color","red")
            //$("#"+this.id).prev().css("background-color","red")
        lstidx = lstcnt
    })
}
function templateCheckClickHandler(e){
	var idstr = e.id
	var labelclassArr=idstr.split("_");
	var labelclass=labelclassArr[2]+"_"+labelclassArr[3]+"_"+labelclassArr[4];
	$("."+labelclass+"").removeClass("templateItemSelect");
	if ($("#" + idstr + "").is(":checked")) {
		$("."+labelclass+"").addClass("templateItemSelect");
	}
}
function templateItemClickHandler(e) {
    //$(".templateItemSelect").removeClass("templateItemSelect");
    $(".templateItemSelect").removeClass("templateItemSelect");
    var idstr = e.id
    var labelclassname = e.className.split(" ")[0];
    var itemid = idstr.split("#")[0].split(String.fromCharCode(4))[2];
    itemid = itemid.replace("||", "_")
    var checkvalue = itemid + "_" + labelclassname;
    if ($("#" + checkvalue + "").is(":checked")) {
        $("#" + checkvalue + "").attr('checked', false);
    } else {
        $("#" + checkvalue + "").attr('checked', true);
        jQuery(e).addClass("templateItemSelect");
    }
}

function templateItemdbClickHandler(e) {
    //从模板增加医嘱
    var obj = websys_getSrcElement(e);
    addSelectedFav(obj.id);
    //

}

function RedrawFavourites(tabidx, FocusWindowName) {
    //if (currTab==tabidx) return;
    //Log 54451 PeterC 19/08/05
    var obj = jQuery('#Template_tabs');
    var currTab = obj.tabs('getSelected');
    var currTabIndex = obj.tabs('getTabIndex', currTab);
    if (!document.getElementById('ngroup0Z' + tabidx)) {
        for (var groupI = 0; groupI < 5; groupI++) {
            currTab.append("<div class='template_div'><div data-options='fit:true' class='easyui-panel' title=' ' id='ngroup" + groupI + 'Z' + tabidx + "'></div></div>");
        }
        jQuery.parser.parse('#Template_tabs');
    }
    var formulary = "";
    var obj = document.getElementById("NonFormulary");
    if (obj) {
        if (obj.checked) formulary = "Y";
        else { formulary = "N"; }
    }

    if (!obj) formulary = "";
    if ((FocusWindowName) && (FocusWindowName != "")) {
        websys_createWindow(lnkFav + '&TABIDX=' + tabidx + '&FocusWindowName=' + FocusWindowName + '&formulary=' + formulary, 'TRAK_hidden');
    } else {
        //如果模板内容出不来?有可能窗口出错?可以把第二个参数'TRAK_hidden'设为空?就可以显示弹出窗口
        websys_createWindow(lnkFav + '&ObjectType=' + PageLogicObj.m_ObjectTypeS + '&TABIDX=' + tabidx, 'TRAK_hidden');
        //将默认的list index置为空
        lstidx = "";
        //如果TAB页切换不过来?可以用下面的语句还察看
        //websys_createWindow(lnkFav+'&TABIDX='+tabidx,'TRAK1');
    }
    //因为切换Tab时会根据模板的设定置上Categor和SubCategory?为了不影响开医嘱?默认要置为空
    window.setTimeout("ClearCategory()", 1000);
}

function ClearCategory() {

    obj = document.getElementById('catID');
    if (obj) obj.value = '';
    obj = document.getElementById('Category');
    if ((obj) && (obj.tagName == 'INPUT')) { obj.value = ''; };
    obj = document.getElementById('subcatID');
    if (obj) obj.value = '';
    obj = document.getElementById('SubCategory');
    if ((obj) && (obj.tagName == 'INPUT')) obj.value = "";

}

function PrefEditItem(Str) {
    var arr = Str.split("Z");
    var lstcnt = arr[1];
    var tabidx = arr[2];
    var ObjectType = arr[3];
    var selector = '#ngroup' + lstcnt + 'Z' + tabidx;
    var select = jQuery(selector).find(".templateItemSelect")[0];
    //判断是否存在科室权限,有则需要选择维护个人还是科室
    var GroupID = session['LOGON.GROUPID'];
    var MenuName = "System.OEOrder.OrgFav.Save.SetSaveForLocation";
    var ret = cspRunServerMethod(GlobalObj.IsHaveMenuAuthOrderOrgFavMethod, GroupID, MenuName);
    if ((ret != 1) && (ObjectType == "User.CTLoc")) {
        $.messager.alert("警告", "没有权限维护科室模板")
        return
    }
    var ItemCount=0;
    for (var i = 0; i < $(".ordtemplatecheck").length; i++) {
        var checkboxid = $(".ordtemplatecheck")[i].id;
        if ($("#" + checkboxid + "").is(":checked")) {
	        ItemCount=ItemCount+1;
        }
    }
    if (ItemCount>=2){
	    $.messager.alert("警告", "请选择一条记录进行操作!")
        return false;
	}
    var value = "",
        OrderType = "",
        itemid = "";
    if (select) {
        value = select.id;
        OrderType = mPiece(value, String.fromCharCode(4), 0);
        itemid = value.split(String.fromCharCode(4))[2];
    }

    //alert(select.id);
    switch (arr[0]) {
        case "add":
            {

                var URL = "oeorder.orgfav.prefedit.csp?Type=add&OrderType=" + OrderType + "&itemid=" + itemid + "&EpisodeID=" + GlobalObj.EpisodeID;
                var result = window.showModalDialog(URL, "", "dialogHeight: " + (370) + "px; dialogWidth: " + (650) + "px");
                //var ret=window.open(URL,"dhcdocoeorder","dialogwidth:70;dialogheight:60;status:no;center:1;resizable:yes");
                //var result={"Save":true,"NewOrderType":"ARCIM","NewItemID":"1691||1"}
                if ((typeof result == "undefined") || (typeof result != 'object') || (result == null) || (result.Save == false)) {
                    break;
                }
                var NewOrderType = result.NewOrderType;
                var NewItemID = result.NewItemID;
                var rtn = cspRunServerMethod(GlobalObj.PrefEditItemMethod, "add", ObjectType, GlobalObj.XCONTEXT, lstcnt + "Z" + tabidx, "", "", NewOrderType, NewItemID);
                if (rtn != "1") {
                    $.messager.alert("警告", "更新失败:" + rtn);
                    break;
                }
                websys_createWindow(lnkFav + '&TABIDX=0' + '&ObjectType=' + ObjectType + '&PREFTAB=1', 'TRAK_hidden');

                break
            }
        case "remove":
            {
                if (itemid == "") {
                    $.messager.alert("警告", "请选择需要删除的项目")
                    break
                }
                var rtn = cspRunServerMethod(GlobalObj.PrefEditItemMethod, "remove", ObjectType, GlobalObj.XCONTEXT, lstcnt + "Z" + tabidx, OrderType, itemid, "", "");
                if (rtn != "1") {
                    $.messager.alert("警告", "更新失败:" + rtn);
                    break;
                }
                websys_createWindow(lnkFav + '&TABIDX=0' + '&ObjectType=' + ObjectType + '&PREFTAB=1', 'TRAK_hidden');
                break
            }
        case "edit":
            {
                if (itemid == "") {
                    $.messager.alert("警告", "请选择需要修改的项目");
                    break;
                }
                var URL = "oeorder.orgfav.prefedit.csp?Type=edit&OrderType=" + OrderType + "&itemid=" + itemid + "&EpisodeID=" + GlobalObj.EpisodeID;
                var result = window.showModalDialog(URL, "", "dialogHeight: " + (370) + "px; dialogWidth: " + (650) + "px");
                //var ret=window.open(URL,"dhcdocoeorder","dialogwidth:70;dialogheight:60;status:no;center:1;resizable:yes");
                //var result={"Save":true,"NewOrderType":"ARCIM","NewItemID":"1691||1"}
                if ((typeof result == "undefined") || (typeof result != 'object') || (result == null) || (result.Save == false)) {
                    break;
                }
                var NewOrderType = result.NewOrderType;
                var NewItemID = result.NewItemID;
                var rtn = cspRunServerMethod(GlobalObj.PrefEditItemMethod, "edit", ObjectType, GlobalObj.XCONTEXT, lstcnt + "Z" + tabidx, OrderType, itemid, NewOrderType, NewItemID);
                if (rtn != "1") {
                    $.messager.alert("警告", "更新失败:" + rtn);
                    break;
                }
                websys_createWindow(lnkFav + '&TABIDX=0' + '&ObjectType=' + ObjectType + '&PREFTAB=1', 'TRAK_hidden');

                break
            }
            defaule: {
                $.messager.alert("警告", "操作无效!")
            }
    }
}
//******************模版相关 结束**********************//


//表格操作

function GetCurr_time() {
    //取当前日期和时间(服务器)
    var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
    var CurrDateTimeArr = CurrDateTime.split("^");
    var CurrDate = CurrDateTimeArr[0];
    var CurrTime = CurrDateTimeArr[1];
    var CurrDateTime = CurrDate + " " + CurrTime;
    //var curr_time = new Date();
    /*
    var strDate = curr_time.getFullYear()+"-";
    	strDate += ((curr_time.getMonth()+1)<10 ? "0"+(curr_time.getMonth()+1) : (curr_time.getMonth()+1))+"-";
    	strDate += (curr_time.getDate()<10 ? "0"+curr_time.getDate() : curr_time.getDate())+" ";
    	strDate += (curr_time.getHours()<10 ? "0"+curr_time.getHours() : curr_time.getHours())+":";
    	strDate += (curr_time.getMinutes()<10 ? "0"+curr_time.getMinutes() : curr_time.getMinutes())+":";
    	strDate += (curr_time.getSeconds()<10 ? "0"+curr_time.getSeconds() : curr_time.getSeconds());
    */
    /*
    var strDate = (curr_time.getDate()<10 ? "0"+curr_time.getDate() : curr_time.getDate())+"/";
    	strDate += ((curr_time.getMonth()+1)<10 ? "0"+(curr_time.getMonth()+1) : (curr_time.getMonth()+1))+"/";
    	strDate += curr_time.getFullYear()+" ";
    	strDate += (curr_time.getHours()<10 ? "0"+curr_time.getHours() : curr_time.getHours())+":";
    	strDate += (curr_time.getMinutes()<10 ? "0"+curr_time.getMinutes() : curr_time.getMinutes()); //+":";
    	//strDate += (curr_time.getSeconds()<10 ? "0"+curr_time.getSeconds() : curr_time.getSeconds());
    */
    return CurrDateTime;
}
//判断行是否在编辑状态
function GetEditStatus(rowid) {
    var obj = document.getElementById(rowid + "_OrderName");
    if (obj) {
        return true;
    } else {
        return false;
    }
}
//保存行
function EndEditRow(rowid) {
    var obj = document.getElementById(rowid + "_OrderName");
    if (obj) {
        $("#Order_DataGrid").saveRow(rowid);
    }
}
//删除一行
function DeleteRow(rowid) {
    //抗生素3
    DeleteAntReason(rowid);
    $('#Order_DataGrid').delRowData(rowid);
    //提示信息改变
    OrderMsgChange();
}
//清空一行数据
function ClearRow(rowid) {
    //删除当前行 再添加空白行	
    //var records=$('#Order_DataGrid').getGridParam("records");
    if ($.isNumeric(rowid) == true) {
        DeleteRow(rowid);
        Add_Order_row();
    }
    SetScreenSum();
}

//一般编辑行
function EditRowCommon(rowid, EnableOrd) {
    if ($.isNumeric(rowid) == true) {
        $('#Order_DataGrid').editRow(rowid, false); //false 去掉回车保存
        if ((typeof EnableOrd != "undefined") && (EnableOrd == false)) {
            return
        }
        if (GlobalObj.OEORIRealTimeQuery == 1) {
            SetOrdNameList(rowid)
        }
    }
}

//检查行是否可编辑
function CheckCanEdit(rowid) {
    //已审核或已保存医嘱不能编辑
    /*
    var OrderItemRowid=GetCellData(rowid,"OrderItemRowid");
    if(OrderItemRowid != "" && OrderItemRowid != null && OrderItemRowid != undefined){
    	return false;
    }else{
    	return true;
    }
    */
    /////tanjishan 2015-09
    ////仅西药可编辑
    var OrderType = GetCellData(rowid, "OrderType");
    var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
    if ((OrderType == "R" && OrderItemRowid != null && OrderItemRowid != undefined) || (OrderItemRowid == "")) {
        return true;
    } else {
        return false;
    }
}
//检查行是否空白行
function CheckIsClear(rowid) {
    //OrderARCIMRowid为空则为空白行
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    if (OrderARCIMRowid != "") {
        return false;
    } else {
        return true;
    }
}
//获取所有行ID 返回数组
function GetAllRowId() {
    var rowids = $('#Order_DataGrid').getDataIDs();
    return rowids;
}
//焦点到最后一行
function SetLastRowFocus() {
    var rowids = GetAllRowId();
    var lastrowid = rowids[rowids.length - 1];
    if (GetEditStatus(lastrowid) == true) {
        SetFocusCell(rowid, "OrderName")
    }
}
//获取选择行ID 返回数组
function GetSelRowId() {
    var rowids = $('#Order_DataGrid').getGridParam("selarrrow");
    return rowids;
}
//获取选择行ID 返回数组
function GetSelRowData() {
    var DataArry = new Array();
    var rowids = $('#Order_DataGrid').getGridParam("selarrrow");
    for (var i = 0; i < rowids.length; i++) {
        //不取已经审核医嘱
        //if(CheckIsItem(rowids[i])==true){continue;}
        //保存行  88888
        EndEditRow(rowids[i]);
        var curRowData = $("#Order_DataGrid").GetRowData(rowids[i]);
        DataArry[DataArry.length] = curRowData;
    }
    return DataArry;
}
//获取事件的行号
function GetEventRow(e) {
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj && obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    return rowid
}
//根据主医嘱ID获取子医嘱ID数组
function GetMasterSeqNo(rowid) {
    var rowids = new Array();
    var AllRowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < AllRowids.length; i++) {
        if (CheckIsItem(AllRowids[i]) == true) { continue; }
        var OrderMasterSeqNo = GetCellData(AllRowids[i], "OrderMasterSeqNo");
        if (OrderMasterSeqNo == rowid) {
            rowids[rowids.length] = AllRowids[i];
        }
    }
    return rowids;
}

//根据行号获取所有关联医嘱 
function GetSeqNolist(rowid) {
    var OrderSeqNoMain = GetCellData(rowid, "id").replace(/(^\s*)|(\s*$)/g, '');
    var OrderMasterSeqNoMain = GetCellData(rowid, "OrderMasterSeqNo").replace(/(^\s*)|(\s*$)/g, '');
    var rowids = new Array();
    var AllRowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < AllRowids.length; i++) {
        if (CheckIsItem(rowids[i]) == true) { continue; }
        var OrderMasterSeqNo = GetCellData(AllRowids[i], "OrderMasterSeqNo");
        var Orderid = GetCellData(AllRowids[i], "id");
        if (OrderMasterSeqNoMain == "") {
            if (OrderSeqNoMain == OrderMasterSeqNo) { rowids[rowids.length] = AllRowids[i]; }
        } else {
            if ((OrderMasterSeqNoMain == Orderid) || (OrderMasterSeqNo == OrderMasterSeqNoMain)) { rowids[rowids.length] = AllRowids[i]; }
        }
    }
    return rowids;
}
//刷新表格数据
function ReloadGrid(reloadFlag) {
    //reload grid
    //防止本地数据不能刷新
    if (typeof reloadFlag == "undefined") {
        var reloadFlag = "";
    }
    if (reloadFlag != "") {
        DocumentUnloadHandler()
    } else {
        ClearSessionData();
    }

    $("#Order_DataGrid").jqGrid("clearGridData");
    //reload
    //$("#Order_DataGrid").trigger("reloadGrid");
    //ClearSessionData();
    var url = "oeorder.oplistcustom.new.request.csp?action=GetOrderList";
    var postData = { USERID: session['LOGON.USERID'], ADMID: GlobalObj.EpisodeID };
    jQuery("#Order_DataGrid").trigger("reloadGrid", [{ current: true }]);
    if (reloadFlag != "") {
        GetSessionData()
    }
    ReLoadLabInfo()
}
///tanjishan 2016-03-09 更新界面上的医嘱费用信息
///门诊病历切换页签时会调用此方法
function ReLoadLabInfo() {}
//双击编辑行 	5555
function EditRow(rowid, Flag) {
    //检查行是否可编辑
    if (CheckCanEdit(rowid) == false) { return false; }
    //已经是编辑状态就退出if($.isNumeric(rowid)==true)
    if (GetEditStatus(rowid) == true || $.isNumeric(rowid) == false) { return false; }
    //1:先取该行样式配置
    var StyleConfigStr = GetCellData(rowid, "StyleConfigStr");
    //$.messager.alert("警告","StyleConfigStr:"+StyleConfigStr);
    //2014-04-24
    var StyleConfigObj = {};
    if (StyleConfigStr != "") {
        StyleConfigObj = eval("(" + StyleConfigStr + ")");
    }

    //$.messager.alert("警告",StyleConfigStr);

    //重建行数据 对于下拉框 重新值
    //2:取数据串
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    var OrderType = GetCellData(rowid, "OrderType");
    var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
    //医嘱类型
    var OrderPriorStr = GetCellData(rowid, "OrderPriorStr");
    if (OrderPriorStr == "") {
        OrderPriorStr = GlobalObj.OrderPriorStr
    }
    //剂量单位
    var idoseqtystr = GetCellData(rowid, "idoseqtystr");
    //数量单位 000000 -协议单位
    var OrderPackUOMStr = GetCellData(rowid, "OrderPackUOMStr");
    //接收科室
    var CurrentRecLocStr = GetCellData(rowid, "CurrentRecLocStr");
    //标本
    var OrderLabSpecStr = GetCellData(rowid, "OrderLabSpecStr");
    //医保分类
    var OrderInsurCatHideen = GetCellData(rowid, "OrderInsurCatHideen");

    //$.messager.alert("警告",CurrentRecLocStr);
    //3:取上一次选择ID和关联数据 因为重置列表数据会有默认选项 所以在重置列表数据之前取值
    //var rowdata=GetRowData(rowid); //不用这个 因为如果行没有保存 会取到标签
    //医嘱类型
    var OrderPrior = GetCellData(rowid, "OrderPrior");
    var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    //剂量单位
    var OrderDoseUOM = GetCellData(rowid, "OrderDoseUOM"); //显示值	
    var OrderDoseUOMRowid = GetCellData(rowid, "OrderDoseUOMRowid");
    var OrderDoseQty = GetCellData(rowid, "OrderDoseQty");
    //接收科室
    var OrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
    //var OrderPackUOM=GetCellData(rowid,"OrderPackUOM"); //显示值
    //数量单位
    var OrderPackUOMRowid = GetCellData(rowid, "OrderPackUOMRowid");
    //标本
    var OrderLabSpecRowid = GetCellData(rowid, "OrderLabSpecRowid");
    //费别
    var OrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    //附加说明
    var OrderPriorRemarksRowId = GetCellData(rowid, "OrderPriorRemarksRowId");
    //医保分类
    var OrderInsurCatRowId = GetCellData(rowid, "OrderInsurCatRowId");
    //科研项目
    var OrderPilotProRowid = GetCellData(rowid, "OrderPilotProRowid");
    //诊断类别
    var idiagnoscatstr = GetCellData(rowid, "idiagnoscatstr");
    var DefaultOrderDIACat = GetCellData(rowid, "OrderDIACat");
    var DefaultOrderDIACatRowId = GetCellData(rowid, "OrderDIACatRowId");
    var OrderName = GetCellData(rowid, "OrderName");
    var OrderPriorRemarksRowId = GetCellData(rowid, "OrderPriorRemarksRowId");

    //1:先取该行样式配置
    var StyleConfigObj = {};
    var StyleConfigStr = GetCellData(rowid, "StyleConfigStr");
    if (StyleConfigStr == "") {
        var DefaultParamObj = {
            rowid: "",
            icode: OrderARCIMRowid,
            OrderType: OrderType,
            OrderPHPrescType: OrderPHPrescType,
            OrderPriorRowid: OrderPriorRowid,
            OrderPriorRemarksRowId: OrderPriorRemarksRowId
        };
        StyleConfigObj = GetStyleConfigObj(DefaultParamObj);
    } else {
        StyleConfigObj = eval("(" + StyleConfigStr + ")");
    }
    StyleConfigObj.OrderName = true
        //$.messager.alert("警告",StyleConfigStr);

    //重建行数据 对于下拉框 重新值
    //var OrderItemRowid=GetCellData(rowid,"OrderItemRowid");
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    var OrderPrescNo = GetCellData(rowid, "OrderPrescNo");
    if (OrderPrescNo != "") {
        ///tanjishan 2015-09
        ///仅重建医嘱数量,单次计量,单次计量单位,频次,疗程,用法
        StyleConfigObj.OrderName = false
        StyleConfigObj.OrderMasterSeqNo = false
        StyleConfigObj.OrderPrior = false
        StyleConfigObj.OrderLabSpec = false
        StyleConfigObj.OrderInsurCat = false
        StyleConfigObj.OrderAction = false
        StyleConfigObj.OrderSkinTest = false
        StyleConfigObj.OrderInsurCat = false
        StyleConfigObj.OrderStartDate = false
        StyleConfigObj.OrderPackQty = true
        if (OrderMasterSeqNo != "") {
            StyleConfigObj.OrderDur = false;
            StyleConfigObj.OrderFreq = false;
            StyleConfigObj.OrderInstr = false;
        }

    }


    //启动编辑
    EditRowCommon(rowid, StyleConfigObj.OrderName);
    //4:改变样式
    ChangeRowStyle(rowid, StyleConfigObj);
    //5:重置列表数据
    SetColumnList(rowid, "OrderPrior", OrderPriorStr);
    SetColumnList(rowid, "OrderDoseUOM", idoseqtystr);
    SetColumnList(rowid, "OrderRecDep", CurrentRecLocStr);
    SetColumnList(rowid, "OrderPackUOM", OrderPackUOMStr);
    SetColumnList(rowid, "OrderLabSpec", OrderLabSpecStr);
    SetColumnList(rowid, "OrderInsurCat", OrderInsurCatHideen);
    SetColumnList(rowid, "OrderPilotPro", GlobalObj.PilotProStr);
    SetColumnList(rowid, "OrderDIACat", idiagnoscatstr);
    //启用实时查询的方式,需要放开
    if (typeof Flag == "undefined") {
        Flag = 0;
    }
    if ((GlobalObj.OEORIRealTimeQuery == 1) && (Flag == 0)) {
        SetColumnList(rowid, "OrderName", OrderName);
        var OrderNameObj = document.getElementById(rowid + "_OrderName");
        if (OrderNameObj && (OrderNameObj.disabled == false)) {
            $('#' + rowid + '_OrderName').combogrid("setValue", OrderName);
        } else {
            $('#' + rowid + '_OrderName').combo("setText", OrderName)
        }

        //$('#'+rowid+'_OrderName').combo("setText", OrderName)
    }
    if (DefaultOrderDIACat != "") {
        SetCellData(rowid, "OrderDIACat", DefaultOrderDIACatRowId);
        SetCellData(rowid, "OrderDIACatRowId", DefaultOrderDIACatRowId);
    }

    //6:设置上一次选项和关联数据
    if (StyleConfigObj.OrderDoseUOM != undefined && StyleConfigObj.OrderDoseUOM != false && StyleConfigObj.OrderDoseUOM != true) {
        SetCellData(rowid, "OrderDoseUOM", OrderDoseUOM);
    } else if (StyleConfigObj.OrderDoseUOM == undefined || StyleConfigObj.OrderDoseUOM == true) {
        if (OrderDoseUOMRowid != "") {
            SetCellData(rowid, "OrderDoseUOM", OrderDoseUOMRowid);
            SetCellData(rowid, "OrderDoseUOMRowid", OrderDoseUOMRowid);
        } else {
            if (idoseqtystr != "") {
                var ArrData = idoseqtystr.split(String.fromCharCode(2));
                var ArrData1 = ArrData[0].split(String.fromCharCode(1));
                //DefaultDoseQty=ArrData1[0];
                var DefaultDoseQtyUOM = ArrData1[1];
                var DefaultDoseUOMRowid = ArrData1[2];
                SetCellData(rowid, "OrderDoseUOM", DefaultDoseUOMRowid);
                SetCellData(rowid, "OrderDoseUOMRowid", DefaultDoseUOMRowid);
            }
        }
    }
    SetCellData(rowid, "OrderPrior", OrderPriorRowid);
    SetCellData(rowid, "OrderPriorRowid", OrderPriorRowid);
    SetCellData(rowid, "OrderDoseQty", OrderDoseQty); //重建剂量单位下拉框的时候会设置默认值 所以需要还原	
    SetCellData(rowid, "OrderRecDep", OrderRecDepRowid);
    SetCellData(rowid, "OrderPrior", OrderPriorRowid);
    SetCellData(rowid, "OrderLabSpec", OrderLabSpecRowid);
    SetCellData(rowid, "OrderBillType", OrderBillTypeRowid);
    SetCellData(rowid, "OrderPriorRemarks", OrderPriorRemarksRowId);
    SetCellData(rowid, "OrderPriorRemarksRowId", OrderPriorRemarksRowId);
    SetCellData(rowid, "OrderRecDepRowid", OrderRecDepRowid);
    SetCellData(rowid, "OrderPackUOM", OrderPackUOMRowid); //协议单位
    SetCellData(rowid, "OrderInsurCat", OrderInsurCatRowId); //医保分类
    SetCellData(rowid, "OrderPilotPro", OrderPilotProRowid);

    //医嘱类型控制
    //SetOrderPrior(rowid,OrderPriorRowid);

    //设置某些字段disable
    var RowDisableStr = GetCellData(rowid, "RowDisableStr");
    var RowDisableObj = {};
    if (RowDisableStr != "") {
        RowDisableObj = eval("(" + RowDisableStr + ")");
    }
    ChangeCellDisable(rowid, RowDisableObj);
    //知识库
    CheckLibPhaFunction("Q", rowid, "")
    XHZY_Click();


}

//按钮响应函数
function fn(e) {
    var obj = websys_getSrcElement(e);
    dhcsys_alert(obj.value);
}
//获取一行数据 需要当前行为保存状态
function GetRowData(rowid) {
    var curRowData = "";
    if (GetEditStatus(rowid) == false) {
        curRowData = $("#Order_DataGrid").getRowData(rowid);
    } else {
        $.messager.alert("警告", "当前行未保存");
    }
    return curRowData;
}
//判断是否已审核医嘱 (存在OrderItemRowid)
function CheckIsItem(rowid) {
    var id = parseInt(rowid);
    if ($.isNumeric(id) == true) {
        var OrderItemRowid = GetCellData(id, "OrderItemRowid");
        if (OrderItemRowid != "") {
            return true;
        } else {
            return false;
        }
    } else {
        return false;
    }
}
//获取所有数据 如果行处于编辑状态 这样得到的行数据包含标签
function GetGirdData() {
    //保存数据
    //Save_Order_row();
    var DataArry = new Array();
    var rowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {
        //不取已经审核医嘱 和空白行
        //if(CheckIsItem(rowids[i])==true){continue;}
        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        if (OrderItemRowid != "" || OrderARCIMRowid == "") { continue; }
        //保存行
        EndEditRow(rowids[i]);
        var curRowData = $("#Order_DataGrid").getRowData(rowids[i]);
        DataArry[DataArry.length] = curRowData;
    }
    return DataArry;
}

function GetScreenBillSum() {
    var Sum = 0;
    var rowids = GetAllRowId();
    for (var i = 0; i < rowids.length; i++) {
        if (CheckIsItem(rowids[i]) == true) { continue; }
        var OrderSum = GetCellData(rowids[i], "OrderSum");
        var OrderPriorRemarksRowId = GetCellData(rowids[i], "OrderPriorRemarksRowId");
        if ((OrderPriorRemarksRowId == "OM") || (OrderPriorRemarksRowId == "ZT")) { continue }
        if (OrderSum == "") { continue }
        Sum = parseFloat(Sum) + parseFloat(OrderSum);
    }
    Sum = Sum.toFixed(4);
    return Sum;
}

//设置统计数据
function SetScreenSum() {
    var Sum = GetScreenBillSum();
    $("#ScreenBillSum").val(Sum);
}
//添加一行 空白行  返回rowid
function Add_Order_row() {
    var rowid = "";

    //只能添加一行空行 
    var records = $('#Order_DataGrid').getGridParam("records");
    if (records >= 1) {
        //var rowids=$('#Order_DataGrid').getDataIDs();
        //获取当前最后一行ID  GetPreRowId() 不传参数 返回当前行ID
        var prerowid = GetPreRowId();
        //最后一行是否有数据
        var OrderARCIMRowid = GetCellData(prerowid, "OrderARCIMRowid");
        //$.messager.alert("警告",OrderARCIMRowid);
        if (OrderARCIMRowid == "" || OrderARCIMRowid == null) {
            //设置焦点
            SetFocusCell(prerowid, "OrderName");
            return prerowid;
        }
    }
    /*
    if(records==0){
    	//防止添加医嘱套未成功
    	RebuidRowId();
    }
    */
    rowid = GetNewrowid();
    if (rowid == "" || rowid == 0) { return; }
    //设置默认值		
    var DefaultData = GetDefaultData(rowid);
    DefaultData['id'] = rowid;
    $('#Order_DataGrid').addRowData(rowid, DefaultData);

    SetNewOrderClass(rowid);
    EditRowCommon(rowid);
    SetOrderPrior(rowid);
    //设置焦点
    SetFocusCell(rowid, "OrderName")
    return rowid;
}

//添加 带数据的一行  返回rowid
function Add_Order_row2(newDataObj) {
    var rowid = newDataObj["id"];
    $('#Order_DataGrid').addRowData(rowid, newDataObj);
    //
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    if (OrderMasterSeqNo != "") {
        $("#" + OrderMasterSeqNo).find("td").addClass("OrderMasterM");
        $("#" + rowid).find("td").addClass("OrderMasterS");
    }
    SetNewOrderClass(rowid);
    return rowid;
}
//设置新开医嘱的区别的列样式 
function SetNewOrderClass(rowid) {
    // setCell(rowid,colname, data, class, properties)
    if (CheckIsItem(rowid) == false) {
        $('#Order_DataGrid').setCell(rowid, "id", rowid, "NewOrder", "");
    }
}
//获取session数据添加到表格
function Add_Session_row(newDataObj) {
    //存在session数据 ID要还原为上一次
    var rowid = newDataObj["id"];
    //RebuidRowId(rowid);
    $('#Order_DataGrid').addRowData(rowid, newDataObj);
    //
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    if (OrderMasterSeqNo != "") {
        $("#" + OrderMasterSeqNo).find("td").addClass("OrderMasterM");
        $("#" + rowid).find("td").addClass("OrderMasterS");
    }
    SetNewOrderClass(rowid);
    return rowid;
}

//获取新增行ID
function GetNewrowid() {
    var rowid = "";
    var rowids = $('#Order_DataGrid').getDataIDs();
    if (rowids.length > 0) {
        var prerowid = rowids[rowids.length - 1];
        if (prerowid.indexOf(".") != -1) {
            rowid = parseInt(prerowid.split(".")[0]) + 1;
        } else {
            rowid = parseInt(prerowid) + 1;
        }
    } else {
        rowid = 1;
    }
    /*
    $.ajax({
    	url: "oeorder.oplistcustom.new.request.csp?action=GetRowId",
    	data: {USERID:session['LOGON.USERID'],ADMID:GlobalObj.EpisodeID},
    	async:false,//同步
    	success: function(response){		
    		rowid=parseInt(response);			
    	}
    });
    */
    return rowid;
}
//设置默认数据
function GetDefaultData(rowid) {
    //滴速和单位默认值
    var OrderSpeedFlowRate = "";
    var OrderFlowRateUnit = "";
    var OrderFlowRateUnitRowId = ""
        //默认医嘱类型
    var CurrOrderPrior = $('#PriorType').text();
    var OrderPriorRowid = "";
    var OrderPriorStr = "";
    if (CurrOrderPrior.indexOf("临时") != -1) {
        //只有临时
        OrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
        OrderPriorStr = GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱";
    } else if (CurrOrderPrior.indexOf("长期") != -1) {
        //只有长期	
        OrderPriorRowid = GlobalObj.LongOrderPriorRowid;
        OrderPriorStr = GlobalObj.LongOrderPriorRowid + ":" + "长期医嘱";
    } else if (CurrOrderPrior.indexOf("出院") != -1) {
        //出院带药
        OrderPriorRowid = GlobalObj.OutOrderPriorRowid;
        OrderPriorStr = GlobalObj.OutOrderPriorRowid + ":" + "出院带药";
    } else {
        OrderPriorRowid = GlobalObj.DefaultOrderPriorRowid;
        OrderPriorStr = GlobalObj.OrderPriorStr;
    }

    //获取上一行ID  因为当前行还没有添加或者删除 所以取当前最后一行
    var prerowid = GetPreRowId(rowid);
    //$.messager.alert("警告","prerowid:"+prerowid);
    //开始日期  OrderStartDate  2014-03-25 17:34:34
    var Currtime = GetCurr_time();
    var OrderStartDate = Currtime;
    var OrderEndDate = Currtime;
    //开医嘱日期  OrderDate  2014-03-25 17:34:34
    var OrderDate = Currtime;
    //开医嘱人
    var OrderDoc = session['LOGON.USERNAME'];
    //录入人
    var OrderUserAdd = session['LOGON.USERNAME'];
    //开医嘱科室
    var OrderUserDep = GlobalObj.CTLOC;
    //默认费别
    var OrderBillTypeRowid = "",
        OrderBillType = "";
    var PreOrderBillTypeRowid = GetCellData(prerowid, "OrderBillTypeRowid");
    var PreOrderBillType = GetCellData(prerowid, "OrderBillType");
    $.ajax({
        url: "oeorder.oplistcustom.new.request.csp?action=GetDefaultPrescriptType",
        data: { EpisodeID: GlobalObj.EpisodeID, PreOrderBillTypeRowid: PreOrderBillTypeRowid, PreOrderBillType: PreOrderBillType },
        async: false,
        success: function(response) {
            var DefaultPrescriptType = response.split('^')[0];
            OrderBillTypeRowid = DefaultPrescriptType.split(':')[0];
            OrderBillType = DefaultPrescriptType.split(':')[1];
        }
    });
    var PreDIACatRowId = "";
    var PreOrderDIACat = "";
    //存在上一行 取上一行数据
    //$.messager.alert("警告",prerowid+"^"+rowid);
    if ($.isNumeric(prerowid) == true) {
        //OrderPriorRowid=GetCellData(prerowid,"OrderPriorRowid");
        //默认置上前一条的诊断类别
        PreOrderDIACat = GetCellData(prerowid, "OrderDIACat");
        PreDIACatRowId = GetCellData(prerowid, "OrderDIACatRowId");
    }

    //封装数据对象
    var DfaultData = {
        OrderPriorStr: OrderPriorStr,
        OrderPriorRowid: OrderPriorRowid,
        OrderPrior: OrderPriorRowid,
        OrderStartDate: OrderStartDate,
        OrderDoc: OrderDoc,
        OrderUserAdd: OrderUserAdd,
        OrderUserDep: OrderUserDep,
        OrderDate: OrderDate,
        OrderBillType: OrderBillType,
        OrderBillTypeRowid: OrderBillTypeRowid,
        OrderDIACat: PreOrderDIACat,
        OrderDIACatRowId: PreDIACatRowId,
        OrderSpeedFlowRate: OrderSpeedFlowRate,
        OrderFlowRateUnit: OrderFlowRateUnit,
        OrderFlowRateUnitRowId: OrderFlowRateUnitRowId
    };

    return DfaultData;
}

//设置Session数据
//document.body.onunload = DocumentUnloadHandler;
/*
$(body).unload(function(){
	$.messager.alert("警告","111");
});
*/
//window.onunload=DocumentUnloadHandler;
window.onbeforeunload = DocumentUnloadHandler;

function DocumentUnloadHandler(e) {
    //CreateEND();
    //如果医嘱保存成功就不用保留在session中(设置)
    //if (StoreUnSaveData!="1"){return}
    ClearSessionData();

    var SessionFieldName = "UserUnSaveData" + GlobalObj.EpisodeID;

    //未审核的医嘱
    var GirdData = GetGirdData();
    //设置字符串
    var UnsaveData = ""
    var UserID = session['LOGON.USERID'];
    var CTLocId = session['LOGON.CTLOCID'];
    var SaveCount = 0;
    for (var i = 0; i < GirdData.length; i++) {
        //$.messager.alert("警告",GirdData[i]);
        var oneData = JSON.stringify(GirdData[i]); //JSON.stringify
        //$.messager.alert("警告","001:"+oneData);	
        /*
        for(var k=0;k<colModelAry.length;k++){
        	var key=colModelAry[k].name;
        	var value=GirdData[i][colModelAry[k].name];
        	//无数据 不需要缓存
        	if(value=="" || value==undefined){continue;}
        	if(oneData==""){
        		oneData=key+":'"+value+"'";
        	}else{
        		oneData=oneData+","+colModelAry[k].name+":'"+GirdData[i][colModelAry[k].name]+"'";
        	}
        }
		
        oneData="{"+oneData+"}";
        */
        //$.messager.alert("警告",oneData);

        if (UnsaveData == "") {
            UnsaveData = oneData;
        } else {
            UnsaveData = UnsaveData + "###" + oneData;
        }
        //超过25条记录,则分开存储
        if ((i + 1) % 5 == 0) {
            SaveCount = SaveCount + 1;
            var retDetail = cspRunServerMethod(GlobalObj.SetUserUnSaveDataMethod, GlobalObj.EpisodeID, UserID, CTLocId, SaveCount, UnsaveData);
            UnsaveData = "";
        }
    }
    if (UnsaveData != "") {
        SaveCount = SaveCount + 1;
        var retDetail = cspRunServerMethod(GlobalObj.SetUserUnSaveDataMethod, GlobalObj.EpisodeID, UserID, CTLocId, SaveCount, UnsaveData);
    }
    //护士补录医嘱刷新清除右侧选中，清除已经关联的关系
    try {
        var par_win = window.parent.parent.parent.left.RPbottom
        if (par_win) {
            par_win.ClearCheck();
            NurseAddMastOrde("^^^", "");
        }
    } catch (e) {

    }
}
//获取缓存数据  2014-04-22
function GetSessionData() {
    //获取session数据 
    var FieldName = "UserUnSaveData" + GlobalObj.EpisodeID;
    //var UserUnSaveData=cspRunServerMethod(GlobalObj.GetSessionDataMethod,FieldName);
    var UserID = session['LOGON.USERID'];
    var CTLocId = session['LOGON.CTLOCID'];
    var UnSaveCount = cspRunServerMethod(GlobalObj.GetUserUnSaveCountMethod, GlobalObj.EpisodeID, UserID, CTLocId);
    //alert("UnSaveCount="+UnSaveCount)
    for (var i = 1; i <= parseInt(UnSaveCount); i++) {
        var UserUnSaveData = cspRunServerMethod(GlobalObj.GetUserUnSaveDataMethod, GlobalObj.EpisodeID, UserID, CTLocId, i);
        //$.messager.alert("警告","UserUnSaveData:"+UserUnSaveData);
        if (UserUnSaveData == "") { continue; }
        if (UserUnSaveData.split('@').length == 2) {
            if (UserUnSaveData.split('@')[1] == "%CSP.CharacterStream") {
                $.messager.alert("警告", "上一次页面未审核需重载记录数超过最大值,不能自动获取.");
                continue;
            }
        }
        //alert("UserUnSaveData"+i+"="+UserUnSaveData)
        var DataArry = UserUnSaveData.split("###");
        for (var j = 0; j < DataArry.length; j++) {
            var data = DataArry[j];
            var obj = {};
            if (data != "") {
                obj = eval("(" + data + ")");
            }
            var records = $('#Order_DataGrid').getGridParam("records");
            if (records >= 1) {
                //var rowids=$('#Order_DataGrid').getDataIDs();
                //获取当前最后一行ID  GetPreRowId() 不传参数 返回当前行ID
                var prerowid = GetPreRowId();
                obj["id"] = parseInt(prerowid) + 1
            } else {
                obj["id"] = 1
            }

            var rowid = Add_Session_row(obj);

            //SetRowData(rowid,data,"");
        }
    }
    //$("#Order_DataGrid").trigger("reloadGrid");	
}
//清除session数据
function ClearSessionData() {
    var UserID = session['LOGON.USERID'];
    var CTLocId = session['LOGON.CTLOCID'];
    var UnSaveCount = cspRunServerMethod(GlobalObj.GetUserUnSaveCountMethod, GlobalObj.EpisodeID, UserID, CTLocId);
    for (var i = 1; i <= parseInt(UnSaveCount); i++) {
        var ret = cspRunServerMethod(GlobalObj.SetUserUnSaveDataMethod, GlobalObj.EpisodeID, UserID, CTLocId, i, "");
    }

    //解除患者锁
    tkMakeServerCall("web.DHCDocOrderCommon","OrderEntryClearLock");
}
//保存 停止编辑 99999
function Save_Order_row() {
    var rowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {
        //
        if (GetEditStatus(rowids[i]) == true) {
            EndEditRow(rowids[i]);
        }
    }
}

//删除多行
function Delete_Order_row() {
    var IsExistVerifyFlag = false;
    var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
    if (ids == null || ids.length == 0) {
		if (PageLogicObj.FocusRowIndex > 0) {
			//如果有焦点行,则直接删除焦点行
			if ($("#jqg_Order_DataGrid_" + PageLogicObj.FocusRowIndex).attr("checked") != true) {
				$("#Order_DataGrid").setSelection(PageLogicObj.FocusRowIndex, true);
			}
		}
    }
	var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
	if (ids == null || ids.length == 0) {
		$.messager.alert("警告", "请选择要删除的记录");
		return;
	}
    var OrdItemRowStr = ""
    if (confirm("确定删除选中的记录吗？")) {
        var len = ids.length;
        var DeleteCount = 0;
        for (var i = 0; i < len; i++) {
            //已审核医嘱不能删除
            if (CheckIsItem(ids[i - DeleteCount]) == false) {
                //检查关联 删除主医嘱 去掉子医嘱关联
                var AllIds = GetAllRowId();
                for (var k = 0; k < AllIds.length; k++) {
                    //过滤已审核
                    if (CheckIsItem(AllIds[k]) == true) { continue; }
                    var OrderMasterSeqNo = GetCellData(AllIds[k], "OrderMasterSeqNo");
                    if (ids[i] == OrderMasterSeqNo) {
                        SetCellData(AllIds[k], "OrderMasterSeqNo", "");
                        $("#" + AllIds[k]).find("td").removeClass("OrderMasterS");
                    }
                }
                /*
                if(CheckIsClear(ids[0])==true){
                	//$.messager.alert("警告",ids[0]);
                	RebuidRowId(ids[0]-1);
                }	
                */
                //抗生素4
                DeleteAntReason(ids[i - DeleteCount]);
                $('#Order_DataGrid').delRowData(ids[i - DeleteCount]);
                DeleteCount = DeleteCount + 1;
            } else {
                IsExistVerifyFlag = true;
            }
        }
        if (IsExistVerifyFlag == true) {
            ///删除行之后会ids会发生变化，所以要重写遍历一遍需要删除的医嘱
            var len = ids.length;
            for (var i = 0; i < len; i++) {
                if (CheckIsItem(ids[i]) == true) {
                    IsExistVerifyFlag = true;
                    //ids.splice(0,1)
                    if (OrdItemRowStr == "") { OrdItemRowStr = ids[i] } else { OrdItemRowStr = OrdItemRowStr + "^" + ids[i] }
                }
            }
            //return
            if (OrdItemRowStr != "") {
                if (confirm("存在已审核的医嘱，是否确认停止", false)) {
                    //alert("OrdItemRowStr:"+OrdItemRowStr)
                    StopOrd(OrdItemRowStr.split("^"))
                    ReloadGrid("StopOrd")
                    SaveOrderToEMR()
                }
            }
        }
        //if (IsExistVerifyFlag==true) {dhcsys_alert("已审核医嘱未能删除!");}
        var records = $('#Order_DataGrid').getGridParam("records");
        if (records == 0) {
            //$.messager.alert("警告","001");					
            //RebuidRowId();
            $('#cb_Order_DataGrid').attr('checked', false);
            Add_Order_row();
        }
        //ReloadGrid();重新加载数据 审核之后已经加载
        SetScreenSum();
        //提示信息改变
        OrderMsgChange();
    }

    return websys_cancel();
}
//表单编辑
function FormEditRow() {
    //是否可开医嘱判断
    //判断诊断
    if (GlobalObj.MRDiagnoseCount == 0) {
        dhcsys_alert(t['NO_DIAGNOSE']);
        return;
    }

    var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
    var rowids = $('#Order_DataGrid').getDataIDs();
    var Clen = ids.length;
    var Alen = rowids.length;
    var rowid = "";
    var newrowid = "";
    if (Clen == 1) {
        rowid = ids[0];
        //先保存行
        EndEditRow(rowid);
    } else if (Alen >= 1 && Clen == 0) {
        //判断当前最后一行是否有数据
        var lastRowid = GetPreRowId();
        var lastARCIMRowid = GetCellData(lastRowid, "OrderARCIMRowid");
        if (lastARCIMRowid == "") {
            rowid = rowids[Alen - 1]; //lastRowid
            //先保存行
            EndEditRow(rowid);
        } else {
            //添加一行 编辑这一行 
            rowid = Add_Order_row();
            EndEditRow(rowid);
            //rowid="new";
            //newrowid=GetNewrowid();
        }
    } else {
        $.messager.alert("警告", "请选择需要编辑行");
        return;
    }
    //检查行是否可编辑
    if (CheckCanEdit(rowid) == false) { return false; }

    //$.messager.alert("警告",rowid);
    //产生表单
    $("#Order_DataGrid").jqGrid('editGridRow', rowid, {
        top: 5,
        left: 5,
        height: 480,
        width: 1000,
        dataheight: 410,
        datawidth: 990,
        editCaption: '编辑表单',
        beforeShowForm: InitFormStyle(rowid),
        //afterShowForm:InitFormData(ids[0]), 
        //onInitializeForm:InitFormData(ids[0]),
        //modal:true,
        processing: false,
        reloadAfterSubmit: false,
        recreateForm: true,
        closeAfterEdit: true,
        closeOnEscape: true,
        onclickSubmit: GetFormData,
        addedrow: 'last',
        onClose: function() {
            var OrderARCIMRowid = GetCellData("", "OrderARCIMRowid");
            if (OrderARCIMRowid == "" || OrderARCIMRowid == undefined) {
                DeleteRow(rowid);
            } else {
                EditRow(rowid);
                SetScreenSum();
            }
        },
        drag: true,
        viewPagerButtons: false
    });
    //填充数据
    InitFormData(rowid);
    SetFocusCell("", "OrderName");
}

//设置行数据  2014-04-10
//setRowData(rowid,data, cssprop)
function SetRowData(rowid, dataObj, cssprop) {
    if ($.isNumeric(rowid) == false) { return; }
    //data 对象
    /*
    var obj={};
    if(data != ""){
    	obj=eval("("+data+")");
    }
    */
    if (GetEditStatus(rowid) == true) {
        //var data={OrderName:"JHSDFASGAET"};		
        EndEditRow(rowid);
        var ret = $("#Order_DataGrid").setRowData(rowid, dataObj, cssprop);
        //$.messager.alert("警告",ret);
        //EditRow(rowid);
    } else {
        $("#Order_DataGrid").setRowData(rowid, dataObj, cssprop);
    }
}

function GetFormData(e) {

    var OrderARCIMRowid = GetCellData("", "OrderARCIMRowid"); //200
    var idoseqtystr = GetCellData("", "idoseqtystr");
    var OrderName = GetCellData("", "OrderName");
    dhcsys_alert(OrderARCIMRowid + ":" + OrderName);
}
//控制表单样式
function InitFormStyle(rowid) {
    //$.messager.alert("警告","beforeShowForm");
    //1:先取该行样式配置
    if ($.isNumeric(rowid) == true) {
        var StyleConfigStr = GetCellData(rowid, "StyleConfigStr");
        if (StyleConfigStr != "") {
            var StyleConfigObj = eval("(" + StyleConfigStr + ")");
            ChangeRowStyle(rowid, StyleConfigObj);
        }
    }
}
//控制表单数据填充
function InitFormData(rowid) {
    if ($.isNumeric(rowid) == false) { return; }
    // 如果添加数据不成功  不要将数据添加到行
    /*
    var OrderARCIMRowid=GetCellData(rowid,"OrderARCIMRowid");
    if(OrderARCIMRowid == "" || OrderARCIMRowid == undefined){return;}
    */
    //$.messager.alert("警告","afterShowForm");
    //1:先取该行样式配置
    var StyleConfigStr = GetCellData(rowid, "StyleConfigStr");
    var StyleConfigObj = {};
    if (StyleConfigStr != "") {
        StyleConfigObj = eval("(" + StyleConfigStr + ")");
    }
    ChangeRowStyle("undefined", StyleConfigObj);
    //表单禁止录入关联医嘱  StyleConfigObj
    $("#OrderMasterSeqNo").attr('disabled', true);

    //重建行数据 对于下拉框 重新值
    //2:取数据串
    //医嘱类型
    var OrderPriorStr = GetCellData(rowid, "OrderPriorStr");
    //剂量单位
    var idoseqtystr = GetCellData(rowid, "idoseqtystr");
    //数量单位 000000
    var OrderPackUOMStr = GetCellData(rowid, "OrderPackUOMStr");
    //接收科室
    var CurrentRecLocStr = GetCellData(rowid, "CurrentRecLocStr");
    //标本
    var OrderLabSpecStr = GetCellData(rowid, "OrderLabSpecStr");
    //$.messager.alert("警告",CurrentRecLocStr);
    //3:取上一次选择ID和关联数据 因为重置列表数据会有默认选项 所以在重置列表数据之前取值
    //var rowdata=GetRowData(rowid); //不用这个 因为如果行没有保存 会取到标签
    //医嘱类型
    var OrderPrior = GetCellData(rowid, "OrderPrior");
    var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    //剂量单位
    var OrderDoseUOM = GetCellData(rowid, "OrderDoseUOM"); //显示值	
    var OrderDoseUOMRowid = GetCellData(rowid, "OrderDoseUOMRowid");
    var OrderDoseQty = GetCellData(rowid, "OrderDoseQty");
    //接收科室
    var OrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
    //var OrderPackUOM=GetCellData(rowid,"OrderPackUOM"); //显示值
    //数量单位
    var OrderPackUOMRowid = GetCellData(rowid, "OrderPackUOMRowid");
    //标本
    var OrderLabSpecRowid = GetCellData(rowid, "OrderLabSpecRowid");
    //费别
    var OrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    var OrderPriorRemarksRowId = GetCellData(rowid, "OrderPriorRemarksRowId");

    //5:重置列表数据
    SetColumnList("undefined", "OrderPrior", OrderPriorStr);
    SetColumnList("undefined", "OrderDoseUOM", idoseqtystr);
    SetColumnList("undefined", "OrderRecDep", CurrentRecLocStr);
    //SetColumnList(rowid,"OrderPackUOM",OrderPackUOMStr);
    SetColumnList("undefined", "OrderLabSpec", OrderLabSpecStr);

    //6:设置上一次选项和关联数据
    if (StyleConfigObj.OrderDoseUOM != undefined && StyleConfigObj.OrderDoseUOM != false && StyleConfigObj.OrderDoseUOM != true) {
        SetCellData("undefined", "OrderDoseUOM", OrderDoseUOM);
    } else if (StyleConfigObj.OrderDoseUOM == undefined || StyleConfigObj.OrderDoseUOM == true) {
        SetCellData("undefined", "OrderDoseUOM", OrderDoseUOMRowid);
    }
    SetCellData("undefined", "OrderDoseQty", OrderDoseQty); //重建剂量单位下拉框的时候会设置默认值 所以需要还原	
    SetCellData("undefined", "OrderRecDep", OrderRecDepRowid);
    //SetCellData("undefined","OrderPrior",OrderPriorRowid);
    SetCellData("undefined", "OrderLabSpec", OrderLabSpecRowid);
    SetCellData("undefined", "OrderBillType", OrderBillTypeRowid);
    SetCellData("undefined", "OrderPriorRemarks", OrderPriorRemarksRowId);
    SetCellData(rowid, "OrderRecDepRowid", OrderRecDepRowid);
    //医嘱类型控制
    SetOrderPrior("undefined", OrderPriorRowid);

    //设置某些字段disable
    var RowDisableStr = GetCellData(rowid, "RowDisableStr");
    var RowDisableObj = {};
    if (RowDisableStr != "") {
        RowDisableObj = eval("(" + RowDisableStr + ")");
    }
    ChangeCellDisable("undefined", RowDisableObj);
}
//单元格取值  2014-03-24
function GetCellData(rowid, colname) {
    var CellData = "";
    if ($.isNumeric(rowid) == true) {
        var obj = document.getElementById(rowid + "_" + colname);
        //如果为select 取 text
        if (obj) {
            if (obj.type == "select-one") {
                CellData = $("#" + rowid + "_" + colname + " option:selected").text();
            } else if (obj.type == "checkbox") {
                if ($("#" + rowid + "_" + colname).attr("checked") == "checked") {
                    CellData = "Y";
                } else {
                    CellData = "N";
                }
            } else {
                CellData = $("#" + rowid + "_" + colname).val();
            }
        } else {
            CellData = $("#Order_DataGrid").getCell(rowid, colname);
        }
    } else {
        var obj = document.getElementById(colname);
        if (obj) {
            CellData = $("#" + colname).val();
        }
    }
    return CellData;
}
//单元格赋值  2014-03-24
function SetCellData(rowid, colname, data) {
    if ($.isNumeric(rowid) == true) {
        var obj = document.getElementById(rowid + "_" + colname);
        if (obj) {
            if (obj.type == "checkbox") {
                // data: true or  false
                var olddata = $("#" + rowid + "_" + colname).attr("checked");
                $("#" + rowid + "_" + colname).attr("checked", data);
            } else {
                var olddata = $("#" + rowid + "_" + colname).val();
                $("#" + rowid + "_" + colname).val(data);
            }
            //对于行上属性的数据修改,模拟onpropertychange事件的实现,在change事件中要同步调用
            CellDataPropertyChange(rowid, colname, olddata, data);
        } else {
            //rowid,colname,nData,cssp,attrp, forceupd
            //forceupd:true 允许设空值
            $("#Order_DataGrid").setCell(rowid, colname, data, "", "", true);
        }
    } else {
        var obj = document.getElementById(colname);
        if (obj) {
            $("#" + colname).val(data);
        }
    }
}

function CellDataPropertyChange(rowid, colname, olddata, newdata) {
    if (olddata == newdata) return false;
    if (colname == "OrderRecDep") {
        //不能直接调用OrderRecDepchangehandler(),因为在函数方法中有调用赋值OrderRecDep,会导致死循环;
        CheckCureItemConfig(rowid);
    }
    return true
}
//单选框勾选 
function SetCellChecked(rowid, colname, type) {
    if ($.isNumeric(rowid) == true) {
        var obj = document.getElementById(rowid + "_" + colname);
        if (obj) {
            $("#" + rowid + "_" + colname).attr("checked", type);
        }
    } else {
        var obj = document.getElementById(colname);
        if (obj) {
            $("#" + colname).attr("checked", type);
        }
    }
}

//设置焦点位置
function SetFocusCell(rowid, colname) {
    if ($.isNumeric(rowid) == true) {
        var obj = document.getElementById(rowid + "_" + colname);
        if (obj) {
            //websys_setfocus(rowid+"_"+colname);
            //$("#"+rowid+"_"+colname)[0].focus();
            if ((colname == "OrderName") && (GlobalObj.OEORIRealTimeQuery == 1)) {
                try {
                    //debugger;
                    setTimeout($('#' + rowid + '_OrderName').next('span').find('input').focus(), 50)
                } catch (e) { $.messager.alert("警告", e.message); }
            } else {
                websys_setfocus(rowid + "_" + colname);
                //$("#"+rowid+"_"+colname)[0].focus();
            }
        }
		PageLogicObj.FocusRowIndex=rowid;
    } else {
        var obj = document.getElementById(colname);
        if (obj) {
            websys_setfocus(colname);
            //$("#"+colname)[0].focus();
        }
    }
}

function CheckPoisonUserReason_Update(rowid) {
    //var OrderAntibApplyRowid=GetCellData(Row,"OrderAntibApplyRowid")
    var OrderAntibApplyRowid = GetCellData(rowid, "OrderAntibApplyRowid");
    var UserReasonId = GetCellData(rowid, "UserReasonId");
    var ShowTabStr = GetCellData(rowid, "ShowTabStr");

    var OrderName = GetCellData(rowid, "OrderName");
    if ((ShowTabStr == "UserReason") && (UserReasonId == "")) {
        dhcsys_alert(OrderName + "  请填写使用目的!")
        SetFocusCell(rowid, "UserReason");
        return false;
    }
    if (ShowTabStr == "Apply,UserReason") {
        if (UserReasonId == "") {
            dhcsys_alert(OrderName + "  请填写使用目的!")
            SetFocusCell("UserReason", Row);
            return false;
        }
        if (OrderAntibApplyRowid == "") {
            dhcsys_alert(OrderName + "  请填写登记表!")
            SetFocusCell(rowid, "UserReason");
            return false;
        }
    }
    return true;
}
//
function CheckOrderStartDate(OrderStartDate, CurrDate) {
    if (CurrDate == "") return true;
    if (OrderStartDate == "") return true;
    if (GlobalObj.CurrentDischargeStatus == "B") {
        CurrDate = GlobalObj.DischargeDate
    }
    //var DateFormatMode = "3"
    //if (PageLogicObj.defaultDataCache == "3") { DateFormatMode = "1" }
    OrderStartDate = tkMakeServerCall("web.DHCPAAdmSheets", "ConvertDateFormat", OrderStartDate, PageLogicObj.defaultDataCache);
    CurrDate = tkMakeServerCall("web.DHCPAAdmSheets", "ConvertDateFormat", CurrDate, PageLogicObj.defaultDataCache);
    //$.messager.alert("警告",OrderStartDate+"^"+CurrDate);
    if (OrderStartDate < CurrDate) return false;

    return true;
}

function IsWYInstr(InstrRowid) {
    if (InstrRowid == "") return false;
    if (GlobalObj.WYInstr == "") return false;
    var Instr = "^" + InstrRowid + "^"
    if (("^" + GlobalObj.WYInstr + "^").indexOf(Instr) < 0) return false;
    return true;
}
//弹出窗口增加备注
function AddRemarkClickhandler(Row) {
    var OEOrderNotes = "";
    if (Row < 1) return;
    OEOrderNotes = GetCellData(Row, "OrderDepProcNote")
    var rtnvalue = window.showModalDialog("websys.default.csp?WEBSYS.TCOMPONENT=UDHCOEOrder.DepProcNote&FocusRowIndex=" + Row + "&OEOrderNotes=" + unescape(OEOrderNotes), true, "dialogwidth:40em;dialogheight:40em;status:no;center:1;resizable:yes")
    if (rtnvalue) {
        SetCellData(Row, "OrderDepProcNote", unescape(rtnvalue));
    }
}

function CheckOrderDoseLimit(Row) {
    var OrderName = GetCellData(Row, "OrderName");
    var OrderHiddenPara = GetCellData(Row, "OrderHiddenPara");
    var OrderDepProcNote = GetCellData(Row, "OrderDepProcNote");
    var OrderMaxDoseQty = mPiece(OrderHiddenPara, String.fromCharCode(1), 3);
    var OrderMaxDoseQtyPerDay = mPiece(OrderHiddenPara, String.fromCharCode(1), 4);
    var OrderLimitDays = mPiece(OrderHiddenPara, String.fromCharCode(1), 5);
    var OrderMaxDoseQtyPerOrder = mPiece(OrderHiddenPara, String.fromCharCode(1), 6);
    //$.messager.alert("警告",OrderHiddenPara);
    //判断没有设置参数就不用走后面的处理
    if ((OrderMaxDoseQty == '') && (OrderMaxDoseQtyPerDay == '') && (OrderLimitDays == '') && (OrderMaxDoseQtyPerOrder == '')) return true;

    var DrugFormRowid = GetCellData(Row, "OrderDrugFormRowid");
    var OrderDoseQty = GetCellData(Row, "OrderDoseQty");
    var OrderDoseUOMRowid = GetCellData(Row, "OrderDoseUOMRowid");
    var freq = GetCellData(Row, "OrderFreqFactor");
    var dur = GetCellData(Row, "OrderDurFactor");
    var Interval = GetCellData(Row, "OrderFreqInterval");

    //取得以等效单位第一条为标准的剂量单位数量
    if (GlobalObj.CalEqDoseMethod != '') {
        var BaseDoseQty = cspRunServerMethod(GlobalObj.CalEqDoseMethod, OrderDoseUOMRowid, DrugFormRowid, OrderDoseQty);
        //$.messager.alert("警告","OrderDoseUOMRowid:"+OrderDoseUOMRowid+" DrugFormRowid:"+DrugFormRowid+" OrderDoseQty:"+OrderDoseQty);
        //$.messager.alert("警告","BaseDoseQty:"+BaseDoseQty+" OrderMaxDoseQty:"+OrderMaxDoseQty+" OrderMaxDoseQtyPerDay:"+OrderMaxDoseQtyPerDay+" OrderMaxDoseQtyPerOrder:"+OrderMaxDoseQtyPerOrder);
        if ((BaseDoseQty != '') && (BaseDoseQty != 0)) {
            if ((OrderMaxDoseQty != '') && (OrderMaxDoseQty != 0)) {
                if (parseFloat(BaseDoseQty) > parseFloat(OrderMaxDoseQty)) {
                    dhcsys_alert(t['ExceedPHDoseQtyLimit']);
                    SetFocusCell(Row, "OrderDoseQty");
                    return false;
                }
            }
            if ((OrderMaxDoseQtyPerDay != '') && (OrderMaxDoseQtyPerDay != 0)) {
                var BaseDoseQtyPerDay = parseFloat(BaseDoseQty) * parseFloat(freq);
                if ((parseFloat(BaseDoseQtyPerDay) > parseFloat(OrderMaxDoseQtyPerDay))) {
                    dhcsys_alert(t['ExceedPHDoseQtyPerDayLimit']);
                    SetFocusCell(Row, "OrderFreq");
                    return false;
                }
            }
            if ((OrderMaxDoseQtyPerOrder != '') && (OrderMaxDoseQtyPerOrder != 0)) {
                var BaseDoseQtyPerOrder = parseFloat(BaseDoseQty) * parseFloat(freq) * parseFloat(dur);
                if ((parseFloat(BaseDoseQtyPerOrder) > parseFloat(OrderMaxDoseQtyPerOrder))) {
                    dhcsys_alert(t['ExceedPHDoseQtyPerOrderLimit']);
                    SetFocusCell(Row, "OrderDur");
                    return false;
                }
            }
        }
        if ((OrderLimitDays != '') && (OrderLimitDays != 0)) {
            if ((parseFloat(dur) > parseFloat(OrderLimitDays)) && (OrderDepProcNote == '')) {
                AddRemarkClickhandler(Row);
                dhcsys_alert(t['ExceedPHDurationLimit']);
                SetFocusCell(Row, "OrderDepProcNote");
                return false;
            }
        }
    }
    return true;
    if ((Interval != "") && (Interval != null)) {
        var convert = Number(dur) / Number(Interval)
        var fact = (Number(dur)) % (Number(Interval));
        if (fact > 0) { fact = 1; } else { fact = 0; }
        dur = Math.floor(convert) + fact;
    }
    var NumTimes = parseFloat(freq) * parseFloat(dur);

}

function CheckDrug_Update(Row) {
    //设置焦点位置:SetFocusCell(rowid,colname)
    //单元格取值：GetCellData(rowid, colname)//id为数字取表格单元格值 否则取 表单
    //单元格赋值：SetCellData(rowid,colname,data) //对于combo data 传value
    var OrderName = GetCellData(Row, "OrderName");
    var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
    var OrderSeqNo = GetCellData(Row, "id");
    var OrderInstrRowid = GetCellData(Row, "OrderInstrRowid");
    var OrderDoseQty = GetCellData(Row, "OrderDoseQty");
    var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid");
    var OrderFreq = GetCellData(Row, "OrderFreq");
    var OrderDoseUOMRowid = GetCellData(Row, "OrderDoseUOMRowid");
    var OrderDoseUOM = GetCellData(Row, "OrderDoseUOM");
    var OrderDurRowid = GetCellData(Row, "OrderDurRowid");
    var OrderDur = GetCellData(Row, "OrderDur");
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderInstrRowid = GetCellData(Row, "OrderInstrRowid");
    var OrderInstr = GetCellData(Row, "OrderInstr");
    var OrderPackQty = GetCellData(Row, "OrderPackQty");
    var OrderPHForm = GetCellData(Row, "OrderPHForm");
    var PHPrescType = GetCellData(Row, "OrderPHPrescType");
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderBillTypeRowid = GetCellData(Row, "OrderBillTypeRowid");
    var OrderType = GetCellData(Row, "OrderType");
    var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");
    var OrderUsableDays = GetCellData(Row, "OrderUsableDays");
    var OrderFirstDayTimes = GetCellData(Row, "OrderFirstDayTimes");
    var OrderPriorDesc = GetCellData(Row, "OrderPrior")

    var CNOrderDur = "";
    var OrderInstrGroupArr = new Array();
    if (OrderMasterSeqNo != "") {
        if (OrderMasterSeqNo == OrderSeqNo) {
            SetCellData(Row, "OrderMasterSeqNo", "");
        } else {
            var ret = CheckMasterSeqNo(OrderMasterSeqNo);
            if (!ret) {
                dhcsys_alert(OrderName + t['Err_SeqNo']);
                //EditRow(Row);
                SetFocusCell(Row, "OrderMasterSeqNo");
                return false;
            }
        }
    }
    var CheckWYInstr = IsWYInstr(OrderInstrRowid);
    if (((OrderDoseQty == '') || (parseFloat(OrderDoseQty) == 0) || (isNumber(OrderDoseQty) == false)) && (!CheckWYInstr)) {
        dhcsys_alert(OrderName + t['NO_DoseQty']);
        //EditRow(Row);
        SetFocusCell(Row, "OrderDoseQty");
        return false;
    }
    //$.messager.alert("警告","001");
    if ((OrderFreqRowid == '') || (OrderFreq == "")) {
        dhcsys_alert(OrderName + t['NO_Frequence']);
        //EditRow(Row);
        SetFocusCell(Row, "OrderFreq");
        return false;
    }

    if (((OrderDoseUOMRowid == '') || (OrderDoseUOM == "")) && (!CheckWYInstr)) {
        dhcsys_alert(OrderName + t['NO_DoseUOM']);
        //EditRow(Row);
        SetFocusCell(Row, "OrderDoseUOM");
        return false;
    }
    if (((OrderDurRowid == '') || (OrderDur == '')) && (!CheckWYInstr) && (OrderPriorRowid != GlobalObj.LongOrderPriorRowid)) {
        dhcsys_alert(OrderName + t['NO_Duration']);
        //EditRow(Row);
        SetFocusCell(Row, "OrderDur");
        return false;
    }
    if ((OrderInstrRowid == '') || (OrderInstrRowid == '')) {
        dhcsys_alert(OrderName + t['NO_Instr']);
        //EditRow(Row);
        SetFocusCell(Row, "OrderInstr");
        return false;
    }

    //判断药品剂量
    if (CheckOrderDoseLimit(Row) == false) {

        return false;
    }

    if ((PHPrescType == "3") && (GlobalObj.HospitalCode == "HF") && (OrderARCIMRowid == "5612||1")) {
        FindCNMedCl = true;
        if ((OrderPackQty != "") && (OrderPackQty > 2)) {
            dhcsys_alert(OrderName + t['Exceed_CNDurCL']);
            //EditRow(Row);
            SetFocusCell(Row, "OrderDur");
            return false;
        }
    }
    //CJB2006-10-26+ 合肥修改草药颗粒剂14付控制;		
    if ((OrderPHForm == t['CNMedForm']) && (PHPrescType == "3") && (((GlobalObj.HospitalCode == "HF") && (OrderARCIMRowid != "5612||1")) || (GlobalObj.HospitalCode != "HF"))) {
        if ((OrderDurFactor != "") && (OrderDurFactor > 14)) {
            dhcsys_alert(OrderName + t['Exceed_KLCNDur']);
            //EditRow(Row);
            SetFocusCell(Row, "OrderDur");
            return false;
        }
    }
    if ((OrderPHForm == t['CNMedForm']) && (PHPrescType == "3") && (((GlobalObj.HospitalCode == "HF") && (OrderARCIMRowid != "5612||1")) || (GlobalObj.HospitalCode != "HF"))) {
        if ((OrderDurFactor != "") && (OrderDurFactor > 7)) {
            dhcsys_alert(OrderName + t['Exceed_CNDur']);
            //EditRow(Row);
            SetFocusCell(Row, "OrderDur");
            return false;
        }
        if (CNOrderDur == "") { CNOrderDur = OrderDurRowid } else {
            if (CNOrderDur != OrderDurRowid) {
                dhcsys_alert(t['Diff_CNDur']);
                //EditRow(Row);
                SetFocusCell(Row, "OrderDur");
                return false;
            }
        }
    }

    if (GlobalObj.PAAdmType != "I") {
        //$.messager.alert("警告",XYPrescCount+"^"+ZCYPrescCount);
        if (GlobalObj.HospitalCode == "NB") {
            if ((PHPrescType == "1") && (OrderMasterSeqNo == "")) { XYPrescCount = XYPrescCount + 1; }
            if ((PHPrescType == "2") && (OrderMasterSeqNo == "")) { ZCYPrescCount = ZCYPrescCount + 1; }
            if ((PHPrescType == "3") && (OrderMasterSeqNo == "")) { CYPrescCount = CYPrescCount + 1; }
            if (XYPrescCount > 5) {
                EditRow(Row);
                SetFocusCell(Row, "OrderName");
                dhcsys_alert(t['EXCEED_PRESCCOUNT']);
                return false;
            }
            if (ZCYPrescCount > 5) {
                EditRow(Row);
                SetFocusCell(Row, "OrderName");
                dhcsys_alert(t['EXCEED_PRESCCOUNT']);
                return false;
            }
        } else {
            //按用法分处方
            if (GlobalObj.PrescByInstr == 1) {
                var InstrGroupCode = cspRunServerMethod(GlobalObj.GetInstrGroupCodeMethod, OrderInstrRowid);
                if (InstrGroupCode != "") {
                    var PrescName = PHPrescType + '^' + OrderBillTypeRowid + '^' + InstrGroupCode + "^" + OrderInstr;
                    var FindPresc = false;
                    for (var j = 0; j <= OrderInstrGroupArr.length - 1; j++) {
                        var TempName = mPiece(OrderInstrGroupArr[j], "!", 0)
                        if (TempName == PrescName) {
                            PrescCount = eval(mPiece(OrderInstrGroupArr[j], "!", 1)) + 1
                            OrderInstrGroupArr[j] = PrescName + "!" + PrescCount;
                            FindPresc = true;
                        }
                    }
                    if (!FindPresc) {
                        OrderInstrGroupArr[OrderInstrGroupArr.length] = PrescName + "!" + 1;
                    }
                }
            }
            if (GlobalObj.HospitalCode == "ZGYKDFSYY") {
                //溶液剂量>=100ml静脉点滴的关联长期医嘱才能开到静脉配液中心
                if ((GlobalObj.IPDosingRecLoc != "") && (OrderType == "R") && (OrderPriorRowid == GlobalObj.LongOrderPriorRowid) && (OrderDoseQty >= 100) && (OrderDoseUOMRowid == GlobalObj.MLUOMRowId) && (OrderInstrRowid == GlobalObj.IVInstrRowId)) {
                    var ret = CheckDosingRecLoc(OrderRecDepRowid);
                    if (!ret) {
                        var ret = IsMasterOrderItem(OrderSeqNo);
                        if (ret) {
                            dhcsys_alert(OrderName + t['NotDosingRecLoc']);
                            return false;
                        }
                    }
                }
            }
            if (OrderType == "R") {
                var InsurFlag = cspRunServerMethod(GlobalObj.GetInsurFlagMethod, OrderBillTypeRowid, GlobalObj.PAAdmType);
                if (OrderUsableDays == "") OrderUsableDays = 0;
                if ((InsurFlag == 1) && (parseFloat(OrderUsableDays) > 200)) {
                    dhcsys_alert(OrderName + t['InsurOPUsableDaysLimit']);
                    return false;
                }
            }
        }
    }
    return { OrderInstrGroupArr: OrderInstrGroupArr };
}

function CheckMasterSeqNo(MasterSeqNo) {
    try {
        /*//09-04-17 郭荣勇 改成添加和删除拼串CheckMasterNoStr来加快审查速度
		var objtbl=document.getElementById('tUDHCOEOrder_List_Custom');
		var rows=objtbl.rows.length;
		for (var i=1; i<rows; i++){
			var Row=GetRow(i);
			var OrderName=GetCellData("OrderName",Row);
			var OrderItemRowid=GetCellData("OrderItemRowid",Row);
			var OrderARCIMRowid=GetCellData("OrderARCIMRowid",Row);
	    var OrderSeqNo=GetCellData("OrderSeqNo",Row);
			if ((OrderARCIMRowid!="")&&(OrderItemRowid=="")){
				if (OrderSeqNo==MasterSeqNo){return true}
			}
		}
	  

		var MasterSeqNo="!"+MasterSeqNo+"!";
		if (CheckMasterNoStr.indexOf(MasterSeqNo)!=-1) return true;
	*/
    } catch (e) { $.messager.alert("警告", e.message); }
    return true;
}

function CheckNotDrug_Update(Row) {
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderName = GetCellData(Row, "OrderName");
    if ((OrderPriorRowid == GlobalObj.OMOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid)) {
        dhcsys_alert(OrderName + t['OMOrderPriorNotAllow']);
        return false;
    }
    //自定价医嘱
    var OrderType = GetCellData(Row, "OrderType");
    if (OrderType == "P") {
        var OrderPrice = GetCellData(Row, "OrderPrice");
        OrderPrice = $.trim(OrderPrice);
        if (OrderPrice == '') {
            dhcsys_alert(OrderName + t['NO_OrderPrice']);
            EditRow(Row);
            var StyleConfigObj = { OrderPrice: true };
            ChangeRowStyle(Row, StyleConfigObj)
            SetFocusCell(Row, "OrderPrice");
            PageLogicObj.FocusRowIndex = Row;
            return false;
        } else {
            if ((!isNumber(OrderPrice)) || (parseFloat(OrderPrice) == 0)) {
                //dhcsys_alert(OrderName+t['Not_Number']);
                dhcsys_alert("自定义价格的医嘱【" + OrderName + "】价格不是有效数字");
                PageLogicObj.FocusRowIndex = Row;
                SetFocusCell(Row, "OrderPrice");
                return false;
            }
        }
    }
    //检验医嘱
    if (OrderType == "L") {
        /*
		//屏蔽以下判断改为在后台统一判断
        var OrderPackQty = GetCellData(Row, "OrderPackQty");
        var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
        var OrderStartDateStr = GetCellData(Row, "OrderStartDate")
        var OrderStartDate = OrderStartDateStr.split(" ")[0];
        if (OrderPackQty == "") { OrderPackQty = "1" }
        if (GlobalObj.HospitalCode != "ZGYKDFSYY") {
            var PrescCheck = CheckDateDupOrderItem(Row, OrderARCIMRowid, OrderStartDate);
            if (PrescCheck == true) {
                dhcsys_alert(OrderName + t['SAME_LABORDERITEM']);
                return false;
            }
        }
        var OrderLabSpecRowid = GetCellData(Row, "OrderLabSpecRowid");
        if (OrderLabSpecRowid == '') {
            dhcsys_alert(OrderName + t['NeedLabSpec']);
            return false;
        }
		*/
    }
    return true;
}

function CheckStock_Update(Row) {
    var OrderPriorRemarks = GetCellData(Row, "OrderPriorRemarksRowId");
    var OrderName = GetCellData(Row, "OrderName");
    var OrderBaseQty = GetCellData(Row, "OrderBaseQty");
    var OrderFreqFactor = GetCellData(Row, "OrderFreqFactor");
    var OrderPackQty = GetCellData(Row, "OrderPackQty");
    var OrderConFac = GetCellData(Row, "OrderConFac");
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");
    var OrderAlertStockQty = GetCellData(Row, "OrderAlertStockQty");
    var OrderRecDep = GetCellData(Row, "OrderRecDep");

    var IPNeedBillQtyFlag = "0";
    var Qty = 1;
    if (OrderBaseQty == "") { OrderBaseQty = 1; }
    if (OrderFreqFactor == "") { OrderFreqFactor = 1; }
    if ((OrderPackQty != "") && (parseFloat(OrderPackQty) != 0)) {
        Qty = parseFloat(OrderConFac) * parseFloat(OrderPackQty);
    } else {
        Qty = parseFloat(OrderBaseQty) * parseFloat(OrderFreqFactor);
        if (Qty < 1) { Qty = 1 }
    }
    //$.messager.alert("警告",Qty);
    //自备药医嘱不用判断库存
    if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid) && (OrderPriorRemarks != "OM") && (OrderPriorRemarks != "ZT")) {
        //CheckBeforeUpdateMethodhod包含了库存判断
        var ret = cspRunServerMethod(GlobalObj.CheckBeforeUpdateMethod, OrderARCIMRowid, Qty, OrderRecDepRowid, GlobalObj.PAAdmType);
        var Check = mPiece(ret, "^", 0);
        IPNeedBillQtyFlag = mPiece(ret, "^", 1);
        if (Check == '0') {
            //根据设定的最小量来判断是否需要提示库存量
            if ((OrderAlertStockQty != "") && (OrderAlertStockQty != 0) && (GlobalObj.PAAdmType == "O")) {
                var StockQtyStr = cspRunServerMethod(GlobalObj.GetStockQtyMethod, OrderRecDepRowid, OrderARCIMRowid);
                var StockQty = mPiece(StockQtyStr, "^", 0);
                var PackedQty = mPiece(StockQtyStr, "^", 1);
                var LogicQty = parseFloat(StockQty) - parseFloat(PackedQty);
                if (parseFloat(OrderAlertStockQty) > LogicQty) {
                    dhcsys_alert(OrderName + t['QTY_NOTENOUGH'] + "," + t['STOCKQTY'] + LogicQty);
                    SetFocusCell(Row, "OrderPackQty");
                    return false;
                }
            }
            dhcsys_alert(OrderName + t['QTY_NOTENOUGH']);
            SetFocusCell(Row, "OrderPackQty");
            return false;
        } else if (Check == "-1") {
            dhcsys_alert(OrderName + OrderRecDep + t['QTY_INCItemLocked']);
            return false;
        }
    }

    return { IPNeedBillQtyFlag: IPNeedBillQtyFlag };
}

function CheckPackQty_Update(Row, IPNeedBillQtyFlag) {
    //判断整数量输入值是否为有效数值
    var OrderPackQty = $.trim(GetCellData(Row, "OrderPackQty"));
    var OrderHiddenPara = GetCellData(Row, "OrderHiddenPara");
    var OrderName = GetCellData(Row, "OrderName");
    var OrderType = GetCellData(Row, "OrderType");
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderRecDep = GetCellData(Row, "OrderRecDep");

    var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
    var AllowEntryDecimalItemCatStr = "^" + GlobalObj.AllowEntryDecimalItemCat + "^";
    //配液医嘱不可以录入整包装数量
    var OrderNeedPIVAFlag = GetCellData(Row, "OrderNeedPIVAFlag");
    if (OrderNeedPIVAFlag == "Y") {
        SetCellData(Row, "OrderPackQty", "");
        return true;
    }
    if ((AllowEntryDecimalItemCatStr.indexOf("^" + OrderItemCatRowid + "^")) == -1) {
        if (OrderType == "R") {
            if ((OrderPackQty != "") && ((!isInteger(OrderPackQty)) || (parseFloat(OrderPackQty) == 0))) {
                dhcsys_alert(OrderName + t['Not_Number']);
                SetFocusCell(Row, "OrderPackQty");
                return false;
            }
        } else {
            if ((OrderPackQty != "") && ((!isNumber(OrderPackQty)) || (parseFloat(OrderPackQty) == 0))) {
                dhcsys_alert(OrderName + t['Not_Number']);
                SetFocusCell(Row, "OrderPackQty");
                return false;
            } else {
                if ((OrderType == "L") && (eval(OrderPackQty) != 1)) {
                    //深圳中医院对检验的特殊要求
                    if (((GlobalObj.HospitalCode == "SZZYY") && (OrderPackUOM == "次")) || (GlobalObj.HospitalCode != "SZZYY")) {
                        dhcsys_alert(t['LAB_QtyLimit']);
                        SetFocusCell(Row, "OrderPackQty");
                        return false;
                    }
                }

                var JCOrderFlag = cspRunServerMethod(GlobalObj.GetItemServiceFlagMethod, OrderARCIMRowid);
                if ((JCOrderFlag == "1") && (eval(OrderPackQty) != 1)) {
                    dhcsys_alert(t['JC_QtyLimit']);
                    SetFocusCell(Row, "OrderPackQty");
                    return false;
                }
            }
        }
    } else {
        //允许录入小数
        //$.messager.alert("警告",isNaN(OrderPackQty)+"##"+parseFloat(OrderPackQty))
        if ((isNaN(OrderPackQty)) || (parseFloat(OrderPackQty) <= 0) || (OrderPackQty == "")) {
            //$.messager.alert("警告",OrderName+t['Not_Number']);
            //SetFocusCell(Row,"OrderPackQty");
            //return false;
            if (GlobalObj.PAAdmType != "I") {
                dhcsys_alert(OrderName + t['Not_Number']);
                SetFocusCell(Row, "OrderPackQty");
                return false;
            }
        }
    }

    if (OrderPackQty == "") { OrderPackQty = 0 }
    //对于整包装数量的判断
    if (GlobalObj.PAAdmType != "I") {
        if (parseFloat(OrderPackQty) == 0) {
            dhcsys_alert(OrderName + t['NO_PackQty']);
            SetFocusCell(Row, "OrderPackQty");
            return false;
        }
    } else {
        //判断出院带药是否必须要录整包装
        if ((parseInt(OrderPackQty) == 0) && (OrderPriorRowid == GlobalObj.OutOrderPriorRowid) && (GlobalObj.OutOrderNeedPackQty == "1")) {
            dhcsys_alert(OrderName + t['NO_PackQty']);
            SetFocusCell(Row, "OrderPackQty");
            return false;
        }
        //住院判断是否必须要录整包装
        var IPNeedBillQty = mPiece(OrderHiddenPara, String.fromCharCode(1), 1);
        //var IPNeedBillQtyFlag="";
        if ((parseFloat(OrderPackQty) == 0) && ((IPNeedBillQty == "Y") || (IPNeedBillQtyFlag == "1")) && (OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
            dhcsys_alert(OrderName + t['NO_PackQty']);
            SetFocusCell(Row, "OrderPackQty");
            return false;
        }
    }
    //控制医嘱数量不能超过1000,避免录入错误导致不能账单的问题
    if (parseFloat(OrderPackQty) > 1000) {
        dhcsys_alert(OrderName + t['LimitMax_PackQty']);
        SetFocusCell(Row, "OrderPackQty");
        return false;
    }

    //判断整数量是否符合限量控制和疗程控制

    if (CheckDurationPackQty(Row) == false) {
        SetFocusCell(Row, "OrderPackQty");
        return false;
    }
    return true;
}

function CheckDurationPackQty(Row) {
    //判断医嘱整数量的限定值
    var OrderName = GetCellData(Row, "OrderName");
    var OrderMaxQty = GetCellData(Row, "OrderMaxQty");
    var OrderPackQty = GetCellData(Row, "OrderPackQty");
    if ((OrderMaxQty > 0) && (parseFloat(OrderPackQty) > parseFloat(OrderMaxQty))) {
        dhcsys_alert(OrderName + t['MedMaxQty'] + OrderMaxQty);
        return false;
    }
    var OrderType = GetCellData(Row, "OrderType");
    if (OrderType != "R") return true;
    if (GlobalObj.PAAdmType != "O") return true;
    var OrderMaxDurFactor = GetCellData(Row, "OrderMaxDurFactor");
    if (OrderMaxDurFactor == 0) { return true; }
    var Interval = GetCellData(Row, "Interval");
    if ((Interval != "") && (Interval != null)) {
        var convert = Number(OrderMaxDurFactor) / Number(Interval)
        var fact = (Number(OrderMaxDurFactor)) % (Number(Interval));
        if (fact > 0) { fact = 1; } else { fact = 0; }
        OrderMaxDurFactor = Math.floor(convert) + fact;
    }
    var freq = GetCellData(Row, "OrderFreqFactor");
    var OrderConFac = GetCellData(Row, "OrderConFac");
    var OrderBaseQty = GetCellData(Row, "OrderBaseQty");
    if (OrderBaseQty == "") OrderBaseQty = 1;
    var CheckdurDoseQtySum = parseFloat(OrderBaseQty) * parseFloat(freq) * parseFloat(OrderMaxDurFactor);
    var CheckPackQty = CheckdurDoseQtySum / parseFloat(OrderConFac);
    CheckPackQty = CheckPackQty.toFixed(4);
    CheckPackQty = Math.ceil(CheckPackQty);
    if (OrderPackQty > CheckPackQty) {
        dhcsys_alert(OrderName + t['ExceedDurationQty']);
        return false;
    }
    return true;
}

function CheckKSS_Update(Row) {
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderPoisonCode = GetCellData(Row, "OrderPoisonCode");
    var OrderAntibApplyRowid = GetCellData(Row, "OrderAntibApplyRowid");

    if ((OrderPriorRowid == GlobalObj.ShortOrderPriorRowid) && (OrderPoisonCode.indexOf("KSS") > -1)) {
        //加一个条件（申请单为未审核给与提示）
        if ((OrderAntibApplyRowid != "") && (OrderAntibApplyRowid != "undefined")) {
            var AppStatusFlag = tkMakeServerCall("web.DHCDocAntiCommon", "GetAntibioSta", OrderAntibApplyRowid)
            if (AppStatusFlag == 0) {
                $.messager.alert("警告", "请上级医师24小时内审核");
            }
        }
    }
    return true;
}

function GetConflictItemsInfo(ARCIMRowid) {
    var EpisodeID = GlobalObj.EpisodeID;
    var ConflictItemsInfo = "";
    if (GlobalObj.CheckConflictMethod) {
        var ret = cspRunServerMethod(GlobalObj.CheckConflictMethod, EpisodeID, ARCIMRowid);
        var CheckConflict = mPiece(ret, "^", 0)
        var ConflictItemDesc = mPiece(ret, "^", 1)
        if (CheckConflict == "Y") {
            //$.messager.alert("警告",t['ItemConflict']+ConflictItemDesc+t['ItemConflictAutoStop']+ConflictItemDesc);
            //return false;
            if (ConflictItemsInfo == "") {
                ConflictItemsInfo = ConflictItemDesc;
            } else {
                ConflictItemsInfo = ConflictItemsInfo + "  " + ConflictItemDesc;
            }
        }
    }
    return ConflictItemsInfo;
}

function GetPrescLimit(OrderPrescType, OrderBillTypeRowid) {
    var PrescLimitStr = "";
    if (GlobalObj.GetPrescLimitMethod) {
        var PrescLimitStr = cspRunServerMethod(GlobalObj.GetPrescLimitMethod, GlobalObj.PAAdmType, OrderPrescType, OrderBillTypeRowid);
    }
    return PrescLimitStr;
}

function CheckBillTypeSum(Amount, OrderBillTypeRowid, OrderBillType) {
    if ((GlobalObj.PAAdmType != "O") || (Amount == 0)) { return true }
    //只有在门诊时才存在PrescBillType TAB页
    //OrderBillType为处方(DHCPAADMPrescType)描述,OrderBillTypeRowid为费别Rowid

    var PrescLimitSum = "",
        PrescLimitType = "";
    var PrescLimitStr = GetPrescLimit(OrderBillType, OrderBillTypeRowid);
    if (PrescLimitStr != "") {
        PrescLimitSum = PrescLimitStr.split("!")[5];
        //处方限制类型 M 本日 S 本科本日
        PrescLimitType = PrescLimitStr.split("!")[9];
    }
    if (GlobalObj.CheckBillTypeSumMethod != "") {
        var retDetail = cspRunServerMethod(GlobalObj.CheckBillTypeSumMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, PrescLimitSum, Amount, PrescLimitType);
        if (retDetail == 1) { return false }
    }
    return true
}
///出院带药根据费别的病人费用限制
function CheckOutOrderSum(Amount, OrderBillTypeRowid) {
    if ((GlobalObj.PAAdmType != "I") || (Amount == 0)) { return true }
    //只有在门诊时才存在PrescBillType TAB页
    if (GlobalObj.CheckOutOrderSumMethod != "") {
        var retDetail = cspRunServerMethod(GlobalObj.CheckOutOrderSumMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, Amount);
        if (retDetail == 1) { return false }
    }
    return true
}

function CheckMasterConsistency(Row) {
    var MastOrderPriorRowid = "";
    var LinkedMasterOrderRowid = GetCellData(Row, "LinkedMasterOrderRowid");
    var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");

    if (LinkedMasterOrderRowid != "") {
        MastOrderPriorRowid = tkMakeServerCall('web.DHCDocOrderCommon', 'GetNurMastOrderPriorRowid', LinkedMasterOrderRowid);
    } else if (OrderMasterSeqNo != "") {
        MastOrderPriorRowid = GetCellData(OrderMasterSeqNo, "OrderPriorRowid");
    }
    if (MastOrderPriorRowid != "") {
        var MastOrderPriorFlag = IsLongPrior(MastOrderPriorRowid);
        var OrderPriorFlag = IsLongPrior(OrderPriorRowid);
        if (MastOrderPriorFlag != OrderPriorFlag) {
            $.messager.alert("警告", "关联医嘱类型不同，不给予审核！");
            return false;
        }
    }
    return true;
}

function CheckPriorAllowRange(OrderPriorRowid, OrderARCIMRowid) {
    var ret = 0
    if (GlobalObj.CheckPriorAllowRangeMethod != "") {
        ret = cspRunServerMethod(GlobalObj.CheckPriorAllowRangeMethod, OrderPriorRowid, OrderARCIMRowid);
        return ret;

    }
    return ret;
}
//******************** 对于数据处理的函数  放后面 *****************//
//结束编辑  数据检查
//此处为医嘱审核时的检查,主要检查在录入过程中会随时变化,在录入无法监控的一些审查
function CheckBeforeUpdate() {
    //update by zf 2012-05-14
    if (CPWCheck() !== true) return false;
    var XYPrescCount = 0;
    var ZCYPrescCount = 0;
    var CYPrescCount = 0;
    var NewRows = 0;
    var FindCNMedCl = false;
    var NeedCheckDeposit = false;
    var Amount = 0;
    var ConflictItemsInfo = "";
    var OrderInstrGroupArr = new Array();
    var ARCIMRowidStr = "";
    UnSaveARCIMRowidStr = "";
    //try{

    var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
    var CurrDateTimeArr = CurrDateTime.split("^");
    var CurrDate = CurrDateTimeArr[0];
    var OrderMaterialBarCodeStr = "";

    var rowids = $('#Order_DataGrid').getDataIDs();
    var OrderBillTypeArray = new Array()
    var OrderBillTypeDescArray = new Array()
    var OrderSeqNoArray = new Array()
    for (var i = 0; i < rowids.length; i++) {
        //过滤已审核
        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        if ((OrderItemRowid != "") || (OrderARCIMRowid == "")) { continue; }
        var OrderName = GetCellData(rowids[i], "OrderName");
        var OrderType = GetCellData(rowids[i], "OrderType");
        var OrderRecDepRowid = GetCellData(rowids[i], "OrderRecDepRowid");
        var OrderPriorRowid = GetCellData(rowids[i], "OrderPriorRowid");
        var OrderFreqRowid = GetCellData(rowids[i], "OrderFreqRowid");
        var OrderFreq = GetCellData(rowids[i], "OrderFreq");
        var OrderFreqFactor = GetCellData(rowids[i], "OrderFreqFactor");
        var OrderDurRowid = GetCellData(rowids[i], "OrderDurRowid");
        var OrderDur = GetCellData(rowids[i], "OrderDur");
        var OrderDurFactor = GetCellData(rowids[i], "OrderDurFactor");
        var OrderInstrRowid = GetCellData(rowids[i], "OrderInstrRowid");
        var OrderInstr = GetCellData(rowids[i], "OrderInstr");
        var OrderDoseQty = GetCellData(rowids[i], "OrderDoseQty");
        var OrderDoseUOMRowid = GetCellData(rowids[i], "OrderDoseUOMRowid");
        var OrderDoseUOM = GetCellData(rowids[i], "OrderDoseUOM");
        var OrderPackQty = GetCellData(rowids[i], "OrderPackQty");
        var OrderSeqNo = GetCellData(rowids[i], "OrderSeqNo");
        var OrderMasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
        var OrderPHPrescType = GetCellData(rowids[i], "OrderPHPrescType");
        var OrderConFac = GetCellData(rowids[i], "OrderConFac");
        var OrderBaseQty = GetCellData(rowids[i], "OrderBaseQty");
        var OrderPrice = GetCellData(rowids[i], "OrderPrice");
        var OrderStartDateStr = GetCellData(rowids[i], "OrderStartDate");
        var OrderStartDate = "";
        if (OrderStartDateStr != "") {
            OrderStartDate = OrderStartDateStr.split(" ")[0];
        }
        var OrderPHForm = GetCellData(rowids[i], "OrderPHForm");
        var OrderSum = GetCellData(rowids[i], "OrderSum");
        var OrderEndDate = GetCellData(rowids[i], "OrderEndDate");
        var OrderAlertStockQty = GetCellData(rowids[i], "OrderAlertStockQty");
        var OrderBillTypeRowid = GetCellData(rowids[i], "OrderBillTypeRowid");
        var OrderHiddenPara = GetCellData(rowids[i], "OrderHiddenPara");
        var OrderPackUOM = GetCellData(rowids[i], "OrderPackUOM");
        var OrderFirstDayTimes = GetCellData(rowids[i], "OrderFirstDayTimes");
        var OrderSpeedFlowRate = GetCellData(rowids[i], "OrderSpeedFlowRate");
        var OrderFlowRateUnit = GetCellData(rowids[i], "OrderFlowRateUnit");
        var OrderFlowRateUnitRowId = GetCellData(rowids[i], "OrderFlowRateUnitRowId");
        var AntUseReason = GetCellData(rowids[i], "AntUseReason");
        var OrderPoisonCode = GetCellData(rowids[i], "OrderPoisonCode");
        var OrderUsableDays = GetCellData(rowids[i], "OrderUsableDays");
        var OrderSum = GetCellData(rowids[i], "OrderSum");
        var OrderDepProcNote = GetCellData(rowids[i], "OrderDepProcNote");
        var OrderPilotProRowid = GetCellData(rowids[i], "OrderPilotProRowid");
        var OrderMaxDurFactor = GetCellData(rowids[i], "OrderMaxDurFactor");
        var Orderid = GetCellData(rowids[i], "id");
        if (OrderSeqNoArray[Orderid]) {
            $.messager.alert("提示信息", OrderName + "医嘱序号重复,请删除重复项目!");
            return false;
        }
        OrderSeqNoArray[Orderid] = Orderid
        var OrderBillType = GetCellData(rowids[i], "OrderBillType");
        OrderBillTypesum = OrderBillTypeArray[OrderBillTypeRowid];
        if (OrderBillTypesum == undefined) { var OrderBillTypesum = 0 }
        OrderBillTypeArray[OrderBillTypeRowid] = parseFloat(OrderSum) + parseFloat(OrderBillTypesum)
        OrderBillTypeDescArray[OrderBillTypeRowid] = OrderBillType
        if ((OrderItemRowid != "") || (OrderARCIMRowid == "")) continue;
        if (OrderPriorRowid == "") { $.messager.alert("警告", OrderName + "请选择相应的医嘱类型!"); return false; }
        if (OrderRecDepRowid == "") { $.messager.alert("警告", OrderName + "请选择相应的接收科室"); return false; }
        var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
        if ((OrderFreqFactor != "") && (OrderFirstDayTimes != "") && (Number(OrderFirstDayTimes) > Number(OrderFreqFactor))) { $.messager.alert("警告", OrderName + t['FirstMaxNum']); return false }
        if (GlobalObj.PAAdmType != "I") {
	        var OrderDIACatRowId=GetCellData(rowids[i], "OrderDIACatRowId"); //诊断类别
            var ret = cspRunServerMethod(GlobalObj.CheckDiagnosCatArcimPassMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, OrderARCIMRowid,OrderDIACatRowId)
            var DiagnosCatArcimPass=ret.split("^")[0];
            if (DiagnosCatArcimPass == "0") {
                $.messager.alert("警告", t['DiagnosCatArcimAllow']);
                return false;
            }
            var DCDurationFactor=ret.split("^")[1];
            if (parseFloat(DCDurationFactor)>parseFloat(OrderMaxDurFactor)&& (OrderType == 'R')){
	            OrderMaxDurFactor=DCDurationFactor;
	        }
            
        }

        //皮试医嘱必须为临时医嘱的控制判断
        var OrderSkinTest = GetCellData(rowids[i], "OrderSkinTest")
        if ((GlobalObj.CFSkinTestPriorShort == 1) && (OrderSkinTest == "Y")) {
            if (IsLongPrior(OrderPriorRowid) == 1) {
                $.messager.alert("警告", OrderName + "皮试医嘱医嘱类型只能是临时,请修改。", "warning", function() { SetFocusCell(rowids[i], "OrderName"); });
                return false;
            }
        }
        //临床药理用药子类检测
        var PilotCatFlag = cspRunServerMethod(GlobalObj.CheckPilotCat, GlobalObj.EpisodeID, OrderARCIMRowid, GlobalObj.PPRowId);
        if (PilotCatFlag != "Y") {
            if (GlobalObj.PPRowId == "") {
                $.messager.alert("警告", OrderName + "此药品医嘱为药理项目医嘱,只能在有药理项目的情况下才可下.");
            } else {
                $.messager.alert("警告", OrderName + "此药品医嘱为非药理项目药品,不能在有药理项目的情况下开.");
            }
            return false;
        }
        if ((GlobalObj.PPRowId == "") && (OrderPilotProRowid != "")) {
            $.messager.alert("警告", OrderName + "选择过科研列表,请在药理患者列表中选择对应的患者后录入，或者删除该项目从新录入？");
            return false;
        }

        //---------------高值耗材
        if (GlobalObj.HighValueControl == 1) {
            var IncItmHighValueFlag = cspRunServerMethod(GlobalObj.GetIncItmHighValueFlag, OrderARCIMRowid)
            var OrderMaterialBarCode = GetCellData(rowids[i], "OrderMaterialBarcodeHiden");
            if ((IncItmHighValueFlag == "Y") && (OrderMaterialBarCode == "")) {
                $.messager.alert("警告", OrderName + " 属于高值耗材,只能通过扫条码下医嘱!", "warning", function() { SetFocusCell(rowids[i], "OrderMaterialBarCode"); })
                return false;
            }
            if ((OrderMaterialBarCode != "") && (IncItmHighValueFlag == "Y")) {
                if (parseInt(OrderPackQty) > 1) {
                    $.messager.alert("警告", OrderName + " 属于高值耗材,数量只能为1!", "warning", function() { SetFocusCell(rowids[i], "OrderPackQty"); })
                    SetCellData(rowids[i], "OrderPackQty", 1);
                    OrderPackQtychangeCommon(rowids[i]);
                    return false;
                }
                var RtnMaterialBarcode = CheckMaterialBarcode(OrderMaterialBarCode, rowids[i])
                if (RtnMaterialBarcode == false) { return false; }
                if (OrderMaterialBarCodeStr != "") {
                    if ((("^" + OrderMaterialBarCodeStr + "^").indexOf(("^" + OrderMaterialBarCode + "^"))) >= 0) { $.messager.alert("警告", "一次录入不能存在两条相同条码的医嘱！"); return false }
                }
                if (OrderMaterialBarCodeStr == "") { OrderMaterialBarCodeStr = OrderMaterialBarCode } else { OrderMaterialBarCodeStr = OrderMaterialBarCodeStr + "^" + OrderMaterialBarCode }
            }
        } else {
            //如果不进行高值条码控制则录入什么就是什么
            var OrderMaterialBarCode = GetCellData(rowids[i], "OrderMaterialBarcode");

        }
        var ARCIMRequireNoteFlag = cspRunServerMethod(GlobalObj.GetARCIMRequireNoteFlag, OrderARCIMRowid)
        if ((ARCIMRequireNoteFlag == "Y") && (OrderDepProcNote == "")) {
            $.messager.alert("警告", OrderName + t['OrderNeedNote'], "warning", function() { SetFocusCell(rowids[i], "OrderDepProcNote"); })
            return false;
        }
        //检测医嘱日期
        var rtnCheckDate = CheckOrderDateTime(rowids[i])
        if (!rtnCheckDate) { return false; }
        if ((OrderPrice == "") || (OrderPrice < 0)) {
            alert(OrderName + "价格无效,不允许审核")
            return false
        }

        //静脉配液接收科室验证
        var OrderNeedPIVAFlag = GetCellData(rowids[i], "OrderNeedPIVAFlag");
        if (OrderNeedPIVAFlag == "Y") {
            if (GlobalObj.IPDosingRecLocStr != "") {
                if (("^" + GlobalObj.IPDosingRecLocStr + "^").indexOf("^" + OrderRecDepRowid + "^") < 0) {
                    $.messager.alert("警告", OrderName + "静脉配液医嘱请选择相应的静配接收科室");
                    return false;
                }
            }
        }
        //--------------
        //检查是否输写使用目的和申请单 
        //CheckPoisonUserReason_Update(rowids[i]);

        //判断是否此药房只发散包装
        if ((GlobalObj.CFIPDispensingRecLoc != '') && (GlobalObj.PAAdmType == "I") && (OrderType == 'R')) {
            var DispensingRecLocStr = '^' + GlobalObj.CFIPDispensingRecLoc + '^';
            var OrderRecDepStr = '^' + OrderRecDepRowid + '^';
            if ((DispensingRecLocStr.indexOf(OrderRecDepStr) != -1) && (OrderPackQty != "")) {
                $.messager.alert("警告", OrderName + t['PackQtyNotAccept']);
                return false;
            }
        }

        //医嘱开始日期不能小于当前日期
        //$.messager.alert("警告",OrderStartDate+"^"+CurrDate);
        if (!(CheckOrderStartDate(OrderStartDate, CurrDate)) && (GlobalObj.ModifyDateTimeAuthority != "1")) {
            $.messager.alert("警告", OrderName + " " + t['STARTDATE_EXCEEDTODAY'], "warning", function() { SetFocusCell(rowids[i], "OrderStartDate"); });
            EditRow(rowids[i]);
            return false;
        }
        if (OrderRecDepRowid == "" || OrderRecDepRowid == null) {
            $.messager.alert("警告", OrderName + "请选择接收科室", "warning", function() { SetFocusCell(rowids[i], "OrderRecDep"); });
            return false;
        }

        //药品与非药品的基本审查
        var Ret = "";
        if (OrderType == "R") {
            //$.messager.alert("警告","001");
            var Ret = CheckDrug_Update(rowids[i]);
            if (Ret) {
                var RetObj = Ret;
                OrderInstrGroupArr = RetObj.OrderInstrGroupArr;
            }
        } else {
            //$.messager.alert("警告","002");
            var Ret = CheckNotDrug_Update(rowids[i]);
        }
        if (Ret == false) return false;
        var OrderPriorRemarks = GetCellData(rowids[i], "OrderPriorRemarksRowId");
        if ((OrderPriorRemarks == "ZT") && (GlobalObj.PAAdmType == "I")) {
            var OrderPrice = GetCellData(rowids[i], "OrderPrice");
            var OrderType = GetCellData(rowids[i], "OrderType");
            if ((OrderType != "R") && (+OrderPrice != 0)) {
                $.messager.alert("警告", "住院患者只有药品或0费用医嘱才能选择嘱托", "warning", function() { SetFocusCell(rowids[i], "OrderPriorRemarks"); });
                return false;
            }
        }
        //库存审查
        var IPNeedBillQtyFlag = "0";
        var Ret = CheckStock_Update(rowids[i]);

        if (Ret == false) { return false; } else {
            var Obj = Ret;
            IPNeedBillQtyFlag = Obj.IPNeedBillQtyFlag;
        }

        //医嘱数量审查
        var Ret = CheckPackQty_Update(rowids[i], IPNeedBillQtyFlag);

        if (Ret == false) {
            SetFocusCell(rowids[i], "OrderPackQty");
            return false;
        }
        //判断治疗项目
        var Ret = CheckDHCDocTreatItem(rowids[i]);
        if (Ret == false) return false;

        //根据诊断对药品最大疗程的限制,使用设置:medtrak-医生站配置-诊断设置-诊断疗程限制
        var Ret = CheckDiagnosLimitDur(OrderDurFactor);
        if (Ret == false) {
            $.messager.alert("警告", OrderName + " " + t['DiagnosLimitDurMsg']);
            return false;
        }
        ///根据诊断对药品最大疗程的限制,使用设置:医生站配置-诊断设置-特殊诊断分类或常规设置-费别疗程限制
        //var OrderMaxDurFactor = GetCellData(rowids[i], "OrderMaxDurFactor");
        if ((+OrderMaxDurFactor != 0) && (parseFloat(OrderDurFactor) > parseFloat(OrderMaxDurFactor)) && (OrderType == 'R')) {
            $.messager.alert("警告", OrderName + " " + t['ExceedDurationLimit'] + ",使用设置:医生站配置-诊断设置-特殊诊断分类或常规设置-费别疗程限制", "warning", function() { SetFocusCell(rowids[i], "OrderName"); });
            return false;
        }
        //超量疗程原因
        var ExceedReasonID = GetCellData(rowids[i], "ExceedReasonID");
        var ExceedDate = cspRunServerMethod(GlobalObj.GetExceedDate, GlobalObj.PAAdmType);
        if ((ExceedReasonID == "") && (OrderType == 'R') && (ExceedDate != 0) && (parseInt(OrderDurFactor) > ExceedDate)) {
            if (GlobalObj.PAAdmType == "E") {
                $.messager.alert("警告", OrderName + "  急诊病人处方超过" + ExceedDate + "天必须选择疗程超天数原因!", "warning", function() { SetFocusCell(rowids[i], "ExceedReason"); })
            } else {
                $.messager.alert("警告", OrderName + "  门诊病人处方超过" + ExceedDate + "天必须选择疗程超天数原因!", "warning", function() { SetFocusCell(rowids[i], "ExceedReason"); })
            }
            PageLogicObj.FocusRowIndex = rowids[i];
            return false;
        }
        if (!CheckPriorAllow(OrderPriorRowid, OrderARCIMRowid, OrderName)) return false;
        //检查医嘱优先级相关的控制
        /*var PriorCheckRet=CheckPriorAllowRange(OrderPriorRowid,OrderARCIMRowid);
        if (parseFloat(PriorCheckRet)>=1) {
        	if ((PriorCheckRet==1)||(PriorCheckRet==2)) {

        		$.messager.alert("警告",OrderName+t['PriorNoAllow']);
        	}else if (PriorCheckRet==3) {
        		$.messager.alert("警告",OrderName+t['PriorNoAllow_Exam_Lab']);
        	}else if (PriorCheckRet==4) {
        		$.messager.alert("警告",OrderName+"是出院医嘱,只能开临时!");
        	}else{
        		$.messager.alert("警告",OrderName+t['PriorNoAllow_Other']);
        	}
        	return false;
        }*/
        //出院带药
        if ((OrderPriorRowid == GlobalObj.OutOrderPriorRowid) && (OrderType != 'R')) {
            $.messager.alert("警告", OrderName + t['NoAllowOutPrior'], "warning", function() { SetFocusCell(rowids[i], "OrderName"); });
            return false;
        }

        //选择输液流速单位
        if ((OrderSpeedFlowRate != "") && (OrderFlowRateUnit == '')) {
            $.messager.alert("警告", OrderName + " 请选择输液流速单位", "warning", function() { SetFocusCell(rowids[i], "OrderFlowRateUnit"); });
            return false;
        }
        //请填写输液流速
        //$.messager.alert("警告",OrderFlowRateUnit+"^"+OrderSpeedFlowRate);
        if ((OrderFlowRateUnit != '') && (OrderSpeedFlowRate == '')) {
            $.messager.alert("警告", OrderName + " 请填写输液流速", "warning", function() { SetFocusCell(rowids[i], "OrderSpeedFlowRate"); });
            return false;
        }
        //抗生素使用原因
        if ((OrderPoisonCode.indexOf("KSS") > -1) && (AntUseReason == '')) {
            //$.messager.alert("警告",OrderName+" 请选择抗生素使用原因","warning",function (){SetFocusCell(rowids[i],"AntUseReason");});
            //return false;
        }

        //获取需要审查的属性的全部属性串
        if (UnSaveARCIMRowidStr == "") { UnSaveARCIMRowidStr = OrderARCIMRowid; } else { UnSaveARCIMRowidStr = UnSaveARCIMRowidStr + "^" + OrderARCIMRowid; }
        if (ARCIMRowidStr == "") { ARCIMRowidStr = OrderPriorRowid + "^" + OrderARCIMRowid; } else { ARCIMRowidStr = ARCIMRowidStr + "!" + OrderPriorRowid + "^" + OrderARCIMRowid; }

        //如果只开了自备药医嘱或零价格医嘱则不用判断欠费
        var OrderPriorRemarksRowId = GetCellData(rowids[i], "OrderPriorRemarksRowId");
        if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid) && (parseFloat(OrderPrice) != 0) && (OrderPriorRemarksRowId != "OM") && (OrderPriorRemarksRowId != "ZT")) { NeedCheckDeposit = true }
        // 取互斥医嘱信息
        if ((GlobalObj.PAAdmType == "I") && ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMOrderPriorRowid))) {
            //20151009 scl 修正原先只取最后一条医嘱的互斥信息的错误写法
            //ConflictItemsInfo=GetConflictItemsInfo(OrderARCIMRowid);
            var OneConflictItemsInfo = GetConflictItemsInfo(OrderARCIMRowid);
            if (OneConflictItemsInfo != "") {
                if (ConflictItemsInfo == "") {
                    ConflictItemsInfo = OneConflictItemsInfo
                } else {
                    ConflictItemsInfo = ConflictItemsInfo + " " + OneConflictItemsInfo
                }
            }
            //------------------end---------------------------------
        }
        //出院带药其他审查
        if ((OrderPriorRowid == GlobalObj.OutOrderPriorRowid)) {
            if (!CheckOutOrderOtherContral(OrderName, OrderBillTypeRowid, OrderDurRowid, OrderItemCatRowid, ARCIMRowidStr, OrderARCIMRowid, OrderFreqRowid, OrderPackQty, OrderDoseQty, OrderDoseUOMRowid)) {
                return false;
            }
        }
        //医保用药控制 此处作废
        //if (!CheckInsuCostControl(rowids[i])){
        //return false
        //}
        //成组医嘱的医嘱类型不同，不给于审核   关联：OrderMasterSeqNo，  医嘱类型：OrderPriorRowid  序号：OrderSeqNo
        //增加护士补录医嘱类型是否一致的控制
        var Ret = CheckMasterConsistency(rowids[i]);
        if (Ret == false) return false;

        //KSS(抗菌素)的审查
        CheckKSS_Update(rowids[i]);
        Amount = Amount + parseFloat(OrderSum);
        NewRows = NewRows + 1;
    }
    if (NewRows == 0) {
        $.messager.alert("警告", t['NO_NewOrders']);
        return false;
    }

    //判断医嘱需开特定医嘱设置		
    var ret = cspRunServerMethod(GlobalObj.CheckSpecOrdLinkedMethod, GlobalObj.EpisodeID, ARCIMRowidStr);
    if (ret.split("^")[0] != "0") {
        $.messager.alert("警告", ret.split("^")[1] + t['NeedSpecOrdLinked']);
        return false;
    }

    //判断一张处方的数量限量
    for (var i = 0; i <= OrderInstrGroupArr.length - 1; i++) {
        if (mPiece(OrderInstrGroupArr[i], "!", 1) > 5) {
            var msg = mPiece(mPiece(OrderInstrGroupArr[i], "!", 0), "^", 3)
            $.messager.alert("警告", msg + t['EXCEED_PRESCCOUNT']);
            return false
        }
    }

    if (NeedCheckDeposit) {
        var amount = 0;
        var obj_ScreenBillSum = document.getElementById('ScreenBillSum');
        if (obj_ScreenBillSum) { amount = obj_ScreenBillSum.value; }
        if (!CheckDeposit(amount, "")) {
            return false;
        }
    }
    //判断费别和费用的几个方法修改
    for (var i = 1; i < OrderBillTypeArray.length; i++) {
        var amount = OrderBillTypeArray[i]
        var OrderBillType = OrderBillTypeDescArray[i]
        if ((amount != undefined) || (amount != "") || (amount != 0)) {
            var rtnBillTypeSum = CheckBillTypeSum(amount, i, OrderBillType)
            if (rtnBillTypeSum == false) { var BillTypeSum = 1 }
            var rtnUnSaveBillTypeSum = CheckUnSaveBillTypeSum(amount, i, OrderBillType)
            if (rtnUnSaveBillTypeSum == false) { var SaveBillTypeSum = 1 }
            var rtnOutOrderSum = CheckOutOrderSum(amount, i)
            if (rtnOutOrderSum == false) { var OutOrderSum = 1 }
        }
    }
    if (BillTypeSum == 1) {
        var PrescCheck = dhcsys_confirm(t['EXCEED_ADMAMOUNT'], true);
        if (PrescCheck == false) { return false; }
    }

    if (SaveBillTypeSum == 1) {
        var PrescCheck = dhcsys_confirm(t['EXCEED_UNSAVEADMAMOUNT'], true);
        if (PrescCheck == false) { return false; }
    }

    if (OutOrderSum == 1) {
        var OutOrderCheck = $.messager.alert("警告", t['EXCEED_OutOrderAMOUNT']);
        return false;
    }
    Amount = Amount.toFixed(2);
    if ((CYPrescCount > 0) && (!FindCNMedCl) && (GlobalObj.HospitalCode == "HF")) {
        var PrescCheck = dhcsys_confirm(t['No_AddCNMedCL'], true);
        if (PrescCheck == false) { return false; }
    }

    //知识库
    var RtnStr = CheckLibPhaFunction("C", "", "Y")
    if (!RtnStr) { return false }
    //抗菌药物联用控制  update by shp
    var retStr = CheckAntCombined(rowids)
    if (!retStr) { return false; }

    return { ConflictItemsInfo: ConflictItemsInfo, UnSaveARCIMRowidStr: UnSaveARCIMRowidStr };
    //}catch(e){$.messager.alert("警告",e.message);}
}

function IsLongPrior(OrderPriorRowId) {
    var ret = 0;
    if ((OrderPriorRowId == GlobalObj.LongOrderPriorRowid) || (OrderPriorRowId == GlobalObj.OMSOrderPriorRowid) || (OrderPriorRowId == GlobalObj.OMCQZTOrderPriorRowid)) {
        ret = 1
    }
    return ret;
}
//update by zf 2012-05-14
//临床路径检查，路径外医嘱填写变异
function CPWCheck() {
    var EpisodeID = GlobalObj.EpisodeID;

    var ArcimIDs = "";
    var rowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {

        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        ArcimIDs = ArcimIDs + OrderARCIMRowid + ",";
    }
    if (!ArcimIDs) return true;

    var ret = tkMakeServerCall("web.DHCCPW.MR.ClinPathWaysVariance", "CheckOutARCIM", EpisodeID, ArcimIDs, session['LOGON.USERID'], session['LOGON.CTLOCID']);
    if (!ret) return true;
    var tmpRet = ret.split("^");
    if (tmpRet[0] > 0) {
        var path = "dhccpw.mr.checkoeitem.csp?1=1" +
            "&EpisodeID=" + EpisodeID +
            "&PathWayID=" + tmpRet[1] +
            "&EpStepID=" + tmpRet[2] +
            "&ArcimIDs=" + tmpRet[3] +
            "&UserID=" + session['LOGON.USERID'];
        var numHeigth = 300;
        var numWidth = 400;
        var numTop = (screen.availHeight - numHeigth) / 2;
        var numLeft = (screen.availWidth - numWidth) / 2;
        var posn = "dialogHeight:" + numHeigth + "px; dialogWidth:" + numWidth + "px; top:" + numTop + "px; left:" + numLeft + "px";
        //window.open(path);
        var ret = window.showModalDialog(path, "", posn);
        if (ret) {
            return true;
        } else {
            return false;
        }
    }
    return true;
}

function ChangTest(e) {
    var obj = websys_getSrcElement(e);
    var type = websys_getType(e);
    var key = websys_getKey(e);
    if (key != 13 && type != 'click') {
        return;
    }
    //$.messager.alert("警告",this.id);
    var rowid = obj.id.split("_")[0];


}
//查询医嘱 	
var ItemzLookupGrid;
var OrderNameAuto;

function xItem_lookuphandler(e) {
    var obj = websys_getSrcElement(e);
    var type = websys_getType(e);
    var key = websys_getKey(e);
    if (obj.id.indexOf("_") > 0) {
        EditRowid = obj.id.split("_")[0];
    } else {
        EditRowid = "undefined";
    }
    var OrderName = $(obj).val();
    //var OrderName=$("#"+EditRowid+"_OrderName").val();
    //如果录入框清空,或焦点在输入框内是按ESC键则自动隐藏查询框
    if (ItemzLookupGrid && ((key == 27) || (OrderName == ""))) {
        ItemzLookupGrid.hide();
    }
    if (OrderName == "") return;
    var Id = obj.id;
    /*
    if((key==40)&&(ItemzLookupGrid)){
    	ItemzLookupGrid.getSelectionModel().selectFirstRow();;
    	ItemzLookupGrid.getView().focusRow(1)
    	return ;
		
    }
    if(key>64 && key<91){
    	if (OrderNameAuto )window.clearTimeout(OrderNameAuto)
    	var OrderName=$(obj).val();
    	  OrderNameAuto=window.setTimeout("xItem_lookuphandlerX('"+Id+"','"+OrderName+"')",1000);
    	  return ;
    }
    */
    if (key == 13 || type == 'dblclick') {
        xItem_lookuphandlerX(Id, OrderName);
    }
}

function xItem_lookuphandlerX(Id, OrderName) {
    //弹出模态窗口的形式
    //传入 输入值 和 rowid
    //自动生成的ID中包含行号 即rowid
    /*var obj=websys_getSrcElement(e);
    var type=websys_getType(e);
    var key=websys_getKey(e);

    if(key!=13 && type!='dblclick'){
    	
    	return;
    }
    //$.messager.alert("警告",this.id);
    //var rowid="";
    if(obj.id.indexOf("_")>0){
    	EditRowid=obj.id.split("_")[0];
    }else{
    	EditRowid="undefined";
    }
    var OrderName=$(obj).val();
    //$.messager.alert("警告",OrderName);
    //var OrderName=$("#"+EditRowid+"_OrderName").val();
    if(OrderName==""){
    	return;
    }*/
    var obj=websys_getSrcElement(e);
    var CurLogonDep = session['LOGON.CTLOCID'];
    var GroupID = session['LOGON.GROUPID'];
    var catID = ""
    var subCatID = "";
    var P5 = "";
    var LogonDep = ""
    var OrderPriorRowid = "";
    var P9 = "",
        P10 = "";
    var OrdCatGrp = "";
    if (Id.indexOf("_") > 0) {
        EditRowid = Id.split("_")[0];
    } else {
        EditRowid = "undefined";
    }
    var OrdCateGoryRowId = GetCellData(EditRowid, "OrdCateGoryRowId")
    var OrdCateGoryObj = document.getElementById(EditRowid + "_OrdCateGory");
    if (+OrdCateGoryObj.scrollWidth != "0") OrdCatGrp = OrdCateGoryRowId

    //$.messager.alert("警告",Id);
    if (ItemzLookupGrid && ItemzLookupGrid.store) {
        ItemzLookupGrid.searchAndShow([OrderName, GroupID, catID, subCatID, P5, LogonDep, OrderPriorRowid, GlobalObj.EpisodeID, P9, P10, session["LOGON.USERID"], OrdCatGrp, "", CurLogonDep]);
    } else {
        ItemzLookupGrid = new dhcc.icare.Lookup({
            lookupListComponetId: 1872,
            lookupPage: "医嘱项选择",
            lookupName: Id,
            listClassName: 'web.DHCDocOrderEntry',
            listQueryName: 'LookUpItem',
            resizeColumn: true,
            listProperties: [function() { return $(obj).val(); }, GroupID, catID, subCatID, P5, LogonDep, OrderPriorRowid, GlobalObj.EpisodeID, P9, P10, session["LOGON.USERID"], OrdCatGrp, "", CurLogonDep],
            //listProperties: [OrderName, GroupID, catID, subCatID, P5, LogonDep, OrderPriorRowid, GlobalObj.EpisodeID, P9, P10, session["LOGON.USERID"], OrdCatGrp, "", CurLogonDep],
            listeners: { 
				'selectRow': OrderItemLookupSelect,
				 lookupLoaded: function(s,records,opt){
						s.each(function(r,i){
							//库存不足改变颜色
							var ArcimID=r.data["HIDDEN2"]
							var Type=r.data["HIDDEN4"]
							var OrderType=r.data["HIDDEN6"]
							var HaveStock=r.data["HIDDEN31"]
							if ((OrderType=="R")&&(Type="ARCIM")&&(HaveStock!="Y")){
								ItemzLookupGrid.getView().getRow(i).style.backgroundColor='#DDA0DD' //行颜色
							}
	                  })
					}
				
			
			},
            pageSize: 20,
            isCombo: PageLogicObj.isComboEnable
        });
    }

    return websys_cancel();

}
//频次查询
var ShowFreqLookup = 0;

function PHCFRDesc_lookuphandler(e) {
    var obj = websys_getSrcElement(e);
    var key = websys_getKey(e);
    var type = websys_getType(e);
    //$.messager.alert("警告",key+"^"+type);
    ShowFreqLookup = 0
    if (key != 13 && type != 'dblclick') {
        return;
    }
    //$.messager.alert("警告",this.id);
    var rowid = "";
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //$.messager.alert("警告",rowid);

    //设置编辑行ID
    //EditRowid=rowid;

    var Id = obj.id;
    //var FreqName=$(obj).val();//这样点击图片取不了值
    //var FreqName=$("#"+EditRowid+"_OrderFreq").val();
    //$.messager.alert("警告",this.id);
    if ((type == 'dblclick') || (key == 13)) {
        if ((ShowFreqLookup = 1) && (PHCFRDesczLookupGrid) && (PHCFRDesczLookupGrid.store)) {
            //var record = PHCFRDesczLookupGrid.getSelectionModel().getSelected();
            //PHCFRDesczLookupGrid.rowClick(PHCFRDesczLookupGrid, PHCFRDesczLookupGrid.store.indexOf(record));
        } else {
            ShowFreqLookup = 1
            PHCFRDesczLookupGrid = new dhcc.icare.Lookup({
                lookupListComponetId: 1872,
                lookupPage: "频次选择",
                lookupName: Id,
                listClassName: 'web.DHCDocOrderCommon',
                listQueryName: 'LookUpFrequency',
                listProperties: [function() { return $(obj).val(); }, GlobalObj.PAAdmType],
                listeners: { 'selectRow': FrequencyLookUpSelect },
                pageSize: 20,
                isCombo: PageLogicObj.isComboEnable
            });
        }
    }
    return websys_cancel();

}
//当前需要改变的医嘱类型是否存在
function CheckNowOrderPrior(rowid, PriorRowid) {
    var check = false;
    var OrderPriorStr = GetCellData(rowid, "OrderPriorStr");
    var ArrData = OrderPriorStr.split(";");
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(":");
        if (PriorRowid == ArrData1[0]) {
            check = true;
            break;
        }
    }
    return check;
}

function ClearOrderFreq(rowid) {
    SetCellData(rowid, "OrderFreq", "");
    SetCellData(rowid, "OrderFreqFactor", 1);
    SetCellData(rowid, "OrderFreqInterval", "");
    SetCellData(rowid, "OrderFreqRowid", "");
    SetCellData(rowid, "OrderFreqDispTimeStr", "");
}
//频次选择
function FrequencyLookUpSelect(value) {
    var rowid = "";
    if (this.id.indexOf("_") > 0) {
        rowid = this.id.split("_")[0];
    }
    var Id = "";
    if ($.isNumeric(rowid) == true) {
        Id = rowid + '_OrderFreq';
    } else {
        Id = 'OrderFreq';
    }
    var obj = document.getElementById(Id);
    if (obj) obj.className = '';
    //if(EditRowid=="undefined"){return}	
    var Split_Value = value.split("^");
    var OrderFreq = Split_Value[0];
    var OrderFreqFactor = Split_Value[2];
    var OrderFreqInterval = Split_Value[3];
    var OrderFreqRowid = Split_Value[4];
    var OrderFreqDispTimeStr = Split_Value[5];
    if (Split_Value.length == 7) { rowid = Split_Value[6] }
    var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    var OldPriorRowid = OrderPriorRowid
        //原序号 现行ID
    var OrderSeqNo = GetCellData(rowid, "id");
    //if(EditRowid=="undefined"){return}	

    SetCellData(rowid, "OrderFreq", OrderFreq);
    SetCellData(rowid, "OrderFreqFactor", OrderFreqFactor);
    SetCellData(rowid, "OrderFreqInterval", OrderFreqInterval);
    SetCellData(rowid, "OrderFreqRowid", OrderFreqRowid);
    SetCellData(rowid, "OrderFreqDispTimeStr", OrderFreqDispTimeStr);
    DHCDocUseCount(OrderFreqRowid, "User.PHCFreq")

    var MasterOrderPriorRowid = "";
    var MasterOrderPrior = ""
    if ((GlobalObj.PAAdmType == "I") && (OrderPriorRowid != GlobalObj.OutOrderPriorRowid)) {
        if ((OrderFreqRowid == GlobalObj.STFreqRowid) || (OrderFreqRowid == GlobalObj.ONCEFreqRowid)) {
            //判断当前可以开医嘱
            var check = CheckNowOrderPrior(rowid, GlobalObj.ShortOrderPriorRowid);
            if (check == true) {
                SetCellData(rowid, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
                MasterOrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
                MasterOrderPrior = "临时医嘱";
            } else {
                ClearOrderFreq(rowid)
                $.messager.alert("警告", "当前医嘱类型不允许改变频次为" + OrderFreq);
                return;
            }

        } else {
            var check = CheckNowOrderPrior(rowid, GlobalObj.LongOrderPriorRowid);
            if (check == true) {
                SetCellData(rowid, "OrderPrior", GlobalObj.LongOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.LongOrderPriorRowid);
                MasterOrderPriorRowid = GlobalObj.LongOrderPriorRowid;
                MasterOrderPrior = "长期医嘱";
            } else {
                ClearOrderFreq(rowid);
                $.messager.alert("警告", "当前医嘱类型不允许改变频次为" + OrderFreq);
                return;
            }
        }
    }

    if ((OrderPriorRowid == GlobalObj.OMSOrderPriorRowid) && (OrderFreqRowid == GlobalObj.STFreqRowid)) {
        var check = CheckNowOrderPrior(rowid, GlobalObj.OMOrderPriorRowid);
        if (check == true) {
            SetCellData(rowid, "OrderPrior", GlobalObj.OMOrderPriorRowid);
            SetCellData(rowid, "OrderPriorRowid", GlobalObj.OMOrderPriorRowid);
            MasterOrderPriorRowid = GlobalObj.OMOrderPriorRowid;
            MasterOrderPrior = "临时医嘱";
        } else {
            ClearOrderFreq(rowid);
            $.messager.alert("警告", "当前医嘱类型不允许改变频次为" + OrderFreq);
            return;
        }
    }

    if ((GlobalObj.PAAdmType == "I") && (OrderFreqRowid != GlobalObj.STFreqRowid)) {
        //HF认为临时医嘱只有ST的用法,非ST者是长期医嘱
        if (GlobalObj.HospitalCode == "HF") {
            if (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid) {
                var check = CheckNowOrderPrior(rowid, GlobalObj.OMOrderPriorRowid);
                if (check == true) {
                    SetCellData(rowid, "OrderPrior", GlobalObj.OMOrderPriorRowid);
                    SetCellData(rowid, "OrderPriorRowid", GlobalObj.OMOrderPriorRowid);
                    MasterOrderPriorRowid = GlobalObj.OMOrderPriorRowid;
                    MasterOrderPrior = "临时医嘱";
                } else {
                    ClearOrderFreq(rowid);
                    $.messager.alert("警告", "当前医嘱类型不允许改变频次为" + OrderFreq);
                    return;
                }
            }
            if (OrderPriorRowid == GlobalObj.ShortOrderPriorRowid) {
                var check = CheckNowOrderPrior(rowid, GlobalObj.LongOrderPriorRowid);
                if (check == true) {
                    SetCellData(rowid, "OrderPrior", GlobalObj.LongOrderPriorRowid);
                    SetCellData(rowid, "OrderPriorRowid", GlobalObj.LongOrderPriorRowid);
                    MasterOrderPriorRowid = GlobalObj.LongOrderPriorRowid;
                    MasterOrderPrior = "长期医嘱";
                } else {
                    ClearOrderFreq(rowid);
                    $.messager.alert("警告", "当前医嘱类型不允许改变频次为" + OrderFreq);
                    return;
                }
            }
        }
        //即刻医嘱只有ST的用法?A非ST就改成临时医嘱?A因为在计费时即刻医嘱只算一次
        if (OrderPriorRowid == GlobalObj.STATOrderPriorRowid) {
            var check = CheckNowOrderPrior(rowid, GlobalObj.ShortOrderPriorRowid);
            if (check == true) {
                SetCellData(rowid, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
                SetCellData(rowid, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
                MasterOrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
                MasterOrderPrior = "临时医嘱";
            } else {
                ClearOrderFreq(rowid);
                $.messager.alert("警告", "当前医嘱类型不允许改变频次为" + OrderFreq);
                return;
            }
        }
    }
    var PriorRowid = GetCellData(rowid, "OrderPriorRowid");
    if (OldPriorRowid != PriorRowid) OrderPriorchangeCommon(rowid, OldPriorRowid, PriorRowid);
    var MasterOrderStartTime = "",
        MasterOrderStartDate = "";
    if (OrderFreqRowid == GlobalObj.STFreqRowid) {
        var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
        var CurrDateTimeArr = CurrDateTime.split("^");
        MasterOrderStartDate = GetCellData(rowid, "OrderStartDate").split(" ")[0];
        MasterOrderStartTime = CurrDateTimeArr[1];
        var datetiem = MasterOrderStartDate + " " + MasterOrderStartTime;
        SetCellData(rowid, "OrderStartDate", datetiem);
    }

    var MasterOrderStartDateStr = GetCellData(rowid, "OrderStartDate");
    //websys_nextfocusElement(obj);
    SetPackQty(rowid);
    ChangeLinkOrderFreq(OrderSeqNo, MasterOrderPriorRowid, MasterOrderPrior, OrderFreqRowid, OrderFreq, OrderFreqFactor, OrderFreqInterval, OrderFreqDispTimeStr, MasterOrderStartDateStr);
    var type = "";
    if (window.event) type = websys_getType(window.event);
    if ((ShowFreqLookup == 1) && (type != 'change')) {
        var JumpAry = ['OrderInstr', 'OrderDur', 'OrderPackQty'];
        var JumpCellName=CellFocusJump(rowid, JumpAry, true);
        //如果失去焦点,需要关闭查询框
        if (PHCFRDesczLookupGrid && (JumpCellName.indexOf("OrderFreq")==-1)) {
            setTimeout(function (){PHCFRDesczLookupGrid.hide();},130);
        }
    }
    //同步首日次数
    ChangeFirstDayTimes(rowid);
    XHZY_Click();
    //if (window.event) type=websys_getType(e);
    //if ((ShowFreqLookup==1)&&(type!='change')) {websys_setfocus("OrderInstrz"+rowid);}

    /*
    var OrderFreq=GetCellData(EditRowid,"OrderFreq");
    var OrderFreqFactor=GetCellData(EditRowid,"OrderFreqFactor");
    var OrderFreqRowid=GetCellData(EditRowid,"OrderFreqRowid");
    var OrderFreqInterval=GetCellData(EditRowid,"OrderFreqInterval");
    var OrderFreqDispTimeStr=GetCellData(EditRowid,"OrderFreqDispTimeStr");
    */
}
//用法查询
var ShowInstrLookup = 0;

function PHCINDesc_lookuphandler(e) {
    var obj = websys_getSrcElement(e);
    var key = websys_getKey(e);
    var type = websys_getType(e);
    ShowInstrLookup = 0
    if (key != 13 && type != 'dblclick') {
        return;
    }
    var rowid = "";
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }

    var Id = obj.id;
    //var InstrName=$(obj).val();	
    //var InstrName=$("#"+EditRowid+"_OrderInstr").val();
    var ARCIMRowId = GetCellData(rowid, "OrderARCIMRowid");
    //$.messager.alert("警告",Id);
    ShowInstrLookup = 0;
    if ((type == 'dblclick') || (key == 13)) {
        if ((ShowInstrLookup = 1) && (PHCINDesczLookupGrid) && (PHCINDesczLookupGrid.store)) {
            //var record = PHCINDesczLookupGrid.getSelectionModel().getSelected();
            //PHCINDesczLookupGrid.rowClick(PHCINDesczLookupGrid, PHCINDesczLookupGrid.store.indexOf(record));
        } else {
            ShowInstrLookup = 1
            PHCINDesczLookupGrid = new dhcc.icare.Lookup({
                lookupListComponetId: 1872,
                lookupPage: "用法选择",
                lookupName: Id,
                listClassName: 'web.DHCDocOrderCommon',
                listQueryName: 'LookUpInstr',
                listProperties: [function() { return $(obj).val(); }, GlobalObj.PAAdmType, ARCIMRowId],
                listeners: { 'selectRow': InstrLookUpSelect },
                pageSize: 20,
                isCombo: PageLogicObj.isComboEnable
            });
        }
    }
    return websys_cancel();

}
//用法选择
function InstrLookUpSelect(value) {
    //$.messager.alert("警告",value);
    try {
        var rowid = "";
        if (this.id.indexOf("_") > 0) {
            rowid = this.id.split("_")[0];
        }
        var Id = "";
        if ($.isNumeric(rowid) == true) {
            Id = rowid + '_OrderInstr';
        } else {
            Id = 'OrderInstr';
        }
        var obj = document.getElementById(Id);
        if (obj) obj.className = '';
        var Split_Value = value.split("^");
        var OrderInstrRowid = Split_Value[0];
        var OrderInstr = unescape(Split_Value[1]);
        var OrderInstrCode = Split_Value[2];
        if (Split_Value.length == 4) { rowid = Split_Value[3] }
        var Split_Value = value.split("^");
        var OrderSeqNo = GetCellData(rowid, "id");
        var OrderInstr = unescape(Split_Value[1]);
        var OrderInstrRowid = Split_Value[0];
        var OrderInstrCode = Split_Value[2];
        var obj = document.getElementById('OrderInstrz' + rowid);
        if (obj) {
            obj.value = OrderInstr;
            obj.className = '';
        }
        SetCellData(rowid, "OrderInstr", OrderInstr);
        //SetCellData(rowid,"OrderInstrRowid",OrderInstrRowid); 
        //如果有皮试用法自动选上皮试标志
        if (GlobalObj.SkinTestInstr != "") {
            var Instr = "^" + OrderInstrRowid + "^"
            if (GlobalObj.SkinTestInstr.indexOf(Instr) != "-1") {
	            var ActionRowid=GetCellData(rowid, "OrderActionRowid");
			    var ActionCode = GetOrderActionCode(ActionRowid);
			    if ((ActionCode=="YY")||(ActionCode=="")){
				    SetCellData(rowid, "OrderSkinTest", true);
				}
                var styleConfigObj = { OrderSkinTest: false, OrderAction: true }
                ChangeCellDisable(rowid, styleConfigObj);
            } else {
                //修改用法 不改变皮试勾选状态
                /*SetCellData(rowid,"OrderSkinTest",false);
                var styleConfigObj={OrderSkinTest:true,OrderAction:true}
                ChangeCellDisable(rowid,styleConfigObj);*/
            }
        }
        SetCellData(rowid, "OrderInstr", OrderInstr);
        SetCellData(rowid, "OrderInstrRowid", OrderInstrRowid);
        DHCDocUseCount(OrderInstrRowid, "User.PHCInstruc")
        if ((IsWYInstr(OrderInstrRowid)) && (GlobalObj.PAAdmType != "I")) {
            /*SetCellData("OrderDur",rowid,"");
			SetCellData("OrderDurRowid",rowid,"");
		    SetCellData("OrderDoseQty",rowid,"");*/
            SetCellData(rowid, "OrderDur", "");
            SetCellData(rowid, "OrderDurRowid", "");
            SetCellData(rowid, "OrderDoseQty", "");
            SetCellData(rowid, "OrderDurFactor", 1);
        }
        var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
        //用法定义接收科室,未定义用法接收科室,则还取原接收科室串
        var InstrReclocStr = GetReclocByInstr(rowid);
        var OrderRecLocStr = GetRecLocStrByPrior(InstrReclocStr, OrderPriorRowid);
        SetColumnList(rowid, "OrderRecDep", OrderRecLocStr);
        OrderRecDepChangeCom(rowid)
        ChangeLinkOrderInstr(OrderSeqNo, OrderInstrRowid, OrderInstr);
        SetOrderLocalInfusionQty(rowid)
        var type = "";
        if (window.event) type = websys_getType(e);
        if ((ShowInstrLookup == 1) && (type != 'change')) {
            var JumpAry = ['OrderDur', 'OrderPackQty'];
            var JumpCellName=CellFocusJump(rowid, JumpAry, true);
            //如果失去焦点,需要关闭查询框
            if (PHCINDesczLookupGrid && (JumpCellName.indexOf("OrderInstr")==-1)) {
                setTimeout(function (){PHCINDesczLookupGrid.hide();},130);
            }
        }
        XHZY_Click();
    } catch (e) { alert(e.message) };
}

//用法改变
function InstrChangeHandler(e) {
    var rowid = "";
    var obj = websys_getSrcElement(e);
    var rowid = GetEventRow(e);
    PHCINDesc_lookuphandlerX(rowid);
}

function PHCINDesc_lookuphandlerX(rowid) {
    SetCellData(rowid, "OrderInstrRowid", "");
    var Id = "";
    if ($.isNumeric(rowid) == true) {
        Id = rowid + '_OrderInstr';
    } else {
        Id = 'OrderInstr';
    }
    var obj = document.getElementById(Id);
    if (obj.value != '') {
        var tmp = document.getElementById(Id);
        if (tmp) { var p1 = tmp.value } else { var p1 = '' };
        var encmeth = GlobalObj.GetOneInstrStrMethod
        var ret = cspRunServerMethod(encmeth, p1)
        if (ret == '0') {
            obj.className = 'clsInvalid';
            SetCellData("OrderInstrRowid", rowid, "");
            websys_setfocus(Id);
            XHZY_Click();
            return "";
        } else {
            obj.className = '';
            InstrLookUpSelect(ret + "^" + rowid)
        }
    } else {
        //调用这个干嘛
        //ChangeLinkOrderInstr(rowid,"","");
    }
    //obj.className='';
}

//疗程查询
var ShowDurLookup = 0;

function PHCDUDesc_lookuphandler(e) {
    var obj = websys_getSrcElement(e);
    var key = websys_getKey(e);
    var type = websys_getType(e);

    if (key != 13 && type != 'dblclick') {
        return;
    }
    var rowid = "";
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    var Id = obj.id;
    //var DurName=$(obj).val();
    //var DurName=$("#"+rowid+"_OrderDur").val();
    if ((type == 'dblclick') || (key == 13)) {
        if ((ShowDurLookup = 1) && (PHCDUDesczLookupGrid) && (PHCDUDesczLookupGrid.store)) {
            //var record = PHCDUDesczLookupGrid.getSelectionModel().getSelected();
            //PHCDUDesczLookupGrid.rowClick(PHCDUDesczLookupGrid, PHCDUDesczLookupGrid.store.indexOf(record));
        } else {
            ShowDurLookup = 1;
            PHCDUDesczLookupGrid = new dhcc.icare.Lookup({
                lookupListComponetId: 1872,
                lookupPage: "疗程选择",
                lookupName: Id,
                listClassName: 'web.DHCDocOrderCommon',
                listQueryName: 'LookUpDuration',
                listProperties: [function() { return $(obj).val(); }],
                listeners: { 'selectRow': DurationLookUpSelect },
                pageSize: 20,
                isCombo: PageLogicObj.isComboEnable
            });
        }
    }
    return websys_cancel();

}
//疗程改变
function DurationChangeHandler(e) {
    var rowid = "";
    var rowid = GetEventRow(e)
    PHCDUDesc_changehandlerX(rowid)
    return;
}

function PHCDUDesc_changehandlerX(rowid) {
    SetCellData(rowid, "OrderDurRowid", "");
    var Id = "";
    if ($.isNumeric(rowid) == true) {
        Id = rowid + '_OrderDur';
    } else {
        Id = 'OrderDur';
    }
    var obj = document.getElementById(Id);
    if (obj.value != '') {
        var tmp = document.getElementById(Id);
        if (tmp) { var p1 = tmp.value } else { var p1 = '' };
        var encmeth = GlobalObj.GetOneDurationStrMethod
        var ret = cspRunServerMethod(encmeth, p1)
        if (ret == '0') {
            obj.className = 'clsInvalid';
            SetFocusCell(rowid, "OrderDur");
            return "";
        } else {
            obj.className = '';
            DurationLookUpSelect(ret + "^" + rowid)
        }
    } else {
        //var OrderSeqNo=GetCellData(rowid,"id");
        //ChangeLinkOrderDur(OrderSeqNo,OrderDurRowid,OrderDur,OrderDurFactor)
        ChangeLinkOrderDur(rowid, "", "", "");
    }
    XHZY_Click();
}

function DurationLookUpSelect(value) {
    var Split_Value = value.split("^");
    var rowid = "";
    if (this.id.indexOf("_") > 0) {
        rowid = this.id.split("_")[0];
    }
    try {
        var OrderDur = unescape(Split_Value[1]);
        var OrderDurRowid = Split_Value[0];
        var OrderDurFactor = Split_Value[3];
        if (Split_Value.length == 5) { rowid = Split_Value[4] }
        var OrderSeqNo = GetCellData(rowid, "id");
        SetCellData(rowid, "OrderDur", OrderDur)
        SetCellData(rowid, "OrderDurRowid", OrderDurRowid);
        SetCellData(rowid, "OrderDurFactor", OrderDurFactor);
        SetPackQty(rowid);
        ChangeLinkOrderDur(OrderSeqNo, OrderDurRowid, OrderDur, OrderDurFactor);
        var OrderPackQty = GetCellData(rowid, "OrderPackQty");
        var OrderType = GetCellData(rowid, "OrderType");

        var type = "";
        if (window.event) type = websys_getType(e);
        if ((ShowDurLookup == 1) && (type != 'change')) {
            var JumpAry = ['OrderPackQty'];
            var JumpCellName=CellFocusJump(rowid, JumpAry, true);
            //如果失去焦点,需要关闭查询框
            if (PHCDUDesczLookupGrid && (JumpCellName.indexOf("OrderDur")==-1)) {
                setTimeout(function (){PHCDUDesczLookupGrid.hide();},130);
            }
        }

    } catch (e) {};
}

function ChangeLinkOrderDur(OrderSeqNo, OrderDurRowid, OrderDur, OrderDurFactor) {
    try {
        var rows = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rows.length; i++) {
            var rowid = rows[i];
            var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
            var OrderType = GetCellData(rowid, "OrderType");
            if ((OrderMasterSeqNo != OrderSeqNo) || (OrderARCIMRowid == "") || (OrderItemRowid != "")) { continue; }
            SetCellData(rowid, "OrderDur", OrderDur);
            SetCellData(rowid, "OrderDurRowid", OrderDurRowid);
            SetCellData(rowid, "OrderDurFactor", OrderDurFactor);
            SetPackQty(rowid);
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function PHCFRDesc_changehandlerX(rowid) {
    SetCellData(rowid, "OrderFreqRowid", "");
    var encmeth = GlobalObj.GetOneFrequencyStrMethod
    var Id = "";
    if ($.isNumeric(rowid) == true) {
        Id = rowid + '_OrderFreq';
    } else {
        Id = 'OrderFreq';
    }
    var obj = document.getElementById(Id);
    if (obj && obj.value != '') {
        var tmp = document.getElementById(Id);
        if (tmp) { var p1 = tmp.value } else { var p1 = '' };
        var ret = cspRunServerMethod(encmeth, p1);
        if (ret == '0') {
            obj.className = 'clsInvalid';
            websys_setfocus(Id);
            return "";
        } else {
            obj.className = '';
            FrequencyLookUpSelect(ret + "^" + rowid)
        }
    } else {
        var MasterOrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
        var MasterOrderPrior = GetCellData(rowid, "MasterOrderPrior");
        var OrderFreqRowid = "";
        var OrderFreq = "";
        var OrderFreqFactor = "";
        var OrderFreqInterval = "";
        SetCellData(rowid, "OrderFreq", OrderFreq);
        SetCellData(rowid, "OrderFreqRowid", OrderFreqRowid);
        SetCellData(rowid, "OrderFreqFactor", OrderFreqFactor);
        SetCellData(rowid, "OrderFreqInterval", OrderFreqInterval);

        var OrderFreqDispTimeStr = GetCellData(rowid, "OrderFreqDispTimeStr");
        var MasterOrderStartDateStr = GetCellData(rowid, "OrderStartDate");
        SetPackQty(rowid);
        ChangeLinkOrderFreq(rowid, MasterOrderPriorRowid, MasterOrderPrior, OrderFreqRowid, OrderFreq, OrderFreqFactor, OrderFreqInterval, OrderFreqDispTimeStr, MasterOrderStartDateStr);
    }
    //同步首日次数
    ChangeFirstDayTimes(rowid)
    XHZY_Click();
    //obj.className='';
}

function GetOrderSeqArr(rowid) {
    if ($.isNumeric(rowid) == false) { return rowid }
    var rowidArr = {};
    rowidArr[rowid] = rowid;
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    //可能为主医嘱
    if (OrderMasterSeqNo == "") {
        var rowids = GetAllRowId();
        for (var i = 0; i < rowids.length; i++) {
            var MasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
            if (MasterSeqNo == rowid) {
                rowidArr[rowids[i]] = rowids[i];
            }
        }
    } else {
        //子医嘱
        var rowids = GetAllRowId();
        //主医嘱id:OrderMasterSeqNo
        rowidArr[OrderMasterSeqNo] = OrderMasterSeqNo;
        for (var i = 0; i < rowids.length; i++) {
            var MasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
            if (MasterSeqNo == OrderMasterSeqNo) {
                rowidArr[rowids[i]] = rowids[i];
            }
        }
    }
    return rowidArr;
}
//选择控制
function SelectContrl(rowid) {
    if ($.isNumeric(rowid) == false) { return rowid }
    var stutas = $("#jqg_Order_DataGrid_" + rowid).attr("checked");
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    var rowids = GetAllRowId();
    //根据配置 选择子医嘱是否选中全部 1：全选
    var configValue = GlobalObj.SelectContrlConfig;
    //---------------已审核医嘱判断 主子医嘱始终联动
    if (CheckIsItem(rowid) == true) {
        var FitNum = ""
        FitNum = rowid.split(".")[0]
        for (var i = 0; i < rowids.length; i++) {
            if (CheckIsItem(rowids[i]) != true) { continue; }
            if (rowids[i] == rowid) { continue }
            var subFitNum = rowids[i].split(".")[0]
            if (subFitNum == FitNum) {
                $("#Order_DataGrid").setSelection(rowids[i], false);
            }

        }
    }
    //-----------------未审核医嘱判断
    //可能为主医嘱
    if (OrderMasterSeqNo == "") {
	    var OrderMasterFlag=0;
        for (var i = 0; i < rowids.length; i++) {
            //取子医嘱
            var MasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
            if (MasterSeqNo != "" && MasterSeqNo == rowid) {
                //选中子医嘱 rowids[i]
                //获取选中状态
                if ($("#jqg_Order_DataGrid_" + rowids[i]).attr("checked") != stutas) {
                    $("#Order_DataGrid").setSelection(rowids[i], false);
                }
                if (stutas=="checked"){
	                $("#ChangeOrderSeq_Btn").val("    拆关联(R)");
					$("#ChangeOrderSeq_Btn").removeClass();
					$("#ChangeOrderSeq_Btn").addClass("icon-undo-custom")
	            }else{
		            $("#ChangeOrderSeq_Btn").val("    关联(R)");
					$("#ChangeOrderSeq_Btn").removeClass();
					$("#ChangeOrderSeq_Btn").addClass("icon-merge-custom")
		        }
		        OrderMasterFlag=OrderMasterFlag+1;
            }
        }
        if (OrderMasterFlag==0){
	        $("#ChangeOrderSeq_Btn").val("    关联(R)");
			$("#ChangeOrderSeq_Btn").removeClass();
			$("#ChangeOrderSeq_Btn").addClass("icon-merge-custom")
	    }
    } else if (configValue == 1) {
        //全选
        //主医嘱ID
        var mainRowid = OrderMasterSeqNo;
        //主医嘱选择状态
        if ($("#jqg_Order_DataGrid_" + mainRowid).attr("checked") != stutas) {
            $("#Order_DataGrid").setSelection(mainRowid, false);
        }
        for (var i = 0; i < rowids.length; i++) {
            //取子医嘱
            var MasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
            if (MasterSeqNo != "" && MasterSeqNo == mainRowid) {
                //获取选中状态
                if ($("#jqg_Order_DataGrid_" + rowids[i]).attr("checked") != stutas) {
                    $("#Order_DataGrid").setSelection(rowids[i], false);
                }
                if (stutas=="checked"){
	                $("#ChangeOrderSeq_Btn").val("    拆关联(R)");
					$("#ChangeOrderSeq_Btn").removeClass();
					$("#ChangeOrderSeq_Btn").addClass("icon-undo-custom")
	            }else{
		            $("#ChangeOrderSeq_Btn").val("    关联(R)");
					$("#ChangeOrderSeq_Btn").removeClass();
					$("#ChangeOrderSeq_Btn").addClass("icon-merge-custom")
		        }
            }
        }
    }
    if (stutas == "checked") {
        if ((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "undefined") && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "")) return false;
        if (GlobalObj.CFOrderMsgAlert != 1) return false;

        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid")
        var OrderName = GetCellData(rowid, "OrderName")
        var OrderMsg = cspRunServerMethod(GlobalObj.GetARCIMOrderMsg, OrderARCIMRowid)
        if (OrderMsg != "") {
            $("#Prompt").text("提示信息:" + OrderName + OrderMsg)
        }
    }
}
function ChangeOrderSeqhandler(e){
	var BtnText=$("#ChangeOrderSeq_Btn").val();
	if (BtnText.indexOf('拆关联') != -1){
		if (!ClearSeqNohandler()) return false;
		$("#ChangeOrderSeq_Btn").val("    关联(R)");
		$("#ChangeOrderSeq_Btn").removeClass();
		$("#ChangeOrderSeq_Btn").addClass("icon-merge-custom")
	}else{
		if (!SetSeqNohandler()) return false;
		$("#ChangeOrderSeq_Btn").val("    拆关联(R)");
		$("#ChangeOrderSeq_Btn").removeClass();
		$("#ChangeOrderSeq_Btn").addClass("icon-undo-custom")
	}
}
////关联控制  2014-04-17(提供给按钮的控制)
function SetSeqNohandler() {
    //获取选择行ID: GetSelRowId()
    //获取所有行ID  包含已审核  根据CheckIsItem(rowid)判断
    //此处SelTableRowAry是选中的数组,如果在后面的程序中改变选中状态也会影响数组数据,引用地址传递,所以使用重新赋值
    var SelTableRowAry = GetSelRowId();
    var Selrowids = SelTableRowAry.join(',').split(',');
    if (Selrowids.length <= 1) {
        $.messager.alert("警告", "请选择关联医嘱");
        return false;
    }
    //主医嘱ID
    var MainID = Selrowids[0];
    var OrderType = GetCellData(MainID, "OrderType");
    if (OrderType != "R") {
        $.messager.alert("警告", "非药品医嘱不能关联");
        return false;
    }
    //设置主医嘱样式
    //$("#"+Selrowids[0]).find("td").addClass("OrderMasterM");
    //设置关联
    for (var i = 1; i < Selrowids.length; i++) {
        if (Selrowids[i] == "") continue;
        //医嘱类型
        var OrderType = GetCellData(Selrowids[i], "OrderType");
        if (OrderType != "R") {
            $.messager.alert("警告", "非药品医嘱不能关联");
            $("#Order_DataGrid").setSelection(Selrowids[i], false);
            return false;
        }
        //设置关联
        var SubID = Selrowids[i];
        var change = SetMasterSeqNo(MainID, SubID, "S");
        if (change == false) { continue; }
    }
    return true;
}
//拆关联(提供给按钮的控制)
function ClearSeqNohandler() {
    //获取选择行ID: GetSelRowId()
    //获取所有行ID  包含已审核  根据CheckIsItem(rowid)判断
    //GetAllRowId()
    var Selrowids = GetSelRowId();
    //$.messager.alert("警告",Selrowids);
    if (Selrowids.length < 1) {
        $.messager.alert("警告", "请选择关联医嘱");
        return false;
    }
    //检查是否选择有主医嘱  var OrderMasterSeqNo=GetCellData(MainID,"OrderMasterSeqNo");
    for (var i = 0; i < Selrowids.length; i++) {
        if (CheckIsItem(Selrowids[i]) == false) {
            var OrderMasterSeqNo = GetCellData(Selrowids[i], "OrderMasterSeqNo");
            //一拆全拆,不管选择的是主医嘱还是子医嘱
            if (OrderMasterSeqNo == "") {
                //选择了主医嘱  拆除全部子医嘱		
                SetMasterSeqNo(Selrowids[i], "", "C");
            } else {

                SetMasterSeqNo(OrderMasterSeqNo, "", "C");
            }
        }
    }
    return true;
}
//设置关联 传入 主医嘱ID  子医嘱ID type："S"(关联) "C"(拆关联) 2014-04-18
function SetMasterSeqNo(MainID, SubID, type) {
    if (MainID != "") {
        if (($.isNumeric(MainID) == false)) { return false; }
        //判断主医嘱存不存在		
    }
    if (SubID != "") {
        if (($.isNumeric(SubID) == false)) { return false; }
    }
    //检查是否未审核
    if ((CheckIsItem(MainID) == true) || (CheckIsItem(SubID) == true)) {
        $.messager.alert("警告", "已审核医嘱不能关联");
        return false;
    }

    if (type == "S") {
        //设置关联
        //如果子医嘱是 其他 主医嘱或者子医嘱
        //检查传入主医嘱ID 是否是其他关联子医嘱
        if ($.isNumeric(MainID) == true) {
            var MasterSeqNo = GetCellData(MainID, "OrderMasterSeqNo");
            if (MasterSeqNo == MainID) {
                $.messager.alert("警告", "医嘱不能关联本身");
                SetCellData(MainID, "OrderMasterSeqNo", "");
                return false;
            }
            if (MasterSeqNo != "") {
                SetCellData(SubID, "OrderMasterSeqNo", "");
                $.messager.alert("警告", "选择主医嘱已经关联其他医嘱");
                return false;
            }
        }
        /*
        var SMasterSeqNo=GetCellData(SubID,"OrderMasterSeqNo");		
        if(SMasterSeqNo != ""){
        	$.messager.alert("警告","选择子医嘱已经关联其他医嘱");
        	return false;
        }
        */
        //医嘱类型
        var OrderType = GetCellData(SubID, "OrderType");
        if (OrderType != "R") {
            $.messager.alert("警告", "非药品医嘱不能关联");
            return false;
        }
        //数据检查
        var ret = CheckLinkOrderRecDep(MainID, SubID);
        if (ret == true) {
            SetCellData(SubID, "OrderMasterSeqNo", MainID);
            $("#" + MainID).find("td").addClass("OrderMasterM");
            $("#" + SubID).find("td").addClass("OrderMasterS");
            OrderMasterHandler(SubID, "S");
            $("#Order_DataGrid").setSelection(MainID, false);
            $("#Order_DataGrid").setSelection(SubID, false);
            SelectContrl(SubID);
        }

    } else if (type == "C") {
        //拆关联
        if (MainID != "") {
            //传入主医嘱拆除全部子医嘱
            $("#" + MainID).find("td").removeClass("OrderMasterM");
            var Allrowids = GetAllRowId();
            for (var i = 0; i < Allrowids.length; i++) {
                if (CheckIsItem(Allrowids[i]) == true) { continue; }
                var SMasterSeqNo = GetCellData(Allrowids[i], "OrderMasterSeqNo");
                if (SMasterSeqNo == MainID) {
                    SetCellData(Allrowids[i], "OrderMasterSeqNo", "");
                    $("#" + Allrowids[i]).find("td").removeClass("OrderMasterS");
                    OrderMasterHandler(Allrowids[i], "C");
                    $("#Order_DataGrid").setSelection(Allrowids[i], false);
                }
            }
            $("#Order_DataGrid").setSelection(MainID, false);
        } else {
            //不传主医嘱 拆除单个子医嘱	
            SetCellData(SubID, "OrderMasterSeqNo", "");
            $("#" + SubID).find("td").removeClass("OrderMasterS");
            $("#" + SubID).find("td").removeClass("OrderMasterM");
            OrderMasterHandler(SubID, "C");
            $("#Order_DataGrid").setSelection(SubID, false);
        }
    }

    return true;
}
//设置关联和拆关联对行样式和数据的控制
function OrderMasterHandler(rowid, type) {
    /* 
    //主医嘱实际上不需要做处理
    if($.isNumeric(MainID)==true){
    	//还原
    	ChangeCellsDisabledStyle(MainID,true);
    }
    */
    var StyleConfigStr = GetCellData(rowid, "StyleConfigStr");
    var StyleConfigObj = {};
    if (StyleConfigStr != "") {
        StyleConfigObj = eval("(" + StyleConfigStr + ")");
    }
    //重建行数据 对于下拉框 重新值
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    var OrderPrescNo = GetCellData(rowid, "OrderPrescNo");
    if ((OrderPrescNo != "") && (type == "C")) {
        ///仅重建医嘱数量,单次计量,单次计量单位,频次,疗程,用法
        StyleConfigObj.OrderDur = true;
        StyleConfigObj.OrderFreq = true;
        StyleConfigObj.OrderInstr = true;
    }
    //越级使用的抗菌药物不可操作。 update by shp 20150721
    var SpelAction = GetCellData(rowid, "SpecialAction");
    var SpecialAction = "";
    if (SpelAction.toString().indexOf('||') != -1) SpecialAction = SpelAction.split("||")[0];

    //设置子医嘱的数据和disable  设置关联
    if ($.isNumeric(rowid) == true && type == "S") {
        //子医嘱数据改变
        var MainID = GetCellData(rowid, "OrderMasterSeqNo");
        // update by shp 20150721
        if (SpecialAction != "isEmergency") {
            SyncOrderData(MainID, rowid);
            //子医嘱样式改变
            ChangeCellsDisabledStyle(rowid, false);
            //ChangeRowStyle(rowid,StyleConfigObj);
        } else {
            var rowids = GetAllRowId();
            for (var i = 0; i < rowids.length; i++) {
                var Eid = GetCellData(rowid[i], "OrderMasterSeqNo"); //已经关联的子医嘱关联id
                if (Eid == MainID) {
                    SyncOrderData(rowid, rowid[i])
                }
            }
            SyncOrderData(rowid, MainID) //主医嘱数据跟催越级抗菌药物数据相统一
            ChangeCellsDisabledStyle(MainID, false);
            SetCellData(rowid, "SpecialAction", "isEmergency||" + MainID);
        }
    }
    //拆关联
    if ($.isNumeric(rowid) == true && type == "C") {
        //子医嘱样式改变
        var MainID = SpelAction.toString().split("||")[1]; //此代码取到为空，应取改变前的值，需修改。
        if (SpecialAction != "isEmergency") {
            ChangeCellsDisabledStyle(rowid, true);
            //因为设置关联时可能对同一个字段有重复 需要还原样式
            ChangeRowStyle(rowid, StyleConfigObj);

            RestoreOrderData(rowid)
        } else {
            ChangeCellsDisabledStyle(MainID, true);
            //因为设置关联时可能对同一个字段有重复 需要还原样式
            //ChangeRowStyle(MainID,StyleConfigObj);

            RestoreOrderData(MainID)

            var rowids = GetAllRowId();
            for (var i = 0; i < rowids.length; i++) {
                var Eid = GetCellData(rowids[i], "OrderMasterSeqNo"); //已经关联的子医嘱关联id
                if (Eid == MainID) {
                    SyncOrderData(MainID, rowids[i])
                }
            }
            SetCellData(rowid, "SpecialAction", "isEmergency||");
        }
    }
}
//提供给手动改变关联的控制
function OrderMasterChangeHandler(e) {
    var rowid = GetEventRow(e);
    if ($.isNumeric(rowid) == false) { return; }
    var RowIdArry = new Array();
    var MasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    if (MasterSeqNo == "") {
        //取消关联
        SetMasterSeqNo("", rowid, "C");
        //$("#Order_DataGrid").setSelection(MainID,false);
        var allrowids = GetAllRowId();
        for (var i = 0; i < allrowids.length; i++) {
            var id1 = allrowids[i];
            var ItemRowid1 = GetCellData(id1, "OrderItemRowid");
            if (ItemRowid1 != "") { continue }
            var isFind = "0";
            for (var j = 0; j < allrowids.length; j++) {
                var id2 = allrowids[j];
                var ItemRowid2 = GetCellData(id2, "OrderItemRowid");
                var MasterSeqNo2 = GetCellData(id2, "OrderMasterSeqNo");
                if (ItemRowid2 != "" || MasterSeqNo2 == "") { continue }
                if (id1 == MasterSeqNo2) { isFind == "1" }
            }
            if (isFind == "0") {
                $("#" + id1).find("td").removeClass("OrderMasterS");
                $("#" + id1).find("td").removeClass("OrderMasterM");
            }
        }
    } else {
        //判断行是否存在
        var OrderItemRowid = GetCellData(MasterSeqNo, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(MasterSeqNo, "OrderARCIMRowid");
        if (OrderItemRowid == "" && OrderARCIMRowid != "") {
            //主医嘱必须是药品
            var OrderType1 = GetCellData(MasterSeqNo, "OrderType");
            var OrderType2 = GetCellData(rowid, "OrderType");
            if (OrderType1 != "R" || OrderType2 != "R") {
                $.messager.alert("警告", "非药品医嘱不能关联");
                SetMasterSeqNo("", rowid, "C");
                return;
            }
            //判断关联的序号所对应的医嘱是否是子医嘱,判断自身是否是主医嘱
            var IsOtherMasOrd = 0; //是否是其它医嘱的主医嘱
            var LinkMasOrdIsOtherSubOrd = 0; //所关联的主医嘱是否是其它医嘱的子医嘱
            var CurrentOrderSeqNo = GetCellData(rowid, "id");
            var allrowids = GetAllRowId();
            for (var i = 0; i < allrowids.length; i++) {
                var id1 = allrowids[i];
                var ItemRowid1 = GetCellData(id1, "OrderItemRowid");
                if (ItemRowid1 != "") { continue }
                var OrderSeqNo1 = GetCellData(id1, "id");
                var MasterSeqNo1 = GetCellData(id1, "OrderMasterSeqNo");
                if ((MasterSeqNo == OrderSeqNo1) && (MasterSeqNo1 != "")) {
                    LinkMasOrdIsOtherSubOrd = 1;
                }
                if (MasterSeqNo1 == CurrentOrderSeqNo) {
                    IsOtherMasOrd = 1;
                }
            }
            if (IsOtherMasOrd == 1) {
                dhcsys_alert("此医嘱是其它医嘱的主医嘱,不能关联!请核实!");
                SetMasterSeqNo("", rowid, "C");
                return;
            }
            if (LinkMasOrdIsOtherSubOrd == 1) {
                dhcsys_alert("此医嘱所关联的医嘱是其它医嘱的子医嘱,不能关联!请核实!");
                SetMasterSeqNo("", rowid, "C");
                return;
            }
            //******end********************
            //设置关联
            SetMasterSeqNo(MasterSeqNo, rowid, "S");
        } else {
            SetCellData(rowid, "OrderMasterSeqNo", "");
            $.messager.alert("警告", "关联主医嘱不存在");
            SetMasterSeqNo("", rowid, "C");
            return;
        }

    }
}
//还原子医嘱数据(有些数据需要从新计算)
function RestoreOrderData(SubID) {
    //配液标记
    //SetCellData(SubID,"OrderNeedPIVAFlag",false);
    SetPackQty(SubID);

    var OrderPriorRowid = GetCellData(SubID, "OrderPriorRowid");
    var OrderPriorRemarks = GetCellData(SubID, "OrderPriorRemarks");
    var OrderType = GetCellData(SubID, "OrderType");
    var OrderFreqRowid = GetCellData(SubID, "OrderFreqRowid");
    var OrderPackQtyStyleObj = ContrlOrderPackQty(SubID, OrderPriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid);
    ChangeCellDisable(SubID, OrderPackQtyStyleObj);
}
//同步子医嘱数据(有些数据需要从新计算)
function SyncOrderData(MainID, SubID) {
    //判断行是否在编辑状态
    var EditStatus = GetEditStatus(SubID);
    //1.医嘱类型
    var OrderPriorRowid = GetCellData(MainID, "OrderPriorRowid");
    var OrderPrior = GetCellData(MainID, "OrderPrior");
    if (EditStatus == true) {
        SetCellData(SubID, "OrderPrior", OrderPriorRowid);
    } else {
        SetCellData(SubID, "OrderPrior", OrderPrior);
    }
    SetCellData(SubID, "OrderPriorRowid", OrderPriorRowid);
    if (GlobalObj.OrderPriorContrlConfig == 1) {
        var Obj = "";
        if ($.isNumeric(SubID) == true) {
            Obj = document.getElementById(SubID + "_OrderPrior");
        } else {
            Obj = document.getElementById("OrderPrior");
        }
        var HiddenOrderPrior = $("#HiddenOrderPrior").val();
        if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
            //只有长期
            var tempOrderPrior = "长期医嘱";
            var tempOrderPriorRowid = GlobalObj.LongOrderPriorRowid;
        }
        if ((OrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
            //只有临时
            var tempOrderPrior = "临时医嘱";
            var tempOrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
        }
        if ((OrderPriorRowid == GlobalObj.OutOrderPriorRowid)) {
            //出院带药
            var tempOrderPrior = "出院带药";
            var tempOrderPriorRowid = GlobalObj.OutOrderPriorRowid;
        }
        if (Obj) {
            ClearAllList(Obj);
            Obj.options[Obj.length] = new Option(tempOrderPrior, tempOrderPriorRowid);
        }
        //SetCellData(SubID,"OrderPrior",tempOrderPrior);
        //SetCellData(SubID,"OrderPriorRowid",tempOrderPriorRowid);
        SetCellData(SubID, "OrderPriorStr", tempOrderPriorRowid + ":" + tempOrderPrior);
        /*if(Obj){
        	ClearAllList(Obj);
        	var HiddenOrderPrior=$("#HiddenOrderPrior").val();
        	if((OrderPriorRowid==GlobalObj.LongOrderPriorRowid)){ //&&(HiddenOrderPrior!="LongOrderPrior")
        		//只有长期
        		Obj.options[Obj.length] = new Option("长期医嘱",GlobalObj.LongOrderPriorRowid);
        		SetCellData(SubID,"OrderPrior",GlobalObj.LongOrderPriorRowid);
        		SetCellData(SubID,"OrderPriorRowid",GlobalObj.LongOrderPriorRowid);
        		SetCellData(SubID,"OrderPriorStr",GlobalObj.LongOrderPriorRowid+":"+"长期医嘱");
        	}
        	if((OrderPriorRowid==GlobalObj.ShortOrderPriorRowid)){ //&&(HiddenOrderPrior!="ShortOrderPrior")
        		//只有临时
        		Obj.options[Obj.length] = new Option("临时医嘱",GlobalObj.ShortOrderPriorRowid);
        		SetCellData(SubID,"OrderPrior",GlobalObj.ShortOrderPriorRowid);
        		SetCellData(SubID,"OrderPriorRowid",GlobalObj.ShortOrderPriorRowid);
        		SetCellData(SubID,"OrderPriorStr",GlobalObj.ShortOrderPriorRowid+":"+"临时医嘱");
        	}
        	if((OrderPriorRowid==GlobalObj.OutOrderPriorRowid)){ //&&(HiddenOrderPrior!="OutOrderPrior")
        		//出院带药
        		Obj.options[Obj.length] = new Option("出院带药",GlobalObj.OutOrderPriorRowid);
        		SetCellData(SubID,"OrderPrior",GlobalObj.OutOrderPriorRowid);
        		SetCellData(SubID,"OrderPriorRowid",GlobalObj.OutOrderPriorRowid);
        		SetCellData(SubID,"OrderPriorStr",GlobalObj.OutOrderPriorRowid+":"+"出院带药");
        	}
        }*/
    }
    //2.频次
    var OrderFreqRowid = GetCellData(MainID, "OrderFreqRowid");
    var OrderFreq = GetCellData(MainID, "OrderFreq");
    var OrderFreqFactor = GetCellData(MainID, "OrderFreqFactor");
    var OrderFreqInterval = GetCellData(MainID, "OrderFreqInterval");
    SetCellData(SubID, "OrderFreq", OrderFreq);
    SetCellData(SubID, "OrderFreqRowid", OrderFreqRowid);
    SetCellData(SubID, "OrderFreqFactor", OrderFreqFactor);
    SetCellData(SubID, "OrderFreqInterval", OrderFreqInterval);
    //3.疗程
    var OrderDurRowid = GetCellData(MainID, "OrderDurRowid");
    var OrderDurFactor = GetCellData(MainID, "OrderDurFactor");
    var OrderDur = GetCellData(MainID, "OrderDur");
    /*SetCellData(SubID,"OrderDur",OrderDur);	
    SetCellData(SubID,"OrderDurRowid",OrderDurRowid);
    SetCellData(SubID,"OrderDurFactor",OrderDurFactor);*/
    //4.用法
    var OrderInstrRowid = GetCellData(MainID, "OrderInstrRowid");
    var OrderInstr = GetCellData(MainID, "OrderInstr");
    var InstrRowId = GetCellData(SubID, "OrderInstrRowid");
    if (!IsNotFollowInstr(InstrRowId)) {
        SetCellData(SubID, "OrderInstr", OrderInstr);
        SetCellData(SubID, "OrderInstrRowid", OrderInstrRowid);
        //外用用法 单次剂量和疗程应为空
        var OrderInstrRowid = GetCellData(MainID, "OrderInstrRowid")
        if ((IsWYInstr(OrderInstrRowid)) && (GlobalObj.PAAdmType != "I")) {
            SetCellData(SubID, "OrderDoseQty", "");
        }
    }
    var InstrRowId = GetCellData(SubID, "OrderInstrRowid");
    if (IsWYInstr(InstrRowId)) {
        if (GlobalObj.PAAdmType != "I") {
            SetCellData(SubID, "OrderDur", "");
            SetCellData(SubID, "OrderDurRowid", "");
            SetCellData(SubID, "OrderDurFactor", "");
        }
    } else {
        if (!IsWYInstr(OrderInstrRowid)) {
            SetCellData(SubID, "OrderDur", OrderDur);
            SetCellData(SubID, "OrderDurRowid", OrderDurRowid);
            SetCellData(SubID, "OrderDurFactor", OrderDurFactor);
        }
    }

    //5.皮试(根据用法)
    if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
        SetCellChecked(SubID, "OrderSkinTest", false)
        SetCellData(SubID, "OrderActionRowid", "");
        SetCellData(SubID, "OrderAction", "");
    }
    //6.开始日期
    var OrderStartDate = GetCellData(MainID, "OrderStartDate");
    SetCellData(SubID, "OrderStartDate", OrderStartDate);
    //7.结束日期
    var OrderEndDate = GetCellData(MainID, "OrderEndDate");
    SetCellData(SubID, "OrderEndDate", OrderEndDate);
    //8.开医嘱日期
    var OrderDate = GetCellData(MainID, "OrderDate");
    SetCellData(SubID, "OrderDate", OrderDate);
    //9.重新计算数据  会更新首日次数.首日次数和主医嘱保持一致即可
    SetPackQty(SubID);
    //10.首日次数
    var OrderFirstDayTimes = GetCellData(MainID, "OrderFirstDayTimes");
    SetCellData(SubID, "OrderFirstDayTimes", OrderFirstDayTimes);
    //11.接收科室
    //12.同步滴速和滴速单位
    var OrderSpeedFlowRate = GetCellData(MainID, "OrderSpeedFlowRate")
    var OrderFlowRateUnitRowId = GetCellData(MainID, "OrderFlowRateUnitRowId")
    var OrderFlowRateUnit = GetCellData(MainID, "OrderFlowRateUnit")
    SetCellData(SubID, "OrderSpeedFlowRate", OrderSpeedFlowRate);
    if (EditStatus == true) {
        SetCellData(SubID, "OrderFlowRateUnit", OrderFlowRateUnitRowId);
    } else {
        SetCellData(SubID, "OrderFlowRateUnit", OrderFlowRateUnit);
    }
    SetCellData(SubID, "OrderFlowRateUnitRowId", OrderFlowRateUnitRowId);
    //配液标记
    var OrderNeedPIVAFlag = GetCellData(MainID, "OrderNeedPIVAFlag");
    if (EditStatus == true) {
        if (OrderNeedPIVAFlag == "Y") { OrderNeedPIVAFlag = true; } else { OrderNeedPIVAFlag = false; }
    }
    SetCellData(SubID, "OrderNeedPIVAFlag", OrderNeedPIVAFlag);
    //根据配液标记控制是否可以录入整包装数量
    if ((OrderNeedPIVAFlag) && (OrderNeedPIVAFlag != "N")) {
        var OrderPackQtyStyleObj = {};
        var RowDisableStr = GetCellData(MainID, "RowDisableStr");
        var StyleConfigObj = eval("(" + RowDisableStr + ")");
        if (StyleConfigObj) OrderPackQtyStyleObj = { OrderPackQty: StyleConfigObj.OrderPackQty, OrderPackUOM: StyleConfigObj.OrderPackQty }
        SetCellData(SubID, "OrderPackQty", "");
    } else {
        var OrderPriorRowid = GetCellData(SubID, "OrderPriorRowid");
        var OrderPriorRemarks = GetCellData(SubID, "OrderPriorRemarks");
        var OrderType = GetCellData(SubID, "OrderType");
        var OrderFreqRowid = GetCellData(SubID, "OrderFreqRowid");
        var OrderPackQtyStyleObj = ContrlOrderPackQty(SubID, OrderPriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid);
    }
    //部位说明 医嘱阶段
    var OrderBodyPartID = GetCellData(MainID, "OrderBodyPartID");
    var OrderBodyPart = GetCellData(MainID, "OrderBodyPart");
    var OrderStageCode = GetCellData(MainID, "OrderStageCode");
    SetCellData(SubID, "OrderBodyPart", OrderBodyPartID);
    SetCellData(SubID, "OrderBodyPartID", OrderBodyPartID);
    SetCellData(SubID, "OrderStageCode", OrderStageCode);
    SetCellData(SubID, "OrderStage", OrderStageCode);

    ChangeCellDisable(SubID, OrderPackQtyStyleObj);
}
//行费别改变事件
function OrderBillTypechangehandler(e) {
    var rowid = GetEventRow(e);
    var oldOrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    var OrderBillTypeRowid = websys_getSrcElement(e).value;
    var PrescCheck = SelectPrescriptItem(OrderARCIMRowid, OrderBillTypeRowid);
    var OrderName = GetCellData(rowid, "OrderName");
    if (PrescCheck == "") {
        dhcsys_alert(OrderName + t['LIMIT_PRESCITEM']);
        SetCellData(rowid, "OrderBillType", oldOrderBillTypeRowid);
        //修改费别之后需要从新加载医保类别
        CreaterOrderInsurCat(rowid)
        return false;
    } else {
        //默认费别改变
        SetCellData(rowid, "OrderBillType", PrescCheck);
        SetCellData(rowid, "OrderBillTypeRowid", PrescCheck);
    }
    //修改费别之后需要从新加载医保类别
    CreaterOrderInsurCat(rowid)
}
//医嘱类型改变控制  change
function OrderPriorChange(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    var rowid = GetEventRow(e);
    //改变关联数据  OrderPriorId
    var OldPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    var PriorRowid = obj.value;
    /*
	//判断已经下了出院医嘱或者已经医疗结算的不能开出出院带药以外的医嘱
  	if ((GlobalObj.PAADMMedDischarged=="1")&&(PriorRowid!=GlobalObj.OutOrderPriorRowid)){
  		dhcsys_alert(t['IsEstimDischarge']);
	    DeleteRow(rowid);
  		return false;
  	}
	*/
    OrderPriorchangeCommon(rowid, OldPriorRowid, PriorRowid);
}
//频次改变
function FrequencyChangeHandler(e) {
    try {
        if (typeof PHCFRDesczLookupGrid.isDestroyed == "undefined") {
            return
        }
    } catch (e) {}
    var rowid = GetEventRow(e);
    PHCFRDesc_changehandlerX(rowid);
    return;
}
//TODO 方法逻辑较多,允许速度慢,待优化
function OrderPriorchangeCommon(Row, OldPriorRowid, PriorRowid) {
	var ParaPriorRowid=PriorRowid;
    var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    if ((OrderARCIMRowid == "") || (OrderItemRowid != "")) return;

    var RowStyleObj = {};
    SetCellData(Row, "OrderPriorRowid", PriorRowid);
    var OrderPriorRemarks = GetCellData(Row, "OrderPriorRemarksRowId");
    var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid")
    if ((PriorRowid == GlobalObj.LongOrderPriorRowid) && ((OrderFreqRowid == GlobalObj.STFreqRowid) || (OrderFreqRowid == GlobalObj.ONCEFreqRowid))) {
        SetCellData(Row, "OrderFreqRowid", "");
        SetCellData(Row, "OrderFreq", "");
    }
    if (GlobalObj.PAAdmType == "I") {
        if ((PriorRowid != GlobalObj.LongOrderPriorRowid) && ((OrderFreqRowid != GlobalObj.STFreqRowid) || (OrderFreqRowid == GlobalObj.ONCEFreqRowid))) {
            SetCellData(Row, "OrderFreqRowid", GlobalObj.ONCEFreqRowid);
            SetCellData(Row, "OrderFreq", GlobalObj.ONCEFreq);
        }
    }
    //if (((HospitalCode=="HF")||(HospitalCode=="NB")||(HospitalCode=="SHHSPD"))&&((PriorRowid==ShortOrderPriorRowid)||(PriorRowid==OMOrderPriorRowid))&&(OrderFreqRowid!=STFreqRowid)&&(PAAdmType=="I")){
    //把从医院代码设定改为从设置去判断

    if ((GlobalObj.IPShortOrderPriorST == "1") && ((PriorRowid == GlobalObj.ShortOrderPriorRowid) || (PriorRowid == GlobalObj.OMOrderPriorRowid)) && (OrderFreqRowid != GlobalObj.STFreqRowid) && (GlobalObj.PAAdmType == "I")) {
        var OrderPHPrescType = GetCellData(Row, "OrderPHPrescType")
        if ((OrderPHPrescType != 4) && (OrderFreqRowid != GlobalObj.ONCEFreqRowid)) {
            SetCellData(Row, "OrderFreqRowid", GlobalObj.STFreqRowid);
            SetCellData(Row, "OrderFreq", GlobalObj.STFreq);
        }
        if ((OrderPHPrescType == 4) && (OrderFreqRowid != GlobalObj.ONCEFreqRowid) && (OrderFreqRowid != GlobalObj.STFreqRowid)) {
            SetCellData(Row, "OrderFreqRowid", GlobalObj.STFreqRowid);
            SetCellData(Row, "OrderFreq", GlobalObj.STFreq);
        }
    }

    if ((PriorRowid == GlobalObj.STATOrderPriorRowid) && (OrderFreqRowid != GlobalObj.STFreqRowid) && (GlobalObj.PAAdmType == "I")) {
        SetCellData(Row, "OrderFreqRowid", GlobalObj.STFreqRowid);
        SetCellData(Row, "OrderFreq", GlobalObj.STFreq);
    }
    var VerifiedOrderFlag=0;
    //护士补录医嘱进行关联设置
    if ((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderFreRowId != "undefined") && (VerifiedOrderObj.LinkedMasterOrderFreRowId != "")) {
        SetCellData(Row, "OrderFreqRowid", VerifiedOrderObj.LinkedMasterOrderFreRowId);
        SetCellData(Row, "OrderFreq", VerifiedOrderObj.LinkedMasterOrderFreDesc);
        SetCellData(Row, "OrderFreqFactor", VerifiedOrderObj.LinkedMasterOrderFreFactor);
        SetCellData(Row, "OrderFreqInterval", VerifiedOrderObj.LinkedMasterOrderFreInterval);
        VerifiedOrderFlag=1;
    }
    SetRecLocStr(Row, PriorRowid, OrderPriorRemarks);

    if ((PriorRowid == GlobalObj.OutOrderPriorRowid) || (OrderPriorRemarks == "ONE") || (PriorRowid == GlobalObj.OneOrderPriorRowid)) {
        //SetPackQty(Row);
    }
    var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo")
    var OrderSeqNo = GetCellData(Row, "id");
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    //疗程列如果为长期医嘱不允许修改疗程,其他可以
    if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
        //住院长期医嘱数量置空(所有医嘱)
        if ((GlobalObj.PAAdmType == "I") && (IsLongPrior(OrderPriorRowid) == '1')) {
            SetCellData(Row, "OrderPackQty", '');
        }
        var OrderType = GetCellData(Row, "OrderType");
        if (OrderType == "R") {
            var Id = Row + "_OrderFirstDayTimes";
            var obj = document.getElementById(Id);
            if ((PriorRowid == GlobalObj.LongOrderPriorRowid) || (PriorRowid == GlobalObj.OMSOrderPriorRowid)) {
                var obj = { OrderFirstDayTimes: true };
                $.extend(RowStyleObj, obj);
            } else {
                //清空首日次数
                var obj = { OrderFirstDayTimes: false };
                SetCellData(Row, "OrderFirstDayTimes", "");
                $.extend(RowStyleObj, obj);
            }
        }
        var OrderStartDate = "",
            OrderStartTime = "";
        var Id = Row + "_OrderDur";
        var OrderPriorRemarks = GetCellData(Row, "OrderPriorRemarksRowId");

        if ((GlobalObj.PAAdmType == "I") && ((PriorRowid == GlobalObj.LongOrderPriorRowid) || (PriorRowid == GlobalObj.OMSOrderPriorRowid) || (PriorRowid == GlobalObj.ShortOrderPriorRowid))) {
            var OrderDur = GlobalObj.IPDefaultDur;
            var OrderDurRowid = GlobalObj.IPDefaultDurRowId;
            var OrderDurFactor = GlobalObj.IPDefaultDurFactor;
            SetCellData(Row, "OrderDur", OrderDur);
            SetCellData(Row, "OrderDurRowid", OrderDurRowid);
            SetCellData(Row, "OrderDurFactor", OrderDurFactor);
            var obj = { OrderDur: false };
            $.extend(RowStyleObj, obj);
            var OrderType = GetCellData(Row, "OrderType");
            var OrderStartDate = "",
                OrderStartTime = "";
            if ((PriorRowid == GlobalObj.LongOrderPriorRowid) && (OrderType == "R")) {
                RecDepRowid = GetCellData(Row, "OrderRecDepRowid");
                var ret = CheckDosingRecLoc(RecDepRowid);
                if (ret) {
                    var OrderHiddenPara = GetCellData(Row, "OrderHiddenPara");
                    var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
                    var StartDateTime = cspRunServerMethod(GlobalObj.GetDosingDateTimeMethod, PageLogicObj.defaultDataCache, "1", OrderItemCatRowid);
                    var StartDateTimeArr = StartDateTime.split("^");
                    var OrderStartDate = StartDateTimeArr[0];
                    var OrderStartTime = StartDateTimeArr[1];
                    SetCellData(Row, "OrderStartDate", OrderStartDate + " " + OrderStartTime);
                    //SetCellData(Row,"OrderStartTime",OrderStartTime);	
                }
            }
        } else {
            /*var OrderDur = GetCellData(Row, "OrderDur");
            var obj = { OrderDur: true };
            $.extend(RowStyleObj, obj);*/ //20170322 为什么在这个地方设置疗程可编辑?
            //ChangeRowStyle(Row,obj);
            //SetCellData(Row,"OrderDur",OrderDur);				
            var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
            var CurrDateTimeArr = CurrDateTime.split("^");
            var OrderStartDate = CurrDateTimeArr[0];
            var OrderStartTime = CurrDateTimeArr[1];
            SetCellData(Row, "OrderStartDate", OrderStartDate + " " + OrderStartTime);
            //SetCellData(Row,"OrderStartTime",OrderStartTime);
        }
        //算数量
        SetPackQty(Row);
        var OrderPackQty = GetCellData(Row, "OrderPackQty");
        var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid");
        //数量控制放到最后
        var OrderPackQtyObj = ContrlOrderPackQty(Row, OrderPriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid);
        //$.messager.alert("警告",OrderPackQtyObj.OrderPackQty);
        $.extend(RowStyleObj, OrderPackQtyObj);
        //可用天数计算
        SetOrderUsableDays(Row);
    }

    if ((GlobalObj.HospitalCode == "SDWFYY") & (GlobalObj.PAAdmType == "I") & (OrderPriorRowid == GlobalObj.LongOrderPriorRowid) & (OrderType == "R")) {
        OrderStartTime = "08:00"
            //SetCellChecked(Row,"OrderStartTime",OrderStartTime);
    }
    //出院带药清空附加说明
    if (PriorRowid == GlobalObj.OutOrderPriorRowid) {
        SetCellData(Row, "OrderPriorRemarksRowId", "");
        SetCellData(Row, "OrderPriorRemarks", "");
    }

    if (PriorRowid != GlobalObj.ShortOrderPriorRowid) {
        if (GetEditStatus(Row) == true) {
            SetCellData(Row, "OrderSkinTest", false);
        }else{
	        SetCellData(Row, "OrderSkinTest", "N");
	    }
        var ActionRowid = GetCellData(Row, "OrderActionRowid");
        var ActionCode = GetOrderActionCode(ActionRowid);
        if (ActionCode == "YY") {
            SetCellData(Row, "OrderActionRowid", "");
            SetCellData(Row, "OrderAction", "");
        }
        var OrderPriorRemarks = GetCellData(Row, "OrderPriorRemarksRowId");
        if (OrderPriorRemarks == "ONE") {
            var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
            var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
            SetCellData(Row, "OrderPriorRemarks", "");
            SetCellData(Row, "OrderPriorRemarksRowId", "");
        }
    }
    OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
    if (OrderMasterSeqNo != "") {
        ChangeCellsDisabledStyle(Row, false);
    }
    var OrderPrior = GetCellData(Row, "OrderPrior");
    var OrderStartDateStr = GetCellData(Row, "OrderStartDate");
    if (OrderStartDateStr != "") {
        OrderStartDate = OrderStartDateStr.split(" ")[0];
        OrderStartTime = OrderStartDateStr.split(" ")[1];
    }
    //改变单元格是否可编辑
    ChangeRowStyle(Row, RowStyleObj);
    SetFocusCell(Row, "OrderName");
    CheckFreqAndPackQty(Row);
    ChangeLinkOrderPrior(OrderSeqNo, OrderPriorRowid, OrderStartDate, OrderStartTime, OrderPrior);
    //频次改变
    if ((VerifiedOrderFlag==0)&&(ParaPriorRowid!=OldPriorRowid)){
	    PHCFRDesc_changehandlerX(Row);
	}else{
		//同步首日次数
       SetOrderFirstDayTimes(Row);
	}
    var MasterOrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var MasterOrderPrior = GetCellData(Row, "OrderPrior");
    var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid");
    var OrderFreq = GetCellData(Row, "OrderFreq");
    var OrderFreqFactor = GetCellData(Row, "OrderFreqFactor");
    var OrderFreqDispTimeStr = GetCellData(Row, "OrderFreqDispTimeStr");
    var OrderFreqInterval = GetCellData(Row, "OrderFreqInterval");
    //关联频次改变
    ChangeLinkOrderFreq(OrderSeqNo, MasterOrderPriorRowid, MasterOrderPrior, OrderFreqRowid, OrderFreq, OrderFreqFactor, OrderFreqInterval, OrderFreqDispTimeStr, OrderStartDateStr);
    CancelNeedPIVA(Row)
}
//单次剂量改变控制
function OrderDoseQtychangehandler(e) {
    try {
        var rowid = "";
        var obj = websys_getSrcElement(e);
        if (obj.id.indexOf("_") > 0) {
            rowid = obj.id.split("_")[0];
        }

        var OrderType = GetCellData(rowid, "OrderType");
        var OrderDoseQty = GetCellData(rowid, "OrderDoseQty");
        //$.messager.alert("警告",OrderDoseQty);
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");



        //if ((OrderType=="R")&&(OrderDoseQty!="")&&(OrderARCIMRowid!="")){
        //存在非药品的治疗项目
        if ((OrderDoseQty != "") && (OrderARCIMRowid != "")) {
            SetPackQty(rowid);
            //websys_setfocus("OrderMasterSeqNoz"+Row);
        } else {
            //websys_setfocus("OrderPackQtyz"+Row);
        }
        XHZY_Click();
    } catch (e) {}
}

function OrderDoseQtykeydownhandler(e) {

    try { keycode = websys_getKey(e); } catch (e) { keycode = websys_getKey(); }
    try {
        if ((keycode == 13) || (keycode == 9)) {
            var rowid = GetEventRow(e);
            var OrderType = GetCellData(rowid, "OrderType");
            var OrderDoseQty = GetCellData(rowid, "OrderDoseQty");
            var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
            if (OrderARCIMRowid != "") {
                if (OrderType == "R") {
                    XHZY_Click();
                    SetFocusCell(rowid, "OrderMasterSeqNo")
                } else {
                    var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
                    if (OrderPHPrescType != "4") {
                        //长期医嘱数量不可录入,所有需要考虑跳转到下一行
                        var type = "";
                        if (window.event) type = websys_getType(e);
                        if (type != 'change') {
                            var JumpAry = ['OrderPackQty'];
                            CellFocusJump(rowid, JumpAry, true);
                        }
                    } else {
                        SetFocusCell(rowid, "OrderFreq")
                    }
                }
            }
            return websys_cancel();
        }
    } catch (e) {}
}

function OrderPricechangehandler(e) {
    OrderPackQtychangehandler(e)
}
//数量改变控制
function OrderPackQtychangehandler(e) {
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    OrderPackQtychangeCommon(rowid);
    /*try {	
		var OrderPackQty=GetCellData(rowid,"OrderPackQty");
		var OrderARCIMRowid=GetCellData(rowid,"OrderARCIMRowid");
		var OrderItemRowid=GetCellData(rowid,"OrderItemRowid");
		var OrderPriorRowid=GetCellData(rowid,"OrderPriorRowid");
	
		if (OrderPackQty==""){OrderPackQty=0}
		if ((OrderARCIMRowid!="")&&(OrderItemRowid=="")){
		
			var OrderPrice=GetCellData(rowid,"OrderPrice");			
			var OrderSum=parseFloat(OrderPrice)*parseFloat(OrderPackQty);
            if(OrderPackQty==0){
		        var BaseDoseQtySum=GetCellData(rowid,"OrderBaseQtySum");
				var OrderConFac=GetCellData(rowid,"OrderConFac");
				var OrderSum=(parseFloat(OrderPrice)/parseFloat(OrderConFac))*parseFloat(BaseDoseQtySum);
            }			
			OrderSum=OrderSum.toFixed(4);
			//可用天数
			SetOrderUsableDays(rowid)
			//如果是自备药医嘱则不用再计算金额
			//$.messager.alert("警告",OrderPriorRowid+","+GlobalObj.OMOrderPriorRowid+","+GlobalObj.OMSOrderPriorRowid);
			if ((OrderPriorRowid!=GlobalObj.OMOrderPriorRowid)&&(OrderPriorRowid!=GlobalObj.OMSOrderPriorRowid)){
				SetCellData(rowid,"OrderSum",OrderSum);
				SetScreenSum();
				//SetFooterData();
			}
		}
		XHZY_Click();
		//return websys_cancel();
	}catch(e) {}*/
}

function OrderPackQtychangeCommon(rowid) {
    try {
        var OrderPackQty = GetCellData(rowid, "OrderPackQty");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");

        if (OrderPackQty == "") { OrderPackQty = 0 }
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {

            var OrderPrice = GetCellData(rowid, "OrderPrice");
            var OrderSum = parseFloat(OrderPrice) * parseFloat(OrderPackQty);
            if (OrderPackQty == 0) {
                var BaseDoseQtySum = GetCellData(rowid, "OrderBaseQtySum");
                var OrderConFac = GetCellData(rowid, "OrderConFac");
                var OrderSum = (parseFloat(OrderPrice) / parseFloat(OrderConFac)) * parseFloat(BaseDoseQtySum);
            }
            OrderSum = OrderSum.toFixed(4);
            //可用天数
            SetOrderUsableDays(rowid)
                //如果是自备药医嘱则不用再计算金额
                //$.messager.alert("警告",OrderPriorRowid+","+GlobalObj.OMOrderPriorRowid+","+GlobalObj.OMSOrderPriorRowid);
            if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
                SetCellData(rowid, "OrderSum", OrderSum);
                SetScreenSum();
                //SetFooterData();
            }
        }
        XHZY_Click();
        //return websys_cancel();
    } catch (e) {}
}

function OrderPackQtykeydownhandler(e) {

    try { keycode = websys_getKey(e); } catch (e) { keycode = websys_getKey(); }
    /*
    if (keycode==45){window.event.keyCode=0;return websys_cancel();}

    if (((keycode>47)&&(keycode<58))||(keycode==46)){
    }else{
    	window.event.keyCode=0;return websys_cancel();
    }
    */
    if ((keycode == 8) || (keycode == 9) || (keycode == 46) || (keycode == 13) || ((keycode > 47) && (keycode < 58)) || ((keycode > 95) && (keycode < 106))) {
        try {
            if ((keycode == 13) || (keycode == 9)) {
                var rowid = "";
                var obj = websys_getSrcElement(e);
                if (obj.id.indexOf("_") > 0) {
                    rowid = obj.id.split("_")[0];
                }
                var OrderARCOSRowId = GetCellData(rowid, "OrderARCOSRowId");
                var rowsobj = $('#Order_DataGrid').getDataIDs();
                var rows = rowsobj.length;
                var RowNext = GetNextRowId();
                if ((GlobalObj.FindARCOSInputByLogonLoc == 1) && (OrderARCOSRowId != '') && (rows != RowNext)) {

                    SetFocusCell(RowNext, "OrderPackQty");
                    return websys_cancel();
                } else {
                    window.event.keyCode = 0;
                    var OrderPackQty = GetCellData(rowid, "OrderPackQty");
                    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
                    if (OrderARCIMRowid != "") {
                        var OrderType = GetCellData(rowid, "OrderType");
                        /*if ((OrderType=="R")&&(OrderPackQtyColumnIndex<OrderDoseQtyColumnIndex)) {
                        		SetFocusColumn("OrderDoseQty",Row);
                        		return websys_cancel();
                        }*/
                        if ((GlobalObj.PAAdmType == "I") || ((GlobalObj.PAAdmType != "I") && (OrderPackQty != ""))) {
                            window.setTimeout("Add_Order_row()", 200);
                        }
                    }
                }

                return websys_cancel();
            }
        } catch (e) {}
    } else {
        return websys_cancel();
    }
}

//剂量单位改变控制
function OrderDoseUOMchangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //改变关联数据  OrderPriorId
    SetCellData(rowid, "OrderDoseUOMRowid", obj.value);
    SetCellData(rowid, "OrderDoseUOM", obj.value);
    SetPackQty(rowid);
    //$("#Order_DataGrid").setCell(rowid,"OrderPriorId", this.value);	
    //var OrderDoseUOMRowid=GetCellData(rowid,"OrderDoseUOMRowid")
    //$.messager.alert("警告",OrderDoseUOMRowid);
}
//附加说明改变控制
function OrderPriorRemarkschangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    var OrderPriorRemarksRowId = obj.value;
    SetCellData(rowid, "OrderPriorRemarksRowId", OrderPriorRemarksRowId);
    SetCellData(rowid, "OrderPriorRemarks", OrderPriorRemarksRowId);
    CheckOrderPriorRemarks(rowid);
}

function CheckOrderPriorRemarks(rowid) {
    var PriorRowid = "";
    //----------------------6-9---------------------------
    var rows = $('#Order_DataGrid').getDataIDs();
    var OrderPriorRemarks = GetCellData(rowid, "OrderPriorRemarksRowId");
    if (OrderPriorRemarks != "OM") { SetCellChecked(rowid, "OrderSelfOMFlag", false); }
    if (OrderPriorRemarks == "ONE") {
        var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
        var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
        if (OrderPriorRowid != GlobalObj.ShortOrderPriorRowid) {
            $.messager.alert("警告", "取药医嘱只能是临时医嘱");
            SetCellData(rowid, "OrderPriorRemarks", "");
            SetCellData(rowid, "OrderPriorRemarksRowId", "");
            return;
        }
        if ((OrderMasterSeqNo != "") && (OrderPriorRowid != GlobalObj.ShortOrderPriorRowid)) {
            $.messager.alert("警告", "关联医嘱,不允许选择取药医嘱");
            SetCellData(rowid, "OrderPriorRemarks", "");
            SetCellData(rowid, "OrderPriorRemarksRowId", "");

            return;

            //取药医嘱暂时不给予关联。
            var OrderSeqNo = GetCellData(rowid, "OrderSeqNo");
            for (i = 0; i < rows.length; i++) {
                var RowGet = rows[i];
                var MasterOrderSeqNo = GetCellData(RowGet, "OrderMasterSeqNo");
                if ((MasterOrderSeqNo != "") && (OrderSeqNo == MasterOrderSeqNo)) {
                    $.messager.alert("警告", "关联医嘱,不允许选择取药医嘱");
                    SetCellData(RowGet, "OrderPriorRemarks", "");
                    SetCellData(rowid, "OrderPriorRemarksRowId", "");
                    return;
                }
            }
        }
        //取药医嘱暂时不给予关联。
        for (i = 0; i < rows.length; i++) {
            var RowGet = rows[i];
            var MasterOrderSeqNo = GetCellData(RowGet, "OrderMasterSeqNo");
            var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
            if ((MasterOrderSeqNo != "") && (rowid == MasterOrderSeqNo) && (OrderPriorRowid != GlobalObj.ShortOrderPriorRowid)) {
                $.messager.alert("警告", "关联医嘱,不允许选择取药医嘱");
                SetCellData(rowid, "OrderPriorRemarks", "");
                SetCellData(rowid, "OrderPriorRemarksRowId", "");
                return;
            }
        }
        //非药品医嘱不能选择取药医嘱
        var OrderType = GetCellData(rowid, "OrderType");
        if (OrderType != "R") {
            $.messager.alert("警告", "非药品医嘱,不允许选择取药医嘱");
            SetCellData(rowid, "OrderPriorRemarks", "");
            SetCellData(rowid, "OrderPriorRemarksRowId", "");
            return;
        }
    }
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    if ((OrderPriorRemarks == "OM") && (OrderARCIMRowid != "")) {
        //SetCellChecked(rowid,"OrderSelfOMFlag",true)
        var OrderType = GetCellData(rowid, "OrderType");
        if (OrderType != "R") {
            $.messager.alert("警告", "非药品医嘱,不允许选择自备药");
            SetCellData(rowid, "OrderPriorRemarks", "");
            SetCellData(rowid, "OrderPriorRemarksRowId", "");
            SetCellChecked(rowid, "OrderSelfOMFlag", false)
            return;
        }
    }
    if ((OrderPriorRemarks == "ZT") && (GlobalObj.PAAdmType == "I")) {
        var OrderPrice = GetCellData(rowid, "OrderPrice");
        var OrderType = GetCellData(rowid, "OrderType");
        if ((OrderType != "R") && (+OrderPrice != 0)) {
            $.messager.alert("警告", "住院患者只有药品或0费用医嘱才能选择嘱托");
            SetCellData(rowid, "OrderPriorRemarks", "");
            SetCellData(rowid, "OrderPriorRemarksRowId", "");
            return;
        }
    }
    switch (OrderPriorRemarks) {
        case "ONE":
            PriorRowid = GlobalObj.ShortOrderPriorRowid;
            break;
        default:
    }
    var OldPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    if (PriorRowid == "") {
        PriorRowid = OldPriorRowid;
        //if((OrderPriorRemarks=="OM")||(OrderPriorRemarks=="ZT")) SetScreenSum();
    } else {
        if (UIConfigObj.isEditCopyItem == true) {
            SetCellData(rowid, "OrderPrior", PriorRowid);
        }
        //SetCellData(rowid,"OrderPrior",PriorRowid);
        //TODO 此处调用此方法正确,但此方法逻辑较多,速度慢,待优化
        //OrderPriorchangeCommon(rowid, OldPriorRowid, PriorRowid);
    }
    OrderPriorchangeCommon(rowid, OldPriorRowid, PriorRowid);
    SetScreenSum();
}
//接收科室改变控制
function OrderRecDepchangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = GetEventRow(e);;
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    SetCellData(rowid, "OrderRecDepRowid", obj.value);
    SetCellData(rowid, "OrderRecDep", obj.value);
    OrderRecDepChangeCom(rowid);
    /*var OrderPriorRowid=GetCellData(rowid,"OrderPriorRowid");	
	var OrderStartDate="";
	var OrderType=GetCellData(rowid,"OrderType");
	if (((OrderPriorRowid==GlobalObj.LongOrderPriorRowid)||(OrderPriorRowid==GlobalObj.OMSOrderPriorRowid))&&(OrderType=="R")){
		var ret=CheckDosingRecLoc(RecDepRowid);
		if (ret){
			var OrderHiddenPara=GetCellData(rowid,"OrderHiddenPara");
			var OrderItemCatRowid=mPiece(OrderHiddenPara,String.fromCharCode(1),2);
			var StartDateTime=cspRunServerMethod(GlobalObj.GetDosingDateTimeMethod,PageLogicObj.defaultDateCache,"2",OrderItemCatRowid);
			var StartDateTimeArr=StartDateTime.split("^");
			var OrderStartDate=StartDateTimeArr[0];
			var OrderStartTime=StartDateTimeArr[1];
			var OrderStartDateStr=OrderStartDate+" "+OrderStartTime
			SetCellData(rowid,"OrderStartDate",OrderStartDateStr);
		}else{
			//在更换接收科室的时候需要重新赋值
			var CurrDateTime=cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod,PageLogicObj.defaultDateCache,"1");
			var CurrDateTimeArr=CurrDateTime.split("^");
			var OrderStartDateStr=CurrDateTimeArr[0]+" "+CurrDateTimeArr[1]
			SetCellData(rowid,"OrderStartDate",OrderStartDateStr);
		}
	}
    var RecDepRowid=GetCellData(rowid,"OrderRecDepRowid");
	//协议单位切换
	GetBillUOMStr(rowid);
	CellDataPropertyChange(rowid,"OrderRecDep","olddata","newdata");
	ChangeLinkOrderRecDep(rowid,RecDepRowid,OrderStartDateStr)	
	var OrderRecDepRowid=GetCellData(rowid,"OrderRecDepRowid")
	if (GlobalObj.IPDosingRecLocStr!=""){
		if (("^"+GlobalObj.IPDosingRecLocStr+"^").indexOf("^"+OrderRecDepRowid+"^")>=0){
				SetCellData(rowid,"OrderNeedPIVAFlag",true);
	    }else{
		    SetCellData(rowid,"OrderNeedPIVAFlag",false);
		}
	}*/
}

function OrderRecDepChangeCom(rowid) {
    var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    var OrderStartDate = "";
    var OrderType = GetCellData(rowid, "OrderType");
    var OrderStartDateStr = GetCellData(rowid, "OrderStartDate");
    if (((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid)) && (OrderType == "R")) {
        var ret = CheckDosingRecLoc(RecDepRowid);
        if (ret) {
            var OrderHiddenPara = GetCellData(rowid, "OrderHiddenPara");
            var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
            var StartDateTime = cspRunServerMethod(GlobalObj.GetDosingDateTimeMethod, PageLogicObj.defaultDataCache, "1", OrderItemCatRowid);
            var StartDateTimeArr = StartDateTime.split("^");
            var OrderStartDate = StartDateTimeArr[0];
            var OrderStartTime = StartDateTimeArr[1];
            var OrderStartDateStr = OrderStartDate + " " + OrderStartTime
            SetCellData(rowid, "OrderStartDate", OrderStartDateStr);
        } else {
            //在更换接收科室的时候需要重新赋值
            var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
            var CurrDateTimeArr = CurrDateTime.split("^");
            var OrderStartDateStr = CurrDateTimeArr[0] + " " + CurrDateTimeArr[1]
            SetCellData(rowid, "OrderStartDate", OrderStartDateStr);
        }
    }
    var RecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
    //协议单位切换
    GetBillUOMStr(rowid);
    CellDataPropertyChange(rowid, "OrderRecDep", "olddata", "newdata");
    ChangeLinkOrderRecDep(rowid, RecDepRowid, OrderStartDateStr)
    var OrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid")
    if (GlobalObj.IPDosingRecLocStr != "") {
        if (("^" + GlobalObj.IPDosingRecLocStr + "^").indexOf("^" + OrderRecDepRowid + "^") >= 0) {
            SetCellData(rowid, "OrderNeedPIVAFlag", true);
        } else {
            SetCellData(rowid, "OrderNeedPIVAFlag", false);
        }
        CancelNeedPIVA(rowid);
    }
}
//标本改变控制
function OrderLabSpecchangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //$.messager.alert("警告",this.value);
    SetCellData(rowid, "OrderLabSpecRowid", obj.value);

}
//皮试备注改变控制
function OrderActionchangehandler(e) {
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //$.messager.alert("警告",this.value);
    var ActionRowid = obj.value;
    SetCellData(rowid, "OrderActionRowid", ActionRowid);
    SetCellData(rowid, "OrderAction", ActionRowid);
    //$.messager.alert("警告",ActionRowid);
    var ActionCode = GetOrderActionCode(ActionRowid);
    if ((ActionCode == "MS") || (ActionCode == "XZ") || (ActionCode == "TM")) {
        SetCellChecked(rowid, "OrderSkinTest", false)
        var styleConfigObj = { OrderSkinTest: false }
        ChangeCellDisable(rowid, styleConfigObj);
    } else if (ActionCode == "YY") {
        SetCellChecked(rowid, "OrderSkinTest", true)
        var styleConfigObj = { OrderSkinTest: false }
        ChangeCellDisable(rowid, styleConfigObj);
    } else {
		//如果选择为空按照药学项上标志设置皮试勾选
		var NeedSkinTestINCI="N"
		if (ActionRowid==""){
			var OrderHiddenPara = GetCellData(rowid, "OrderHiddenPara");
			NeedSkinTestINCI = mPiece(OrderHiddenPara, String.fromCharCode(1), 7);
		}
		if (NeedSkinTestINCI=="Y"){
		  SetCellChecked(rowid, "OrderSkinTest", true)
		  var styleConfigObj = { OrderSkinTest: false }
		}else{
		  var styleConfigObj = { OrderSkinTest: true }
		}
		
        ChangeCellDisable(rowid, styleConfigObj);
    }
    //根据配置和页面是否强制医嘱类型,来决定是否切换到临时
    var OldPriorRowid = GetCellData(rowid, "OrderPriorRowid")
    var OrderSkinTest = GetCellData(rowid, "OrderSkinTest")
    if ((GlobalObj.CFSkinTestPriorShort == 1) && (OrderSkinTest == "Y")) { //&&(GlobalObj.OrderPriorContrlConfig!=1)
        if (GlobalObj.OrderPriorContrlConfig == 1) {
            SetColumnList(rowid, "OrderPrior", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
            SetCellData(rowid, "OrderPriorStr", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
        }
        SetCellData(rowid, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
        SetCellData(rowid, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
        OrderPriorchangeCommon(rowid, OldPriorRowid, GlobalObj.ShortOrderPriorRowid);
    }

}

function GetOrderActionCode(OrderActionRowid) {
    if (GlobalObj.OrderActionStr == "") { return "" }
    var OrderPriorArray = GlobalObj.OrderActionStr.split("^");
    for (var i = 0; i < OrderPriorArray.length; i++) {
        var OrderPrior = OrderPriorArray[i].split(String.fromCharCode(1));
        if (OrderPrior[0] == OrderActionRowid) {
            return OrderPrior[1];
        }
    }
    return "";
}
//诊断类别改变控制
function OrderDIACatchangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //$.messager.alert("警告",this.value);
    SetCellData(rowid, "OrderDIACatRowId", obj.value);
    SetCellData(rowid, "OrderDIACat", obj.value);
}

function ChangeLinkOrderSpeedFlowRate(OrderSeqNo, OrderSpeedFlowRate) {
    try {
        var objtbl = document.getElementById('tUDHCOEOrder_List_Custom');
        var rows = objtbl.rows.length;
        for (var i = 1; i < rows; i++) {
            var Row = GetRow(i);
            var OrderMasterSeqNo = GetColumnData("OrderMasterSeqNo", Row);
            var OrderItemRowid = GetColumnData("OrderItemRowid", Row);
            var OrderARCIMRowid = GetColumnData("OrderARCIMRowid", Row);

            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderMasterSeqNo == OrderSeqNo)) {
                SetColumnData("OrderSpeedFlowRate", Row, OrderSpeedFlowRate);
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function OrderSpeedFlowRate_changehandler(e) {
    var Row = GetEventRow(e);
    var eSrc = websys_getSrcElement(e);

    var OrderSeqNo = GetColumnData("OrderSeqNo", Row);
    var OrderMasterSeqNo = GetColumnData("OrderMasterSeqNo", Row);
    if (OrderMasterSeqNo != "") OrderSeqNo = OrderMasterSeqNo;
    var OrderSpeedFlowRate = GetColumnData("OrderSpeedFlowRate", Row);

    ChangeLinkOrderSpeedFlowRate(OrderSeqNo, OrderSpeedFlowRate);
}
//输液流速单位改变控制
function OrderFlowRateUnitchangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //$.messager.alert("警告",this.value);
    var OrderSeqNo = GetCellData(rowid, "id");
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    if (OrderMasterSeqNo != "") OrderSeqNo = OrderMasterSeqNo;
    var OrderFlowRateUnit = GetCellData(rowid, "OrderFlowRateUnit");
    SetCellData(rowid, "OrderFlowRateUnitRowId", this.value);
    //SetCellData(rowid,"OrderSpeedFlowRate","");
    ChangeLinkOrderFlowRateUnit(OrderSeqNo, this.value);

}

function ChangeLinkOrderFlowRateUnit(OrderSeqNo, OrderFlowRateUnit) {
    try {
        var rowids = GetAllRowId();
        for (var i = 1; i < rowids.length; i++) {
            var rowid = rowids[i];
            if (CheckIsItem(rowids[i]) == true) { continue; }

            var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");

            var OrderSeqNoMasterLink = GetCellData(rowid, "id");
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && ((OrderMasterSeqNo == OrderSeqNo) || (OrderSeqNoMasterLink == OrderSeqNo))) {
                SetCellData(rowid, "OrderFlowRateUnit", OrderFlowRateUnit);
                SetCellData(rowid, "OrderFlowRateUnitRowId", OrderFlowRateUnit);
                //SetCellData(rowid,"OrderSpeedFlowRate","") 
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}
//输液流速改变控制
function OrderSpeedFlowRatechangehandler(e) {
    //$.messager.alert("警告",this.id);
    var rowid = "";
    var obj = websys_getSrcElement(e);
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }
    //$.messager.alert("警告",this.value);
    var OrderSeqNo = GetCellData(rowid, "id");
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    ///滴速只能为数字  20141214  wh
    var OrderSpeedFlowRate = GetCellData(rowid, "OrderSpeedFlowRate");
    if (isNaN(OrderSpeedFlowRate)) {
        $.messager.alert("警告", "滴速必须为数字！");
        SetFocusColumn("OrderSpeedFlowRate", rowid);
        return;
    }
    if (OrderMasterSeqNo != "") OrderSeqNo = OrderMasterSeqNo;
    var OrderSpeedFlowRate = obj.value //GetCellData(rowid,"OrderFlowRateUnit");取下拉框的value
    ChangeLinkOrderOrderSpeedFlowRate(OrderSeqNo, OrderSpeedFlowRate);

}

function ChangeLinkOrderOrderSpeedFlowRate(OrderSeqNo, OrderSpeedFlowRate) {
    try {
        var rowids = GetAllRowId();
        for (var i = 1; i < rowids.length; i++) {
            var rowid = rowids[i];
            if (CheckIsItem(rowids[i]) == true) { continue; }

            var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");

            var OrderSeqNoMasterLink = GetCellData(rowid, "id");
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && ((OrderMasterSeqNo == OrderSeqNo) || (OrderSeqNoMasterLink == OrderSeqNo))) {
                SetCellData(rowid, "OrderSpeedFlowRate", OrderSpeedFlowRate)
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function OrderItemLookupSelect(text, rowid) {
    if (typeof rowid == "undefined") {
        var rowid = "";
    }
    if (this.id.indexOf("_") > 0) {
        rowid = this.id.split("_")[0];
        //EditRowid=rowid;
    } else {
        //EditRowid="undefined";
    }
    //$.messager.alert("警告",text);
    var Split_Value = text.split("^");
    var idesc = Split_Value[0];
    var icode = Split_Value[1];
    var ifreq = Split_Value[2];
    var iordertype = Split_Value[3];
    var ialias = Split_Value[4];
    var isubcatcode = Split_Value[5];
    var iorderCatID = Split_Value[6];
    var iSetID = Split_Value[7];
    var mes = Split_Value[8];
    var irangefrom = Split_Value[9];
    var irangeto = Split_Value[10]
    var iuom = Split_Value[11];
    var idur = Split_Value[12];
    var igeneric = Split_Value[13];
    var match = "notfound";
    var SetRef = 1;
    var OSItemIDs = Split_Value[15];
    var iorderSubCatID = Split_Value[16];
    var StockQty = Split_Value[20];
    var PackedQty = Split_Value[21];
    if (!CheckDiagnose(isubcatcode)) {
        var itemobj = document.getElementById(rowid + "_OrderName");
        if (itemobj) {
            itemobj.value = "";
            SetFocusCell(rowid, "OrderName")
            return false;
        }
    }

    //000000
    //SetCellData(rowid,"OrderName",idesc);
    //$('#'+rowid+'_OrderDoseQty').val(1);
    //$.messager.alert("警告",iordertype);
    if (iordertype == "ARCIM") iSetID = "";
    var Itemids = "";
    if (OSItemIDs == "") {
        Itemids = icode;
    } else {
        Itemids = icode + String.fromCharCode(12) + OSItemIDs;
    }
    var OSItemIDArr = OSItemIDs.split(String.fromCharCode(12))
    for (var i = 0; i < OSItemIDArr.length; i++) {
        if (OSItemIDArr[i].split(String.fromCharCode(14)).length > 1) OSItemIDArr[i] = OSItemIDArr[i].split(String.fromCharCode(14))[1];
    }
    OSItemIDs = OSItemIDArr.join(String.fromCharCode(12));

    if (iordertype == "ARCIM") {
        var Para = "";
        var ItemDefaultRowId = GetItemDefaultRowId(icode);
        var ret = "";
        if ($.isNumeric(rowid) == true) {
            //删除当前行
            /*
            var PreRow=GetPreRowId();
            DeleteRow(PreRow);
            */
            //第6个参数："data"方式不试用添加行对象方式，"obj"方式试用添加行对象方式
            ret = AddItemToList(rowid, icode, Para, "", ItemDefaultRowId, "data");
        } else {
            //表单添加
            ret = AddItemToList("", icode, Para, "", ItemDefaultRowId, "data");
        }
        //$.messager.alert("警告","ret:"+ret);
        if (ret == false) {
            //清空当前行
            //$.messager.alert("警告",rowid);
            ClearRow(rowid);
            SetFocusCell(rowid, "OrderName");
            return;
        }
        var OrderType = GetCellData(rowid, "OrderType");
        var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
        var OrderFreqRowid = GetCellData(rowid, "OrderFreqRowid");
        DHCDocUseCount(icode, "User.ARCItmMast");

        CellFocusJumpAfterOrderName(rowid, OrderType);
    } else {
        //医嘱套
        if ($.isNumeric(rowid) == false) { return; }
        //ClearRow(rowid);
        OSItemListOpen(icode, "", "YES", "", "");
        DHCDocUseCount(icode, "User.ARCOrdSets")
    }
    //添加数据成功后 设置Footer数据
    SetScreenSum();

    //1、取数据 先决定编辑器类型
    //2、改变编辑器类型
    //3、启动编辑
    //EditRowCommon(rowid);
    //4、放入数据


    //document.getElementById(rowid+"_OrderName").value=idesc;	
    //5、还原编辑器
    //Change_Row_Editor2();
}
//打开医嘱套界面
function OSItemListOpen(ARCOSRowid, OSdesc, del, itemtext, OrdRowIdString) {
    var Patient = GlobalObj.PatientID
        //var EpisodeID="";

    //var objEpisodeID=document.getElementById("EpisodeID")
    //if (objEpisodeID)	EpisodeID=objEpisodeID.value;
    if (ARCOSRowid != "") {
        var path = "websys.default.csp?WEBSYS.TCOMPONENT=UDHCOEOrder.OSItem&EpisodeID=" + GlobalObj.EpisodeID + "&ARCOSRowid=" + ARCOSRowid;
        //$.messager.alert("警告","path="+path);
        websys_createWindow(path, "frmOSList", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,top=100,width=800,height=600")
    }
}
//取上一行ID 不传参数取当前最后一行
function GetPreRowId(rowid) {
    var prerowid = "";
    var rowids = $('#Order_DataGrid').getDataIDs();
    if ($.isNumeric(rowid) == true) {
        for (var i = rowids.length; i >= 0; i--) {
            if (rowids[i] == rowid) {
                if (i == 0) {
                    prerowid = rowids[i];
                } else {
                    prerowid = rowids[i - 1];
                }
                break;
            }
        }
    }
    /*else{
    		if(rowids.length==0){
    			prerowid=""
    		}else{
    			prerowid=rowids[rowids.length-1];
    		}			
    	}*/
    if (prerowid == "") {
        if (rowids.length == 0) {
            prerowid = ""
        } else {
            prerowid = rowids[rowids.length - 1];
        }
    }
    return prerowid;
}

function GetNextRowId(rowid) {
    var nextrowid = "";
    var rowids = $('#Order_DataGrid').getDataIDs();
    if ($.isNumeric(rowid) == true) {
        for (var i = rowids.length; i >= 0; i--) {
            if (rowids[i] == rowid) {
                if (i == rowids.length - 1) {
                    nextrowid = rowids[i];
                } else {
                    nextrowid = rowids[i + 1];
                }
                break;
            }
        }
    }
    return nextrowid;
}
//取当前编辑行ID
function GetFoucsRowId(e) {
    return PageLogicObj.FocusRowIndex;
}
//添加医嘱套
function AddCopyItemToList(ParaArr) {
    //$.messager.alert("警告",ParaArr)
    //删除当前最后一行空白行
    var CruRow = GetPreRowId();
    if (CheckIsClear(CruRow) == true) {
        DeleteRow(CruRow);
    }
    var seqnoarr = new Array();
    var Count = 0;
    var ExistInsertRowFlag=false;
    var ArrLength = ParaArr.length;
    GlobalObj.AuditFlag = 0;
    var FirstOSRow = -1;
    AddCopyAryStr = ParaArr.join("@");
    progressBar = Ext.Msg.show({
        title: "多条医嘱",
        msg: "加载中...",
        progress: true,
        width: 300,
        wait: true,
        modal: true
    });
    //$.messager.alert("警告",progressBar.getPosition());
    //progressBar.setPagePosition(200,200)

    var Task = {
        run: function() {
            if (Count == ArrLength) {
                progressBar.hide();
                Ext.TaskMgr.stop(Task);
                if ((FirstOSRow > -1) && (GlobalObj.FindARCOSInputByLogonLoc == 1)) {
                    //SetFocusCell("OrderPackQty",FirstOSRow);
                    //return websys_cancel();
                }
                //这句为了解决只有初始一行的情况下复制医嘱没有插入到界面,再次复制可以插入的医嘱列不能对齐的问题
                if ((Count == 1) || (ExistInsertRowFlag == false)){
                    var rowids = $('#Order_DataGrid').getDataIDs();
                    if (rowids.length == 0) Add_Order_row();
                }
                SetScreenSum();
            } else {
                //progressBar.updateText("<font color=\"red\">玩命加载中...</font>");
                progressBar.updateText("<font color=\"red\">正在加载第" + (Count + 1) + "条</font>");
                var para1Str = AddCopyAryStr.split('@')[Count];
                var returnValue = AddCopyOneItemToList(para1Str, seqnoarr);
                //记录开医嘱套是否都有成功的数据,如果没有则需要增加一行，
	 			if(returnValue==true){
		 			ExistInsertRowFlag=true;
		 		}
                if (ArrLength == 1) {
                    var progressRate = 1;
                } else {
                    var progressRate = Count / (ArrLength - 1);
                }
                progressBar.updateProgress(progressRate, "已加载" + Math.ceil((progressRate * 100)) + '%');
                var proWindow = progressBar.getDialog();
                proWindow.center();
            }
            Count++;
        },
        interval: 10
    }
    Ext.TaskMgr.start(Task);
}

function addOEORIByCPW(StepItemIDS) {
    if (StepItemIDS != '') {
        var ret = cspRunServerMethod(GlobalObj.AddMRCPWItemToListMethod, 'AddCopyItemToList', '', StepItemIDS);
    }
}

function AddCopyOneItemToList(para1Str, seqnoarr) {
    var rowid = GetNewrowid();
    var returnValue = false;
    //默认置上前一条的医嘱跨院 改到添加行数据里去设置
    var para1 = para1Str.split("!")
    var icode = para1[0];
    var seqno = para1[1];
    var Para = para1[2];
    var ItemOrderType = para1[3];
    var CopyBillTypeRowId = para1[4];
    //****************************************************
    //update by zf 2012-05-14
    var CopyType = para1[5];
    var CPWStepItemRowId = para1[6];
    var tmpList = Para.split("^");
    var tmpOrderDepProcNote = tmpList[9];
    //update by shp
    var KSSCopyFlag = para1[7]
    if ((KSSCopyFlag != "undefined") && (KSSCopyFlag == "KSS")) {
        GlobalObj.AuditFlag = 1
    }
    if (CheckDiagnose(ItemOrderType)) {
        //医嘱套使用对象方式添加
        returnValue = AddItemToList(rowid, icode, Para, CopyBillTypeRowId, "", "obj");
        if (returnValue == true) {
            //医嘱套的关联控制					
            var tempseqnoarr = seqno.split(".");
            if (tempseqnoarr.length > 1) {
                var masterseqno = tempseqnoarr[0];
                if (seqnoarr[masterseqno]) {
                    //$.messager.alert("警告",seqnoarr[masterseqno]);
                    var MasterArr = seqnoarr[masterseqno].split("^");
                    newmasterseqno = MasterArr[0];
                    var MasterOrderRecDepRowid = MasterArr[1];
                    var MasterOrderStartTime = MasterArr[2];
                    //设置关联
                    //SetCellData(rowid,"OrderMasterSeqNo",newmasterseqno);
                    SetMasterSeqNo(newmasterseqno, rowid, "S");
                    var OrderStartDateStr = GetCellData(rowid, "OrderStartDate");
                    var OrderStartDateArr = OrderStartDateStr.split(" ");
                    SetCellData(rowid, "OrderStartDate", OrderStartDateArr[0] + " " + MasterOrderStartTime);
                    //子医嘱接收科室是否跟随主医嘱
                    var OrderType = GetCellData(rowid, "OrderType");
                    var iCFSameRecDepForGroup = GlobalObj.CFSameRecDepForGroup;
                    //沈阳医大只要求医嘱套接受科室一致,后改为设置
                    if ((CopyType == "OSItem") && (GlobalObj.CFSameRecDepForARCOSGroup == "1")) iCFSameRecDepForGroup = 1;
                    if ((OrderType == "R") && (MasterOrderRecDepRowid != 'undefine') && (iCFSameRecDepForGroup == "1")) {
                        var FindSubRecDep = true;
                        var CurrentRecLocStr = GetCellData(rowid, "CurrentRecLocStr");
                        var OrderRecDep = "";
                        if (CurrentRecLocStr != "") {
                            var ArrData = CurrentRecLocStr.split(String.fromCharCode(2));
                            for (var i = 0; i < ArrData.length; i++) {
                                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                                var RecLocRowid = ArrData1[0];
                                if (RecLocRowid == MasterOrderRecDepRowid) {
                                    FindSubRecDep = true;
                                    OrderRecDep = ArrData1[1];
                                }
                            }
                        }
                        if (FindSubRecDep == false) {
                            $.messager.alert("警告", t['SubOrderRecDepNotDefine']);
                            //清空关联
                            SetCellData(rowid, "OrderMasterSeqNo", "")
                        } else {
                            var EditStatus = GetEditStatus(rowid);
                            SetCellData(rowid, "OrderRecDepRowid", MasterOrderRecDepRowid);
                            if (EditStatus == true) {
                                SetCellData(rowid, "OrderRecDep", MasterOrderRecDepRowid);
                            } else {
                                SetCellData(rowid, "OrderRecDep", OrderRecDep);
                            }
                        }
                    }
                }
            } else {
                //因为主医嘱的时间可能会有变化,所以子医嘱的时间也要同步
                newseqno = GetCellData(rowid, "id");
                var MasterOrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
                var OrderStartDateStr = GetCellData(rowid, "OrderStartDate");
                var OrderStartDateArr = OrderStartDateStr.split(" ");
                seqnoarr[seqno] = newseqno + "^" + MasterOrderRecDepRowid + "^" + OrderStartDateArr[1];
            }
            //****************************************************
            //update by zf 2012-05-14
            if (CPWStepItemRowId != "undefined") {
                SetCellData(rowid, "OrderCPWStepItemRowId", CPWStepItemRowId);
            }
            if (tmpOrderDepProcNote != "undefined") {
                SetCellData(rowid, "OrderDepProcNote", tmpOrderDepProcNote);
            }
            var CPWStr = para1[2]
            var CPWInfo = CPWStr.split("^")[5];
            var CPWResume = CPWInfo.split(String.fromCharCode(1))[2];
            if ((typeof CPWResume != "undefined") && (CPWResume != "")) {
                SetCellData(rowid, "OrderDepProcNote", CPWResume);
            }
            //****************************************************
            var OrderType = GetCellData(rowid, "OrderType");
            if (OrderType == "R") {
                SetFocusCell(rowid, "OrderDoseQty");
            } else {
                if (OrderType == "P") {
                    SetFocusCell(rowid, "OrderPrice");
                } else {
                    SetFocusCell(rowid, "OrderPackQty");
                }
            }
            //if (FirstOSRow==-1) FirstOSRow=Row;
            //医嘱套或者复制过来的医嘱验证关联关系
        }
    }
    return returnValue;
}

function CheckDiagnose(ordertype) {
    // 新版医嘱录入要求所有医嘱都必须录入诊断
    //if ((GlobalObj.PAAdmType=="I")&&(GlobalObj.IPOrderPhamacyWithDiagnos!="1")){return true;}
    //if (GlobalObj.OrderPhamacyWithDiagnos!="1"){return true;}
    var NeedDiagnosFlag = 1;
    //if ((GlobalObj.MRDiagnoseCount==0)&&(ordertype=="R")&&(NeedDiagnosFlag==1)){
    //新门诊病历界面,录入诊断或删除诊断后未刷新医嘱录入界面,导致诊断数据取的错误
    var Ret = tkMakeServerCall("web.DHCDocOrderEntry", "GetMRDiagnoseCount", GlobalObj.mradm);
    GlobalObj.MRDiagnoseCount = Ret;
    if ((GlobalObj.MRDiagnoseCount == 0) && (NeedDiagnosFlag == 1)) {
        if ((t['NO_DIAGNOSE']) && (t['NO_DIAGNOSE'] != "")) {
            dhcsys_alert(t['NO_DIAGNOSE']);
            var iframeName = window.name
            if (iframeName == "") {
                iframeName = window.parent.frames("oeordFrame").name
            }
            if (iframeName == "oeordFrame") {
                //var DiagnosURL="diagnosentrynew.csp?PatientID="+PatientID+"&EpisodeID="+EpisodeID+"&mradm="+mradm;
                //window.showModalDialog(DiagnosURL,"","dialogHeight: "+(370)+"px; dialogWidth: "+(650)+"px");
                return false;
            } else {
                if (GlobalObj.CareProvType == "DOCTOR") {
                    var DiagnosURL = "diagnosentry.csp?PatientID=" + PatientID + "&EpisodeID=" + EpisodeID + "&mradm=" + mradm;
                    window.showModalDialog(DiagnosURL, "", "dialogHeight: " + (top.screen.height - 100) + "px; dialogWidth: " + (top.screen.width - 100) + "px");
                }
            }
            //window.open(DiagnosURL,"diagnosentry","status=1,center=1,resizable=1,scrollbars=1,width=800,height=680")
            //window.showModalDialog(DiagnosURL,"","dialogHeight: "+(top.screen.height-100)+"px; dialogWidth: "+(top.screen.width-100)+"px");	
            var Ret = tkMakeServerCall("web.DHCDocOrderEntry", "GetMRDiagnoseCount", GlobalObj.mradm);
            GlobalObj.MRDiagnoseCount = Ret;
            if (Ret == 0) { Ret = false; } else { Ret = true; }
            return Ret;
        }
        return false;
    }
    return true;
}

function GetItemDefaultRowId(icode) {
    try {
        var userid = session["LOGON.USERID"];
        //选择医嘱自定义常用用法
        var ItemDefaultRowId = "";
        if (GlobalObj.GetUserItemDefaultSingleMethod != "") {
            var ItemDefaultRowIds = cspRunServerMethod(GlobalObj.GetUserItemDefaultSingleMethod, icode, userid, GlobalObj.PAAdmType);
            if (ItemDefaultRowIds != "") {
                var arr = ItemDefaultRowIds.split("^");
                if (arr.length > 1) {
                    var lnk = "websys.default.csp?WEBSYS.TCOMPONENT=DHCDocItemDefaultOrder&OrderRowid=" + icode + "&UserID=" + userid;
                    var ItemDefaultRowId = window.showModalDialog(lnk, "DHCDocItemDefaultOrder", "dialogwidth:50em;dialogheight:20em;center:1");
                    if (ItemDefaultRowId == undefined) ItemDefaultRowId = "";
                    // 返回值是(^DHCDID(Rowid))的Rowid 
                    //win=open(lnk,"","status=1,scrollbars=1,resizable=1,top=100,left=100,width=1000,height=520");		
                } else {
                    ItemDefaultRowId = arr[0];
                }
            }
        }
    }catch(e){}
    return ItemDefaultRowId;
}
//基本需要的属性的正确性,有效性判断
function BaseValidCheck(ParamObj) {
    if (ParamObj.OrderItemInValid == 1) {
        dhcsys_alert(ParamObj.idesc + t['ItemInValid']);
        return false;
    }
    if (ParamObj.OrderAuthInValid == 0) {
        dhcsys_alert(ParamObj.idesc + t['NOT_ORDERED']);
        return false;
    }
    if (ParamObj.ireclocstr == "") {
        dhcsys_alert(ParamObj.idesc + t['NO_RECLOC']);
        return false;
    }
    if (ParamObj.AlertAuditSpecialItem != 0) {
        var NeedInsuAudit = dhcsys_confirm(ParamObj.idesc + t['NeedInsuAudit']);
        if (NeedInsuAudit == false) return false;
    }
    if (ParamObj.OrderPHPrescType == 3) {
        dhcsys_alert(t['NotEntryCNMed']);
        return false;
    }
    if (ParamObj.ASCheckFlag == 1) {
        dhcsys_alert(t['ASCheck1'] + ParamObj.idesc + t['ASCheck2'] + ParamObj.ASCheckSex + t['ASCheck3'] + ParamObj.ASCheckAgeRange);
        return false;
    }
    if (ParamObj.OrderType == "L") {
        //判断检验项目不可用
        if (ParamObj.OrderLabItemActive != "Y") {
            dhcsys_alert(ParamObj.idesc + t['LabItemUnavailable']);
            return false;
        }
        if (ParamObj.OrderLabSpec == "") {
            dhcsys_alert(ParamObj.idesc + t['Err_LabSpec']);
            return false;
        }
    }
    //临床药理用药子类检测[改到后台]  PilotCatFlag
    //var PilotCatFlag=cspRunServerMethod(GlobalObj.CheckPilotCat,GlobalObj.EpisodeID,ParamObj.icode,GlobalObj.PPRowId); 
    //if (PilotCatFlag!="Y"){
    if (ParamObj.PilotCatFlag != "Y") {
        if (GlobalObj.PPRowId == "") {
            dhcsys_alert("此药品医嘱为药理项目医嘱,只能在有药理项目的情况下才可下.");
        } else {
            dhcsys_alert("此药品医嘱为非药理项目药品,不能在有药理项目的情况下开.");
        }
        return false;
    }

    return true;
}

function CheckConflict(ARCIMRowid, CurrRowId) {
    var ConflictItems = cspRunServerMethod(GlobalObj.GetConflictMethod, ARCIMRowid);
    if (ConflictItems != "") {
        var rowids = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rowids.length; i++) {

            var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
            var OrderName = GetCellData(rowids[i], "OrderName");
            var OrderPriorRowid = GetCellData(rowids[i], "OrderPriorRowid");
            //不需要对当前行再做判断
            var TempConflictItems = "^" + ConflictItems + "^";
            var TempOrderARCIMRowid = "^" + OrderARCIMRowid + "^";
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (CurrRowId != rowids[i]) && (OrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
                if (TempConflictItems.indexOf(TempOrderARCIMRowid) != -1) {
                    dhcsys_alert(t['ItemConflict'] + OrderName);
                    return false;
                }
            }
        }
        //找已经审核医嘱的互斥项目
        if (GlobalObj.CheckConflictMethod) {
            var ret = cspRunServerMethod(GlobalObj.CheckConflictMethod, GlobalObj.EpisodeID, ARCIMRowid);
            var CheckConflict = mPiece(ret, "^", 0)
            var ConflictItemDesc = mPiece(ret, "^", 1)
            if (CheckConflict == "Y") {
                dhcsys_alert(t['ItemConflict'] + ConflictItemDesc + t['ItemConflictAutoStop'] + ConflictItemDesc);
            }
        }
    }
    return true;
}

function CheckDupOrderItemCat(ItemCatRowId, CurrRowId) {
    //查找是否有不允许重复录入的相同子类医嘱
    if ((GlobalObj.PAAdmType == "O") && (GlobalObj.OPUnRepeatItemCat !== "")) {
        var SubCatID = "^" + ItemCatRowId + "^";
        var OPUnRepeatItemCats = "^" + GlobalObj.OPUnRepeatItemCat + "^";
        if (OPUnRepeatItemCats.indexOf(SubCatID) > -1) {
            var rowids = $('#Order_DataGrid').getDataIDs();
            for (var i = 0; i < rowids.length; i++) {

                var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
                var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
                var OrderType = GetCellData(rowids[i], "OrderType");
                var OrderName = GetCellData(rowids[i], "OrderName");
                var OrderHiddenPara = GetCellData(rowids[i], "OrderHiddenPara");
                var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
                //if ((OrderARCIMRowid!="")&&(OrderItemRowid=="")&&(OrderType!="R")){
                if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
                    if ((OrderItemCatRowid == ItemCatRowId) && (i != CurrRowId)) {
                        //$.messager.alert("警告",t['ItemCatRepeat']+OrderName);
                        return true;
                    }
                }
            }
            if (GlobalObj.FindSameOrderItemCatMethod != "") {
                //$.messager.alert("警告","EpisodeID"+EpisodeID+"ARCIMRowid:"+ARCIMRowid);
                var retDetail = cspRunServerMethod(GlobalObj.FindSameOrderItemCatMethod, GlobalObj.EpisodeID, ItemCatRowId);
                if (retDetail == 1) return true;
            }
            return false;
        }
    }
    return false;
}

function CheckDupOrderItem(ARCIMRowid, CurrRowId, ParamObj) {
    //if ((GlobalObj.PAAdmType=="I")||(GlobalObj.PAAdmType=="E")) {return false}
    //数据检查取 行对象数据  ParamObj
    //$.messager.alert("警告","000");
    var StartDateStr = ParamObj.OrderStartDate;
    //$.messager.alert("警告",StartDateStr);
    var StartDate = StartDateStr.split(" ")[0];
    //$.messager.alert("警告",StartDate);
    var rowids = $('#Order_DataGrid').getDataIDs();
    //$.messager.alert("警告","0088");
    for (var i = 0; i < rowids.length; i++) {
        var rowid = rowids[i];
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderType = GetCellData(rowid, "OrderType");
        var OrderStartDateStr = GetCellData(rowid, "OrderStartDate");
        var OrderStartDate = OrderStartDateStr.split(" ")[0];
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
            if ((ARCIMRowid == OrderARCIMRowid) && (rowid != CurrRowId) && (OrderStartDate == StartDate)) return true;
        }
    }
    //$.messager.alert("警告","0099");
    if (GlobalObj.FindSameOrderItemMethod) {
        //$.messager.alert("警告","EpisodeID"+EpisodeID+"ARCIMRowid:"+ARCIMRowid);
        var retDetail = cspRunServerMethod(GlobalObj.FindSameOrderItemMethod, GlobalObj.EpisodeID, ARCIMRowid);
        if (retDetail == 1) return true;
    }
    return false;
}

function CheckDateDupOrderItem(CurrentRow, ARCIMRowid, StartDate) {
    if ((GlobalObj.PAAdmType == "I") || (GlobalObj.PAAdmType == "E")) { return false }
    var rowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {

        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        var OrderStartDateStr = GetCellData(rowids[i], "OrderStartDate");
        var OrderStartDate = OrderStartDateStr.split(" ")[0];
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
            if ((ARCIMRowid == OrderARCIMRowid) && (rowids[i] != CurrentRow) && (OrderStartDate == StartDate)) return true;
        }
    }
    return false;
}
//-------------2014-05-13 需要修改的检查函数 start-----------------------//
//需修改
function CheckItemBillClass(ARCIMRowid) {
    if (GlobalObj.PAAdmType == "I") { return true }
    if (GlobalObj.BillTypeDesc != t['BillType_ZF']) {
        /*//需修改
		var obj=document.getElementById("PrescTypeTAB"+CurrPrescTypeTab);
		if (obj) {
				PrescDesc=obj.innerHTML;
	    	if ((PrescDesc==t['BillType_ZF'])&&(GetARCIMBillClassMethod!="")){
					var BillClass=cspRunServerMethod(GetARCIMBillClassMethod,ARCIMRowid);
					if ((BillClass=='1')||(BillClass=='2')){
						return false;
					}
				}
			}
		*/
    }
    return true;
}
//需修改
function CheckItemPoison(ItemDesc, PHPoisonCode) {
    var IDCardNo = "";
    var encmeth = "";
    var PatientID = GlobalObj.PatientID;
    var encmeth = GlobalObj.FindPAPMIID;
    if (encmeth != "") {
        var IDCardNo = cspRunServerMethod(encmeth, PatientID);
    }
    //开毒麻药品判断身份证号是否存在，若不存在，输入保存
    if ((PHPoisonCode == 'J2') || (PHPoisonCode == 'J1') || (PHPoisonCode == 'DX') || (PHPoisonCode == 'MZ')) {
        if (IDCardNo == '') {
            /*
            var myRet=window.showModalDialog("websys.default.csp?WEBSYS.TCOMPONENT=DHCDoc.Patient&PatientID="+PatientID,"","dialogwidth:40;dialogheight:30;status:no;center:1;resizable:yes");
            if ((myRet=="")||(myRet=="undefined")||(myRet==null)) return false;}
            dhcsys_alert(ItemDesc+t['POISON_ALERT'])
            return true;
            */
            //var lnk = "dhcdoccheckpoison.csp?PatID=" + PatientID;
            var lnk = "dhcdoccheckpoison.csp?PatID=" + GlobalObj.EpisodeID;
            var retval = window.showModalDialog(lnk, "", "dialogwidth:575px;dialogheight:180px;status:no;center:1;resizable:no");
            if (retval) {
                var encmeth = GlobalObj.UpdateAgencyInfoMethod;
                if (encmeth != "") {
                    var rtn = cspRunServerMethod(encmeth,GlobalObj.EpisodeID , retval);
                    if (rtn == "-100") {
                        dhcsys_alert(ItemDesc + t['POISONSAVE_FAILED'])
                        return false;
                    }
                }
            } else {
                dhcsys_alert(ItemDesc + t['POISON_ALERT'])
                return false;
            }
        }
    }
    if ((PHPoisonCode == 'DBTHZJ') || (PHPoisonCode == 'TLJS')) {
        dhcsys_alert(ItemDesc + t['POISON_SPORT_ALERT'])
        return true;
    }
    return true;
}

function CheckPrescriptType(PHPrescType, CurRowid) {
    if (GlobalObj.PAAdmType == "I") { return true }
    var rowids = GetAllRowId();
    for (var i = 1; i < rowids.length; i++) {
        var rowid = rowids[i];
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderType = GetCellData(rowid, "OrderType");
        if ((rowid != CurRowid) && (OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R")) {
            var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
            //$.messager.alert("警告",OrderItemRowid+"^"+OrderARCIMRowid+"^"+OrderType+"^"+PHPrescType+"^"+OrderPHPrescType);
            if (OrderPHPrescType != PHPrescType) {
                return false;
            }
        }
    }
    return true;
}

function CheckPrescriptForm(FormDesc, CurRowid) {
    if (GlobalObj.PAAdmType == "I") { return true }
    var rowids = GetAllRowId();
    for (var i = 1; i < rowids.length; i++) {
        var rowid = rowids[i];
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderType = GetCellData(rowid, "OrderType");
        var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R") && (OrderPHPrescType == "3")) {
            var OrderPHForm = GetCellData(rowid, "OrderPHForm");
            //$.messager.alert("警告",OrderItemRowid+"^"+OrderARCIMRowid+"^"+OrderType+"^"+FormDesc+"^"+OrderPHForm);
            if ((rowid != CurRowid) && (FormDesc != OrderPHForm) && ((OrderPHForm == t['CNMedForm']) || (FormDesc == t['CNMedForm']))) {
                return false;
            }
        }
    }
    return true;
}

function CheckPrescriptCount(PHPrescType) {
    if (GlobalObj.PAAdmType == "I") { return true }
    //如果按用法分方?A就只能在保存时判断?A因为在录入过程中有可能改变用法
    if (GlobalObj.PrescByInstr == 1) { return true }
    if (GlobalObj.PrescByAuto == 1) { return true }
    var PrescBillTypeRowid = GetPrescBillTypeID();
    var PrescCount = 0;
    var rowids = GetAllRowId();
    for (var i = 1; i < rowids.length; i++) {
        var rowid = rowids[i];
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
        var OrderType = GetCellData(rowid, "OrderType");
        var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
        var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
        var OrderSeqNo = GetCellData(rowid, "id");
        if (GlobalObj.HospitalCode != "SZZYY") {
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R") && (OrderPHPrescType == PHPrescType) && (OrderBillTypeRowid == PrescBillTypeRowid)) {
                if (GlobalObj.HospitalCode != "JST") {
                    if (OrderMasterSeqNo == "") { PrescCount = PrescCount + 1; }
                } else {
                    PrescCount = PrescCount + 1;
                }
            }
        } else {
            if ((OrderItemRowid == "") && (Trim(OrderMasterSeqNo) == "") && (OrderARCIMRowid != "") && (OrderType == "R")) {
                PrescCount = PrescCount + 1;
            }
        }
    }

    //var PrescLimitCount=GetPrescLimitCount();
    PrescLimitCount = 0;
    if (PHPrescType == "1") PrescLimitCount = 5;
    if (PHPrescType == "2") {
        if (GlobalObj.HospitalCode != "JST") {
            PrescLimitCount = 5;
        } else {
            if (BillTypeDesc.substring(0, 2) != t['BillType_GF']) { PrescLimitCount = 5; } else { PrescLimitCount = 3; }
        }
    }
    //$.messager.alert("警告","PHPrescType:"+PHPrescType+"  PrescLimitCount:"+PrescLimitCount+"   PrescCount:"+PrescCount);
    if ((PrescLimitCount != 0) && (PrescLimitCount != "") && (PrescLimitCount != null)) {
        if (PrescLimitCount <= PrescCount) { return false; }
    }
    return true;
}
//一张处方抗生素的数目判断
function CheckPrescriptPoisonCount(PHPoisonCode) {
    if (GlobalObj.PAAdmType == "I") { return true }
    if (PHPoisonCode != "KSS") { return true }
    var PrescBillTypeRowid = GetPrescBillTypeID();
    var PrescCount = 0;
    var rowids = GetAllRowId();
    for (var i = 1; i < rowids.length; i++) {
        var rowid = rowids[i];
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
        var OrderType = GetCellData(rowid, "OrderType");
        var OrderPoisonCode = GetCellData(rowid, "OrderPoisonCode");
        var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R") && (OrderPoisonCode == PHPoisonCode) && (OrderBillTypeRowid == PrescBillTypeRowid)) {
            PrescCount = PrescCount + 1;
        }
    }
    //$.messager.alert("警告",PrescCount);
    PrescLimitCount = 3;
    if (PrescLimitCount <= PrescCount) { return false; }
    return true;
}

function CheckPrescriptItem(ArcimRowid, BillTypeRowid) {
    if (GlobalObj.PAAdmType == "I") { return true }
    var SubCatID = cspRunServerMethod(GlobalObj.GetARCItemSubCatID, '', '', ArcimRowid)
    if (SubCatID != "") SubCatID = "^" + SubCatID + "^";
    var PrescriptTypes = GlobalObj.PrescriptTypes;
    var PrescriptTypeArr = PrescriptTypes.split("||");
    var BillTypeObj = {};
    for (var i = 0; i < PrescriptTypeArr.length; i++) {
        var BillTypeID2 = PrescriptTypeArr[i].split("!")[4];
        var SubCatIDs = PrescriptTypeArr[i].split("!")[3]
        if (SubCatIDs == "") {
            BillTypeObj[BillTypeID2] = "";
        } else {
            BillTypeObj[BillTypeID2] = "^" + SubCatIDs + "^";
        }

    }
    var BillTypeID = "";
    for (var key in BillTypeObj) {
        //提供给选择费别的判断
        if (key == BillTypeRowid) {
            //BillTypeObj[key] 如果改费别没有维护可开的子类  则可开所有
            if (BillTypeObj[key].indexOf(SubCatID) != -1 || BillTypeObj[key] == "") {
                BillTypeID = key;
                break;
            }
        }
        /*if(BillTypeObj[key].indexOf(SubCatID)!=-1) {					
        	BillTypeID=key;				
        }*/
    }
    return BillTypeID;
}

function SelectPrescriptItem(ArcimRowid, BillTypeRowid) {
    if (GlobalObj.PAAdmType == "I") { return true }
    var SubCatID = cspRunServerMethod(GlobalObj.GetARCItemSubCatID, '', '', ArcimRowid)
    if (SubCatID != "") SubCatID = "^" + SubCatID + "^";
    var PrescriptTypes = GlobalObj.PrescriptTypes;
    var PrescriptTypeArr = PrescriptTypes.split("||");
    var BillTypeObj = {};
    for (var i = 0; i < PrescriptTypeArr.length; i++) {
        var BillTypeID2 = PrescriptTypeArr[i].split("!")[4];
        var MainSubID = PrescriptTypeArr[i].split("!")[3];
        if (MainSubID != "") { BillTypeObj[BillTypeID2] = "^" + MainSubID + "^"; } else { BillTypeObj[BillTypeID2] = "" }
    }
    var BillTypeID = "";
    for (var key in BillTypeObj) {
        //提供给选择费别的判断  为空的可以开所有
        if (key == BillTypeRowid) {
            if ((BillTypeObj[key].indexOf(SubCatID) != -1) || (BillTypeObj[key] == "")) {
                BillTypeID = key;
                break;
            }
        }
    }
    return BillTypeID;
}

function CheckPrescSameGenericNameItem(GenericName, CurRowid) {
    if (GenericName == "") return false;
    if (GlobalObj.CFOPNotRepeatGenericName != 1) return false;
    if (GlobalObj.PAAdmType == "I") return false;
    var limitNum = 2,
        count = 0;
    var rowids = GetAllRowId();
    for (var i = 0; i < rowids.length; i++) {
        var rowid = rowids[i];
        var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
        var OrderGenericName = GetCellData(rowid, "OrderGenericName");
        var OrderType = GetCellData(rowid, "OrderType");
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R")) {
            if ((GenericName == OrderGenericName) && (rowid != CurRowid)) count = count + 1;
        }
        if (count >= 1) return true;
    }
    var ret = cspRunServerMethod(GlobalObj.FindSameGenericNameOrderItemMethod, GlobalObj.EpisodeID, GenericName);
    if (ret == 1) {
        return true;
    }
    return false;
}

function CheckItemDiagnos(ARCIMRowid) {
    if (GlobalObj.PAAdmType == "I") { return true }
    var PatType = GlobalObj.PatTypeID;
    var retDetail = cspRunServerMethod(GlobalObj.CheckItemDiagnos, PatType, ARCIMRowid, mradm);
    if (retDetail == 1) return false;
    return true;
}

function CheckDiagnosLimitDur(CurDurFactor) {
    if (GlobalObj.PAAdmType == "I") { return true }
    var PatType = GlobalObj.PatTypeID;
    var MaxDurFactor = cspRunServerMethod(GlobalObj.GetDiagnosLimitDurMethod, PatType, mradm);
    if (MaxDurFactor != 0) {
        if (parseFloat(CurDurFactor) > parseFloat(MaxDurFactor)) return false;
    }
    return true;
}
//-------------2014-05-13 需要修改的检查函数 end-----------------------//
/**@param ParamObj*/
function CheckPrescItemAndCount(ParamObj) {
    var CurRowid = ParamObj.rowid;
    var ItemDesc = ParamObj.idesc;
    var ArcimRowid = ParamObj.icode;
    var ARCIMDetail = ParamObj.OrderPHPrescType + "^" + ParamObj.OrderPHForm + '^' + ParamObj.OrderPoisonCode + '^' + ParamObj.OrderGenericName + "^" + ParamObj.ilimitstr;

    var BillGrpDesc = mPiece(ARCIMDetail, "^", 0);
    var FormDesc = mPiece(ARCIMDetail, "^", 1);
    var PHPoisonCode = mPiece(ARCIMDetail, "^", 2);
    var OrderGenericName = mPiece(ARCIMDetail, "^", 3);
    var LimitDetail = mPiece(ARCIMDetail, "^", 4);
    //$.messager.alert("警告","001");
    var PrescCheck = CheckItemBillClass(ArcimRowid);
    if (PrescCheck == false) {
        var PrescCheck = dhcsys_confirm((ItemDesc + t['SELFPAY_ALERT']), true);
        if (PrescCheck == false) {
            return false;
        }
    }
    //$.messager.alert("警告","002");
    var PrescCheck = CheckItemPoison(ItemDesc, PHPoisonCode);
    if (PrescCheck == false) {
        return false;
    }
    //$.messager.alert("警告","003");
    var PrescCheck = CheckPrescriptType(BillGrpDesc, CurRowid);
    if (PrescCheck == false) {
        dhcsys_alert(ItemDesc + t['Diff_PrescType']);
        return false;
    }
    //$.messager.alert("警告","004");
    var PrescCheck = CheckPrescriptForm(FormDesc, CurRowid);
    if (PrescCheck == false) {
        dhcsys_alert(ItemDesc + t['Diff_Form']);
        return false;
    }
    //$.messager.alert("警告","005");
    var PrescCheck = CheckPrescriptCount(BillGrpDesc);
    if (PrescCheck == false) {
        dhcsys_alert(ItemDesc + t['EXCEED_PRESCCOUNT']);
        return false;
    }
    //$.messager.alert("警告","006");
    var PrescCheck = CheckPrescriptPoisonCount(PHPoisonCode);
    if (PrescCheck == false) {
        dhcsys_alert(ItemDesc + t['EXCEED_PRESCPoisonCOUNT']);
        return false;
    }
    /*
	var  PrescCheck=CheckPrescDupOrderItem(ArcimRowid);
	if (PrescCheck==true){
		dhcsys_alert(ItemDesc+t['SAME_PrescORDERITEM']);
    return false;
	}
	*/
    //$.messager.alert("警告","007");
    var PrescCheck = CheckPrescSameGenericNameItem(OrderGenericName, CurRowid);
    if (PrescCheck == true) {
        dhcsys_alert(ItemDesc + t['SAME_PrescGenericNameORDERITEM']);
        return false;
    }
    //$.messager.alert("警告","008");
    var PrescCheck = CheckDupOrderItem(ArcimRowid, CurRowid, ParamObj);
    //$.messager.alert("警告","0081"+PrescCheck);
    if (PrescCheck == true) {
        //如果是有一天最大量设置的医嘱不允许在同一处方中出现两条
        var OrderMaxDoseQtyPerDay = mPiece(LimitDetail, String.fromCharCode(1), 5);
        if ((OrderMaxDoseQtyPerDay != "") && (OrderMaxDoseQtyPerDay != 0)) {
            dhcsys_alert(ItemDesc + t['NOT_ALLOW_SAME_ORDERITEM']);
            return false;
        } else {
            var TempNotAlertRepeatItemCat = "^" + GlobalObj.NotAlertRepeatItemCat + "^";
            var TempOrderItemCatRowid = "^" + ParamObj.OrderItemCatRowid + "^";
            if (TempNotAlertRepeatItemCat.indexOf(TempOrderItemCatRowid) == -1) {
                var PrescCheck = dhcsys_confirm((ItemDesc + t['SAME_ORDERITEM']), true);
                if (PrescCheck == false) return PrescCheck;
            }
            //var PrescCheck=dhcsys_confirm((ItemDesc+t['SAME_ORDERITEM']),true);
            //if (PrescCheck==false)return PrescCheck;
        }
        /*
        var PrescCheck=dhcsys_confirm((ItemDesc+t['SAME_ORDERITEM']),true);
        return PrescCheck;
        */
    }
    //$.messager.alert("警告","009");
    var ItemDiagnosCheck = CheckItemDiagnos(ArcimRowid);
    if (ItemDiagnosCheck == false) {
        dhcsys_alert(ItemDesc + t['LIMIT_DIAGNOSE']);
        return false;
    }
    return true;
}
/**
@ParamObj.OrderLabExCode,ParamObj.OrderLabSpec
*/
//需修改
function CheckDupLabSpecItem(ParamObj) {
    if (ParamObj.OrderLabExCode == "") return false;
    var LabExCode = ParamObj.OrderLabExCode;
    var LabSpecStr = ParamObj.OrderLabSpec;
    var OrderLabExCodeStr = "";
    var OrderRowStr = "";

    var LabSpecRowid = GetDefaultLabSpec(LabSpecStr);
    var rows = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rows.length; i++) {
        var Row = rows[i];
        var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
        var OrderLabExCode = GetCellData(Row, "OrderLabExCode");
        var OrderLabSpecRowid = GetCellData("OrderLabSpecRowid");
        var OrderName = GetCellData(Row, "OrderName");
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderLabExCode != "") && (OrderLabSpecRowid == LabSpecRowid)) {
            if (OrderLabExCodeStr == "") {
                OrderLabExCodeStr = OrderLabExCode;
                OrderRowStr = Row;
            } else {
                OrderLabExCodeStr = OrderLabExCodeStr + "^" + OrderLabExCode;
                OrderRowStr = OrderRowStr + "^" + Row;
            }
        }
    }
    if ((GlobalObj.CheckRepeatLabSpecMethod != "") && (OrderLabExCodeStr != "") && (GlobalObj.CFNotCheckSameSpecItem != 1)) {
        var ret = cspRunServerMethod(GlobalObj.CheckRepeatLabSpecMethod, OrderLabExCodeStr, LabExCode);
        var retArr = ret.split("^");
        if (retArr[0] == 1) {
            if (GlobalObj.HospitalCode == "HF") {
                dhcsys_alert(t['SameLabSpecItem']);
                return true;
            }

            var PrescCheck = dhcsys_confirm(t['SameLabSpecItem'], true);
            if (PrescCheck == false) { return true; } else { return false }

        }
    }
    return false;
}

function CheckPrescAndDupOrder(ParamObj, CurrRowId) {
    //$.messager.alert("警告",ParamObj.OrderType);
    if (ParamObj.OrderType == "R") {
        var PrescCheck = CheckPrescItemAndCount(ParamObj);
        if (PrescCheck == false) { return false; }
    } else {
        //非药物医嘱也要判断重复
        var TempNotAlertRepeatItemCat = "^" + GlobalObj.NotAlertRepeatItemCat + "^";
        var TempOrderItemCatRowid = "^" + ParamObj.OrderItemCatRowid + "^";
        if (TempNotAlertRepeatItemCat.indexOf(TempOrderItemCatRowid) == -1) {
            var PrescCheck = CheckDupOrderItem(ParamObj.icode, CurrRowId, ParamObj);
            if (PrescCheck == true) {
                var PrescCheck = dhcsys_confirm((ParamObj.idesc + t['SAME_ORDERITEM']), true);
                if (PrescCheck == false) { return false; }
            }
        }

        if (ParamObj.OrderType == "L") {
            //判断是否有样本指标重复
            var ret = CheckDupLabSpecItem(ParamObj);
            if (ret == true) { return false; }
        }
    }
    return true;
}

function CheckItemAllergy(iallergy) {
    //有过敏记录阳性的药物强制不能开?A也不合适?A有时阳性了还需再做皮试?A希望提示但不强制限制?C
    var TempPlist = iallergy.split(String.fromCharCode(1));
    var allergycode = TempPlist[0];
    var allergymsg = TempPlist[1];
    if (allergycode == "01") {
        var ret = dhcsys_confirm(t['Have_Allergy'], true);
        if (ret == false) { return false; }
        //$.messager.alert("警告",t['Have_Allergy']);
        //return false;
    }
    return true;
}

function GetArcosInfo(Para, PAAdmType, OrderType, OrderPHPrescType) {
    var ExtendArcosObj = {};
    var OrderARCOSRowid = "",
        ARCOSSubCatRowid = "";
    var OrderFreq = "",
        OrderFreqRowid = "",
        OrderFreqFactor = "",
        OrderFreqInterval = "";
    //抗生素5
    var OrderInstr = "",
        OrderInstrRowid = "",
        OrderAntibApplyRowid = "",
        UserReasonId = "";
    //从医嘱套里传入的参数,取医嘱套信息
    if (Para != "") {
        //$.messager.alert("警告",Para);
        var ispecdoseqtystr = mPiece(Para, "^", 0);

        var ispecfrequencestr = mPiece(Para, "^", 1);
        var ispecinstructionstr = mPiece(Para, "^", 2);
        var ispecdurationstr = mPiece(Para, "^", 3);
        var ispecpackqtystr = mPiece(Para, "^", 4);
        var ispecpriorstr = mPiece(Para, "^", 5);

        var ispecordersetstr = mPiece(Para, "^", 6);
        var ispecordersetsubcatstr = mPiece(Para, "^", 8);
        //抗生素6
        var antiapplyinfostr = mPiece(Para, "^", 11);
        var Urgent = mPiece(Para, "^", 12);
        if (Urgent == "true") { Urgent = "Y"; } else { Urgent = "N"; }
        if (typeof(antiapplyinfostr) != "undefined") {
            var OrderAntibApplyRowid = mPiece(antiapplyinfostr, String.fromCharCode(1), 0);
            var UserReasonId = mPiece(antiapplyinfostr, String.fromCharCode(1), 1);
        }
        var SpecOrderDoseQty = mPiece(ispecdoseqtystr, String.fromCharCode(1), 0); //单次剂量
        var SpecOrderDoseUOM = mPiece(ispecdoseqtystr, String.fromCharCode(1), 1);
        var SpecOrderDoseUOMRowid = mPiece(ispecdoseqtystr, String.fromCharCode(1), 2);
        var SpecOrderFreq = mPiece(ispecfrequencestr, String.fromCharCode(1), 0); //频次
        var SpecOrderFreqRowid = mPiece(ispecfrequencestr, String.fromCharCode(1), 1);
        var SpecOrderFreqFactor = mPiece(ispecfrequencestr, String.fromCharCode(1), 2);
        var SpecOrderFreqInterval = mPiece(ispecfrequencestr, String.fromCharCode(1), 3);
        var SpecOrderInstr = mPiece(ispecinstructionstr, String.fromCharCode(1), 0); //用法
        var SpecOrderInstrRowid = mPiece(ispecinstructionstr, String.fromCharCode(1), 1);
        /*var SpecOrderDur=mPiece(ispecdurationstr,String.fromCharCode(1),0);
        var SpecOrderDurRowid=mPiece(ispecdurationstr,String.fromCharCode(1),1);
        var SpecOrderDurFactor=mPiece(ispecdurationstr,String.fromCharCode(1),2);*/
        var SpecOrderPackQty = mPiece(ispecpackqtystr, String.fromCharCode(1), 0);
        var SpecOrderPackUOM = mPiece(ispecpackqtystr, String.fromCharCode(1), 1);
        var SpecOrderPackUOMRowid = mPiece(ispecpackqtystr, String.fromCharCode(1), 2);
        var SpecOrderPrior = mPiece(ispecpriorstr, String.fromCharCode(1), 0); //医嘱类型
        var SpecOrderPriorRowid = mPiece(ispecpriorstr, String.fromCharCode(1), 1);
        //住院非出院带药医嘱，疗程默认为一天
        var ParaSpecOrderDur = mPiece(ispecdurationstr, String.fromCharCode(1), 0);
        if ((GlobalObj.PAAdmType == "I") && (SpecOrderPriorRowid != GlobalObj.OutOrderPriorRowid)) {
            if (OrderType == "R") {
                var SpecOrderDur = GlobalObj.IPDefaultDur;
                var SpecOrderDurRowid = GlobalObj.IPDefaultDurRowId;
                var SpecOrderDurFactor = 1;
            } else {
                if (OrderPHPrescType == "4") {
                    if ((SpecOrderPriorRowid != GlobalObj.LongOrderPriorRowid) && (SpecOrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
                        var SpecOrderDur = GlobalObj.IPDefaultDur;
                        var SpecOrderDurRowid = GlobalObj.IPDefaultDurRowId;
                        var SpecOrderDurFactor = 1;
                    }
                } else {
                    var SpecOrderDur = "";
                    var SpecOrderDurRowid = "";
                    var SpecOrderDurFactor = 1;
                }
            }
            /*var SpecOrderDur=GlobalObj.IPDefaultDur;
  	    var SpecOrderDurRowid=GlobalObj.IPDefaultDurRowId;
  	    var SpecOrderDurFactor=1;*/
        } else {
            var SpecOrderDur = mPiece(ispecdurationstr, String.fromCharCode(1), 0);
            var SpecOrderDurRowid = mPiece(ispecdurationstr, String.fromCharCode(1), 1);
            var SpecOrderDurFactor = mPiece(ispecdurationstr, String.fromCharCode(1), 2);
        }
        //附加说明
        var OrderPriorRemarksRowId = mPiece(Para, "^", 10);
        //GlobalObj.OrderPriorRemarksStr
        var OrderPriorRemarks = "";
        if (GlobalObj.OrderPriorRemarksStr != "" && OrderPriorRemarksRowId != "") {
            var str = GlobalObj.OrderPriorRemarksStr;
            var ArrData = str.split(";");
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(":");
                if (OrderPriorRemarksRowId == ArrData1[0]) {
                    OrderPriorRemarks = ArrData1[1];
                    break;
                }
            }
        }



        if (SpecOrderFreq != "") {
            OrderFreq = SpecOrderFreq;
            OrderFreqRowid = SpecOrderFreqRowid;
            OrderFreqFactor = SpecOrderFreqFactor;
            OrderFreqInterval = SpecOrderFreqInterval;
            $.extend(ExtendArcosObj, { OrderFreq: OrderFreq, OrderFreqRowid: OrderFreqRowid, OrderFreqFactor: OrderFreqFactor, OrderFreqInterval: OrderFreqInterval });
        }
        //北海人民医院  临床路径医嘱返回信息 没有用法
        if (SpecOrderInstr != "") {
            OrderInstr = SpecOrderInstr; //用法
            OrderInstrRowid = SpecOrderInstrRowid;
            $.extend(ExtendArcosObj, { OrderInstr: OrderInstr, OrderInstrRowid: OrderInstrRowid });
        }
        var OrderDur = SpecOrderDur; //疗程
        var OrderDurRowid = SpecOrderDurRowid;
        var OrderDurFactor = SpecOrderDurFactor;
        var OrderPackQty = SpecOrderPackQty;
        var OrderARCOSRowid = ispecordersetstr;
        var ARCOSSubCatRowid = ispecordersetsubcatstr;

        /*
  	//非药品医嘱套也可能维护了数量
  	if ((OrderType!='R')&&((OrderPackQty==0)||(OrderPackQty==''))){
  		if ((OrderFreqFactor=='')||(OrderFreqFactor==0)) OrderFreqFactor=1;
  		if ((OrderDurFactor=='')||(OrderDurFactor==0)) OrderDurFactor=1;
	  	if (GlobalObj.PAAdmType!="I") OrderDurFactor=1;
	  	OrderPackQty=OrderDurFactor*OrderFreqFactor;
	}
	*/
        //附加说明
        //$.extend(ParamObj,{OrderPriorRemarks:OrderPriorRemarks,OrderPriorRemarksRowId:OrderPriorRemarksRowId});
        var POrderRecDepRowid = "";
        var prectloc = mPiece(Para, "^", Para.split("^").length);
        //$.messager.alert("警告","prectloc:"+prectloc);
        if (prectloc != "") {
            POrderRecDepRowid = prectloc;
        }


        $.extend(ExtendArcosObj, {
            OrderDur: OrderDur,
            OrderDurRowid: OrderDurRowid,
            OrderDurFactor: OrderDurFactor,
            OrderPackQty: OrderPackQty,
            OrderARCOSRowid: OrderARCOSRowid,
            ARCOSSubCatRowid: ARCOSSubCatRowid,
            OrderDoseQty: SpecOrderDoseQty,
            OrderDoseUOM: SpecOrderDoseUOM,
            OrderDoseUOMRowid: SpecOrderDoseUOMRowid,
            SpecOrderDoseUOMRowid: SpecOrderDoseUOMRowid,
            SpecOrderPriorRowid: SpecOrderPriorRowid,
            SpecOrderPrior: SpecOrderPrior,
            //抗生素7
            OrderPriorRemarks: OrderPriorRemarks,
            OrderPriorRemarksRowId: OrderPriorRemarksRowId,
            POrderRecDepRowid: POrderRecDepRowid,
            OrderAntibApplyRowid: OrderAntibApplyRowid,
            UserReasonId: UserReasonId,
            SpecOrderPackUOM: SpecOrderPackUOM,
            SpecOrderPackUOMRowid: SpecOrderPackUOMRowid,
            Urgent: Urgent

        });
    }

    return ExtendArcosObj
}

function GetInitPriorRowid(rowid, ParamObj, ExtendArcosObj, OrderPriorStr) {
    //当前添加行的默认医嘱类型
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    if (OrderPriorStr == "") return OrderPriorRowid;
    //医嘱类型控制为强制改变,则不初始化医嘱类型
    //if (GlobalObj.OrderPriorContrlConfig==1) return OrderPriorRowid;

    //非药品没有长期医嘱?如果是非药品就用这个医嘱项默认类型
    var TempOrderPriorAry = [];
    var OrderPriorAry = OrderPriorStr.split(';');
    for (var i = 0; i < OrderPriorAry.length; i++) {
        var OneOrderPrior = OrderPriorAry[i];
        if (OneOrderPrior == "") continue;
        var OneOrderPriorAry = OneOrderPrior.split(':');
        TempOrderPriorAry.push(OneOrderPriorAry[0]);
    }
    if ((ParamObj.OrderType != "R") && (ParamObj.OrderDefPriorRowid != "")) {
        if ($.inArray(ParamObj.OrderDefPriorRowid, TempOrderPriorAry) != -1) OrderPriorRowid = ParamObj.OrderDefPriorRowid
    }
    //如果是复制医嘱或开医嘱套的就优先取传入的医嘱类型,按门诊,住院区分
    if (($.isEmptyObject(ExtendArcosObj) == false) && (ExtendArcosObj.SpecOrderPriorRowid != "")) {
        if ($.inArray(ExtendArcosObj.SpecOrderPriorRowid, TempOrderPriorAry) != -1) OrderPriorRowid = ExtendArcosObj.SpecOrderPriorRowid;
    }
    //如果是st医嘱就改为临时医嘱
    if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) && ((ParamObj.OrderFreqRowid == GlobalObj.STFreqRowid) || (ParamObj.OrderFreqRowid == GlobalObj.ONCEFreqRowid))) {
        if ($.inArray(GlobalObj.ShortOrderPriorRowid, TempOrderPriorAry) != -1) OrderPriorRowid = GlobalObj.ShortOrderPriorRowid;
    }

    return OrderPriorRowid;
}

function GetFreqByPrior(ParamObj) {
    var FreqByPriorObj = {};
    var OrderFreqRowid = "";
    var OrderFreq = "";
    var OrderFreqFactor = 1;
    var OrderFreqInterval = 1;
    if ((GlobalObj.PAAdmType == "I") && (ParamObj.OrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
        if ((ParamObj.OrderFreqRowid != GlobalObj.STFreqRowid) && (ParamObj.OrderFreqRowid != GlobalObj.ONCEFreqRowid)) {
            OrderFreq = GlobalObj.ONCEFreq;
            OrderFreqRowid = GlobalObj.ONCEFreqRowid;
            OrderFreqFactor = 1;
            OrderFreqInterval = 1;
        }
    }

    if (((ParamObj.OrderPriorRowid == GlobalObj.ShortOrderPriorRowid) || (ParamObj.OrderPriorRowid == GlobalObj.OMOrderPriorRowid)) &&
        (ParamObj.OrderFreqRowid != GlobalObj.STFreqRowid) && (ParamObj.OrderType == "R") && (GlobalObj.PAAdmType == "I") &&
        (GlobalObj.IPShortOrderPriorST == "1")) {
        OrderFreq = GlobalObj.STFreq;
        OrderFreqRowid = GlobalObj.STFreqRowid;
        OrderFreqFactor = 1;
        OrderFreqInterval = 1;
    }

    if ((ParamObj.OrderPriorRowid == GlobalObj.STATOrderPriorRowid) && (ParamObj.OrderFreqRowid != GlobalObj.STFreqRowid) && (GlobalObj.PAAdmType == "I")) {
        OrderFreq = GlobalObj.STFreq;
        OrderFreqRowid = GlobalObj.STFreqRowid;
        OrderFreqFactor = 1;
        OrderFreqInterval = 1;
    }
    if ((ParamObj.OrderPriorRowid == GlobalObj.LongOrderPriorRowid) && ((ParamObj.OrderFreqRowid == GlobalObj.STFreqRowid) || ParamObj.OrderFreqRowid == GlobalObj.ONCEFreqRowid)) {
        FreqByPriorObj = { OrderFreq: OrderFreq, OrderFreqRowid: OrderFreqRowid, OrderFreqFactor: OrderFreqFactor, OrderFreqInterval: OrderFreqInterval }
    }
    var IsValidFreq = 1;
    if (OrderFreqRowid != "") {
        if (("^" + GlobalObj.ValidFreqStr + "^").indexOf("^" + OrderFreqRowid + "^") == -1) {
            IsValidFreq = 0;
        }
    } else {
        if (("^" + GlobalObj.ValidFreqStr + "^").indexOf("^" + ParamObj.OrderFreqRowid + "^") == -1) {
            IsValidFreq = 0;
        }
    }
    if (IsValidFreq == 0) {
        OrderFreq = "";
        OrderFreqRowid = "";
        OrderFreqFactor = 1;
        OrderFreqInterval = 1;
        FreqByPriorObj = { OrderFreq: OrderFreq, OrderFreqRowid: OrderFreqRowid, OrderFreqFactor: OrderFreqFactor, OrderFreqInterval: OrderFreqInterval }
    } else {
        if (OrderFreqRowid != "") {
            FreqByPriorObj = { OrderFreq: OrderFreq, OrderFreqRowid: OrderFreqRowid, OrderFreqFactor: OrderFreqFactor, OrderFreqInterval: OrderFreqInterval }
        }
    }
    return FreqByPriorObj
}

function GetCurrentRecLocStr(ParamObj) {
    //因为出院带药有可能指定接收科室?所以会存在两个接收科室串
    //当就诊类型为住院.出院带药接收科室有定义值.医嘱为药品时将CurrentRecLocStr置上供后面程序使用
    //当就诊类型为住院.取药医嘱接收科室有定义值.医嘱为药品时将CurrentRecLocStr置上供后面程序使用
    if ((GlobalObj.PAAdmType == "I") && (ParamObj.OrderType == "R")) {
        if ((ParamObj.OrderPriorRowid == GlobalObj.OutOrderPriorRowid) && (ParamObj.ioutpriorreclocstr != "")) {
            var CurrentRecLocStr = ParamObj.ioutpriorreclocstr;
        } else if (((ParamObj.OrderPriorRemarksRowId == "ONE") || (ParamObj.OrderPriorRowid == GlobalObj.OneOrderPriorRowid)) && (ParamObj.ionepriorreclocstr != "")) {
            var CurrentRecLocStr = ParamObj.ionepriorreclocstr;
        } else {
            //var CurrentRecLocStr=ireclocstr;
            var CurrentRecLocStr = GetRecLocStrByPrior(ParamObj.ireclocstr, ParamObj.OrderPriorRowid);
        }
    } else {
        //var CurrentRecLocStr=ireclocstr;

        var CurrentRecLocStr = GetRecLocStrByPrior(ParamObj.ireclocstr, ParamObj.OrderPriorRowid)
    }
    //用法定义接收科室,未定义用法接收科室,则还取原接收科室串
    if ((ParamObj.OrderType == "R") && (GlobalObj.ReclocByInstr == "1") && (GlobalObj.GetInstrReclocMethod != "")) {
        var OrdDept = GetLogonLocByFlag();
        var HOSPID = session['LOGON.HOSPID'];
        var InstrReclocStr = cspRunServerMethod(GlobalObj.GetInstrReclocMethod, GlobalObj.EpisodeID, ParamObj.OrderInstrRowid, OrdDept, ParamObj.OrderItemCatRowid, ParamObj.OrderPriorRowid, CurrentRecLocStr, HOSPID)
            //$.messager.alert("警告","InstrReclocStr"+":"+InstrReclocStr)
        CurrentRecLocStr = GetRecLocStrByPrior(InstrReclocStr, ParamObj.OrderPriorRowid);
    }
    return CurrentRecLocStr;
}

function GetBaseDoseQty(ParamObj, ExtendArcosObj) {
    var InciRowid = ParamObj.InciRowid;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    var OrderPackQty = ParamObj.OrderPackQty;
    var idoseqtystr = ParamObj.idoseqtystr;
    var OrderDrugFormRowid = ParamObj.OrderDrugFormRowid;
    var OrderFreqFactor = ParamObj.OrderFreqFactor;
    var OrderDurFactor = ParamObj.OrderDurFactor;
    var OrderConFac = ParamObj.OrderConFac
    var BaseDoseQtyObj = { BaseDoseQty: 1, Qty: 1 };
    var OrderPriorRemarksRowId = ParamObj.OrderPriorRemarksRowId;
    //如果为非库存项,将不会进入这个判断
    if (InciRowid != "") {
        //根据设置取药和出院带药默认按整包装开
        if (((OrderPriorRowid == GlobalObj.OutOrderPriorRowid) || (OrderPriorRemarksRowId == "ONE") || (OrderPriorRowid == GlobalObj.OneOrderPriorRowid)) && (GlobalObj.CFOutAndOneDefaultPackQty == 1)) OrderPackQty = 1;
        //if (((OrderPriorRowid==GlobalObj.OutOrderPriorRowid)||(OrderPriorRowid==GlobalObj.OneOrderPriorRowid))&&(GlobalObj.HospitalCode=="BJZYY")) OrderPackQty=1;
        var BaseDoseQty = 1;
        if (OrderPackQty != "") {
            Qty = parseFloat(OrderConFac) * parseFloat(OrderPackQty);
        } else {
            var DefaultDoseQty = "";
            var DefaultDoseUOMRowid = "";
            if ($.isEmptyObject(ExtendArcosObj) == false) {
                DefaultDoseQty = ExtendArcosObj.OrderDoseQty;
                DefaultDoseUOMRowid = ExtendArcosObj.OrderDoseUOMRowid;
            } else {
                if (idoseqtystr != "") {
                    var ArrData = idoseqtystr.split(String.fromCharCode(2));
                    if (ArrData.length > 0) {
                        var ArrData1 = ArrData[0].split(String.fromCharCode(1));
                        var DefaultDoseQty = ArrData1[0];
                        var DefaultDoseUOMRowid = ArrData1[2];
                    }
                }
            }
            if (DefaultDoseUOMRowid != "") {
                //$.messager.alert("警告","DrugFormRowid:"+OrderDrugFormRowid+"  DefaultDoseUOMRowid: "+DefaultDoseUOMRowid+"   DefaultDoseQty "+DefaultDoseQty);
                OrderBaseQty = cspRunServerMethod(GlobalObj.CalDoseMethod, DefaultDoseUOMRowid, OrderDrugFormRowid, DefaultDoseQty);
                if (OrderBaseQty == "") OrderBaseQty = 1;
                //$.messager.alert("警告","OrderBaseQty:"+OrderBaseQty);
            } else {
                OrderBaseQty = 1
            }
            Qty = parseFloat(OrderFreqFactor) * parseFloat(OrderDurFactor) * parseFloat(OrderBaseQty);
        }
        //$.messager.alert("警告","Qty:"+Qty);
        BaseDoseQtyObj.BaseDoseQty = BaseDoseQty;
        BaseDoseQtyObj.Qty = Qty;
    }
    return BaseDoseQtyObj
}

function CheckStockEnough(OrderName, OrderARCIMRowid, OrderPackQty, str,ParamObj) {
    if (OrderPackQty == "") { return "-1" }
    var ExpStr=GlobalObj.EpisodeID+"^"+session['LOGON.CTLOCID']+"^0";
    var ArrData = str.split(String.fromCharCode(2));
    if (ArrData.length == 1) {
        var ArrData1 = ArrData[0].split(String.fromCharCode(1));
        var OrderRecDepRowid = ArrData1[0];
        var OrderRecDepDesc = ArrData1[1];
        if (GlobalObj.PAAdmType != "I"){
	        OrderPackQty=GetConFacByUom(OrderPackQty,ParamObj,OrderRecDepRowid);
            if (OrderPackQty == "") { return "-1" }
	    }
        var Check = cspRunServerMethod(GlobalObj.CheckStockEnoughMethod, OrderARCIMRowid, OrderPackQty, OrderRecDepRowid, GlobalObj.PAAdmType,ExpStr);
        var CheckArr=Check.split("^");
        Check=CheckArr[0];
        //if (GlobalObj.NotFollowInstr.indexOf(Instr) < 0)
        if (Check == '0') {
            dhcsys_alert(OrderName + OrderRecDepDesc + t['QTY_NOTENOUGH']);
            return "";
        } else if (Check == '-1') {
            dhcsys_alert(OrderName + OrderRecDepDesc + t['QTY_INCItemLocked']);
            return "";
        } else if (Check == "-2"){
	        dhcsys_alert(OrderName + "通过医嘱或子类绑定的"+CheckArr[1] + t['QTY_INCItemLocked']);
            return "";
	        
	    } else if (Check == "-3"){
		    dhcsys_alert(OrderName + "通过医嘱或子类绑定的"+CheckArr[1] + t['QTY_NOTENOUGH']);
            return "";
        } else {
            return ArrData[0];
        }
    } else {
        var DefaultRecLocRowid = "";
        var DefaultRecLocDesc = "";
        for (var i = 0; i < ArrData.length; i++) {
            var ArrData1 = ArrData[i].split(String.fromCharCode(1));
            if ((ArrData1[2] == "Y") && (DefaultRecLocRowid == "")) {
                DefaultRecLocRowid = ArrData1[0];
                DefaultRecLocDesc = ArrData1[1];
            }
        }

        if (DefaultRecLocRowid != "") {
	        if (GlobalObj.PAAdmType != "I"){
		        OrderPackQty=GetConFacByUom(OrderPackQty,ParamObj,DefaultRecLocRowid);
	            if (OrderPackQty == "") { return "-1" }
		    }
		    
            var Check = cspRunServerMethod(GlobalObj.CheckStockEnoughMethod, OrderARCIMRowid, OrderPackQty, DefaultRecLocRowid, GlobalObj.PAAdmType,ExpStr);
            var CheckArr=Check.split("^");
            Check=CheckArr[0];
            if ((Check != '0') && (Check != '-1') && (Check != '-2') && (Check != '-3')) {
                return DefaultRecLocRowid + String.fromCharCode(1) + DefaultRecLocDesc;
            }
        }

        for (var i = 0; i < ArrData.length; i++) {
            var ArrData1 = ArrData[i].split(String.fromCharCode(1));
            if (ArrData1[2] != "Y") {
                var OrderRecDepRowid = ArrData1[0];
                var OrderRecLocDesc = ArrData1[1];
                if (GlobalObj.PAAdmType != "I"){
			        OrderPackQty=GetConFacByUom(OrderPackQty,ParamObj,OrderRecDepRowid);
		            if (OrderPackQty == "") { return "-1" }
			    }
			    
                var Check = cspRunServerMethod(GlobalObj.CheckStockEnoughMethod, OrderARCIMRowid, OrderPackQty, OrderRecDepRowid, GlobalObj.PAAdmType,ExpStr);
                var CheckArr=Check.split("^");
                Check=CheckArr[0];
                if ((Check != '0') && (Check != '-1')) {
                    //肿瘤医院?A潍坊住院需要由医生来确定是否改变接收科室,
                    if ((GlobalObj.HospitalCode == 'YKYZLYY') || ((GlobalObj.HospitalCode == 'SDWFYY') & (GlobalObj.PAAdmType == "I"))) {
                        var PrescCheck = dhcsys_confirm((OrderName + t['Change_Stock_Recloc']), true);
                        if (PrescCheck == false) { return ''; }
                    } else {
	                    if (Check == "-2"){
		                    dhcsys_alert(OrderName + "通过医嘱或子类绑定的"+CheckArr[1] + t['QTY_INCItemLocked']);
                            return "";
		                }
		                if (Check == "-3"){
			                dhcsys_alert(OrderName + "通过医嘱或子类绑定的"+CheckArr[1] + t['QTY_NOTENOUGH']);
                            return "";
			            }
                        //由设置决定是否切换药房
                        if (GlobalObj.CFNotAutoChangeRecloc == '1') {
                            if (Check == '0') { dhcsys_alert(OrderName + OrderRecLocDesc + t['QTY_NOTENOUGH']); } else if (Check == '-1') { dhcsys_alert(OrderName + OrderRecDepDesc + t['QTY_INCItemLocked']); } else { dhcsys_alert(OrderName + t['QTY_NOTENOUGH']); }
                            return '';
                        }
                        dhcsys_alert(OrderName + t['Change_Stock_Recloc']);
                    }
                    return ArrData[i];
                }
            }
        }
        dhcsys_alert(OrderName + t['QTY_NOTENOUGH']);
        return ""
    }
}
function GetConFacByUom(OrderPackQty,ParamObj,OrderRecDepRowid){
	var SpecOrderPackUOMRowid=ParamObj.SpecOrderPackUOMRowid;
    if (SpecOrderPackUOMRowid==undefined) { SpecOrderPackUOMRowid="" }
    var BillUOMStr = cspRunServerMethod(GlobalObj.GetBillUOMStrMethod, ParamObj.icode, OrderRecDepRowid, "OrderEntry");
    var DefaultOrderPackUOM = "";
    var FirstOrderPackUOM="";
    var ArrData = BillUOMStr.split(String.fromCharCode(2));
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(String.fromCharCode(1));
        if (SpecOrderPackUOMRowid!=""){
           if (ArrData1[0]==SpecOrderPackUOMRowid){
             var DefaultOrderPackUOM = ArrData1[0];
           }
        }else{
           if (ArrData1[2] == "Y"){
             var DefaultOrderPackUOM = ArrData1[0];
           }
        }
        if (i==0) FirstOrderPackUOM=ArrData1[0];
    }
    if (DefaultOrderPackUOM=="") DefaultOrderPackUOM=FirstOrderPackUOM
    if (DefaultOrderPackUOM != "") {
        if (ParamObj.OrderPackUOMRowid!=DefaultOrderPackUOM){
            OrderPackQty=tkMakeServerCall("web.DHCDocOrderEntry", "GetConFac",ParamObj.icode,ParamObj.InciRowid,DefaultOrderPackUOM)
        }
    }
    return OrderPackQty;
}
function CheckStock(ParamObj) {
    var InciRowid = ParamObj.InciRowid;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    var OrderPriorRemarks = ParamObj.OrderPriorRemarksRowId;
    var OrderConFac = ParamObj.OrderConFac;
    var idesc = ParamObj.idesc;
    var icode = ParamObj.icode;
    var CurrentRecLocStr = ParamObj.CurrentRecLocStr;
    //$.messager.alert("警告","CurrentRecLocStr:"+CurrentRecLocStr);
    var OrderRecDepRowid = "";
    var OrderRecDep = "";
    //如果为非库存项,将不会进入这个判断
    //if (InciRowid != "") { //20170310 不需要此判断条件，因为非库存项医嘱有可能绑定有库存项医嘱项目
        if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid) && (OrderPriorRemarks != "OM")) {
            var CheckQty = 1;
            if (GlobalObj.PAAdmType != "I") { CheckQty = OrderConFac }
            var ret = CheckStockEnough(idesc, icode, CheckQty, CurrentRecLocStr,ParamObj);
            //返回库存医嘱的可用库存的科室,
            if (ret == "") {
                return false;
            } else {
                OrderRecDepRowid = mPiece(ret, String.fromCharCode(1), 0);
                OrderRecDep = mPiece(ret, String.fromCharCode(1), 1);
            }
        } else {
            //自备取默认第一个接收科室
            //如果OrderRecDepRowid为空会导致 SetRowDataObj 里的OrderPackUOMStr:cspRunServerMethod(GlobalObj.GetBillUOMStrMethod,ParamObj.icode,ParamObj.OrderRecDepRowid) 报错
            OrderRecDepRowid = CurrentRecLocStr.split(String.fromCharCode(2))[0].split(String.fromCharCode(1))[0]
            OrderRecDep = CurrentRecLocStr.split(String.fromCharCode(2))[0].split(String.fromCharCode(1))[1]
        }
    //}
    return { OrderRecDepRowid: OrderRecDepRowid, OrderRecDep: OrderRecDep }
}

function CheckDosingRecLoc(RecDepRowId) {
    if ((GlobalObj.IPDosingRecLoc != "") && (RecDepRowId != "")) {
        var ArrData = GlobalObj.IPDosingRecLoc.split("^");
        if ($.inArray(RecDepRowId, ArrData) != -1) { return true } else { return false }
    }
    return false
}

function SetDosingDateTime(rowid, ParamObj, OrderRecDepRowid) {
    if ((GlobalObj.IPDosingRecLoc == "") || (OrderRecDepRowid == "")) return;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    var OrderType = ParamObj.OrderType;
    var OrderItemCatRowid = ParamObj.OrderItemCatRowid;

    if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) && (OrderType == "R")) {
        var ret = CheckDosingRecLoc(OrderRecDepRowid);
        if (ret) {
            var StartDateTime = cspRunServerMethod(GlobalObj.GetDosingDateTimeMethod, PageLogicObj.defaultDataCache, "2", OrderItemCatRowid);
            var StartDateTimeArr = StartDateTime.split("^");
            SetCellData(rowid, "OrderStartDate", StartDateTimeArr[0]);
            SetCellData(rowid, "OrderStartTime", StartDateTimeArr[1]);
        }
    }
}

function GetOrderRowPrice(ParamObj) {
    var Price = ParamObj.OrderPrice;
    var OrderPackQty = ParamObj.OrderPackQty;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    var OrderConFac = ParamObj.OrderConFac;
    var Qty = ParamObj.Qty;

    Price = parseFloat(Price).toFixed(4);
    if (GlobalObj.PAAdmType != "I") {
        var Sum = parseFloat(OrderPackQty) * parseFloat(Price);
        Sum = Sum.toFixed(2);
    } else {
        //自备药医嘱不计入总金额
        var Sum = 0;
        if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
            Sum = (parseFloat(Price) / parseFloat(OrderConFac)) * parseFloat(Qty);
        }
        Sum = Sum.toFixed(4);
        //$.messager.alert("警告","Sum:"+Sum);
    }
    return Sum;
}

function OrderMsgAlert(ParamObj, ARCIMShowOEMessageFlag) {
    var OrderMsg = ParamObj.OrderMsg;
    var idesc = ParamObj.idesc;

    //一次录入多条医嘱提示是否弹出对话框,默认弹出
    var EntryMulAlert = 1;
    if (GlobalObj.HospitalCode == "HF") EntryMulAlert = 0;
    if (EntryMulAlert == 0) GlobalObj.CFOrderMsgAlert = "1";
    if (OrderMsg != "") {
        /*if (GlobalObj.CFOrderMsgAlert=="1") {
  		$("#Prompt").text("提示信息:"+idesc+OrderMsg)
  	}else{
  		var ARCIMShowOEMessageFlag=cspRunServerMethod(GlobalObj.GetARCIMShowOEMessageFlag,ParamObj.icode)
	  	if(ARCIMShowOEMessageFlag!="Y"){
		  	$("#Prompt").text("提示信息:"+idesc+OrderMsg)
		}else{
			dhcsys_alert(idesc+OrderMsg);
		}
  	}*/
        //var ARCIMShowOEMessageFlag=cspRunServerMethod(GlobalObj.GetARCIMShowOEMessageFlag,ParamObj.icode)
        if (ARCIMShowOEMessageFlag == "Y") {
            dhcsys_alert(idesc + OrderMsg);
        } else {
            if (GlobalObj.CFOrderMsgAlert == "1") {
                $("#Prompt").text("提示信息:" + idesc + OrderMsg)
            } else {
                dhcsys_alert(idesc + OrderMsg);
            }
        }
    }
    return;
}
//住院急诊流管押金控制
function CheckDeposit(amount, arcim) {
    if ((GlobalObj.PAAdmType != "I") && (GlobalObj.GetStayStatusFlag != 1) && (GlobalObj.GetStayStatusFlag != 2)) { return true }
    if (GlobalObj.CheckIPDepositMethod != "") {
        var retDetail = cspRunServerMethod(GlobalObj.CheckIPDepositMethod, GlobalObj.EpisodeID, amount, "OE");
        if (retDetail != 0) {
            var retArray = retDetail.split("^");
            if (retArray[4] == 'C') {
                if (retArray[5] == 'N') {
                    dhcsys_alert(t['ExceedDeposit'] + retArray[0]);
                    return false;
                } else {
                    if (arcim != "") {
                        var retDetail = cspRunServerMethod(GlobalObj.CheckDepositOrderMethod, retArray[2], arcim);
                        if (retDetail == 0) {
                            dhcsys_alert(t['ExceedDeposit'] + retArray[0]);
                            return false;
                        }
                    }
                }
            }
        }
    }
    return true;
}

function CheckPrescriptSum(AddSum, Arcim) {
    var ScreenBillSum = GetScreenBillSum();
    if (GlobalObj.PAAdmType == "I") {
        var amount = parseFloat(ScreenBillSum) + parseFloat(AddSum);
        var ret = CheckDeposit(amount, Arcim);
        return ret;

    } else {
        //PrescLimitSum已经做为本日费用总和的控制而非单处方的?
        /*
		var PrescLimitSum=GetPrescLimitSum();
	  if (PrescLimitSum==0) return true;
	 	if ((eval(ScreenBillSum)+eval(AddSum))>eval(PrescLimitSum)){
			dhcsys_alert(t['EXCEED_PRESCAMOUNT']+PrescLimitSum);
			return false;
		}
		*/
    }
    return true;
}
/*************************************
 *说明：2014-08-15
 *设置添加行数据时 单元格是否可编辑
 *DefaultStyleConfigObj中的属性必须和表格列index相同
 *返回StyleConfigObj
 *************************************/
function GetStyleConfigObj(ParamObj) {
    var DefaultStyleConfigObj = {
        OrderDur: true,
        OrderFreq: true,
        OrderPackQty: true,
        OrderPackUOM: true,
        OrderDoseQty: true,
        OrderDoseUOM: true,
        OrderInstr: true,
        OrderPrice: false,
        OrderAction: true,
        OrderMasterSeqNo: false,
        OrderLabSpec: true,
        OrderNotifyClinician: true,
        OrderInsurCat: true,
        OrderSpeedFlowRate: true,
        OrderFlowRateUnit: true,
        OrderNeedPIVAFlag: true,
        AntUseReason: true,
        OrderLabEpisodeNo: false,
        Urgent: false,
        OrderPrior: true,
        IsHourItem: ParamObj.IsHourItem
    }
    var rowid = ParamObj.rowid;
    var icode = ParamObj.icode;
    var OrderType = ParamObj.OrderType;
    var OrderPHPrescType = ParamObj.OrderPHPrescType;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    var OrderPriorRemarks = ParamObj.OrderPriorRemarksRowId;
    var OrderFreqRowid = ParamObj.OrderFreqRowid;
    //加急控制      20141127
    var EmergencyFlag = ParamObj.EmergencyFlag;
    if (EmergencyFlag == "Y") {
        DefaultStyleConfigObj.Urgent = true;
    }
    //********** end
    var StyleConfigObj = {};
    //$.extend(StyleConfigObj,DefaultStyleConfigObj);
    var StyleConfigObj = DefaultStyleConfigObj;
    StyleConfigObj.OrderDur = false;
    StyleConfigObj.OrderFreq = false;
    if (OrderType != "R") {
        StyleConfigObj.OrderDoseUOM = false;
        /*
        非药品长期医嘱，如果没有单次剂量单位允许填写单次剂量
		非药品长期医嘱，无论有无频次，都能录入单次剂量
        */
        if (OrderPriorRowid == GlobalObj.LongOrderPriorRowid){
	        
	    }else{
		   if (ParamObj.idoseqtystr == "") {
            StyleConfigObj.OrderDoseQty = false;
           }
		}
        /*if (ParamObj.idoseqtystr == "") {
            StyleConfigObj.OrderDoseQty = false;
        }*/
        if (("^" + ParamObj.OrderItemCatRowid + "^").indexOf("^" + GlobalObj.SelectInstrNotDrugCat + "^") == -1) {
            StyleConfigObj.OrderInstr = false;
        }
        //StyleConfigObj.OrderInstr=false;
        StyleConfigObj.OrderDur = false;
        StyleConfigObj.OrderAction = false;
        StyleConfigObj.OrderInsurCat = false;
        StyleConfigObj.OrderSpeedFlowRate = false;
        StyleConfigObj.OrderFlowRateUnit = false;
        StyleConfigObj.OrderNeedPIVAFlag = false;
        StyleConfigObj.AntUseReason = false;
        StyleConfigObj.OrderPackQty = false;
        StyleConfigObj.OrderPackUOM = false
        if (OrderType == "L") {
            StyleConfigObj.OrderLabEpisodeNo = true;
        } else {
            StyleConfigObj.OrderLabEpisodeNo = false;
        }
        //控制 非药品频次
        //在MedTrak的医生站配置中的【子类控制】->【录入频次非药品子类】中设定的医嘱子类

        if (OrderPHPrescType == "4") {
            if ((OrderPriorRowid != GlobalObj.LongOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
                StyleConfigObj.OrderDur = true;
            }
            StyleConfigObj.OrderFreq = true;
        }
        //非药品长期医嘱，有频次不能录入数量，无频次可以录入数量
        //非药品长期医嘱无频次不能录入单次剂量
        if (OrderPriorRowid == GlobalObj.LongOrderPriorRowid){
	        if (StyleConfigObj.OrderFreq==false){
		        StyleConfigObj.OrderPackQty = true;
                StyleConfigObj.OrderDoseQty = false;
		    }else{
			    StyleConfigObj.OrderDoseQty = true;
			}
            
        }

    } else {

        //药品 频次
        StyleConfigObj.OrderFreq = true;
        StyleConfigObj.OrderMasterSeqNo = true;
        //住院的草药还需要录入疗程,开即刻医嘱
        if (GlobalObj.PAAdmType != "I") {
            StyleConfigObj.OrderDur = true;
        } else {
            if (OrderPHPrescType == "3") {
                StyleConfigObj.OrderDur = true;

            } else {

                if ((((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid)) || ((OrderPriorRowid == GlobalObj.ShortOrderPriorRowid) && (GlobalObj.PAAdmType == "I")))) {

                    StyleConfigObj.OrderDur = false;
                }
                //出院带药
                if (OrderPriorRowid == GlobalObj.OutOrderPriorRowid) {
                    StyleConfigObj.OrderDur = true;
                }
            }
        }
    }
    //护士补录医嘱进行关联设置,频次不可编辑
    if ((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderFreRowId != "undefined") && (VerifiedOrderObj.LinkedMasterOrderFreRowId != "")) {
        StyleConfigObj.OrderPrior = false;
        StyleConfigObj.OrderFreq = false;
        StyleConfigObj.OrderDur = false;
        StyleConfigObj.OrderInstr = false;
    }

    //数量控制
    var OrderPackQtyObj = ContrlOrderPackQty(rowid, OrderPriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid);
    if (ParamObj.OrderNeedPIVAFlag == "Y") {
        OrderPackQtyObj = { OrderPackQty: false, OrderPackUOM: false };
    }
    $.extend(StyleConfigObj, OrderPackQtyObj);
    //自定价医嘱  价格可以编辑
    if (OrderType == "P") {
        StyleConfigObj.OrderPrice = true;
    }
    // 小时医嘱控制[改到后台]  GlobalObj.IsHourItem IsHourItem
    //var IsHourItem=cspRunServerMethod(GlobalObj.IsHourItem,icode);
    //if(IsHourItem=="1"){
    if (ParamObj.IsHourItem == "1") {
        StyleConfigObj.OrderFreq = false;
        StyleConfigObj.OrderDur = false;
        StyleConfigObj.OrderInstr = false;
        //去掉默认值
        ParamObj["OrderFreq"] = "";
        ParamObj["OrderDur"] = "";
        ParamObj["OrderInstr"] = "";
    }

    //设置单元格不可编辑 可能有值  2014-05-16
    //行样式控制改为只控制是否可编辑  不控制内容
    /*
    for(var key in StyleConfigObj){
    	var name=key;
    	var value=StyleConfigObj[key];
    	if(value==false){
    		var val=ParamObj[name];
    		if(val != undefined && val != ""){
    			//$.messager.alert("警告",name+":"+val);
    			StyleConfigObj[name]=value+"^"+val;
    		}
    	}
    }
    */
    return StyleConfigObj
}
//AddItemToList(rowid, arcimRowid, "", "", "", "data", label);
//添加到表格  2014-04-23  新
function AddItemToList(rowid, icode, Para, CopyBillTypeRowId, ItemDefaultRowId, AddMethod, MaterialBarcode) { //Add an item to a listbox
    //第6个参数："data"方式不试用添加行对象方式，"obj"方式试用添加行对象方式
    // 产生 ParamObj
    if (Para != '') {
        PageLogicObj.m_AddItemToListMethod = "ARCOS";
    } else if (ItemDefaultRowId != "") {
        PageLogicObj.m_AddItemToListMethod = "Usage";
    }
    SetTimeLog("AddItemToList", "start");
    var RowDataObj = {};
    for (var k = 0; k < colModelAry.length; k++) {
        var key = colModelAry[k].name;
        $.extend(RowDataObj, { key: '' });
    }
    //取默认数据
    var DefaultParamObj = GetDefaultData(rowid);
    //封装行对象
    $.extend(RowDataObj, DefaultParamObj);
    if ((GlobalObj.CareProvType == "DOCTOR") && (GlobalObj.HaveMidDischarged != "1") && (GlobalObj.PAAdmType == "I")) {
        var warning = cspRunServerMethod(GlobalObj.HaveMidDischargedMethod, GlobalObj.EpisodeID)
        if (warning == "1") {
            dhcsys_alert("此病人已做医疗结算,不允许医生再开医嘱.");
            return false;
        }
    }
    //如果科室没有录入高值的权限，可能通过医嘱查询录入
    if (GlobalObj.HighValueControl != 1) {
        var IncItmHighValueFlag = cspRunServerMethod(GlobalObj.GetIncItmHighValueFlag, icode)
        if (IncItmHighValueFlag == "Y") {
            dhcsys_alert("您所登录的科室没有录入高值材料的权限,请联系信息科确认!")
            return false;
        }
    }

    var BillGrpDesc = "";
    var ARCIMDetail = "";
    var PackQty = "1";
    var OrderBillTypeRowid = parseInt(DefaultParamObj.OrderBillTypeRowid);
    var RowOrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    if (RowOrderBillTypeRowid != "") {
        RowOrderBillTypeRowid = RowOrderBillTypeRowid.replace(String.fromCharCode(10), "")
        OrderBillTypeRowid = RowOrderBillTypeRowid
    }
    var OrderRecDepRowid = ""
    if (!CopyBillTypeRowId) { CopyBillTypeRowId = "" }

    //$.messager.alert("警告",EpisodeID+"^"+OrderBillTypeRowid+"^"+LogonDep+"^"+icode);
    if (GlobalObj.PAAdmType != "I") {
        if (CopyBillTypeRowId != "") {
            OrderBillTypeRowid = CopyBillTypeRowId;
        }
    }
    //跨院
    var OrderOpenForAllHosp = $("#OrderOpenForAllHosp").val();
    var SessionStr = GetSessionStr();
    //如果按登录科室取接收科室?就把登录科室传进去 session['LOGON.CTLOCID']
    var LogonDep = GetLogonLocByFlag();
    var ITMRowId = "";
    //alert("Para="+Para)
    if (Para != "") {
        var ITMRowId = mPiece(Para, "^", 13);
    }
    var ExpStr = MaterialBarcode + "^" + ITMRowId + "^" + GlobalObj.PPRowId;
    var EPARCIMDetail = cspRunServerMethod(GlobalObj.GetEPARCIMDetailMehtod, GlobalObj.EpisodeID, OrderBillTypeRowid, LogonDep, icode, OrderOpenForAllHosp, SessionStr, ItemDefaultRowId, "", ExpStr);
    //$.messager.alert("警告",EPARCIMDetail);
    SetTimeLog("AddItemToList", "调用GetEPARCIMDetailMehtod之后");

    var idesc = mPiece(EPARCIMDetail, "^", 0);
    var OrderType = mPiece(EPARCIMDetail, "^", 1);
    if ((OrderType != "R") && (AddMethod != "obj")) {
        var MasterRowArry = GetSeqNolist(rowid)
        if (MasterRowArry != "") {
            dhcsys_alert("非药品医嘱不能关联!");
            SetFocusCell(rowid, "OrderName");
            return false;
        }
    }
    var OrderItemCatRowid = mPiece(EPARCIMDetail, "^", 2);
    var ItemRowid = "";
    var ItemRowid = mPiece(EPARCIMDetail, "^", 3); //ItemRowid
    var InciRowid = mPiece(EPARCIMDetail, "^", 4);

    var OrderPHPrescType = mPiece(EPARCIMDetail, "^", 5);
    var OrderBillType = mPiece(EPARCIMDetail, "^", 6);
    var iretPrice = mPiece(EPARCIMDetail, "^", 7)
    var ipackqtystr = mPiece(EPARCIMDetail, "^", 8);
    var ireclocstr = mPiece(EPARCIMDetail, "^", 9);
    var iformstr = mPiece(EPARCIMDetail, "^", 10);

    var idoseqtystr = mPiece(EPARCIMDetail, "^", 11);
    var ifrequencestr = mPiece(EPARCIMDetail, "^", 12);

    var iinstructionstr = mPiece(EPARCIMDetail, "^", 13);
    var idurationstr = mPiece(EPARCIMDetail, "^", 14);
    var idefpriorstr = mPiece(EPARCIMDetail, "^", 15);
    var iordermsg = mPiece(EPARCIMDetail, "^", 16);
    var realstockqty = mPiece(EPARCIMDetail, "^", 17);
    var ilab = mPiece(EPARCIMDetail, "^", 18);
    var iskintest = mPiece(EPARCIMDetail, "^", 19);
    var iinsurinfo = mPiece(EPARCIMDetail, "^", 20);
    var ilimitstr = mPiece(EPARCIMDetail, "^", 21);
    var ioutpriorreclocstr = mPiece(EPARCIMDetail, "^", 22);
    var iallergy = mPiece(EPARCIMDetail, "^", 23);
    var ionepriorreclocstr = mPiece(EPARCIMDetail, "^", 24);
    var idiagnoscatstr = mPiece(EPARCIMDetail, "^", 25);
    var iother = mPiece(EPARCIMDetail, "^", 26);
    //其他信息
    var OrderItemInValid = mPiece(iother, String.fromCharCode(1), 0);
    var OrderGenericName = mPiece(iother, String.fromCharCode(1), 1);
    var iSpecCheckCode = mPiece(iother, String.fromCharCode(1), 2);
    var AlertAuditSpecialItem = mPiece(iother, String.fromCharCode(1), 3);
    var ArcimCode = mPiece(iother, String.fromCharCode(1), 4);
    var OrderAuthInValid = mPiece(iother, String.fromCharCode(1), 5);
    var ASCheckStr = mPiece(iother, String.fromCharCode(1), 6);
    var PilotCatFlag = mPiece(iother, String.fromCharCode(1), 7);
    var IsHourItem = mPiece(iother, String.fromCharCode(1), 8);
    var CheckArcimTypeStr = mPiece(iother, String.fromCharCode(1), 9);
    var AllergyChildNotice = mPiece(iother, String.fromCharCode(1), 10);
    var ARCIMShowOEMessageFlag = mPiece(iother, String.fromCharCode(1), 11);
    var ASCheckFlag = mPiece(ASCheckStr, String.fromCharCode(2), 0);
    var ASCheckSex = mPiece(ASCheckStr, String.fromCharCode(2), 1);
    var ASCheckAgeRange = mPiece(ASCheckStr, String.fromCharCode(2), 2);

    //剂型
    var OrderPHForm = mPiece(iformstr, String.fromCharCode(1), 0);
    var OrderConFac = mPiece(iformstr, String.fromCharCode(1), 2);
    var OrderDrugFormRowid = mPiece(iformstr, String.fromCharCode(1), 1);
    var OrderPoisonRowid = mPiece(iformstr, String.fromCharCode(1), 3);
    var OrderPoisonCode = mPiece(iformstr, String.fromCharCode(1), 4);
    //检验,标本
    var OrderLabSpec = mPiece(ilab, String.fromCharCode(1), 0);
    var OrderLabExCode = mPiece(ilab, String.fromCharCode(1), 1);
    var OrderLabItemActive = mPiece(ilab, String.fromCharCode(1), 2);
    //医嘱数量
    var OrderPackQty = mPiece(ipackqtystr, String.fromCharCode(1), 0);
    var OrderPackUOM = mPiece(ipackqtystr, String.fromCharCode(1), 1);
    var OrderPackUOMRowid = mPiece(ipackqtystr, String.fromCharCode(1), 2);
    //频次
    var OrderFreq = mPiece(ifrequencestr, String.fromCharCode(1), 0);
    var OrderFreqRowid = mPiece(ifrequencestr, String.fromCharCode(1), 1);
    var OrderFreqFactor = mPiece(ifrequencestr, String.fromCharCode(1), 2);
    var OrderFreqInterval = mPiece(ifrequencestr, String.fromCharCode(1), 3);
    //用法
    var OrderInstr = mPiece(iinstructionstr, String.fromCharCode(1), 0);
    var OrderInstrRowid = mPiece(iinstructionstr, String.fromCharCode(1), 1);
    //疗程
    var OrderDur = mPiece(idurationstr, String.fromCharCode(1), 0);
    var OrderDurRowid = mPiece(idurationstr, String.fromCharCode(1), 1);
    var OrderDurFactor = mPiece(idurationstr, String.fromCharCode(1), 2);
    //医嘱优先级
    var OrderDefPriorRowid = mPiece(idefpriorstr, String.fromCharCode(1), 1);
    var OrderDefPrior = mPiece(idefpriorstr, String.fromCharCode(1), 0);
    //医嘱价格
    var Price = mPiece(iretPrice, String.fromCharCode(1), 0);
    var DiscPrice = mPiece(iretPrice, String.fromCharCode(1), 1);
    var InsPrice = mPiece(iretPrice, String.fromCharCode(1), 2);
    var PatPrice = mPiece(iretPrice, String.fromCharCode(1), 3);
    //医嘱控制相关
    var OrderMaxDurFactor = mPiece(ilimitstr, String.fromCharCode(1), 0);
    var OrderMaxQty = mPiece(ilimitstr, String.fromCharCode(1), 1);
    var OrderAlertStockQty = mPiece(ilimitstr, String.fromCharCode(1), 2);
    var OrderMaxDoseQty = mPiece(ilimitstr, String.fromCharCode(1), 4);
    var OrderMaxDoseQtyPerDay = mPiece(ilimitstr, String.fromCharCode(1), 5);
    var OrderLimitDays = mPiece(ilimitstr, String.fromCharCode(1), 6);
    var OrderMaxDoseQtyPerOrder = mPiece(ilimitstr, String.fromCharCode(1), 7);
    //提示信息
    var OrderMsg = mPiece(iordermsg, String.fromCharCode(1), 0);
    var OrderFile1 = mPiece(iordermsg, String.fromCharCode(1), 1);
    var OrderFile2 = mPiece(iordermsg, String.fromCharCode(1), 2);
    var OrderFile3 = mPiece(iordermsg, String.fromCharCode(1), 3);
    //皮试
    var needskintest = mPiece(iskintest, String.fromCharCode(1), 0);
    var skintestyy = mPiece(iskintest, String.fromCharCode(1), 1);
    var NeedSkinTestINCI= mPiece(iskintest, String.fromCharCode(1), 4);
    //住院开整包装标志
    var IPNeedBillQty = mPiece(iskintest, String.fromCharCode(1), 2);
    //是否紧急标志可用
    var EmergencyFlag = mPiece(iskintest, String.fromCharCode(1), 3);

    //参数对象,供本方法的其他函数调用使用
    var ParamObj = {
            rowid: rowid,
            icode: icode,
            idesc: idesc,
            OrderType: OrderType,
            OrderItemCatRowid: OrderItemCatRowid,
            ItemRowid: ItemRowid,
            InciRowid: InciRowid,
            OrderPHPrescType: OrderPHPrescType,
            OrderBillType: OrderBillType,
            OrderBillTypeRowid: OrderBillTypeRowid,
            ireclocstr: ireclocstr,
            idoseqtystr: idoseqtystr,
            realstockqty: realstockqty,
            iinsurinfo: iinsurinfo,
            ilimitstr: ilimitstr,
            ioutpriorreclocstr: ioutpriorreclocstr,
            iallergy: iallergy,
            ionepriorreclocstr: ionepriorreclocstr,
            idiagnoscatstr: idiagnoscatstr,
            //iother分割
            OrderGenericName: OrderGenericName,
            iSpecCheckCode: iSpecCheckCode,
            AlertAuditSpecialItem: AlertAuditSpecialItem,
            ArcimCode: ArcimCode,
            OrderAuthInValid: OrderAuthInValid,
            //iformstr分割
            OrderPHForm: OrderPHForm,
            OrderConFac: OrderConFac,
            OrderDrugFormRowid: OrderDrugFormRowid,
            OrderPoisonRowid: OrderPoisonRowid,
            OrderPoisonCode: OrderPoisonCode,
            //ilab分割
            OrderLabSpec: OrderLabSpec,
            OrderLabExCode: OrderLabExCode,
            OrderLabItemActive: OrderLabItemActive,
            //ipackqtystr分割
            OrderPackQty: OrderPackQty,
            OrderPackUOM: OrderPackUOM,
            OrderPackUOMRowid: OrderPackUOMRowid,
            //ifrequencestr分割
            OrderFreq: OrderFreq,
            OrderFreqRowid: OrderFreqRowid,
            OrderFreqFactor: OrderFreqFactor,
            OrderFreqInterval: OrderFreqInterval,
            //iinstructionstr分割
            OrderInstr: OrderInstr,
            OrderInstrRowid: OrderInstrRowid,
            //idurationstr分割
            OrderDur: OrderDur,
            OrderDurRowid: OrderDurRowid,
            OrderDurFactor: OrderDurFactor,
            //idefpriorstr分割
            OrderDefPriorRowid: OrderDefPriorRowid,
            OrderDefPrior: OrderDefPrior,
            //iretPrice分割
            OrderPrice: Price,
            DiscPrice: DiscPrice,
            InsPrice: InsPrice,
            PatPrice: PatPrice,
            //ilimitstr分割
            OrderMaxDurFactor: OrderMaxDurFactor,
            OrderMaxQty: OrderMaxQty,
            OrderAlertStockQty: OrderAlertStockQty,
            OrderMaxDoseQty: OrderMaxDoseQty,
            OrderMaxDoseQtyPerDay: OrderMaxDoseQtyPerDay,
            OrderLimitDays: OrderLimitDays,
            OrderMaxDoseQtyPerOrder: OrderMaxDoseQtyPerOrder,
            //iordermsg分割
            OrderMsg: OrderMsg,
            OrderFile1: OrderFile1,
            OrderFile2: OrderFile2,
            OrderFile3: OrderFile3,
            //iskintest分割
            needskintest: needskintest,
            skintestyy: skintestyy,
            IPNeedBillQty: IPNeedBillQty,
            //加急标志
            EmergencyFlag: EmergencyFlag,
            //医嘱项无效验证
            OrderItemInValid: OrderItemInValid,
            //医嘱性别年龄验证
            ASCheckFlag: ASCheckFlag,
            ASCheckSex: ASCheckSex,
            ASCheckAgeRange: ASCheckAgeRange,
            PilotCatFlag: PilotCatFlag,
            IsHourItem: IsHourItem,
            CheckArcimTypeStr: CheckArcimTypeStr,
            OrderMaterialBarcode:'',
            OrderMaterialBarcodeHiden:''
        }
        //1.设置默认数据
    var DefaultDoseQty = "";
    var DefaultDoseQtyUOM = ""
    var DefaultDoseUOMRowid = "";
    if (idoseqtystr != "") {
        var ArrData = idoseqtystr.split(String.fromCharCode(2));
        var ArrData1 = ArrData[0].split(String.fromCharCode(1));
        DefaultDoseQty = ArrData1[0];
        DefaultDoseQtyUOM = ArrData1[1];
        DefaultDoseUOMRowid = ArrData1[2];
    }
    //默认标本信息
    var DefaultSpecRowid = "";
    var DefaultSpecDesc = "";
    if (OrderLabSpec != "") {
        var ArrData = OrderLabSpec.split(String.fromCharCode(2));
        var ArrData1 = ArrData[0].split(String.fromCharCode(3));
        if (ArrData1[4] == "Y") {
            DefaultSpecRowid = ArrData1[0];
            DefaultSpecDesc = ArrData1[1];
        } else {
            var c3 = String.fromCharCode(3);
            var c2 = String.fromCharCode(2);
            var OrderLabSpec = " " + c3 + " " + c3 + " " + c3 + " " + c3 + " " + c2 + OrderLabSpec;
        }
    }
    $.extend(ParamObj, {
        OrderDoseQty: DefaultDoseQty,
        OrderDoseUOM: DefaultDoseQtyUOM,
        OrderDoseUOMRowid: DefaultDoseUOMRowid,
        OrderLabSpec: DefaultSpecDesc,
        OrderLabSpecRowid: DefaultSpecRowid,
        OrderLabSpecStr: OrderLabSpec
    });
    //开始日期,如果是出院/死亡后费用调整,开始日期必须是出院日期时间
    var StartDateEnbale = true;
    if (GlobalObj.CurrentDischargeStatus == "B") {
        $.extend(ParamObj, { OrderStartDate: GlobalObj.DischargeDate + ' ' + GlobalObj.DischargeTime });
        StartDateEnbale = false;
    } else {

        $.extend(ParamObj, { OrderStartDate: DefaultParamObj.OrderStartDate });
    }

    //2.数据检查
    //0单价医嘱提示
    if (ParamObj.OrderPrice == 0) {
        if (GlobalObj.CFNotAlertZeroPrice != 1) {
            var AlertZero = true;
            //0价格不提示医嘱子类判断 0价格不提示医嘱子类串改为实时获取
            //var NotAlertZeroItemCatStr=GlobalObj.NotAlertZeroItemCatStr;
            var NotAlertZeroItemCatStr = cspRunServerMethod(GlobalObj.GetNotAlertZeroItemCatMethod, "NotAlertZeroItemCat")
            if (NotAlertZeroItemCatStr != "") {
                if (("^" + NotAlertZeroItemCatStr + "^").indexOf(("^" + OrderItemCatRowid + "^")) >= 0) { AlertZero = false }
            }
            if (AlertZero) {
                var ret = dhcsys_confirm(idesc + t['NO_PRICE']);
                if (ret == false) return false;
            }
        }
    }
    SetTimeLog("AddItemToList", "调用BaseValidCheck之前");
    //基本需要的属性的正确性,有效性判断
    var Ret = BaseValidCheck(ParamObj);
    if (Ret == false) { return false; }
    //如果是表单  没有ID  取当前最后一行ID(因为表单是添加了行 再给行赋值)
    if (rowid == "") {
        var prerowid = GetPreRowId();
        $.extend(ParamObj, { rowid: prerowid });
        rowid = prerowid;
    }
    //此方法暂时不用,在BaseValidCheck方法中有是否能开立毒麻药品权限的判断
    //var ret=CheckPermissionByARC(icode,idesc);
    //if(ret==false){ return false;}
    //判断医嘱项中的门急诊限制[改到后台]
    //var CheckArcimTypeStr=cspRunServerMethod(GlobalObj.CheckArcimType,ParamObj.icode,EpisodeID);
    //if (CheckArcimTypeStr!=""){$.messager.alert("警告",CheckArcimTypeStr);return false;}
    if (ParamObj.CheckArcimTypeStr != "") { $.messager.alert("警告", CheckArcimTypeStr); return false; }
    //互斥医嘱判断
    var Ret = CheckConflict(ParamObj.icode, ParamObj.rowid);
    if (Ret == false) { return false; }
    //根据医生站设置提示子类重复

    var Ret = CheckDupOrderItemCat(ParamObj.OrderItemCatRowid, ParamObj.rowid);
    if (Ret == true) {
        dhcsys_alert(idesc + t['ItemCatRepeat']);
        return false;
    }
    if (!CheckDiagnose(ParamObj.OrderType)) {
        return false;
    }

    //过敏检查	[改到后台]
    var Ret = CheckItemAllergy(ParamObj.iallergy);
    if (Ret == false) { return false; }
    if ((GlobalObj.AllergyChildNotice == 1) && (ParamObj.OrderType == "R")) {
        //var retStr=cspRunServerMethod(GlobalObj.CheckAllergyChildNotice,GlobalObj.PatientID,icode)
        var ret = mPiece(AllergyChildNotice, String.fromCharCode(2), 0); //AllergyChildNotice.split("^")[0]
        var Message = mPiece(AllergyChildNotice, String.fromCharCode(2), 1); //AllergyChildNotice.split("^")[1]
        if (ret != "0") {
            dhcsys_alert(idesc + "药学子类和过敏记录的药品【" + Message + "】的药学子类相同");
        }
    }

     /*//判断重复提示及药品处方的一些控制 20170209 修改为放在确认医嘱类型后,这样防止先录入毒麻信息后，又提示出院带药不能录入
    var Ret = CheckPrescAndDupOrder(ParamObj, ParamObj.rowid);
    if (Ret == false) { return false; }*/
    var RowOrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    if (RowOrderBillTypeRowid != "") {
        RowOrderBillTypeRowid = RowOrderBillTypeRowid.replace(String.fromCharCode(10), "")
        $.extend(ParamObj, { OrderBillTypeRowid: RowOrderBillTypeRowid });
    }
    var PrescCheck = CheckPrescriptItem(ParamObj.icode, ParamObj.OrderBillTypeRowid);
    if (PrescCheck == "") {
        dhcsys_alert(idesc + t['LIMIT_PRESCITEM']);
        return false;
    } else {
        //默认费别改变
        if (PrescCheck != ParamObj.OrderBillTypeRowid && PrescCheck != true) {
            dhcsys_alert(idesc + "默认费别不可以开此子类药品，将换成其他费别！")
            $.extend(ParamObj, { OrderBillTypeRowid: PrescCheck });
        }
    }
    //获取医嘱套/复制医嘱等信息
    var ExtendArcosObj = {};
    ExtendArcosObj = GetArcosInfo(Para, GlobalObj.PAAdmType, ParamObj.OrderType, ParamObj.OrderPHPrescType);
    $.extend(ParamObj, ExtendArcosObj);
    //得到基本单位数量
    var BaseDoseQtyObj = {};
    var BaseDoseQtyObj = GetBaseDoseQty(ParamObj, ExtendArcosObj);
    if ($.isEmptyObject(BaseDoseQtyObj) == false) $.extend(ParamObj, BaseDoseQtyObj);

    //皮试备注 试用原液 OrderActionRowid
    var OrderActionRowid = "",
        OrderAction = "";
    if (ParamObj.skintestyy == "1") {
        OrderAction = "原液";
        var ActionArr1 = GlobalObj.OrderActionJSON.split(";");
        for (var i = 0; i < ActionArr1.length; i++) {
            var Action = ActionArr1[i].split(":")[1];
            if (Action == "原液") {
                OrderActionRowid = ActionArr1[i].split(":")[0];
                break;
            }
        }
    }
    $.extend(ParamObj, { OrderActionRowid: OrderActionRowid, OrderAction: OrderAction });

    //获取医嘱类型 
    var OrderPriorRowid = "",
        OrderPrior = "",
        OrderPriorStr = "";
    //优先考虑传入的Para中已经指定了医嘱类型的情况(医嘱套,医嘱复制等)
    if (ParamObj.SpecOrderPriorRowid) {
        if ((ParamObj.skintestyy == "1") && (ParamObj.SpecOrderPriorRowid != GlobalObj.ShortOrderPriorRowid)) {
            $.extend(ParamObj, { SpecOrderPriorRowid: GlobalObj.ShortOrderPriorRowid });
        }
        var SpecOrderPrior = cspRunServerMethod(GlobalObj.GetOrderPriorMethod, ParamObj.SpecOrderPriorRowid);
        OrderPriorStr = ParamObj.SpecOrderPriorRowid + ':' + SpecOrderPrior;
        //如果在全局的医嘱类型中包含则可赋值否则走强制默认的医嘱类型,门诊,医技可能只有临时
        if (GlobalObj.OrderPriorStr.indexOf(OrderPriorStr) != -1) {
            OrderPriorRowid = ParamObj.SpecOrderPriorRowid;
        }
    }
    if (GlobalObj.OrderPriorContrlConfig == 1) {
        if (OrderPriorRowid == "") {
            var DefaultOrderPrior = GetDefaultOrderPrior("");
            OrderPriorRowid = DefaultOrderPrior.split('^')[0];
            OrderPriorStr = DefaultOrderPrior.split('^')[1];
            $.extend(ParamObj, { OrderPriorRowid: OrderPriorRowid, OrderPriorStr: OrderPriorStr });
        }
    } else {
        if (OrderPriorRowid == "") {
            //医嘱类型控制,先取默认医嘱类型 
            $.extend(ParamObj, { OrderPriorRowid: GlobalObj.DefaultOrderPriorRowid, OrderPriorStr: GlobalObj.OrderPriorStr });
            OrderPriorRowid = GetInitPriorRowid(ParamObj.rowid, ParamObj, ExtendArcosObj, GlobalObj.OrderPriorStr);
        }
        OrderPriorStr = GlobalObj.OrderPriorStr;
    }
    if ((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "undefined") && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "")) {
        //护士补录医嘱，医嘱类型默认取主医嘱类型
        $.extend(ParamObj, { OrderPriorRowid: VerifiedOrderObj.LinkedMasterOrderPriorRowid, OrderPriorStr: GlobalObj.OrderPriorStr });
        if ((VerifiedOrderObj.LinkedMasterOrderPriorRowid == GlobalObj.OMSOrderPriorRowid) || (VerifiedOrderObj.LinkedMasterOrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
            OrderPriorRowid = GlobalObj.LongOrderPriorRowid
            if (GlobalObj.OrderPriorContrlConfig == 1) {
                OrderPriorStr = GlobalObj.LongOrderPriorRowid + ":" + "长期医嘱";
                SetColumnList(rowid, "OrderPrior", OrderPriorStr);
            }
        }
        if ((VerifiedOrderObj.LinkedMasterOrderPriorRowid == GlobalObj.OMOrderPriorRowid) || (VerifiedOrderObj.LinkedMasterOrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
            OrderPriorRowid = GlobalObj.ShortOrderPriorRowid
            if (GlobalObj.OrderPriorContrlConfig == 1) {
                OrderPriorStr = GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱";
                SetColumnList(rowid, "OrderPrior", OrderPriorStr);
            }
        }
    }
    //最终医嘱类型
    if (OrderPriorRowid != "") {
        //OrderPrior=cspRunServerMethod(GlobalObj.GetOrderPriorMethod,OrderPriorRowid);
        OrderPrior = GetOrderPriorByPriorStr(OrderPriorStr, OrderPriorRowid);
        $.extend(ParamObj, { OrderPriorRowid: OrderPriorRowid, OrderPrior: OrderPrior, OrderPriorStr: OrderPriorStr });
        if (!CheckPriorAllow(OrderPriorRowid, ParamObj.icode, ParamObj.idesc)) return false;
    }
	//判断重复提示及药品处方的一些控制
    var Ret = CheckPrescAndDupOrder(ParamObj, ParamObj.rowid);
    if (Ret == false) { return false; }
    //附加说明 如果是添加行对象 这里不能从行上取值
    /*
    var OrderPriorRemarks=""; //GetCellData(ParamObj.rowid,"OrderPriorRemarks");
    var OrderPriorRemarksRowId=""; //GetCellData(ParamObj.rowid,"OrderPriorRemarksRowId");		
    $.extend(ParamObj,{OrderPriorRemarks:OrderPriorRemarks,OrderPriorRemarksRowId:OrderPriorRemarksRowId});
    */
    //$.messager.alert("警告",ParamObj.OrderPrior);
    //根据优先级得到医嘱的频次
    var ExtendFreqObj = {};
    ExtendFreqObj = GetFreqByPrior(ParamObj);
    if ($.isEmptyObject(ExtendFreqObj) == false) $.extend(ParamObj, ExtendFreqObj);
    //得到当前接收科室串
    var CurrentRecLocStr = GetCurrentRecLocStr(ParamObj);
    if (CurrentRecLocStr == "") {
        dhcsys_alert(idesc + "接收科室串为空,请联系信息中心!")
        return false;
    }
    $.extend(ParamObj, { CurrentRecLocStr: CurrentRecLocStr });
    var OrderPriorRemarks = GetCellData(rowid, "OrderPriorRemarksRowId");
    //判断库存
    //if ((ParamObj.InciRowid != "") && (OrderPriorRemarks != "OM") && (OrderPriorRemarks != "ZT")) {
	  if ((OrderPriorRemarks != "OM") && (OrderPriorRemarks != "ZT")) {
        var OrderRecDepObj = CheckStock(ParamObj);
        if (OrderRecDepObj == false) {
            return false;
        } else {
            ParamObj.CurrentRecLocStr = ResetDefaultCurrLocStr(ParamObj.CurrentRecLocStr, OrderRecDepObj.OrderRecDepRowid);
            ParamObj.ireclocstr = ResetDefaultCurrLocStr(ParamObj.ireclocstr, OrderRecDepObj.OrderRecDepRowid);
            $.extend(ParamObj, { OrderRecDep: OrderRecDepObj.OrderRecDep, OrderRecDepRowid: OrderRecDepObj.OrderRecDepRowid })
        }
        //CS医生站配液中心设置业务代码
        SetDosingDateTime(ParamObj.rowid, ParamObj, OrderRecDepObj.OrderRecDepRowid);
    } else {


        var DefaultRecLocRowid = "";
        var DefaultRecLocDesc = "";
        var ArrData = CurrentRecLocStr.split(String.fromCharCode(2));
        /////////jxz   edit   for    按登录科室取接受科室   且没有默认接受科室    则取第一个接受科室赋值为默认接受科室   防止接受科室为空
        for (var i = 0; i < ArrData.length; i++) {
            var ArrData1 = ArrData[i].split(String.fromCharCode(1));
            if ((ArrData1[2] == "Y") && (DefaultRecLocRowid == "")) {
                DefaultRecLocRowid = ArrData1[0];
                DefaultRecLocDesc = ArrData1[1];
            }
        }
        if (DefaultRecLocRowid == "") {
            var ArrData1 = ArrData[0].split(String.fromCharCode(1));
            DefaultRecLocRowid = ArrData1[0];
            DefaultRecLocDesc = ArrData1[1];
        }

        $.extend(ParamObj, { OrderRecDep: DefaultRecLocDesc, OrderRecDepRowid: DefaultRecLocRowid })
    }
    if (GlobalObj.PAAdmType != "I") {
        OrderBillTypeRowid = GetPrescBillTypeID();
    } else {
        OrderBillTypeRowid = GlobalObj.BillTypeID;
    }
    var OrderOpenForAllHosp = "";
    var LogonDep = ""
    var obj = document.getElementById("FindByLogDep");
    if (obj) {
        if (obj.checked) { FindRecLocByLogonLoc = 1 } else { FindRecLocByLogonLoc = 0 }
    }
    if (FindRecLocByLogonLoc == "1") { LogonDep = session['LOGON.CTLOCID'] }
    var retPrice = cspRunServerMethod(GlobalObj.GetOrderPriceConUomMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, LogonDep, ParamObj.icode, OrderOpenForAllHosp, ParamObj.OrderPackUOMRowid, ParamObj.OrderRecDepRowid);
    var ArrPrice = retPrice.split("^");
    var Price = ArrPrice[0];
    if (Price < 0) {
        ParamObj.OrderPrice = ""
        alert("此接收科室下无有效医嘱项,请切换接收科室或联系相关人员处理")
        websys_setfocus('OrderRecDep');
        return false;
    } else {
        ParamObj.OrderPrice = Price
    }

    var OrderRecDepRowid = ParamObj.OrderRecDepRowid
    if (GlobalObj.IPDosingRecLocStr != "") {
        if (("^" + GlobalObj.IPDosingRecLocStr + "^").indexOf("^" + OrderRecDepRowid + "^") >= 0) {
            $.extend(ParamObj, { OrderNeedPIVAFlag: "Y" });
        } else {
            $.extend(ParamObj, { OrderNeedPIVAFlag: "N" });
        }
    } else {
        $.extend(ParamObj, { OrderNeedPIVAFlag: "N" });
    }
    //得到医嘱的价格(金额)
    var Sum = GetOrderRowPrice(ParamObj);
    $.extend(ParamObj, { Sum: Sum });
    //考虑医嘱备注先选自备药或者医嘱套等传入的情况,以医嘱套等传入的优先,其次找行上的,如果存在值则需要保留
    var OrderPriorRemarksRowId = ParamObj.OrderPriorRemarksRowId;
    if (!OrderPriorRemarksRowId) {
        var OrderPriorRemarksRowId = GetCellData(ParamObj.rowid, "OrderPriorRemarksRowId");
        if (OrderPriorRemarksRowId) {
            var OrderPriorRemarks = GetCellData(ParamObj.rowid, "OrderPriorRemarks");
            $.extend(ParamObj, { OrderPriorRemarks: OrderPriorRemarks, OrderPriorRemarksRowId: OrderPriorRemarksRowId });
        } else {
            OrderPriorRemarksRowId = "";
        }
    }
    //自备药医嘱和无费用医嘱不参与费用控制
    if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid) && (ParamObj.OrderPrice != 0) && (OrderPriorRemarksRowId != "OM") && (OrderPriorRemarksRowId != "ZT")) {
        var PrescCheck = CheckPrescriptSum(Sum, ParamObj.icode);
        if (PrescCheck == false) return false;
    }
    //医嘱项提示信息
    OrderMsgAlert(ParamObj, ARCIMShowOEMessageFlag); //ParamObj,ExtendArcosObj
    //医保基本限制审查
    var InsurCheck = CheckItemInsurLimit(ParamObj.iinsurinfo);
    if (InsurCheck == false) { return false; }



    //医保相关业务审查(是否自费,适应症,医保接口,其他医保业务控制)
    var InsurCheckRet = CheckItemInsur(ParamObj);
    if (InsurCheckRet === false) { return false; }

    //以String.fromCharCode(1)为分隔符
    var OrderHiddenPara = skintestyy + String.fromCharCode(1) + IPNeedBillQty + String.fromCharCode(1) + OrderItemCatRowid + String.fromCharCode(1) + OrderMaxDoseQty + String.fromCharCode(1) + OrderMaxDoseQtyPerDay + String.fromCharCode(1) + OrderLimitDays + String.fromCharCode(1) + OrderMaxDoseQtyPerOrder;
    OrderHiddenPara =OrderHiddenPara+String.fromCharCode(1)+NeedSkinTestINCI
    $.extend(ParamObj, { OrderHiddenPara: OrderHiddenPara });

    //算整包装数量
    var OrderPackQty = "";
    if ((Para != "") || (ItemDefaultRowId != "")) {
        if ((ParamObj.OrderPackQty != "") && (ParamObj.OrderPriorRowid != GlobalObj.LongOrderPriorRowid) && (ParamObj.OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
            //住院非药品才允许修改
            if (((GlobalObj.PAAdmType == "I") && (ParamObj.OrderType != "R")) || (GlobalObj.PAAdmType != "I")) {
                OrderPackQty = ParamObj.OrderPackQty;
            }
        }
    }
    if (ParamObj.OrderPHPrescType == "4") {
        if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
            OrderPackQty = "";
        }
    }
    $.extend(ParamObj, { OrderPackQty: OrderPackQty });
    //补录关联医嘱  设置关联信息
    $.extend(ParamObj, {
        LinkedMasterOrderRowid: VerifiedOrderObj.LinkedMasterOrderRowid,
        LinkedMasterOrderSeqNo: VerifiedOrderObj.LinkedMasterOrderSeqNo
    });
    //LinkMastStr=OrderObj.LinkedMasterOrderRowid+"^"+OrderObj.LinkedMasterOrderSeqNo+"^"+OrderObj.LinkedMasterOrderPriorRowid+"^"+OrderFreStr;
    if (($.isEmptyObject(VerifiedOrderObj) == false) && (VerifiedOrderObj.LinkedMasterOrderRowid != "")) {
        $.extend(ParamObj, {
            OrderFreq: VerifiedOrderObj.LinkedMasterOrderFreDesc,
            OrderFreqRowid: VerifiedOrderObj.LinkedMasterOrderFreRowId,
            OrderFreqFactor: VerifiedOrderObj.LinkedMasterOrderFreFactor,
            OrderFreqInterval: VerifiedOrderObj.LinkedMasterOrderFreInterval
        });
    }
    if ((OrderPriorRowid == GlobalObj.STATOrderPriorRowid) && (OrderFreqRowid != GlobalObj.STFreqRowid) && (GlobalObj.PAAdmType == "I")) {
        $.extend(ParamObj, { OrderFreq: GlobalObj.STFreq, OrderFreqRowid: GlobalObj.STFreqRowid });
    }
    SetTimeLog("AddItemToList", "调用ChangeRowStyle之前");

    //3.数据整理
    //保存当前行配置样式
    //var StyleConfigObj={OrderFreq:false}
    //获取行样式
    var StyleConfigObj = GetStyleConfigObj(ParamObj);
    $.extend(StyleConfigObj, { OrderStartDate: StartDateEnbale });
    var StyleConfigStr = JSON.stringify(StyleConfigObj);
    //$.messager.alert("警告",StyleConfigStr);
    $.extend(ParamObj, { StyleConfigStr: StyleConfigStr });
    ChangeRowStyle(rowid, StyleConfigObj)
        //2014-05-09 整理行数据对象
        //RowDataObj:默认数据对象  ParamObj:参数对象
        //$.messager.alert("警告",ParamObj.OrderDefPriorRowid+":"+ParamObj.OrderDefPrior);
    RowDataObj = SetRowDataObj(ParamObj.rowid, RowDataObj, ParamObj);
    //$.messager.alert("警告",RowDataObj.OrderFreqRowid);
    //$.messager.alert("警告",RowDataObj.OrderPrice);
    //4.添加数据
    //根据是否传入 rowid 判断是添加到表格行 还是添加到表单
    if (rowid != "" && AddMethod == "obj") {
        SetTimeLog("AddItemToList", "按对象的方式赋值行数据之前");
        //添加行
        var rowid = Add_Order_row2(RowDataObj);
        OrderPackUOMchangeCommon(rowid);
        //医嘱套录入 是否启动编辑 用户UI设置
        if (UIConfigObj.isEditCopyItem == true) {
            EditRow(rowid);
            //设置焦点位置
            SetFocusCell(rowid, "OrderName");
        } else {
            //todo 待优化,处理非直接录入,从外部带入数据(参数:Para),对于combo的列需要显示描述,现在是显示的数字
        }
        //初始化协议单位
        GetBillUOMStr(rowid,RowDataObj.SpecOrderPackUOMRowid);
        CheckOrderPriorRemarks(rowid);
        SetTimeLog("AddItemToList", "按对象的方式赋值行数据之后");
        SetTimeLog("AddItemToList", "按对象的方式赋值行数据调用抗菌药物分级管理之前");
        //*******************抗生素12 此处为更换位置*******************************/
        //抗菌药物分级管理
        if (OrderType == "R") {
            //var Ret = ICheckDoctorTypePoison(ParamObj.OrderPoisonRowid, ParamObj.icode, rowid, ParamObj.OrderPoisonCode);
            //if (Ret == false) { return false; }
        }
        SetTimeLog("AddItemToList", "按对象的方式赋值行数据调用抗菌药物分级管理之后");
        //**************************************************/
    } else {
        SetTimeLog("AddItemToList", "按单列数据赋值行数据之前");
        //OrderStartDate:OrderStartDate,
        //保存当前行配置样式
        SetCellData(rowid, "StyleConfigStr", RowDataObj.StyleConfigStr);
        //医保子分类
        SetCellData(rowid, "OrderInsurCat", RowDataObj.OrderInsurCat);
        SetCellData(rowid, "OrderInsurCatRowId", RowDataObj.OrderInsurCatRowId);
        //医嘱类型
        SetCellData(rowid, "OrderPrior", RowDataObj.OrderPriorRowid);
        SetCellData(rowid, "OrderPriorRowid", RowDataObj.OrderPriorRowid);
        SetCellData(rowid, "OrderPriorStr", RowDataObj.OrderPriorStr);
        //剂量单位
        //$.messager.alert("警告",idoseqtystr);	
        SetColumnList(rowid, "OrderDoseUOM", RowDataObj.idoseqtystr)
        SetCellData(rowid, "OrderDoseQty", RowDataObj.OrderDoseQty);
        SetCellData(rowid, "OrderDoseUOM", RowDataObj.OrderDoseUOMRowid);
        SetCellData(rowid, "OrderDoseUOMRowid", RowDataObj.OrderDoseUOMRowid);
        //存储下拉框数据
        SetCellData(rowid, "idoseqtystr", RowDataObj.idoseqtystr)

        //特病病种
        SetColumnList(rowid, "OrderDIACat", RowDataObj.idiagnoscatstr);
        SetCellData(rowid, "idiagnoscatstr", RowDataObj.idiagnoscatstr)
            //默认置上前一条的诊断类别	
        SetCellData(rowid, "OrderDIACat", RowDataObj.OrderDIACat);
        SetCellData(rowid, "OrderDIACatRowId", RowDataObj.DIACatRowId);

        //把前面的得到可用接收科室串用来置接收科室List
        SetColumnList(rowid, "OrderRecDep", RowDataObj.CurrentRecLocStr);
        //存储下拉框数据
        SetCellData(rowid, "CurrentRecLocStr", RowDataObj.CurrentRecLocStr)

        //记录下非出院带药的接收科室和出院带药的接收科室?当切换医嘱类型时需要这两个串
        SetCellData(rowid, "OrderRecLocStr", RowDataObj.OrderRecLocStr);
        SetCellData(rowid, "OrderOutPriorRecLocStr", RowDataObj.OrderOutPriorRecLocStr);
        SetCellData(rowid, "OrderOnePriorRecLocStr", RowDataObj.OrderOnePriorRecLocStr);

        //设定前面给定的有库存接受科室
        if (RowDataObj.OrderRecDepRowid) {
            SetCellData(rowid, "OrderRecDep", RowDataObj.OrderRecDepRowid);
            SetCellData(rowid, "OrderRecDepRowid", RowDataObj.OrderRecDepRowid);
        }

        //设标本选择下拉框 标本
        SetColumnList(rowid, "OrderLabSpec", RowDataObj.OrderLabSpecStr);
        SetCellData(rowid, "OrderLabSpec", RowDataObj.OrderLabSpecRowid);
        SetCellData(rowid, "OrderLabSpecRowid", RowDataObj.OrderLabSpecRowid);
        SetCellData(rowid, "OrderLabSpecStr", RowDataObj.OrderLabSpecStr)
        if (OrderLabSpec != "") { //jxz  add   for   若无默认标本则添加空标本，审核前必须选择
            var ArrData = OrderLabSpec.split(String.fromCharCode(2));
            var ArrData1 = ArrData[0].split(String.fromCharCode(3));
            if (ArrData1[4] != "Y") {
                var c3 = String.fromCharCode(3);
                var c2 = String.fromCharCode(2);
                var str = " " + c3 + " " + c3 + " " + c3 + " " + c3 + " " + c2 + RowDataObj.OrderLabSpecStr;
                SetColumnList(rowid, "OrderLabSpec", str);
                SetCellData(rowid, "OrderLabSpecStr", str);
            }
        }
        //设置科研项目
        SetColumnList(rowid, "OrderPilotPro", GlobalObj.PilotProStr);

        //频次
        SetCellData(rowid, "OrderFreq", RowDataObj.OrderFreq);
        //$.messager.alert("警告",OrderFreq);
        SetCellData(rowid, "OrderFreqRowid", RowDataObj.OrderFreqRowid);
        SetCellData(rowid, "OrderFreqFactor", RowDataObj.OrderFreqFactor);
        SetCellData(rowid, "OrderFreqInterval", RowDataObj.OrderFreqInterval);
        var FreqInfo = tkMakeServerCall("web.DHCDocOrderCommon", "GetWeekFlagAndDispTime", RowDataObj.OrderFreqRowid);
        if (FreqInfo.split("^")[0] == "1") {
            SetCellData(rowid, "OrderFreqDispTimeStr", FreqInfo.split("^")[1]);
        }
        //用法
        SetCellData(rowid, "OrderInstr", RowDataObj.OrderInstr);
        SetCellData(rowid, "OrderInstrRowid", RowDataObj.OrderInstrRowid);
        //*******************抗生素12 此处为更换位置*******************************/
        //抗菌药物分级管理
        if (OrderType == "R") {
            //var Ret = ICheckDoctorTypePoison(ParamObj.OrderPoisonRowid, ParamObj.icode, rowid, ParamObj.OrderPoisonCode);
            //if (Ret == false) { return false; }
        }
        //**************************************************/
        //疗程
        SetCellData(rowid, "OrderDur", RowDataObj.OrderDur);
        SetCellData(rowid, "OrderDurRowid", RowDataObj.OrderDurRowid);
        SetCellData(rowid, "OrderDurFactor", RowDataObj.OrderDurFactor);

        SetCellData(rowid, "OrderConFac", RowDataObj.OrderConFac);
        SetCellData(rowid, "OrderPHForm", RowDataObj.OrderPHForm);
        SetCellData(rowid, "OrderPHPrescType", RowDataObj.OrderPHPrescType);

        //医嘱项ID
        SetCellData(rowid, "OrderARCIMRowid", RowDataObj.OrderARCIMRowid);

        SetCellData(rowid, "OrderDrugFormRowid", RowDataObj.OrderDrugFormRowid);
        SetCellData(rowid, "OrderName", RowDataObj.OrderName);

        //数量
        SetCellData(rowid, "OrderPackQty", RowDataObj.OrderPackQty);
        SetCellData(rowid, "OrderPackUOM", RowDataObj.OrderPackUOM);
        SetCellData(rowid, "OrderPackUOMRowid", RowDataObj.OrderPackUOMRowid);
        //价格
        SetCellData(rowid, "OrderPrice", RowDataObj.OrderPrice);
        //金额
        SetCellData(rowid, "OrderSum", RowDataObj.OrderSum);
        //医嘱分类
        SetCellData(rowid, "OrderType", RowDataObj.OrderType);
        //费别
        //SetCellData(rowid,"OrderBillType",RowDataObj.OrderBillType);
        SetCellData(rowid, "OrderBillType", RowDataObj.OrderBillTypeRowid);
        SetCellData(rowid, "OrderBillTypeRowid", RowDataObj.OrderBillTypeRowid);
        //附加说明
        SetCellData(rowid, "OrderPriorRemarks", RowDataObj.OrderPriorRemarksRowId);
        SetCellData(rowid, "OrderPriorRemarksRowId", RowDataObj.OrderPriorRemarksRowId);
        //开始日期
        SetCellData(rowid, "OrderStartDate", RowDataObj.OrderStartDate);
        SetCellData(rowid, "OrderBaseQty", RowDataObj.OrderBaseQty);
        SetCellData(rowid, "OrderARCOSRowid", RowDataObj.OrderARCOSRowid);
        SetCellData(rowid, "OrderMaxDurFactor", RowDataObj.OrderMaxDurFactor);
        SetCellData(rowid, "OrderMaxQty", RowDataObj.OrderMaxQty);
        SetCellData(rowid, "OrderBaseQtySum", RowDataObj.Qty);
        SetCellData(rowid, "OrderFile1", RowDataObj.OrderFile1);
        SetCellData(rowid, "OrderFile2", RowDataObj.OrderFile2);
        SetCellData(rowid, "OrderFile3", RowDataObj.OrderFile3);
        SetCellData(rowid, "OrderLabExCode", RowDataObj.OrderLabExCode);
        SetCellData(rowid, "OrderAlertStockQty", RowDataObj.OrderAlertStockQty);
        SetCellData(rowid, "OrderPoisonCode", RowDataObj.OrderPoisonCode);
        SetCellData(rowid, "OrderPoisonRowid", RowDataObj.OrderPoisonRowid);
        SetCellData(rowid, "LinkedMasterOrderRowid", RowDataObj.LinkedMasterOrderRowid);
        SetCellData(rowid, "LinkedMasterOrderSeqNo", RowDataObj.LinkedMasterOrderSeqNo);
        //****************抗生素8********************************/
        var AntibApplyRowid = GetCellData(rowid, "OrderAntibApplyRowid")
        if ((AntibApplyRowid == "") && (typeof(OrderAntibApplyRowid) != "undefined")) {
            SetCellData(rowid, "OrderAntibApplyRowid", RowDataObj.OrderAntibApplyRowid);
        }
        var ReasonID = GetCellData(rowid, "UserReasonId")
        if ((ReasonID == "") && (typeof(UserReasonID) != "undefined")) {
            SetCellData(rowid, "UserReasonId", RowDataObj.UserReasonId);
        }
        //************************************************/

        if ((RowDataObj.OrderSkinTest == "Y") && (RowDataObj.OrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
            // 皮试标志 
            SetCellChecked(rowid, "OrderSkinTest", true);
        }
        if ((RowDataObj.skintestyy == "1") && (RowDataObj.OrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
            // 皮试原液 
            SetCellData(rowid, "OrderActionRowid", RowDataObj.OrderActionRowid);
            SetCellData(rowid, "OrderAction", RowDataObj.OrderActionRowid);
        }


        if (RowDataObj.OrderCoverMainIns == "N") {
            //医保
            SetCellChecked(rowid, "OrderCoverMainIns", false);
        } else {
            SetCellChecked(rowid, "OrderCoverMainIns", true);
        }
        SetCellData(rowid, "OrderHiddenPara", RowDataObj.OrderHiddenPara);
        if (OrderType == "R") {
            SetCellData(rowid, "OrderGenericName", RowDataObj.OrderGenericName);
        }
        if (RowDataObj.OrderNeedPIVAFlag == "N") {
            SetCellChecked(rowid, "OrderNeedPIVAFlag", false);
        } else {
            SetCellChecked(rowid, "OrderNeedPIVAFlag", true);
        }
        //启用实时查询的方式,需要放开
        //GlobalObj.OEORIRealTimeQuery=1
        if (GlobalObj.OEORIRealTimeQuery == 1) {
            var OrderNameObj = document.getElementById(rowid + "_OrderName");
            if (OrderNameObj && (OrderNameObj.disabled == false)) {
                $('#' + rowid + '_OrderName').combogrid("setValue", RowDataObj.OrderName);
            } else {
                $('#' + rowid + '_OrderName').combo("setText", RowDataObj.OrderName)
            }
        }
        if ((MaterialBarcode==undefined)||(MaterialBarcode=="")){
	        SetCellData(rowid, "OrderMaterialBarcode", RowDataObj.OrderMaterialBarcode);
            SetCellData(rowid, "OrderMaterialBarcodeHiden", RowDataObj.OrderMaterialBarcodeHiden);
	    }
        //初始化协议单位
        GetBillUOMStr(rowid);
        //初始化医保分类
        CreaterOrderInsurCat(rowid);
        //对有频次的非药品医嘱根据开始时间计算首日次数
        SetOrderFirstDayTimes(rowid);
        //加急勾选框默认灰
        $("#" + rowid + "_Urgent").attr("checked", false);
        //放在最后保证医嘱套中关联关系加载完后再检验
        CheckOrderPriorRemarks(rowid)
            //检测可用性
        CheckFreqAndPackQty(rowid)
            //添加空白行,按门诊住院业务跳转到指定焦点后再增加行
            //Add_Order_row();
            //设置焦点位置
            //SetFocusCell(rowid,"OrderName")
        SetTimeLog("AddItemToList", "按单列数据赋值行数据之后");
    }
    //*******************抗生素12 此处为更换位置 此处不用*******************************/
    //抗菌药物分级管理
    /*if (OrderType=="R"){
    	var Ret=ICheckDoctorTypePoison(ParamObj.OrderPoisonRowid,ParamObj.icode,rowid,ParamObj.OrderPoisonCode);
    	if (Ret==false) {return false;}
    }*/
    //**************************************************/
    //外用用法 单次剂量和疗程应为空
    var OrderInstrRowid = GetCellData(rowid, "OrderInstrRowid")
    if ((IsWYInstr(OrderInstrRowid)) && (GlobalObj.PAAdmType != "I")) {
        /*DefaultDoseQty="";
		 DefaultDoseQtyUOM="";
		 DefaultDoseUOMRowid="";
		 $.extend(ParamObj,{OrderDur:'',OrderDurRowid:'',OrderDurFactor:'',OrderDurFactor:''});*/
        SetCellData(rowid, "OrderDur", "");
        SetCellData(rowid, "OrderDurRowid", "");
        SetCellData(rowid, "OrderDoseQty", "");
        SetCellData(rowid, "OrderDurFactor", 1);
    }
    /*var OrderRecDepRowid=GetCellData(rowid,"OrderRecDepRowid")
    if (GlobalObj.IPDosingRecLocStr!=""){
    	if (("^"+GlobalObj.IPDosingRecLocStr+"^").indexOf("^"+OrderRecDepRowid+"^")>=0){
    			SetCellData(rowid,"OrderNeedPIVAFlag",true);
        }
    }*/
    SetPoisonOrderStyle(RowDataObj.OrderPoisonCode, RowDataObj.OrderPoisonRowid, rowid);
    //在SetPackQty中使用,如果是Y,则说明数量在存在的情况下,不可以被重新计算
    var IsNotNeedChangeFlag = undefined;
    if ((ExtendArcosObj.OrderPackQty && (ExtendArcosObj.OrderPackQty != "")) || ((ItemDefaultRowId != "") && (OrderPackQty != ""))) {
        IsNotNeedChangeFlag = "Y";
    }
	 //设置关联
	 var MasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
	 if (MasterSeqNo!=""){
		SetMasterSeqNo(MasterSeqNo, rowid, "S");
	 }
	
    //算数量
    SetPackQty(rowid, IsNotNeedChangeFlag);
    SetTimeLog("AddItemToList", "AddItemToList主业务方法完成");
    //治疗科室的项目控制医嘱数量不可填
    CheckCureItemConfig(rowid);
    //知识库
    CheckLibPhaFunction("Q", rowid, "")
        //OrderPackUOMchangeCommon 中已调用合理用药,此处调用重复
    if (AddMethod != "obj") {
        //XHZY_Click();
    }
    SetTimeLog("AddItemToList", "end");
    return true;

}

function SetRecLocStr(Row, PriorRowid, OrderPriorRemarks) {
    if (GlobalObj.PAAdmType == "I") {
        //选择出院带药时,设上出院带院接收科室值
        if (PriorRowid == GlobalObj.OutOrderPriorRowid) {
            var OrderOutPriorRecLocStr = GetCellData(Row, "OrderOutPriorRecLocStr");
            if (OrderOutPriorRecLocStr != "") {
                SetColumnList(Row, "OrderRecDep", OrderOutPriorRecLocStr);
            }
        }
        //选择取药医嘱时,设上取药医嘱接收科室值
        if ((PriorRowid == GlobalObj.OneOrderPriorRowid) || (OrderPriorRemarks == "ONE")) {
            var OrderOnePriorRecLocStr = GetCellData(Row, "OrderOnePriorRecLocStr");
            if (OrderOnePriorRecLocStr != "") {
                SetColumnList(Row, "OrderRecDep", OrderOnePriorRecLocStr);
            }
        }
        //由取药医嘱,出院带药切换到非出院带药时,设上普通接收科室值
        if ((OrderPriorRemarks != "ONE") && (PriorRowid != GlobalObj.OneOrderPriorRowid) && (PriorRowid != GlobalObj.OutOrderPriorRowid)) {
            //原来的医院没有按医嘱类型设置接受科室?A为了保持稳定?A在此分别处理
            if (GlobalObj.HospitalCode == "ZGYKDFSYY") {
                var OrderRecLocStr = GetCellData(Row, "OrderRecLocStr");
                OrderRecLocStr = GetRecLocStrByPrior(OrderRecLocStr, PriorRowid);

                SetColumnList(Row, "OrderRecDep", OrderRecLocStr)
            } else {
                //if ((OldPriorRowid==GlobalObj.OutOrderPriorRowid)||(OldPriorRowid==GlobalObj.OneOrderPriorRowid)){
                var OrderRecLocStr = GetCellData(Row, "OrderRecLocStr");
                OrderRecLocStr = GetRecLocStrByPrior(OrderRecLocStr, PriorRowid);

                SetColumnList(Row, "OrderRecDep", OrderRecLocStr)
                    //}
                    //用法定义接收科室,未定义用法接收科室,则还取原接收科室串
                var InstrReclocStr = GetReclocByInstr(Row);
                var OrderRecLocStr = GetRecLocStrByPrior(InstrReclocStr, PriorRowid);
                SetColumnList(Row, "OrderRecDep", OrderRecLocStr);
            }
        }
    }
    var retPrice = GetRecPrice(Row)
    if (retPrice==undefined) retPrice="0^0^0^0^0";
    var ArrPrice = retPrice.split("^");
    var Price = ArrPrice[0];
    var OrderConFac = ArrPrice[4];
    if (Price < 0) {
        var Price = ""
    }
    SetCellData(Row, "OrderPrice", Price);
    SetCellData(Row, "OrderConFac", OrderConFac)

}

function SetPoisonOrderStyle(OrderPoisonCode, OrderPoisonRowid, Row) {
    if ((GlobalObj.HospitalCode == 'JZSYY') || (GlobalObj.HospitalCode == 'JSXZZXYY')) {
        if ((OrderPoisonCode == 'J1') || (OrderPoisonCode == 'J2') || (OrderPoisonCode == 'DX') || (OrderPoisonCode == 'MZ')) {
            RowObj.className = 'SkinTest';
            RowObj.PrevClassName = "SkinTest";
        }
        if ((OrderPoisonCode == 'TLJS') || (OrderPoisonCode == 'DBTHZJ')) {
            document.getElementById(Row + '_OrderName').style.color = 'green';
        }
    } else {
        if (OrderPoisonRowid != "") {
            $("#" + Row).find("td").addClass("SkinTest");
            //RowObj.className='SkinTest';
            //RowObj.PrevClassName="SkinTest";
        }
    }
}

//设置添加行数据对象
function SetRowDataObj(rowid, RowDataObj, ParamObj) {
    var dataObj = RowDataObj;
    //OrderPriorRemarks:OrderPriorRemarks,OrderPriorRemarksRowId:OrderPriorRemarksRowId
    $.extend(dataObj, {
        //行ID
        id: rowid,
        //行样式
        StyleConfigStr: ParamObj.StyleConfigStr,
        OrderItemRowid: '',
        OrderItemCatRowid: ParamObj.OrderItemCatRowid,
        OrderARCIMRowid: ParamObj.icode,
        OrderName: ParamObj.idesc,
        //医保子分类
        OrderInsurCat: ParamObj.OrderInsurCat,
        OrderInsurCatRowId: ParamObj.OrderInsurCatRowId,
        //医嘱类型
        OrderPrior: ParamObj.OrderPrior,
        OrderPriorRowid: ParamObj.OrderPriorRowid,
        OrderPriorStr: ParamObj.OrderPriorStr,
        //单次剂量
        OrderDoseQty: ParamObj.OrderDoseQty,
        //剂量单位
        OrderDoseUOM: ParamObj.OrderDoseUOM,
        OrderDoseUOMRowid: ParamObj.OrderDoseUOMRowid,
        //存储下拉框数据
        idoseqtystr: ParamObj.idoseqtystr,
        //特病病种
        idiagnoscatstr: ParamObj.idiagnoscatstr,
        //默认置上前一条的诊断类别	
        OrderDIACat: ParamObj.OrderDIACat,
        OrderDIACatRowId: ParamObj.OrderDIACatRowId,
        //记录下非出院带药的接收科室和出院带药的接收科室?当切换医嘱类型时需要这两个串
        OrderRecLocStr: ParamObj.ireclocstr,
        OrderOutPriorRecLocStr: ParamObj.ioutpriorreclocstr,
        OrderOnePriorRecLocStr: ParamObj.ionepriorreclocstr,
        //设定前面给定的有库存接受科室
        OrderRecDep: ParamObj.OrderRecDep,
        OrderRecDepRowid: ParamObj.OrderRecDepRowid,
        //存储下拉框数据
        CurrentRecLocStr: ParamObj.CurrentRecLocStr,
        //标本
        OrderLabSpec: ParamObj.OrderLabSpec,
        OrderLabSpecRowid: ParamObj.OrderLabSpecRowid,
        OrderLabSpecStr: ParamObj.OrderLabSpecStr,
        //频次
        OrderFreq: ParamObj.OrderFreq,
        OrderFreqRowid: ParamObj.OrderFreqRowid,
        OrderFreqFactor: ParamObj.OrderFreqFactor,
        OrderFreqInterval: ParamObj.OrderFreqInterval,
        //用法
        OrderInstr: ParamObj.OrderInstr,
        OrderInstrRowid: ParamObj.OrderInstrRowid,
        //疗程
        OrderDur: ParamObj.OrderDur,
        OrderDurRowid: ParamObj.OrderDurRowid,
        OrderDurFactor: ParamObj.OrderDurFactor,

        OrderConFac: ParamObj.OrderConFac,
        OrderPHForm: ParamObj.OrderPHForm,
        OrderPHPrescType: ParamObj.OrderPHPrescType,
        OrderDrugFormRowid: ParamObj.OrderDrugFormRowid,
        //数量
        OrderPackQty: ParamObj.OrderPackQty,
        OrderPackUOM: ParamObj.OrderPackUOM,
        OrderPackUOMRowid: ParamObj.OrderPackUOMRowid,
        SpecOrderPackUOMRowid:ParamObj.SpecOrderPackUOMRowid,
        //附加说明
        OrderPriorRemarks: ParamObj.OrderPriorRemarks,
        OrderPriorRemarksRowId: ParamObj.OrderPriorRemarksRowId,
        //价格
        OrderPrice: ParamObj.OrderPrice,
        //金额
        OrderSum: ParamObj.Sum,
        //医嘱分类
        OrderType: ParamObj.OrderType,
        //费别
        OrderBillType: ParamObj.OrderBillType,
        OrderBillTypeRowid: ParamObj.OrderBillTypeRowid,
        OrderStartDate: ParamObj.OrderStartDate,
        OrderBaseQty: ParamObj.OrderBaseQty,
        OrderARCOSRowid: ParamObj.OrderARCOSRowid,
        OrderMaxDurFactor: ParamObj.OrderMaxDurFactor,
        OrderMaxQty: ParamObj.OrderMaxQty,
        OrderBaseQtySum: ParamObj.Qty,
        OrderFile1: ParamObj.OrderFile1,
        OrderFile2: ParamObj.OrderFile2,
        OrderFile3: ParamObj.OrderFile3,
        OrderLabExCode: ParamObj.OrderLabExCode,
        OrderAlertStockQty: ParamObj.OrderAlertStockQty,
        OrderPoisonCode: ParamObj.OrderPoisonCode,
        OrderPoisonRowid: ParamObj.OrderPoisonRowid,
        // 皮试标志 
        OrderSkinTest: ParamObj.needskintest,
        //皮试原液
        skintestyy: ParamObj.skintestyy,
        // 皮试备注
        OrderActionRowid: ParamObj.OrderActionRowid,
        OrderAction: ParamObj.OrderAction,
        //加急
        Urgent: ParamObj.Urgent,
        //医保
        OrderCoverMainIns: ParamObj.InsurCheck,
        OrderHiddenPara: ParamObj.OrderHiddenPara,
        OrderGenericName: ParamObj.OrderGenericName,
        LinkedMasterOrderRowid: ParamObj.LinkedMasterOrderRowid,
        LinkedMasterOrderSeqNo: ParamObj.LinkedMasterOrderSeqNo,
        OrderNeedPIVAFlag: ParamObj.OrderNeedPIVAFlag,
        //****************抗生素9********上一行添加一个,************************/
        OrderAntibApplyRowid: ParamObj.OrderAntibApplyRowid,
        UserReasonId: ParamObj.UserReasonId,
        SpecialAction: ParamObj.SpecialAction, //update by shp 20150714
        OrderPackUOMStr: cspRunServerMethod(GlobalObj.GetBillUOMStrMethod, ParamObj.icode, ParamObj.OrderRecDepRowid, "OrderEntry")
            //************************************************/
    });


    return dataObj;
}

/*******************************************
*ChangeRowStyle(rowid,StyleConfigObj)
*说明：2014-08-15  彭春桥

*添加行的样式控制 改变单元格编辑状态  
*只控制是否可编辑  不控制内容
*对于行样式的控制都保存到 StyleConfigStr 字段
*value=false:不可编辑  
*value=true :可以编辑
*
********************************************/
function ChangeRowStyle(rowid, StyleConfigObj) {
    if ($.isNumeric(rowid) == true) {

    }
    //New
    for (var key in StyleConfigObj) {
        var name = key;
        var value = StyleConfigObj[key];
        if (value == undefined) { continue; }
        //$.messager.alert("警告",name+":"+value);
        //设置单元格不可编辑
        if ($.isNumeric(rowid) == true) {
            if (value == false) {

                //false:不可编辑 
                //添加class:disable
                $("#" + rowid + "_" + name).addClass("disable");
                $("#" + rowid + "_" + name).attr('disabled', true);
            } else if (value == true) {
                //改变为可编辑
                $("#" + rowid + "_" + name).removeClass("disable");
                $("#" + rowid + "_" + name).attr('disabled', false);
            }
        } else {
            //$.messager.alert("警告",name+":"+value);
            if (value == false) {
                $("#" + name).attr('disabled', true);
            } else if (value == true) {
                $("#" + name).attr('disabled', false);
            }
        }
    }
    /* //Old
    for(var key in StyleConfigObj){
    	var name=key;
    	var value=StyleConfigObj[key];
    	if(value==undefined){continue;}
    	//$.messager.alert("警告",name+":"+value);
    	//设置单元格不可编辑
    	if($.isNumeric(rowid)==true){
    		//false:不可以编辑
    		if(value==false){
    			//$.messager.alert("警告",name+"^"+value);
    			//改成设置 disabled
    			$("#"+rowid+"_"+name).addClass("disable");
    			$("#"+rowid+"_"+name).attr('disabled',true);
    			$("#"+rowid+"_"+name).val("");
    			$("#Order_DataGrid").setCell(rowid,name+"Rowid","","","",true);
    		}else if(value == true){
    			//可编辑
    			$("#"+rowid+"_"+name).removeClass("disable");
    			$("#"+rowid+"_"+name).attr('disabled',false);
    		}else{
    			//不可编辑  但是有显示值
    			$("#"+rowid+"_"+name).addClass("disable");
    			$("#"+rowid+"_"+name).attr('disabled',true);
    			$("#"+rowid+"_"+name).val(value);		
    		}
    	}else{
    		if(value==false){
    			$("#"+name).attr('disabled',true);
    		}else if(value == true){
    			//可编辑
    			$("#"+name).removeClass("disable");
    			$("#"+name).attr('disabled',false);
    		}else if(value != false && value != true){
    			$("#"+rowid+"_"+name).addClass("disable");
    			$("#"+name).attr('disabled',true);
    			$("#"+name).val(value);
    		}
    	}		
    }
    */
    //保存配置对象字符到行
    var oldStyleConfigStr = GetCellData(rowid, "StyleConfigStr");
    if (oldStyleConfigStr != "") {
        var oldStyleConfigobj = eval("(" + oldStyleConfigStr + ")");
        //继承
        $.extend(oldStyleConfigobj, StyleConfigObj);
        var StyleConfigStr = JSON.stringify(oldStyleConfigobj);
        SetCellData(rowid, "StyleConfigStr", StyleConfigStr);
    } else {
        var StyleConfigStr = JSON.stringify(StyleConfigObj);
        SetCellData(rowid, "StyleConfigStr", StyleConfigStr);
    }
}
/**********************************************
 *ChangeCellDisable(rowid,StyleConfigObj)
 *说明：2014-08-15
 *设置单元格是否可操作 不对内容有操作 
 *StyleConfigObj={OrderFreq:true}
 *RowDisableStr 该字段只用于存储关联控制中的样式
 *行事件不改变该字段 使用ChangeRowStyle(rowid,StyleConfigObj)
 ***********************************************/
function ChangeCellDisable(rowid, StyleConfigObj) {
    if ($.isNumeric(rowid) == true) {}
    for (var key in StyleConfigObj) {
        var name = key;
        var value = StyleConfigObj[key];
        if (value == undefined) { continue; }
        //$.messager.alert("警告",name+":"+value);
        //设置单元格不可编辑
        if ($.isNumeric(rowid) == true) {
            //false:不可以编辑
            if (value == false) {
                //改成设置 disabled  2014-05-21
                $("#" + rowid + "_" + name).attr('disabled', true);
                $("#" + rowid + "_" + name).addClass("disable");
            } else if (value == true) {
                //可编辑
                $("#" + rowid + "_" + name).attr('disabled', false);
                $("#" + rowid + "_" + name).removeClass("disable");
            }
        } else {
            if (value == false) {
                $("#" + name).attr('disabled', true);
            } else if (value == true) {
                $("#" + name).attr('disabled', false);
            }
        }
    }
    //保存配置对象字符到行
    var oldRowDisableStr = GetCellData(rowid, "RowDisableStr");
    if (oldRowDisableStr != "") {
        var oldStyleConfigobj = eval("(" + oldRowDisableStr + ")");
        //继承
        $.extend(oldStyleConfigobj, StyleConfigObj);
        var StyleConfigStr = JSON.stringify(oldStyleConfigobj);
        SetCellData(rowid, "RowDisableStr", StyleConfigStr);
    } else {
        var StyleConfigStr = JSON.stringify(StyleConfigObj);
        SetCellData(rowid, "RowDisableStr", StyleConfigStr);
    }
}
//设置下拉列表值
function ClearAllList(obj) {
    for (var i = obj.options.length - 1; i >= 0; i--) obj.options[i] = null;
}
//000000
function SetColumnList(rowid, ColumnName, str) {
    //ppppppp
    var Id = "";
    if ($.isNumeric(rowid) == true) {
        var Id = rowid + "_" + ColumnName;
    } else {
        var Id = ColumnName;
    }
    if (typeof str == "undefined") { return }
    var obj = document.getElementById(Id);
    if ((obj) && (obj.type == "select-one")) {
        ClearAllList(obj);
        if (ColumnName == "OrderRecDep") {
            var DefaultRecLocRowid = "";
            var DefaultRecLocDesc = "";
            var ArrData = str.split(String.fromCharCode(2));
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                if (((ArrData1[2] == "Y") && (DefaultRecLocRowid == "")) || (ArrData.length == 1)) {
                    var DefaultRecLocRowid = ArrData1[0];
                    var DefaultRecLocDesc = ArrData1[1];
                }
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
            SetCellData(rowid, "OrderRecDep", DefaultRecLocRowid);
            SetCellData(rowid, "OrderRecDepRowid", DefaultRecLocRowid);
            SetCellData(rowid, "CurrentRecLocStr", str);
        }
        if (ColumnName == "OrderDoseUOM") {

            var DefaultDoseQty = "";
            var DefaultDoseQtyUOM = ""
            var DefaultDoseUOMRowid = "";
            if (str != "") {

                var ArrData = str.split(String.fromCharCode(2));
                for (var i = 0; i < ArrData.length; i++) {
                    var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                    obj.options[obj.length] = new Option(ArrData1[1], ArrData1[2]);
                    if (i == 0) {
                        var DefaultDoseQty = ArrData1[0];
                        var DefaultDoseQtyUOM = RowidData = ArrData1[1];
                        var DefaultDoseUOMRowid = RowidData = ArrData1[2];
                    }
                }
            }
            SetCellData(rowid, "OrderDoseQty", DefaultDoseQty);
            SetCellData(rowid, "OrderDoseUOM", DefaultDoseUOMRowid);
            SetCellData(rowid, "OrderDoseUOMRowid", DefaultDoseUOMRowid);
            SetCellData(rowid, "idoseqtystr", str);
        }
        if (ColumnName == "OrderLabSpec") {
            var DefaultSpecRowid = "";
            var DefaultSpecDesc = "";
            var ArrData = str.split(String.fromCharCode(2));
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(3));
                if ((ArrData1[4] == "Y") || (ArrData.length == 1)) {
                    var DefaultSpecRowid = ArrData1[0];
                    var DefaultSpecDesc = ArrData1[1];
                }
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
            SetCellData(rowid, "OrderLabSpec", DefaultSpecRowid);
            SetCellData(rowid, "OrderLabSpecRowid", DefaultSpecRowid);
            SetCellData(rowid, "OrderLabSpecStr", str);
        }
        if (ColumnName == "OrderDIACat") {
            var DefaultDIACatRowId = "";
            var DefaultDIACatDesc = "";
            //$.messager.alert("警告",str);
            var ArrData = str.split(String.fromCharCode(2));
            obj.options[obj.length] = new Option("", "");
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                /*
                if (i==0) {
                	 var DefaultRecLocRowid=ArrData1[0];
                	 var DefaultRecLocDesc=ArrData1[1];
                }
                */
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
            SetCellData(rowid, "OrderDIACat", DefaultDIACatRowId);
            SetCellData(rowid, "OrderDIACatRowId", DefaultDIACatRowId);
            SetCellData(rowid, "idiagnoscatstr", str)
        }
        //身体部位
        if (ColumnName == "OrderBodyPart") {
            var ArrData = str.split(String.fromCharCode(2));
            obj.options[obj.length] = new Option("", "");
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                obj.options[obj.length] = new Option(ArrData1[2], ArrData1[2]);
            }
        }
        //医嘱类型
        if (ColumnName == "OrderPrior") {
            var ArrData = str.split(";");
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(":");
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
        }
        //临床药理
        if (ColumnName == "OrderPilotPro") {
            var DefaultPilotProRowid = "";
            var DefaultPilotProDesc = "";

            var ArrData = str.split(String.fromCharCode(2));
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                if (ArrData1[2] == "Y") {
                    var DefaultPilotProRowid = ArrData1[0];
                    var DefaultPilotProDesc = ArrData1[1];
                }
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
            if (DefaultPilotProRowid != "") {
                SetCellData(rowid, "OrderPilotProRowid", DefaultPilotProRowid);
                SetCellData(rowid, "OrderPilotPro", DefaultPilotProRowid);
            }
        }
        //协议单位
        if (ColumnName == "OrderPackUOM") {
            var DefaultOrderPackUOM = "";
            var DefaultOrderPackUOMDesc = "";
            var ArrData = str.split(String.fromCharCode(2));
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                if (ArrData1[2] == "Y") {
                    var DefaultOrderPackUOM = ArrData1[0];
                    var DefaultOrderPackUOMDesc = ArrData1[1];
                }
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
            if (DefaultOrderPackUOM != "") {

                SetCellData(rowid, "OrderPackUOMRowid", DefaultOrderPackUOM);
                SetCellData(rowid, "OrderPackUOM", DefaultOrderPackUOM);
            }
        }
        //医保分类
        if (ColumnName == "OrderInsurCat") {
            var ArrData = str.split(String.fromCharCode(2));
            obj.options[obj.length] = new Option("", "");
            for (var i = 0; i < ArrData.length; i++) {
                var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                obj.options[obj.length] = new Option(ArrData1[1], ArrData1[0]);
            }
        }
    }
}

function GetRecLocStrByPrior(str, PriorRowId) {
    //只查出定义了医嘱类型的接受科室?A否则查出全部
    var Find = 0;
    var arr = new Array();
    var ArrData = str.split(String.fromCharCode(2));
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(String.fromCharCode(1));
        if (ArrData1[3] == PriorRowId) {
            Find = 1
        }
    }
    //$.messager.alert("警告","Find:"+Find+" str:"+str+" PriorRowId:"+PriorRowId);
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(String.fromCharCode(1));
        if (ArrData1[3] == "") {
            if (Find == 0) arr[arr.length] = ArrData[i];
        } else {
            if (ArrData1[3] == PriorRowId) {
                arr[arr.length] = ArrData[i];
            }
        }
    }
    return arr.join(String.fromCharCode(2));
}

function GetPrescBillTypeID() {
    //添加影藏 input 存入 PrescBillTypeID
    var obj_PrescBillTypeID = document.getElementById('PrescBillTypeID');
    if (obj_PrescBillTypeID) { return obj_PrescBillTypeID.value; } else { return ""; }
}

function GetSessionStr() {
    var Str = "";
    Str = session['LOGON.USERID'];
    Str += "^" + session['LOGON.GROUPID'];
    Str += "^" + session['LOGON.CTLOCID'];
    Str += "^" + session['LOGON.HOSPID'];
    Str += "^" + session['LOGON.WARDID'];
    Str += "^" + session['LOGON.LANGID'];
    return Str;
}

function mPiece(s1, sep, n) {
    //Getting wanted piece, passing (string,separator,piece number)
    //First piece starts from 0
    //Split the array with the passed delimeter
    delimArray = s1.split(sep);
    //If out of range, return a blank string
    if ((n <= delimArray.length - 1) && (n >= 0)) return delimArray[n];
}

function CheckItemInsurLimit(iinsurinfo) {
    if (GlobalObj.HospitalCode == "SDWFYY") return true;
    var TempPlist = iinsurinfo.split(String.fromCharCode(1));
    var InsurAdmFlag = TempPlist[0];
    var DiagnosCatArcimPass = TempPlist[1];
    //var PreOrderDate=TempPlist[2];
    var PreOrderDateStr = TempPlist[2];
    var PreOrderDate = PreOrderDateStr.split(String.fromCharCode(3))[0]
    var PreOrderIntervalDur = PreOrderDateStr.split(String.fromCharCode(3))[1]
    var IsADMInsTypeDCArcim = TempPlist[3];
    if ((InsurAdmFlag == "1") && (GlobalObj.PAAdmType == "I")) {
        dhcsys_alert(t['InsurLimitOP']);
        return true;
    }
    if ((InsurAdmFlag == "2") && (GlobalObj.PAAdmType == "I")) {
        dhcsys_alert(t['InsurLimit']);
        return true;
    }
    if ((DiagnosCatArcimPass == "0") && (GlobalObj.PAAdmType != "I")) {
        dhcsys_alert(t['DiagnosCatArcimAllow']);
        return false;
    }

    if ((PreOrderDate != "") && (GlobalObj.PAAdmType == "O")) {
        dhcsys_alert(PreOrderDate + t['InPreOrderDuration'] + PreOrderIntervalDur + "天");
        //if (GlobalObj.HospitalCode=="HF") return false;
        return false;
    }

    if (IsADMInsTypeDCArcim == "1") {
        dhcsys_alert(t['IsADMInsTypeDCArcim']);
        return false;
    }
    return true;
}

function CheckItemInsur_ZJQZRMYY(ParamObj, OutObj, Row) {
    ///因为可能存在着自费病人住院或出院更改为医保病人的情况?A因此默认为医保
    OutObj.InsurCheck = false;

    return OutObj;
}

function CheckItemInsur_SDWFYY(ParamObj, OutObj, Row) {
    var idesc = ParamObj.idesc;
    var OrderBillTypeRowid = ParamObj.OrderBillTypeRowid;
    var OrderType = ParamObj.OrderType;

    //潍坊的检验项目要求自费病人下医保的检验项目的时候给医生提示
    if (GlobalObj.PAAdmType == "I") {
        var LabDescFlag = (idesc.indexOf("医保"));
        if ((LabDescFlag != "-1") & (OrderBillTypeRowid == "1") & (OrderType == "L")) {
            var LabDescCheck = dhcsys_confirm(t['OrderOnlyForInsurAdm'], false);
            if (LabDescCheck == false) { return false; }
        }
    }
    OutObj = CheckItemInsur_SZZYY(ParamObj, OutObj, Row);
    OutObj = LevelInsurCat(ParamObj, OutObj, Row);

    return OutObj;
}

function CheckItemInsur_SZZYY(ParamObj, OutObj, Row) {
    var icode = ParamObj.icode;
    var OrderBillTypeRowid = ParamObj.OrderBillTypeRowid;
    var Price = ParamObj.OrderPrice;

    if (GlobalObj.ArcimLinkInsuSelfMethod) {
        var YbTarFlag = cspRunServerMethod(GlobalObj.ArcimLinkInsuSelfMethod, icode, OrderBillTypeRowid);
        //深圳中医院的处理为什么要这样写死billtypeid,先注释
        //if ((YbTarFlag!="")&&(YbTarFlag!="-1")&&(YbTarFlag!="-2")&&(BillTypeID=="1")&&(Price!=0)){
        if ((YbTarFlag != "") && (YbTarFlag != "-1") && (YbTarFlag != "-2") && (Price != 0)) {
            var str1 = YbTarFlag.split("^");
            var str2 = t['OrderIncludeSelfpay'] + '\n';
            for (i = 0; i < str1.length; i++) {
                var strcode = str1[i].split(String.fromCharCode(1))[0];
                var strdesc = str1[i].split(String.fromCharCode(1))[1];
                str2 = str2 + strcode + ". " + strdesc + '\n'
            }
            var ret = dhcsys_confirm(str2);
            //if (ret==false) return false;
            var InsurCheck = (!ret);
            OutObj.InsurCheck = InsurCheck;
        }
    }
    if (GlobalObj.HospitalCode == "SZZYY") OutObj = LevelInsurCat(ParamObj, OutObj, Row);

    return OutObj;
}
//医保下级分类
function LevelInsurCat(ParamObj, OutObj, Row) {
    var icode = ParamObj.icode;
    var OrderBillTypeRowid = ParamObj.OrderBillTypeRowid;

    ////深圳中医院?A医保下级分类
    var OrderInsurCatRowId = "";
    var OrderInsurCat = "";
    if (PAAdmType == "I") {
        if (GlobalObj.GetArcimLinkTarStrMethod) {
            var OrderInsurCatStr = cspRunServerMethod(GlobalObj.GetArcimLinkTarStrMethod, icode, OrderBillTypeRowid);
            if ((OrderInsurCatStr != "") && (OrderInsurCatStr != "-3") && (OrderInsurCatStr != "-2")) {
                var ret = window.showModalDialog("websys.default.csp?WEBSYS.TCOMPONENT=DHCArcimLinkTarStr&ArcimRowid=" + icode + "&AdmReason=" + OrderBillTypeRowid + "&Row=" + Row, "", "dialogwidth:50;dialogheight:30;status:no;center:1;resizable:yes");
                //var ret=window.showModalDialog("websys.default.csp?WEBSYS.TCOMPONENT=DHCArcimLinkTarStr&ArcimRowid="+icode+"&AdmReason="+"2"+"&Row="+Row,"","dialogwidth:50em;dialogheight:30em;status:no;center:1;resizable:yes");
                if (ret == null) {
                    var OrderInsurCatRowId = "";
                    var OrderInsurCat = "";
                } else {
                    var OrderInsurCatRowId = mPiece(ret, "^", 0);
                    var OrderInsurCat = mPiece(ret, "^", 1);
                    var OrderInsurNote = mPiece(ret, "^", 2);
                    if (OrderInsurNote != '') {
                        var JY = '';
                        var NewOrderName = mPiece(idesc, "%", 1);
                        var JYStr = mPiece(idesc, "%", 0);
                        var reg = /^\+?[0-9]*[0-9][0-9]*$/;
                        var sum = "0"
                        for (i = 0; i < JYStr.length; i++) {
                            var tempChar = JYStr.substring(i, i + 1);
                            if (tempChar.match(reg) && (sum != 1)) {
                                var JY = JYStr.substring(0, i);
                                sum = 1;
                            }
                        }
                        var idesc = JY + OrderInsurNote + NewOrderName;
                        $.extend(OutObj, { idesc: idesc, OrderInsurCatRowId: OrderInsurCatRowId, OrderInsurCat: OrderInsurCat });
                    }
                }
            }
        }
    }
    return OutObj
}

function CheckItemInsur_NXYXYFSYY(ParamObj, OutObj, Row) {
    var iinsurinfo = ParamObj.iinsurinfo;
    var OrderType = ParamObj.OrderType;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    var icode = ParamObj.icode;
    var OrderBillTypeRowid = ParamObj.OrderBillTypeRowid;

    //因为医保串里新增了$C(2)的分割符,所以取值要先处理一下
    var iinsurinfo1 = mPiece(iinsurinfo, String.fromCharCode(2), 0);
    var limitFlag = mPiece(iinsurinfo1, String.fromCharCode(1), 4);
    var InsurAdmAllowFlag = mPiece(iinsurinfo1, String.fromCharCode(1), 5);
    var InsurFlag = mPiece(iinsurinfo1, String.fromCharCode(1), 6);
    ////宁医附院?A医保适应症
    var OrderInsurSignSymptomCode = "";
    var OrderInsurSignSymptom = "";
    ///药品,医保费别标志,住院,非自备药
    if ((OrderType == "R") && (InsurFlag != 0) && (GlobalObj.PAAdmType == "I") && (OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
        if (GlobalObj.GetArcimInsurDSYMMethod) {
            var InsurSignSymptom = "";
            var OrderInsurDiagnosStr = cspRunServerMethod(GlobalObj.GetArcimInsurDSYMMethod, icode, OrderBillTypeRowid);
            if ((OrderInsurDiagnosStr != "") && (OrderInsurDiagnosStr != -1)) {

                var OrderInsurSignSymptomCode = FindInsurSignSymptom(OrderInsurDiagnosStr, Row);

                if (OrderInsurSignSymptomCode == "") {
                    var url = "websys.default.csp?WEBSYS.TCOMPONENT=DHCDocArcimLinkInsurSignSymptom&ARCIMID=" + icode + "&BillType=" + OrderBillTypeRowid;
                    var ret = window.showModalDialog(url, "适应症选择", "dialogwidth:30em;dialogheight:30em;status:no;center:1;resizable:yes");
                    if (ret == null) {
                        OrderInsurSignSymptomCode = "";
                        OrderInsurSignSymptom = "";
                    } else {
                        OrderInsurSignSymptom = mPiece(ret, String.fromCharCode(1), 1);
                        OrderInsurSignSymptomCode = mPiece(ret, String.fromCharCode(1), 0);
                    }
                } else {
                    if (GlobalObj.GetSignSymptomMethod) {
                        var OrderInsurSignSymptom = cspRunServerMethod(GlobalObj.GetSignSymptomMethod, OrderInsurSignSymptomCode);
                    }
                }
                $.extend(OutObj, { OrderInsurSignSymptomCode: OrderInsurSignSymptomCode, OrderInsurSignSymptom: OrderInsurSignSymptom })
            }
        }
    }
    return OutObj
}
//暂时未修改  不知道干嘛的
function FindInsurSignSymptom(InsurSignSymptomStr, CurrRow) {
    var SelectedInsurSignSymptomStr = "";
    if (EPDSYMCodeStr != "") { SelectedInsurSignSymptomStr = String.fromCharCode(2) + EPDSYMCodeStr + String.fromCharCode(2) }
    /*
    var objtbl=document.getElementById('tUDHCOEOrder_List_Custom');
    var rows=objtbl.rows.length;
    for (var i=1; i<rows; i++){
    	var Row=GetRow(i);
    	var OrderItemRowid=GetCellData("OrderItemRowid",Row);
    	var OrderARCIMRowid=GetCellData("OrderARCIMRowid",Row);
    	var OrderInsurSignSymptomCode=GetCellData("OrderInsurSignSymptomCode",Row);
    	if ((OrderARCIMRowid!="")&&(OrderItemRowid=="")&&(OrderInsurSignSymptomCode!="")&&(Row!=CurrRow)){
    		if (SelectedInsurSignSymptomStr!=""){
    			var CodeArr=OrderInsurSignSymptomCode.split(String.fromCharCode(2));
    			for (var j=0;j<CodeArr.length;j++) {
    				var Code="^"+CodeArr[j]+"^";
    				if (SelectedInsurSignSymptomStr.indexOf(Code)==-1){
    					SelectedInsurSignSymptomStr=SelectedInsurSignSymptomStr+CodeArr[j]+"^";
    				}
    			}
    		}else{
    			SelectedInsurSignSymptomStr="^"+OrderInsurSignSymptomCode+"^";
    		}
    	}
    }
    */
    if (SelectedInsurSignSymptomStr != "") {
        var ary = InsurSignSymptomStr.split("^");
        for (i = 0; i < ary.length; i++) {
            var Code = "^" + ary[i] + "^";
            if (SelectedInsurSignSymptomStr.indexOf(Code) != -1) {
                return ary[i];
            }
        }
    }
    return "";
}
//北京地区医保适应症提示
function CheckItemInsur_BJ(ParamObj, OutObj, Row) {
    var iinsurinfo = ParamObj.iinsurinfo;
    var InsurAlertStr = mPiece(iinsurinfo, String.fromCharCode(2), 1);
    if (InsurAlertStr == "") {} else if (InsurAlertStr == "-1") {} else if (InsurAlertStr == "-2") {} else if (InsurAlertStr == "-3") {} else {
        OutObj.InsurCheck = true;
        var Itemtemp = InsurAlertStr.split("!");
        if (Itemtemp.length == 1) {
            var Item = Itemtemp[0].split(String.fromCharCode(1));
            var TarConCode = Item[0];
            var TarConDesc = Item[1];
            var Contype = Item[2];
            var bz = Item[3];
            //因为中医院有医保防火墙,中医院要求不要此提示,由大夫自己判断是否开到医保处方中,将提示信息取值修改
            //if (HospitalCode!='BJZYY') InsurCheck=window.dhcsys_confirm(t['Insu_Ind1']+bz+t['Insu_Ind2']);
            if (GlobalObj.HospitalCode != 'BJZYY') OutObj.InsurCheck = window.dhcsys_confirm(t['InsurSYMMMessage1'] + bz + t['InsurSYMMMessage2']);
        }
        if (Itemtemp.length > 1) {
            var obj = new Object();
            obj.name = "Para";
            obj.value = InsurAlertStr + "&" + Row;
            var url = "websys.default.csp?WEBSYS.TCOMPONENT=DHCDocIndicationsChoose";
            //原来是将InsuConType放到OrderHiddenPara中第4位?A其实应该赋值到OrderInsurCatRowId隐藏列中
            //var InsuConType=window.showModalDialog(url,obj,"dialogwidth:50em;dialogheight:30em;status:yes;center:1;resizable:yes")
            var OrderInsurCatRowId = window.showModalDialog(url, obj, "dialogwidth:50em;dialogheight:30em;status:yes;center:1;resizable:yes")
            $.extend(OutObj, { OrderInsurCatRowId: OrderInsurCatRowId });
        }
    }
    return OutObj.InsurCheck;
}

function CheckItemInsur(ParamObj, Row) {
    //入参使用变量定义
    var iinsurinfo = ParamObj.iinsurinfo;
    var icode = ParamObj.icode;
    var idesc = ParamObj.idesc;
    var OrderBillTypeRowid = ParamObj.OrderBillTypeRowid;
    var OrderType = ParamObj.OrderType;
    var Price = ParamObj.OrderPrice;
    var OrderPriorRowid = ParamObj.OrderPriorRowid;
    //出参定义
    var OutObj = { InsurCheck: true };

    //因为医保串里新增了$C(2)的分割符,所以取值要先处理一下
    var iinsurinfo1 = mPiece(iinsurinfo, String.fromCharCode(2), 0);
    var limitFlag = mPiece(iinsurinfo1, String.fromCharCode(1), 4);
    var InsurAdmAllowFlag = mPiece(iinsurinfo1, String.fromCharCode(1), 5);
    var InsurFlag = mPiece(iinsurinfo1, String.fromCharCode(1), 6);
    //CFAllConfirmInsurSYMM决定是否所有类型的病人都判断
    if ((InsurFlag != '0') || (GlobalObj.CFAllConfirmInsurSYMM == 1)) {
        $.extend(ParamObj, { InsurCheck: 'Y' })
            //提示限制用药,适应症提示判断走设置
        if ((limitFlag) && (GlobalObj.CFConfirmInsurSYMM == 1)) {
            OutObj.InsurCheck = dhcsys_confirm(t['InsurSYMMMessage1'] + InsurAdmAllowFlag + t['InsurSYMMMessage2']);
        }
    } else {
        $.extend(ParamObj, { InsurCheck: 'N' })
    }

    var cases = {
        ZJQZRMYY: CheckItemInsur_ZJQZRMYY,
        SDWFYY: CheckItemInsur_SDWFYY,
        SZZYY: CheckItemInsur_SZZYY,
        NXYXYFSYY: CheckItemInsur_NXYXYFSYY,
        YY: CheckItemInsur_BJ,
        BJZYY: CheckItemInsur_BJ,
        BJDTYY: CheckItemInsur_BJ,
        BJFCYY: CheckItemInsur_BJ,
        YKYZLYY: CheckItemInsur_BJ
    }
    if (cases[GlobalObj.HospitalCode]) {
        var Ret = cases[GlobalObj.HospitalCode](ParamObj, OutObj, Row);
        if (Ret == false) return false;
    } else {
        var Ret = CheckItemInsur_BJ(ParamObj, OutObj, Row);
        if (Ret == false) return false;
    }

    return OutObj
}

function SetOrderFirstDayTimes(rowid) {
    var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
    var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    var OrderType = GetCellData(rowid, "OrderType");
    if ((OrderPriorRowid != GlobalObj.LongOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid)) {
        SetCellData(rowid, "OrderFirstDayTimes", "")
        return;
    }

    var OrderFreqRowid = GetCellData(rowid, "OrderFreqRowid");
    if (((OrderType == 'R') || (OrderPHPrescType == '4')||((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "undefined") && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != ""))) && (OrderFreqRowid != "")) {
        if (GlobalObj.GetTodayDispTimesMethod != '') {
            var OrderStartDate = GetCellData(rowid, "OrderStartDate");
            var OrderStartTime = OrderStartDate.split(" ")[1];
            var OrderStartDate = OrderStartDate.split(" ")[0];
            var OrderFirstDayTimes = cspRunServerMethod(GlobalObj.GetTodayDispTimesMethod, OrderFreqRowid, OrderStartTime, OrderStartDate);
            if (OrderFirstDayTimes == '0') { OrderFirstDayTimes = 0; }
            SetCellData(rowid, "OrderFirstDayTimes", OrderFirstDayTimes);
            //OrderFirstDayTimesChangeCommon(Row);	
        }
    } else {
        SetCellData(rowid, "OrderFirstDayTimes", 1);
    }
}
//医嘱复制
function FindClickHandler(e) {
    if (EpisodeID) {
        var sttdate = "";
        var enddate = "";
        var prior = "";
        if (GlobalObj.PAAdmType == "I") {
            var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
            var CurrDateTimeArr = CurrDateTime.split("^");
            sttdate = CurrDateTimeArr[0];
            enddate = CurrDateTimeArr[0];
            var retprior = tkMakeServerCall("web.DHCDocOrderItemList", "GetOrderPrior", "S");
            prior = retprior.split("^")[0];
        } else {
            var retprior = tkMakeServerCall("web.DHCDocOrderItemList", "GetOrderPrior", "NORM");
            prior = retprior.split("^")[0];
        }
        if (GlobalObj.HospitalCode != 'ZJQZRMYY') {
            var posn = "height=" + (screen.availHeight - 40) + ",width=" + (screen.availWidth - 10) + ",top=0,left=0,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes";
        } else {
            var posn = "height=" + (screen.availHeight - 340) + ",width=" + (screen.availWidth - 180) + ",top=0,left=0,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes";
        }
        //var posn='toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,top=0,left=0,top=30,left=20,width=1000,height=500';

        var path = "websys.default.csp?WEBSYS.TCOMPONENT=UDHCOEOrder.Item.List&EpisodeID=" + EpisodeID + "&SttDate=" + sttdate + "&EndDate=" + enddate + "&PriorID=" + prior;
        //$.messager.alert("警告","path="+path);
        websys_createWindow(path, false, posn);
        //return websys_cancel();
    }

}
//检验录入页
function LnkLabPage_Click() {
    var lnk = "dhcdocoeorder.csp";
    //var ret=window.open(lnk,"dhcdocoeorder","dialogwidth:70;dialogheight:60;status:no;center:1;resizable:yes");
    var ret = window.showModalDialog(lnk, "dhcdocoeorder", "dialogwidth:70;dialogheight:60;status:no;center:1;resizable:yes");
    //$.messager.alert("警告",ret);
    PACSArcimFun(ret);
}
//提供给检查选择窗口回调函数
function PACSArcimFun(str) {
    if (str == '') return;
    var strArray = str.split('^');
    if (strArray.length > 0) {
        //删除当前行
        var PreRow = GetPreRowId();
        if (CheckIsClear(PreRow) == true) {
            DeleteRow(PreRow);
            //RebuidRowId(PreRow-1);
        }
    }
    var AddSuss = "N"
        /*
 	for(var i=0;i<strArray.length;i++){
		var Para="";
		var OrderLabSpecRowid="";
		var Arr=strArray[i].split(String.fromCharCode(1))
		var icode=Arr[0];
		if (Arr.length==2) OrderLabSpecRowid=Arr[1];
		
		//获取新增行ID
		var rowid=GetNewrowid();;//Add_Order_row();   KKKKK
		//var ret=AddBCToList(PageLogicObj.FocusRowIndex,icode,Para,""); //??是否要修改
		if($.isNumeric(rowid)==false){
			return;
		}
		//勾选录入试用对象方式添加
		var ret=AddItemToList(rowid,icode,Para,"","","obj");
		if (ret!=false){AddSuss="Y"}
		
		
		/*
		if (OrderLabSpecRowid!="") {
			SetCellData(Row,"OrderLabSpecRowid",OrderLabSpecRowid);
		  SetCellData(Row,"OrderLabSpec",OrderLabSpecRowid);
		}
 	*/
    progressBar = Ext.Msg.show({
        title: "多条医嘱",
        msg: "加载中...",
        progress: true,
        width: 300,
        wait: true,
        modal: true
    });

    var ExistInsertRowFlag=false;
    var ArrLength = strArray.length
    var Count = 0;
    var Task = {
        run: function() {
            if (Count == ArrLength) {
                progressBar.hide();
                Ext.TaskMgr.stop(Task);
                //这句为了解决只有初始一行的情况下复制医嘱没有插入到界面,再次复制可以插入的医嘱列不能对齐的问题
                if ((Count == 1)||(ExistInsertRowFlag==false)) {
                    var rowids = $('#Order_DataGrid').getDataIDs();
                    if (rowids.length == 0) Add_Order_row();
                }
                XHZY_Click();
                SetScreenSum();
            } else {
                //progressBar.updateText("<font color=\"red\">玩命加载中...</font>");
                progressBar.updateText("<font color=\"red\">正在加载第" + (Count + 1) + "条</font>");
                var Para = "";
                var OrderLabSpecRowid = "";
                var Arr = strArray[Count].split(String.fromCharCode(1))
                var icode = Arr[0];
                if (Arr.length == 2) OrderLabSpecRowid = Arr[1];
                //if (rowid==""){
                var rowid = GetNewrowid();
                if ($.isNumeric(rowid) == false) {
                    return;
                }


                //alert(rowid)
                var returnValue = AddItemToList(rowid, icode, Para, "", "", "obj");
                //记录开医嘱套是否都有成功的数据,如果没有则需要增加一行，
                if(returnValue==true){
                    ExistInsertRowFlag=true;
                }
                if (ArrLength == 1) {
                    var progressRate = 1;
                } else {
                    var progressRate = Count / (ArrLength - 1);
                }
                progressBar.updateProgress(progressRate, "已加载" + Math.ceil((progressRate * 100)) + '%');
                var proWindow = progressBar.getDialog();
                proWindow.center();
            }
            Count++;
        },
        interval: 10
    }
    Ext.TaskMgr.start(Task);
    //如果没有增加成功增加一个空行
    //if (AddSuss=="N"){var rowid=Add_Order_row();}
    SetScreenSum();
}
//****************抗生素3********************************/
function BtnShowViewAnditAnti() {
    //$.messager.alert("警告",12)
    //var EpisodeID=document.getElementById("EpisodeID").value;
    var userid = session['LOGON.USERID'];
    //$.messager.alert("警告",23)
    var antMainUrlnew = "dhcantauditinfo.csp?&EpisodeID=" + GlobalObj.EpisodeID + "&userid=" + userid;
    var antMainret = window.showModalDialog(antMainUrlnew, "", "dialogwidth:620px;dialogheight:420px;status:no;center:1;resizable:yes");
    if ((antMainret != "") && (antMainret != undefined)) {
        //var Copyary = new Array();
        //Copyary[Copyary.length] = antMainret;
        //AddCopyItemToList(Copyary);
        var antArr=antMainret.split(',')
        AddCopyItemToList(antArr);
    }
}
//查看，模糊查询医嘱项目
function BtnViewArcItemInfoHandler() {
    //if (PageLogicObj.FocusRowIndex<1) return;
    //var Row=GetRow(PageLogicObj.FocusRowIndex);	

    //window.parent.location.href="websys.default.csp?WEBSYS.TCOMPONENT=DHCOPDoc_Phamacy_Detail&PHCId="+f_OrderARCIMRowid;
    //window.showModalDialog("websys.default.csp?WEBSYS.TCOMPONENT=UDHCJFArcimPrice","","dialogwidth:800px;dialogheight:500px;status:no;center:1;resizable:yes");
    var lnk = "websys.default.csp?WEBSYS.TCOMPONENT=UDHCJFArcimPrice1";
    var NewWin = open(lnk, "UDHCJFArcimPrice1", "scrollbars=yes,resizable=yes,top=6,left=6,width=1000,height=680");
}
//诊间预约
function DoctorAppoint_Click() {
    var url = "websys.default.csp?WEBSYS.TCOMPONENT=DHCOPDoc.Appoint&PatientID=" + GlobalObj.PatientID;
    websys_lu(url, true, "status=1,scrollbars=1,top=50,left=10,width=1000,height=900");
}
//卡消费
function CardBillClick() {
    var EpisodeID = GlobalObj.EpisodeID;
    var PatientID = GlobalObj.PatientID
    if (EpisodeID == "") { $.messager.alert("警告", "缺少患者信息"); return; }
    var groupDR = session['LOGON.GROUPID'];
    var mode = tkMakeServerCall("web.udhcOPBillIF", "GetCheckOutMode", groupDR);
    if (mode == 1) {
        //checkOut(cardNO,episodeID,insType,oeoriIDStr,guser,groupDR,locDR,hospDR)
        var cardNO = "";
        var insType = GetPrescBillTypeID();;
        var oeoriIDStr = "";
        var guser = session['LOGON.USERID'];
        var groupDR = session['LOGON.GROUPID'];
        var locDR = session['LOGON.CTLOCID'];
        var hospDR = session['LOGON.HOSPID'];
        var rtn = checkOut(cardNO, PatientID, EpisodeID, insType, oeoriIDStr, guser, groupDR, locDR, hospDR)
        return;
    }

    var CardTypeValue = GlobalObj.CardBillCardTypeValue;
    if (CardTypeValue != "") {
        var temparr = CardTypeValue.split("^");
        var CardTypeRowId = temparr[0];
        var myrtn = DHCACC_GetAccInfo(CardTypeRowId, CardTypeValue);
    } else {
        var myrtn = DHCACC_GetAccInfo();
    }
    myrtn = myrtn.toString()
    var myary = myrtn.split("^");
    var rtn = myary[0];
    var rtnPatientID = myary[4];
    switch (rtn) {
        case "0":
            if (PatientID != rtnPatientID) {
                dhcsys_alert(t['Diff_Patient']);
                return;
            }
            //var lnk="udhcopbillif.csp?PatientIDNo="+myary[5]+"&CardNo="+myary[1];
            //$.messager.alert("警告",EpisodeID+"^"+PatientID+"^"+myary[1]);
            var lnk = "udhcopbillforadmif.csp?CardNo=" + myary[1] + "&SelectAdmRowId=" + EpisodeID + "&SelectPatRowId=" + PatientID;
            var NewWin = open(lnk, "udhcopbillif", "scrollbars=no,resizable=no,top=6,left=6,width=1000,height=680");
            break;
        case "-200":
            dhcsys_alert(t["InvaildCard"]);
            return;
            break;
        case "-201":
            dhcsys_alert(t["AccountNotExist"]);
            return;
            ///var obj=document.getElementById("PatientID");
            ///obj.value=myary[5];
            ///ReadPatInfo();
            break;
        default:
            dhcsys_alert(t["AccountNotExist"]);
    }
}

function OrgFav_Click() {
    //判断是否存在科室权限,有则需要选择维护个人还是科室
    var GroupID = session['LOGON.GROUPID'];
    var MenuName = "System.OEOrder.OrgFav.Save.SetSaveForLocation";
    var ret = cspRunServerMethod(GlobalObj.IsHaveMenuAuthOrderOrgFavMethod, GroupID, MenuName);
    if (ret == 1) {
        $('#OrgFavSelWindow').window({
            title: "常用模版维护选择",
            width: 340,
            height: 160,
            zIndex: 9999,
            //iconCls:'icon-save',
            inline: false,
            minimizable: false,
            maximizable: true,
            collapsible: true,
            closable: true
                //top:35,   
                //left:300,
                //onBeforeClose:function(){//在关闭面板之前触发} 			
        });
        $('#OrgFavSelWindow').window('open');
    } else {
        var lnk = "oeorder.preftabs.editlist.csp?CTLOC=" + GlobalObj.CTLOC + "&XCONTEXT=" + GlobalObj.XCONTEXT + "&EpisodeID=" + GlobalObj.EpisodeID + "&PreftabType=User.SSUser&SaveContextWorkflow=on&CMFlag=";
        var NewWin = open(lnk, "OrgFav", "scrollbars=no,resizable=no,top=6,left=6,width=1000,height=680");
    }
}

function OrgFav_User_Click() {
    $('#OrgFavSelWindow').window('close', true);
    var lnk = "oeorder.preftabs.editlist.csp?CTLOC=" + GlobalObj.CTLOC + "&XCONTEXT=" + GlobalObj.XCONTEXT + "&EpisodeID=" + GlobalObj.EpisodeID + "&PreftabType=User.SSUser";
    var NewWin = open(lnk, "OrgFav", "scrollbars=no,resizable=no,top=6,left=6,width=1000,height=680");
}

function OrgFav_Location_Click() {
    $('#OrgFavSelWindow').window('close', true);
    var lnk = "oeorder.preftabs.editlist.csp?CTLOC=" + GlobalObj.CTLOC + "&XCONTEXT=" + GlobalObj.XCONTEXT + "&EpisodeID=" + GlobalObj.EpisodeID + "&PreftabType=User.CTLoc";
    var NewWin = open(lnk, "OrgFav", "scrollbars=no,resizable=no,top=6,left=6,width=1000,height=680");
}

function CASignUpdate() {
    var caIsPass = 0;
    var ContainerName = "";
    if (GlobalObj.CAInit == 1) {
        if (GlobalObj.IsCAWin == "") {
            $.messager.alert("警告", "请先插入KEY");
            var obj = document.getElementById("Insert_Order_btn");
            obj.disabled = false;
            //obj.onclick=UpdateClickHandler;
            return false;
        }
        /*
		var result = window.showModalDialog("../csp/oeorder.oplistcustom.caaudit.csp", window, "dialogWidth:300px;dialogHeight:250px;center:yes;toolbar=no;menubar:no;scrollbars:no;resizable:no;location:no;status:no;help:no;");
		if ((result=="")||(result=="undefined")||(result==null)) {
	      	var obj=document.getElementById("Insert_Order_btn");
	      	obj.disabled=false;
			//obj.onclick=UpdateClickHandler;
	      	return false;
		}
		*/
        //判断当前key是否是登陆时候的key
        var resultObj = dhcsys_getcacert();
        result = resultObj.ContainerName;
        if ((result == "") || (result == "undefined") || (result == null)) {
            var obj = document.getElementById("Insert_Order_btn");
            obj.disabled = false;
            //obj.onclick=UpdateClickHandler;
            return false;
        }


        ContainerName = result;
        caIsPass = 1;
    }
    return { caIsPass: caIsPass, ContainerName: ContainerName }
}

function CheckBeforeSaveToServer(OrderItemStr, ExpStr) {
    var UserAddRowid = session['LOGON.USERID'];
    var UserAddDepRowid = session['LOGON.CTLOCID'];
    var DoctorRowid = GetEntryDoctorId();
    var ret = cspRunServerMethod(GlobalObj.CheckBeforeSaveMethod, EpisodeID, OrderItemStr, UserAddRowid, UserAddDepRowid, DoctorRowid, ExpStr,1)
    if (ret == "" || !ret) return true;
    var retFlag = mPiece(ret, '^', 0);
    if (retFlag != "0") {
        var ErrMsg = mPiece(ret, '^', 1);
        $.messager.alert("提示信息", "未审核成功,请确认:" + ErrMsg);
        return false;
    } else {
        var IsNeedDischgCondFlag = mPiece(ret, '^', 2);
        if (IsNeedDischgCondFlag == "1") {
            var result = window.showModalDialog("../csp/dhcdoc.dischargecondition.csp", window, "dialogWidth:300px;dialogHeight:150px;center:yes;toolbar=no;menubar:no;scrollbars:no;resizable:no;location:no;status:no;help:no;");
            if ((result == "") || (result == "undefined")) {
                $.messager.alert("提示信息", "请选择出院条件");
                return false;
            } else if (result == null) {
                return false;
            } else {
                GlobalObj.DischargeConditionRowId = result;
            }
        }
        var IsDeathFlag = mPiece(ret, '^', 3);
        if (IsDeathFlag == "1") {
            var result = window.showModalDialog("../csp/dhcdoc.deathdatetime.csp", window, "dialogWidth:300px;dialogHeight:250px;center:yes;toolbar=no;menubar:no;scrollbars:no;resizable:no;location:no;status:no;help:no;");
            if ((result == "") || (result == "undefined")) {
                $.messager.alert("提示信息", "请填写死亡日期和时间");
                return false;
            } else if (result == null) {
                return false;
            } else {
                GlobalObj.DeceasedDateTimeStr = result;
            }
        }
    }

    return true;
}

function UpdateClickHandler() {
    SetTimeLog("UpdateClickHandler", "start");
    var SUCCESS = false;
    var obj = document.getElementById("Insert_Order_btn");
    if (obj) {
        $(obj).bind("click", function() { return false })
        obj.disabled = true;
    }
    var ConflictItemsInfo = "";
    var UnSaveARCIMRowidStr = "";

    var ret = CheckBeforeUpdate();
    if (ret == false) {
        obj.disabled = false;
        //obj.onclick=UpdateClickHandler;
        return websys_cancel();
    } else {
        var RetObj = ret;
        ConflictItemsInfo = RetObj.ConflictItemsInfo;
        UnSaveARCIMRowidStr = RetObj.UnSaveARCIMRowidStr;
    }
    //医保用药控制
    /*if (!CheckInsuCostControl()){
    	return false
    }*/
    var StopConflictFlag = "0";
    if (ConflictItemsInfo != "") {
        var StopConflictItems = dhcsys_confirm("存在以下互斥医嘱：" + ConflictItemsInfo + " " + "请确认是否自动停止互斥医嘱");
        if (StopConflictItems) StopConflictFlag = "1";
    }
    //电子签名
    var caIsPass = 0;
    var ContainerName = "";
    var Ret = CASignUpdate();
    if (Ret == false) { return websys_cancel(); } else {
        var CASignObj = Ret;
        caIsPass = CASignObj.caIsPass;
        ContainerName = CASignObj.ContainerName;
    }


    //将合理用药检查结果保存到处方中
    var XHZYRetCode = 0;
    if (GlobalObj.DHCDTInterface == 1) {
        var XHZYRetCode = DaTongXHZYHander();
        if (XHZYRetCode != 0) {
            var PrescCheck = dhcsys_confirm(t['DTQuestion'], true);
            if (PrescCheck == false) {
                obj.disabled = false;
                //obj.onclick=UpdateClickHandler;
                return websys_cancel();
            }
        }
    }

    var OrderItemStr = GetOrderDataOnAdd();
    if (OrderItemStr == "") return websys_cancel();
    var ExpStr = StopConflictFlag + '^' + GlobalObj.DischargeConditionRowId + '^';
    //保存前的后台审核,对于医嘱录入非必须前端处理的判断逻辑可以在此处理
    var ret = CheckBeforeSaveToServer(OrderItemStr, ExpStr);
    if (ret == false) {
        obj.disabled = false;
        return websys_cancel();
    }
    //var ExpStr=StopConflictFlag+'^'+GlobalObj.DischargeConditionRowId+'^';
    var ExpStr = StopConflictFlag + '^' + GlobalObj.DischargeConditionRowId + '^' + GlobalObj.DeceasedDateTimeStr;
	//调用检查申请单申请页面
    var NeedMatchAry=new Array();
	var UpdateOrderItemStr=ApplyReport(OrderItemStr,NeedMatchAry);
	if (UpdateOrderItemStr!="") {
        OrderItemStr=UpdateOrderItemStr;
    }else{
        obj.disabled = false;
        return websys_cancel();
    }
    SetTimeLog("UpdateClickHandler", "调用SaveOrderItems之前");
    if (GlobalObj.DirectSave != "1") {
        if (OrderItemStr != "") {
            //$.messager.alert("警告","审核");
            var OEOrdItemIDs = InsertOrderItem(OrderItemStr, ExpStr);
            //$.messager.alert("警告",OEOrdItemIDs);
            if (OEOrdItemIDs == "0") {
                dhcsys_alert(t['Fail_SaveOrder']);
                return websys_cancel();
            } else {
                SUCCESS = true;
            }
        }
    } else {
        var PinNumberobj = document.getElementById("PinNumber");
        if (PinNumberobj) {
            var PinNumber = PinNumberobj.value;

            if (PinNumber == "") {
                obj.disabled = false;
                dhcsys_alert(t['Input_PinNumber']);
                websys_setfocus('PinNumber');
                return websys_cancel();
            } else {
                var ret = cspRunServerMethod(GlobalObj.PinNumberMethod, session['LOGON.USERID'], PinNumber)
                if (ret == "-4") {
                    obj.disabled = false;
                    dhcsys_alert(t['Wrong_PinNumber']);
                    websys_setfocus('PinNumber');
                    return websys_cancel();
                }
            }
        }
        var OEOrdItemIDs = SaveOrderItems(OrderItemStr, XHZYRetCode, ExpStr);
        //$.messager.alert("警告",OEOrdItemIDs);
        if (OEOrdItemIDs == "100") {
            dhcsys_alert(t['Fail_SaveOrder']);
            return websys_cancel();
        } else {
            SUCCESS = true;
        }
    }
    SetTimeLog("UpdateClickHandler", "调用SaveOrderItems之后");

    if (caIsPass == 1) {
        try {
            //1.批量认证
            var CASignOrdStr = "",
                CASignOrdValStr = "";
            var TempIDs = OEOrdItemIDs.split("^");
            var IDsLen = TempIDs.length;
            for (var k = 0; k < IDsLen; k++) {
                var TempNewOrdDR = TempIDs[k].split("*");
                if (TempNewOrdDR.length < 2) continue;
                var newOrdIdDR = TempNewOrdDR[1];
                if (CASignOrdStr == "") CASignOrdStr = newOrdIdDR;
                else CASignOrdStr = CASignOrdStr + "^" + newOrdIdDR;
            }
            var CASignOrdArr = CASignOrdStr.split("^");
            var SignOrdHashStr = "",
                SignedOrdStr = "";
            for (var count = 0; count < CASignOrdArr.length; count++) {
                var CASignOrdId = CASignOrdArr[count];
                var OEORIItemXMLStr = cspRunServerMethod(GlobalObj.GetOEORIItemXMLMethod, CASignOrdId, "A");
                //$.messager.alert("警告",OEORIItemXMLStr);
                var OEORIItemXMLArr = OEORIItemXMLStr.split(String.fromCharCode(2));
                for (var ordcount = 0; ordcount < OEORIItemXMLArr.length; ordcount++) {
                    if (OEORIItemXMLArr[ordcount] == "") continue;
                    var OEORIItemXML = OEORIItemXMLArr[ordcount].split(String.fromCharCode(1))[1];
                    var OEORIOperationType = OEORIItemXMLArr[ordcount].split(String.fromCharCode(1))[0];
                    //$.messager.alert("警告","OEORIItemXML:"+OEORIItemXML);
                    var OEORIItemXMLHash = HashData(OEORIItemXML);
                    //$.messager.alert("警告","HashOEORIItemXML:"+OEORIItemXMLHash);
                    if (SignOrdHashStr == "") SignOrdHashStr = OEORIItemXMLHash;
                    else SignOrdHashStr = SignOrdHashStr + "&&&&&&&&&&" + OEORIItemXMLHash;
                    //$.messager.alert("警告",ContainerName);
                    var SignedData = SignedOrdData(OEORIItemXMLHash, ContainerName);
                    if (SignedOrdStr == "") SignedOrdStr = SignedData;
                    else SignedOrdStr = SignedOrdStr + "&&&&&&&&&&" + SignedData;
                    if (CASignOrdValStr == "") CASignOrdValStr = OEORIOperationType + String.fromCharCode(1) + CASignOrdId;
                    else CASignOrdValStr = CASignOrdValStr + "^" + OEORIOperationType + String.fromCharCode(1) + CASignOrdId;
                    //AddData(HashOEORIItemXML);
                }
            }
            if (SignOrdHashStr != "") SignOrdHashStr = SignOrdHashStr + "&&&&&&&&&&";
            if (SignedOrdStr != "") SignedOrdStr = SignedOrdStr + "&&&&&&&&&&";
            //$.messager.alert("警告","SignedOrdStr"+SignedOrdStr);
            //$.messager.alert("警告",ContainerName);
            //获取客户端证书
            var varCert = GetSignCert(ContainerName);
            var varCertCode = GetUniqueID(varCert);
            //3.保存签名信息记录
            /*
            $.messager.alert("警告","ContainerName:"+ContainerName)
            $.messager.alert("警告","CASignOrdValStr:"+CASignOrdValStr);
            $.messager.alert("警告","SignOrdHashStr:"+SignOrdHashStr);
            $.messager.alert("警告","varCertCode:"+varCertCode);
            $.messager.alert("警告","SignedData:"+SignedOrdStr);
            */
            if ((CASignOrdValStr != "") && (SignOrdHashStr != "") && (varCert != "") && (SignedOrdStr != "")) {
                var ret = cspRunServerMethod(GlobalObj.InsertCASignInfoMethod, CASignOrdValStr, session['LOGON.USERID'], "A", SignOrdHashStr, varCertCode, SignedOrdStr, "");
                if (ret != "0") $.messager.alert("警告", "数字签名没成功");
            } else {
                $.messager.alert("警告", "数字签名错误");
            }
        } catch (e) { $.messager.alert("警告", e.message); }
    }
    var summflag = document.getElementById("SUMMFlag");
    GlobalObj.UnloadUpdateFlag = true;
	
    //打印申请单
    if (NeedMatchAry.length>0) {
        var ApplyArcIdAllStr="";
        for (var i=0; i<NeedMatchAry.length;i++) {
            var oneApplyArcId=NeedMatchAry[i];
            if (!oneApplyArcId) continue;
            var parentApplyId=oneApplyArcId.split("||")[0];
            if (ApplyArcIdAllStr=="") {ApplyArcIdAllStr=parentApplyId;}
            else{
	            if (("^"+ApplyArcIdAllStr+"^").indexOf("^"+parentApplyId+"^") == -1) {
		            ApplyArcIdAllStr=ApplyArcIdAllStr+'^'+parentApplyId;
		        }
	        }
        }
        if (ApplyArcIdAllStr!="") print(ApplyArcIdAllStr);
    }
    //审核医嘱是否自动弹出一键打印窗口,医生站安全组配置中配置
    if (GlobalObj.OnePrintFlag == 1) {
        BtnPrtClickHandler();
    }

    //录入医嘱的时候判断到达状态;若未到达则置为到达
    if ((GlobalObj.LogonDoctorID != "") && (GlobalObj.SetArriveByOrder == 1) && (GlobalObj.SetArrivedStatusMethod != "")) {
        var DocID = GlobalObj.LogonDoctorID;
        if (cspRunServerMethod(GlobalObj.SetArrivedStatusMethod, EpisodeID, DocID, session['LOGON.CTLOCID'], session['LOGON.USERID']) != '1') {
            //$.messager.alert("警告",'fail');
        }
    }
    //发送到住院超声室供叫号使用叫号,yanjiyan,2008.12.07
    if ((GlobalObj.PAAdmType == "I") && (GlobalObj.HospitalCode == "ZGYKDFSYY")) { DHCDOCCallCs(); }

    if ((GlobalObj.DHCDTInterface == 1) && (GlobalObj.DHCDTUploadFlag == 1)) {
        var myrtn = DaTongXHZYSave();
        //if (myrtn==2)$.messager.alert("警告",t['DTQuestion']);
    }

    /*
    document.forms['fUDHCOEOrder_List_Custom'].id="fOEOrder_Custom"
    document.forms['fUDHCOEOrder_List_Custom'].name="fOEOrder_Custom"	
    var obj=document.getElementById("TFORM");
    obj.value="OEOrder.Custom";
    */

    //update by zf 2012-05-14
    if (typeof window.parent.objControlArry != "undefined") {
        window.parent.objControlArry['FormNewWin'].objFormShow.formShowData("", 0);
    } else if (typeof window.parent.parent.objControlArry != "undefined") {
        window.parent.parent.objControlArry['FormNewWin'].objFormShow.formShowData("", 0);
    }

    ReloadGrid();
    obj.disabled = false;
    //审核成功后刷新医嘱单
    if (SUCCESS == true) {
        $('#PinNumber').val('');
        RefreshOderList();
        ClearVerifiedOrder();
        GlobalObj.PilotProWarning = tkMakeServerCall("web.PilotProject.DHCDocPilotProject", "ifWarning", GlobalObj.PPRowId, session['LOGON.USERID']);
        if (GlobalObj.PilotProWarning != "") {
            $("#Prompt").text(GlobalObj.PilotProWarning);
        }
        //window.setTimeout("UpdateClickHandlerFinish()",1000);
    }
    //自动弹出检查资源预约界面
    var ExamItemBookFlag = cspRunServerMethod(GlobalObj.GetExamItemBookMethod, OEOrdItemIDs);
    if (ExamItemBookFlag == "1") {
        //if (dhcsys_confirm("是否立即填写申请单", true)) {
            var lnk = "dhc.ris.appointment.csp?a=a&EpisodeID=" + EpisodeID;
            //var SessionFieldName = "RisAppBillURL" + EpisodeID;
            //var Ret = cspRunServerMethod(GlobalObj.SetSessionDataMethod, SessionFieldName, lnk);
            setTimeout(function (){
                //window.open(lnk, true, "status=1,scrollbars=1,top=50,left=10,width=1000,height=630");
                window.showModalDialog(lnk, "", "dialogWidth:1000px;dialogHeight:630px;center:yes;toolbar=no;menubar:no;scrollbars:yes;resizable:yes;location:no;status:no;help:no;");
            },1000);
            //var rtn=websys_lu(lnk,true,"status=1,scrollbars=1,top=50,left=10,width=1000,height=630");
        //}
    }

    SaveOrderToEMR()
    SetTimeLog("UpdateClickHandler", "end");
    //此处将日志写入到文本
    //SetTimeLogToServer("UpdateClickHandler");
	
	///如果左侧患者列表存在刷新左侧的患者信息
	var FlagBF=HavZFOrderStr(OrderItemStr)
	if ((window.parent.patientTreePanel)&&(GlobalObj.PAAdmType=="I")&&(FlagBF=="Y")){
		window.parent.patientTreePanel.store.load();
	}
	
    return SUCCESS;
}
function ApplyReport(OrderItemStr,NeedMatchAry) {
    var UpdateOrderItemStr="";
    var LocID=session['LOGON.CTLOCID']; 
    var DoctorID=GetEntryDoctorId();
    var ARCIMStrInfo=cspRunServerMethod(GlobalObj.GetItemServiceARCIMStrMethod,GlobalObj.EpisodeID,OrderItemStr,DoctorID,LocID);
    //alert(ARCIMStrInfo)
    if (ARCIMStrInfo!=""){
    	var result="";
        var ARCIMStr=mPiece(ARCIMStrInfo,String.fromCharCode(2),0);
        var AutoGenARCIMStr=mPiece(ARCIMStrInfo,String.fromCharCode(2),1);
        if (ARCIMStr!="") {
            var lnk="dhcapp.reportreqnew.csp?ARCIMStr="+ARCIMStr;
            result = window.showModalDialog(lnk, "", "dialogWidth:1000px;dialogHeight:800px;center:yes;toolbar=no;menubar:no;scrollbars:yes;resizable:yes;location:no;status:no;help:no;");
            if ((result==null)||(result=="")||(result=="undefined")) {
                $.messager.alert("提示信息","检查未填写申请单,请再次点击【审核医嘱】申请或删除检查医嘱.");  
                return "";
            }
        }
        //自动生成申请单
        if (AutoGenARCIMStr!="") {
            var AutoGenresult=cspRunServerMethod(GlobalObj.InsExaReqNoMethod,AutoGenARCIMStr);
            if (AutoGenresult!="") {
                if (result=="") result=AutoGenresult;
                else result=result+'@'+AutoGenresult;
            } 
        }

        if (result!="") {
            //需要重新组织未审核医嘱字符串,拼接上检查申请记录子表Rowid
            //出参:申请记录子表RowId^医嘱项ID^记录唯一标识@申请记录子表RowId^医嘱项ID^记录唯一标识@申请记录子表RowId^医嘱项ID^记录唯一标识
            var resultAry=result.split('@');
            for (var i=0;i<resultAry.length;i++) {
                var oneResultAry=resultAry[i].split('^');
                var ApplyArcId=oneResultAry[0];
                var OrderSeqNo=oneResultAry[2];
                NeedMatchAry[OrderSeqNo]=ApplyArcId;
            }
            var OrderItemAry=OrderItemStr.split(String.fromCharCode(1));
            for (var i=0;i<OrderItemAry.length;i++) {
                var oneOrderItemAry=OrderItemAry[i].split('^');
                var ArcimId=oneOrderItemAry[0];
                var OrderSeqNo=oneOrderItemAry[19];
                if (NeedMatchAry[OrderSeqNo]) {
                    oneOrderItemAry[59]=NeedMatchAry[OrderSeqNo];
                }
                var oneOrderItemStr=oneOrderItemAry.join('^');
                if (UpdateOrderItemStr=="") {UpdateOrderItemStr=oneOrderItemStr;}else{UpdateOrderItemStr=UpdateOrderItemStr+String.fromCharCode(1)+oneOrderItemStr}
            }

            return UpdateOrderItemStr;
        }else{
        	return OrderItemStr;
        }
    }else{
        return OrderItemStr;
    }
}

function GetEntryDoctorId() {
    var DoctorRowid = "";
    //如果登陆人为医生?就加入医生?如果登陆人为护士?并替医生录入?还是加入医生
    //如果登陆人为护士?而且没有选择医生?就加入护士
    if (GlobalObj.LogonDoctorType == "DOCTOR") {
        DoctorRowid = GlobalObj.LogonDoctorID;
    } else {
        var obj = document.getElementById('DoctorID');
        if (obj) DoctorRowid = obj.value;
        if (DoctorRowid == "") { DoctorRowid = GlobalObj.LogonDoctorID; }
    }
    return DoctorRowid;
}

function SaveOrderItems(OrderItemStr, XHZYRetCode, ExpStr) {
    var UserAddRowid = "";
    var UserAddDepRowid = "";
    UserAddRowid = session['LOGON.USERID'];
    UserAddDepRowid = session['LOGON.CTLOCID'];
    var DoctorRowid = GetEntryDoctorId();

    //$.messager.alert("警告",OrderItemStr+"----"+UserAddRowid+"^"+UserAddDepRowid+"^"+DoctorRowid);
    var ret = cspRunServerMethod(GlobalObj.SaveOrderItemsMethod, EpisodeID, OrderItemStr, UserAddRowid, UserAddDepRowid, DoctorRowid, XHZYRetCode, ExpStr)
    return ret;

}

function InsertOrderItem(OrderItemStr, ExpStr) {
    var UserAddRowid = "";
    var UserAddDepRowid = "";
    UserAddRowid = session['LOGON.USERID'];
    UserAddDepRowid = session['LOGON.CTLOCID'];
    var DoctorRowid = GetEntryDoctorId();
    //$.messager.alert("警告",OrderItemStr+"----"+UserAddRowid+"^"+UserAddDepRowid+"^"+DoctorRowid);
    var ret = cspRunServerMethod(GlobalObj.InsertOrderItemMethod, GlobalObj.EpisodeID, OrderItemStr, UserAddRowid, UserAddDepRowid, DoctorRowid, ExpStr)
    return ret;
}
//获取录入医嘱信息 组织提交字符串
function GetOrderDataOnAdd() {
    var OrderItemStr = "";
    var OrderItem = "";
    var OneOrderItem = "";
    try {
        var DataArry = GetGirdData();
        for (var i = 0; i < DataArry.length; i++) {
            var OrderItemRowid = DataArry[i]["OrderItemRowid"];
            var OrderARCIMRowid = DataArry[i]["OrderARCIMRowid"];
            ///tanjishan 2015-09	
            //if ((OrderARCIMRowid!="")&&(OrderItemRowid=="")){
            var StyleConfigStr = DataArry[i]["StyleConfigStr"];
            var StyleConfigObj = {};
            if (StyleConfigStr != "") {
                StyleConfigObj = eval("(" + StyleConfigStr + ")");
            }
            if ((GlobalObj.PAAdmType != "I") && (StyleConfigObj.OrderPackQty != true) && (OrderItemRowid != "")) { continue }
            if (OrderARCIMRowid == "") { continue; }
            var OrderName = DataArry[i]["OrderName"];
            var OrderType = DataArry[i]["OrderType"];
            var OrderPriorRowid = DataArry[i]["OrderPriorRowid"];
            var OrderRecDepRowid = DataArry[i]["OrderRecDepRowid"];
            //$.messager.alert("警告",OrderRecDepRowid);
            var OrderFreqRowid = DataArry[i]["OrderFreqRowid"];
            var OrderDurRowid = DataArry[i]["OrderDurRowid"];
            var OrderInstrRowid = DataArry[i]["OrderInstrRowid"];
            var OrderDoseQty = DataArry[i]["OrderDoseQty"];
            /*if(OrderDoseQty.indexOf(".")!=-1)	{
            	if(OrderDoseQty.split(".")[0]==""){
            		OrderDoseQty="0."+OrderDoseQty.split(".")[1]
            	}
            }*/
            var OrderDoseQty = FormateNumber(OrderDoseQty);
            var OrderDoseUOMRowid = DataArry[i]["OrderDoseUOMRowid"];
            var OrderPackQty = DataArry[i]["OrderPackQty"];
            var OrderPrice = DataArry[i]["OrderPrice"];
            //原序号  现行ID
            var OrderSeqNo = DataArry[i]["id"];
            var PHPrescType = DataArry[i]["OrderPHPrescType"];
            var BillTypeRowid = DataArry[i]["OrderBillTypeRowid"];
            var OrderSkinTest = DataArry[i]["OrderSkinTest"];
            var OrderARCOSRowid = DataArry[i]["OrderARCOSRowid"];
            var OrderDrugFormRowid = DataArry[i]["OrderDrugFormRowid"];
            var OrderStartDateStr = DataArry[i]["OrderStartDate"];
            var OrderStartDate = "";
            var OrderStartTime = "";
            if (OrderStartDateStr != "") {
                OrderStartDate = OrderStartDateStr.split(" ")[0];
                OrderStartTime = OrderStartDateStr.split(" ")[1];
            }
            //关联
            var OrderMasterSeqNo = DataArry[i]["OrderMasterSeqNo"];
            var OrderDepProcNotes = DataArry[i]["OrderDepProcNote"];
            var OrderPhSpecInstr = ""; //DataArry[i]["OrderPhSpecInstr"];
            var OrderCoverMainIns = DataArry[i]["OrderCoverMainIns"];
            var OrderActionRowid = DataArry[i]["OrderActionRowid"];
            var OrderEndDateStr = DataArry[i]["OrderEndDate"];
            var OrderEndDate = "";
            var OrderEndTime = "";
            if (OrderEndDateStr != "") {
                OrderEndDate = OrderEndDateStr.split(" ")[0];
                OrderEndTime = OrderEndDateStr.split(" ")[1];
            }
            //$.messager.alert("警告",OrderEndDate+"^"+OrderEndTime);
            var OrderLabSpecRowid = DataArry[i]["OrderLabSpecRowid"];
            var OrderMultiDate = ""; //DataArry[i]["OrderMultiDate"];
            var OrderNotifyClinician = ""; //DataArry[i]["OrderNotifyClinician"];
            //if (OrderNotifyClinician==true){OrderNotifyClinician="Y"}else{OrderNotifyClinician="N"}
            var OrderDIACatRowId = DataArry[i]["OrderDIACatRowId"];
            //医保类别
            var OrderInsurCatRowId = DataArry[i]["OrderInsurCatRowId"];
            //医嘱首日次数
            var OrderFirstDayTimes = DataArry[i]["OrderFirstDayTimes"];
            //如果是生成取药医嘱,自备药长嘱只生成执行记录,如果是自备药即刻
            if (((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid)) && (GlobalObj.PAAdmType == "I")) OrderFirstDayTimes = DataArry[i]["OrderFirstDayTimes"];

            //医保适应症
            var OrderInsurSignSymptomCode = ""; //DataArry[i]["OrderInsurSignSymptomCode"];

            //身体部位
            var OrderBodyPart = DataArry[i]["OrderBodyPart"];
            if (OrderBodyPart != "") {
                if (OrderDepProcNotes != "") {
                    OrderDepProcNotes = OrderDepProcNotes + "," + OrderBodyPart;
                } else {
                    OrderDepProcNotes = OrderBodyPart;
                }
            }

            //医嘱阶段
            var OrderStageCode = DataArry[i]["OrderStageCode"];
            //输液滴速
            var OrderSpeedFlowRate = DataArry[i]["OrderSpeedFlowRate"];

            var AnaesthesiaID = GetMenuPara("AnaesthesiaID");
            var OrderLabEpisodeNo = DataArry[i]["OrderLabEpisodeNo"];

            var VerifiedOrderMasterRowid = "";
            //营养药标志
            var OrderNutritionDrugFlag = ""; //DataArry[i]["OrderNutritionDrugFlag"];
            //补录关联主医嘱信息	
            var LinkedMasterOrderRowid = DataArry[i]["LinkedMasterOrderRowid"];
            var LinkedMasterOrderSeqNo = DataArry[i]["LinkedMasterOrderSeqNo"];
            if ((LinkedMasterOrderSeqNo != "") && (OrderMasterSeqNo == "")) {
                OrderMasterSeqNo = DataArry[i]["LinkedMasterOrderSeqNo"];
            }
            //if ((VerifiedOrderMasterRowid!="")&&(LinkedMasterOrderRowid=="")) LinkedMasterOrderRowid=VerifiedOrderMasterRowid;

            //审批类型
            var OrderInsurApproveType = ""; //DataArry[i]["OrderInsurApproveType"];
            //临床路径步骤
            var OrderCPWStepItemRowId = ""; //DataArry[i]["OrderCPWStepItemRowId"];
            //高值材料条码
            var OrderMaterialBarCode = DataArry[i]["OrderMaterialBarcodeHiden"];
            //输液滴速单位
            var OrderFlowRateUnit = DataArry[i]["OrderFlowRateUnit"];
            var OrderFlowRateUnitRowId = DataArry[i]["OrderFlowRateUnitRowId"];
            //开医嘱日期
            var OrderDate = "";
            var OrderTime = "";
            var OrderDateStr = DataArry[i]["OrderDate"];
            if (OrderDateStr != "") {
                OrderDate = OrderDateStr.split(" ")[0];
                OrderTime = OrderDateStr.split(" ")[1];
            }
            //需要配液
            var OrderNeedPIVAFlag = DataArry[i]["OrderNeedPIVAFlag"];
            //****************抗生素10********************************/
            // 管制药品申请
            var OrderAntibApplyRowid = DataArry[i]["OrderAntibApplyRowid"];
            //抗生素使用原因
            var AntUseReason = DataArry[i]["AntUseReason"];
            //使用目的
            var UserReasonId = DataArry[i]["UserReasonId"];
            var ShowTabStr = DataArry[i]["ShowTabStr"];
            //************************************************/
            //输液次数
            var OrderLocalInfusionQty = DataArry[i]["OrderLocalInfusionQty"];
            //个人自备
            var OrderBySelfOMFlag = "";
            if (DataArry[i]["OrderSelfOMFlag"]) OrderBySelfOMFlag = DataArry[i]["OrderSelfOMFlag"];
            var OrderOutsourcingFlag = "";
            if (DataArry[i]["OrderOutsourcingFlag"]) OrderOutsourcingFlag = DataArry[i]["OrderOutsourcingFlag"];
            //超量疗程原因
            var ExceedReasonID = DataArry[i]["ExceedReasonID"];
            //是否加急
            var OrderNotifyClinician = DataArry[i]["Urgent"];
            //整包装单位
            var OrderPackUOMRowid = DataArry[i]["OrderPackUOMRowid"];

            var OrderQtySum = "";
            if (OrderType == "R") {
                var freq = DataArry[i]["OrderFreqFactor"];
                var dur = DataArry[i]["OrderDurFactor"];
                var Interval = DataArry[i]["OrderFreqInterval"];
                if ((Interval != "") && (Interval != null)) {
                    var convert = Number(dur) / Number(Interval)
                    var fact = (Number(dur)) % (Number(Interval));
                    if (fact > 0) {
                        fact = 1;
                    } else {
                        fact = 0;
                    }
                    dur = Math.floor(convert) + fact;
                }
                if (freq == "") freq = 1;
                OrderQtySum = parseFloat(OrderDoseQty) * parseFloat(dur) * parseFloat(freq);
                OrderQtySum = OrderQtySum.toFixed(4);
                //$.messager.alert("警告",OrderQtySum);
            } else {
                if ((OrderType == "L") && (OrderPackQty == "")) { OrderPackQty = 1 }
                OrderQtySum = OrderPackQty;
                OrderPackQty = "";
            }
            var OrderPriorRemarks = DataArry[i]["OrderPriorRemarksRowId"];
            OrderPriorRowid = ReSetOrderPriorRowid(OrderPriorRowid, OrderPriorRemarks);
            //药理项目
            var OrderPilotProRowid = DataArry[i]["OrderPilotProRowid"];
            if (GlobalObj.PAAdmType == "I") {
                if (GlobalObj.CFIPPilotPatAdmReason != "") BillTypeRowid = GlobalObj.CFIPPilotPatAdmReason;
            } else {
                if (GlobalObj.CFPilotPatAdmReason != "") BillTypeRowid = GlobalObj.CFPilotPatAdmReason;
            }

            if (OrderDoseQty == "") { OrderDoseUOMRowid = "" }
			//检查申请子表记录Id
			var ApplyArcId="";
            OrderItem = OrderARCIMRowid + "^" + OrderType + "^" + OrderPriorRowid + "^" + OrderStartDate + "^" + OrderStartTime + "^" + OrderPackQty + "^" + OrderPrice;
            OrderItem = OrderItem + "^" + OrderRecDepRowid + "^" + BillTypeRowid + "^" + OrderDrugFormRowid + "^" + OrderDepProcNotes;
            OrderItem = OrderItem + "^" + OrderDoseQty + "^" + OrderDoseUOMRowid + "^" + OrderQtySum + "^" + OrderFreqRowid + "^" + OrderDurRowid + "^" + OrderInstrRowid;
            OrderItem = OrderItem + "^" + PHPrescType + "^" + OrderMasterSeqNo + "^" + OrderSeqNo + "^" + OrderSkinTest + "^" + OrderPhSpecInstr + "^" + OrderCoverMainIns;
            OrderItem = OrderItem + "^" + OrderActionRowid + "^" + OrderARCOSRowid + "^" + OrderEndDate + "^" + OrderEndTime + "^" + OrderLabSpecRowid + "^" + OrderMultiDate;
            OrderItem = OrderItem + "^" + OrderNotifyClinician + "^" + OrderDIACatRowId + "^" + OrderInsurCatRowId + "^" + OrderFirstDayTimes + "^" + OrderInsurSignSymptomCode;
            OrderItem = OrderItem + "^" + OrderStageCode + "^" + OrderSpeedFlowRate + "^" + AnaesthesiaID + "^" + OrderLabEpisodeNo;
            OrderItem = OrderItem + "^" + LinkedMasterOrderRowid + "^" + OrderNutritionDrugFlag;
            OrderItem = OrderItem + "^" + OrderMaterialBarCode + "^^" + OrderCPWStepItemRowId + "^" + OrderInsurApproveType;
            OrderItem = OrderItem + "^" + OrderFlowRateUnitRowId + "^" + OrderDate + "^" + OrderTime + "^" + OrderNeedPIVAFlag + "^" + OrderAntibApplyRowid + "^" + AntUseReason + "^" + UserReasonId;
            OrderItem = OrderItem + "^" + OrderLocalInfusionQty + "^" + OrderBySelfOMFlag + "^" + ExceedReasonID + "^" + OrderPackUOMRowid + "^" + OrderPilotProRowid + "^" + OrderOutsourcingFlag;
			OrderItem=OrderItem+"^^"+OrderItemRowid+"^"+ApplyArcId;
            
            if (OrderItemStr == "") { OrderItemStr = OrderItem } else { OrderItemStr = OrderItemStr + String.fromCharCode(1) + OrderItem }

        }
    } catch (e) { $.messager.alert("警告", e.message) }
    return OrderItemStr;
}
//找手术ID  add by guorongyong
function GetAnaesthesiaID() {
    var AnaesthesiaID = "";
    var frm = dhcsys_getmenuform();
    if (frm) {
        AnaesthesiaID = frm.AnaesthesiaID.value;
    }
    return AnaesthesiaID;
}
//模版选择医嘱
function addSelectedFav(value) {
    var desc = "";
    var selItmid = "";
    var selItmDesc = "";
    var selItmDur = "";
    var isubcatcode = "";
    var obj1 = "";
    var objLinkedOrder = "";
    var orderValue = "";
    var orderType = "";
    var bCanCopy = "";
    var CatID = "";
    var SubCatID = "";
    var OrderType = "";
    var setid = "";
    //Log 48858 PeterC 31/03/05
    var Freq = "";
    var Dur = "";
    var Priority = "";
    var DosageQty = "";
    var Status = "";
    var ProcNote = "";
    var PrescItemCats = "";

    Freq = value.split(String.fromCharCode(4))[10];
    Dur = value.split(String.fromCharCode(4))[11];
    Priority = value.split(String.fromCharCode(4))[12];
    DosageQty = value.split(String.fromCharCode(4))[13];
    Status = value.split(String.fromCharCode(4))[14];
    ProcNote = value.split(String.fromCharCode(4))[15];
    //if(ProcNote!="") ProcNote=unescape(ProcNote);
    OrderType = mPiece(value, String.fromCharCode(4), 0);
    isubcatcode = mPiece(value, String.fromCharCode(4), 8)
    var itemid = value.split(String.fromCharCode(4))[2];

    //$.messager.alert("警告",OrderType+","+itemid);

    if (OrderType == "ARCIM") {
        //添加一行
        var rowid = Add_Order_row();
        var Para = "";
        var ItemDefaultRowId = GetItemDefaultRowId(itemid);
        //模版选择试用对象方式添加 
        var ret = AddItemToList(rowid, itemid, Para, "", ItemDefaultRowId, "data");
        //$.messager.alert("警告","ret:"+ret);
        if (ret == false) {
            //清空当前行
            ClearRow(rowid);
            return;
        }
        CellFocusJumpAfterOrderName(rowid, OrderType);
    } else {
        //医嘱套
        OSItemListOpen(itemid, "", "YES", "", "");
    }
    //添加数据成功后 设置Footer数据
    SetScreenSum();

}

function DHCDOCCallCs() {
    var Paadm = EpisodeID;
    var rtn = cspRunServerMethod(GlobalObj.CsCallMethod, Paadm)

    if (rtn.split("^")[0] != "N") {
        PaperInfo = rtn.split("^");
        PatientType = "";
        PatientID = "";
        BookID = "";
        PName = "";
        Sex = "";
        PatientBirthday = "";
        OEORISttDat = "";
        ItemStr = "";
        ItemStr1 = "";
        PatientType = PaperInfo[0];
        PatientID = PaperInfo[1];
        BookID = PaperInfo[2];
        PName = PaperInfo[3];
        Sex = PaperInfo[4];
        PatientBirthday = PaperInfo[5];
        OEORISttDat = PaperInfo[6];
        ItemStr = PaperInfo[7];
        if (ItemStr != "") {
            for (i = 0; i < ItemStr.split(String.fromCharCode(1)).length; i++) {
                ItemData = ItemStr.split(String.fromCharCode(1))[i];
                var CheckItem = "";
                var StrDate = "";
                var Strtime = "";
                var OrderType = "";
                CheckItem = ItemData.split(String.fromCharCode(2))[0];
                StrDate = ItemData.split(String.fromCharCode(2))[1];
                Strtime = ItemData.split(String.fromCharCode(2))[2];
                OrderType = ItemData.split(String.fromCharCode(2))[3];
                //ItemStr1 = ItemStr1 + "<CheckItem>" + "<ItemDesc>" + CheckItem + "</ItemDesc>" + "<StrDate>" + StrDate + "</StrDate>"+"<Strtime>" + Strtime + "</Strtime>"+"</CheckItem>";
                ItemStr1 = ItemStr1 + '<CheckItem  Name = "' + CheckItem + '"  StrDate = "' + StrDate + '" StrTime = "' + Strtime + '"  OrderType = "' + OrderType + '" />'
            }
            databody = "";
            databody = databody + '<PatientType>' + PatientType + '</PatientType>';
            databody = databody + '<PatientID>' + PatientID + '</PatientID>';
            databody = databody + '<BookID>' + BookID + '</BookID>';
            databody = databody + '<Name>' + PName + '</Name>';
            databody = databody + '<Sex>' + Sex + '</Sex>';
            databody = databody + '<Birthday>' + PatientBirthday + '</Birthday>';
            databody = databody + '<BespeakDate>' + OEORISttDat + '</BespeakDate>';
            databody = databody + '<CheckItems>' + ItemStr1 + '</CheckItems>';
            var xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
            var soap = "<?xml   version=\"1.0\"   encoding=\"utf-8\"?>"
            soap = soap + "<soap:Envelope   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"   xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"   xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"
            soap = soap + "<soap:Body>"
            soap = soap + '<AddPatientInfo   xmlns="urn:VDSystemIntf-IVDSystem">'
            soap = soap + '<PatientInfo>';
            soap = soap + '<PatientInfo>';
            soap = soap + databody
            soap = soap + '</PatientInfo>';
            soap = soap + '</PatientInfo>';
            soap = soap + "</" + 'AddPatientInfo' + ">"
            soap = soap + "</soap:Body>"
            soap = soap + "</soap:Envelope>"
                //$.messager.alert("警告",PatientID+"^"+BookID) 
            var url = "http://172.26.202.11:1024/MEDIASERVER.DLL/soap/IVDSystem";
            //url="http://127.0.0.1/jh/MediaServer.dll/soap/IVDSystem";
            xmlHttp.open("POST", url, false);
            xmlHttp.setRequestHeader("Content-Type", "text/xml;charset=utf-8");
            xmlHttp.setRequestHeader("Content-Length", soap.length);
            xmlHttp.setRequestHeader("HOST", "172.26.202.11:1024")
            xmlHttp.setRequestHeader("SOAPAction", "urn:VDSystemIntf-IVDSystem#AddPatientInfo")
                //$.messager.alert("警告",soap)
            xmlHttp.send(soap);
            //$.messager.alert("警告",xmlHttp.responseText)
            //如果有错误的话   返回用户填写的信息   
            if (xmlHttp.status == 200) {
                // return 
            } else {
                return xmlHttp.responseXML.text;
            }

        }
    }
}

function isInteger(objStr) {
    var reg = /^\+?[0-9]*[0-9][0-9]*$/;
    var ret = objStr.match(reg);
    if (ret == null) { return false } else { return true }
}

function isNumber(objStr) {
    var strRef = "-1234567890.";
    for (i = 0; i < objStr.length; i++) {
        tempChar = objStr.substring(i, i + 1);
        if (strRef.indexOf(tempChar, 0) == -1) { return false; }
    }
    return true;
}

/*******************************************
 *说明:
 *修改一行的元素属性是否可操作
 *只用于关联医嘱的样式控制
 * 
 ********************************************/

function ChangeCellsDisabledStyle(Row, Disabled) {
    /*var OrderPrior=GetCellData(Row,"OrderPrior");
	var OrderFreq=GetCellData(Row,"OrderFreq");
	var OrderDur=GetCellData(Row,"OrderDur");
	var OrderInstr=GetCellData(Row,"OrderInstr");
	var OrderStartDate=GetCellData(Row,"OrderStartDate");
	var OrderStartTime=GetCellData(Row,"OrderStartTime");
	var OrderEndDate=GetCellData(Row,"OrderEndDate");
	var OrderEndTime=GetCellData(Row,"OrderEndTime");
	var OrderMultiDate=GetCellData(Row,"OrderMultiDate");
	var OrderFirstDayTimes=GetCellData(Row,"OrderFirstDayTimes");
	var OrderBodyPart=GetCellData(Row,"OrderBodyPart");
	var OrderStage=GetCellData(Row,"OrderStage");
	var OrderSpeedFlowRate=GetCellData(Row,"OrderSpeedFlowRate");
	var OrderFlowRateUnit=GetCellData(Row,"OrderFlowRateUnit");
	var OrderDate=GetCellData(Row,"OrderDate");
	var OrderTime=GetCellData(Row,"OrderTime");
	var OrderNeedPIVAFlag=GetCellData(Row,"OrderNeedPIVAFlag");*/
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    //var OrderSkinTest=GetCellData(Row,"OrderSkinTest");
    var OrderSkinTestabled = "";
    var OrderActiontabled = ""
    if (OrderPriorRowid == GlobalObj.ShortOrderPriorRowid) {
        var OrderSkinTestabled = true;
        var OrderActiontabled = true
    } else {
        var OrderSkinTestabled = false;
        var OrderActiontabled = false;
    }
    var OrderRecDeptabled = true;
    if ((GlobalObj.CFSameRecDepForGroup == 1) && (Disabled == false)) {
        OrderRecDeptabled = Disabled;
    }
    var obj = {
        OrderPrior: Disabled,
        OrderFreq: Disabled,
        OrderDur: Disabled,
        OrderInstr: Disabled,
        OrderSkinTest: OrderSkinTestabled,
        OrderStartDate: Disabled,
        OrderEndDate: Disabled,
        OrderMultiDate: Disabled,
        OrderFirstDayTimes: Disabled,
        OrderBodyPart: Disabled,
        OrderStage: Disabled,
        OrderSpeedFlowRate: Disabled,
        OrderDate: Disabled,
        OrderTime: Disabled,
        OrderNeedPIVAFlag: Disabled,
        OrderFlowRateUnit: Disabled,
        OrderAction: OrderActiontabled,
        OrderRecDep: OrderRecDeptabled
    }

    ChangeCellDisable(Row, obj);
    /*
    var oldRowDisableStr=GetCellData(Row,"RowDisableStr");
    if(oldRowDisableStr !=""){
    	var oldObj=eval("("+oldRowDisableStr+")");
    	$.extend(oldObj,obj);
    	var RowDisableStr = JSON.stringify(oldObj);
    	SetCellData(Row,"RowDisableStr",RowDisableStr);
    }else{
    	var RowDisableStr = JSON.stringify(obj);
    	SetCellData(Row,"RowDisableStr",RowDisableStr);	
    }
    */
}

function GetReclocByInstr(Row) {
    //用法定义接收科室
    var InstrReclocStr = "";
    var OrderInstrRowid = GetCellData(Row, "OrderInstrRowid");
    var InstrOrderType = GetCellData(Row, "OrderType");
    var OrderHiddenPara = GetCellData(Row, "OrderHiddenPara");
    var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
    var InstrPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var PreInstrRecLocStr = GetCellData(Row, "OrderRecLocStr");
    if ((InstrOrderType == "R") && (GlobalObj.ReclocByInstr == "1") && (GlobalObj.GetInstrReclocMethod != "")) {
        var OrdDept = GetLogonLocByFlag();
        var HOSPID = session['LOGON.HOSPID'];
        var InstrReclocStr = cspRunServerMethod(GlobalObj.GetInstrReclocMethod, EpisodeID, OrderInstrRowid, OrdDept, OrderItemCatRowid, InstrPriorRowid, PreInstrRecLocStr, HOSPID)
    }
    if (InstrReclocStr != "") { return InstrReclocStr; } else { return PreInstrRecLocStr; }
}

function GetLogonLocByFlag() {
    var FindRecLocByLogonLoc;
    //如果按登录科室取接收科室?就把登录科室传进去
    var obj = document.getElementById("FindByLogDep");
    if (obj) {
        if (obj.checked) { FindRecLocByLogonLoc = 1 } else { FindRecLocByLogonLoc = 0 }
    }
    var LogonDep = ""
    if (FindRecLocByLogonLoc == "1") { LogonDep = session['LOGON.CTLOCID'] }
    return LogonDep;
}

function SetPackQty(Row, IsNotNeedChangeFlag) {
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    if (OrderARCIMRowid == "") return true;
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderType = GetCellData(Row, "OrderType");
    var OldOrderPackQty = GetCellData(Row, "OrderPackQty");
    var OrderConFac = GetCellData(Row, "OrderConFac");
    var OrderPrice = GetCellData(Row, "OrderPrice");
    OrderPrice = OrderPrice.replace(/(^\s*)|(\s*$)/g, '');
    //if (OrderPrice=="") OrderPrice=0;
    var retPrice = GetRecPrice(Row)
    if (retPrice==undefined) retPrice="0^0^0^0^0";
    var ArrPrice = retPrice.split("^");
    var Price = ArrPrice[0];
    if ((OrderPrice == "") && ((Price = "") || (Price >= 0))) OrderPrice = 0;

    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    var OrderStartDateStr = GetCellData(Row, "OrderStartDate");
    var OrderStartDate = OrderStartDateStr.split(" ")[0];
    var OrderMultiDate = GetCellData(Row, "OrderMultiDate");
    var FreqDispTimeStr = GetCellData(Row, "OrderFreqDispTimeStr");
    var freq = GetCellData(Row, "OrderFreqFactor");
    var dur = GetCellData(Row, "OrderDurFactor");
    var Interval = GetCellData(Row, "OrderFreqInterval");
    var OrderPriorRemarks = GetCellData(Row, "OrderPriorRemarksRowId");
    if (OrderType == "R") {
        //如果是通过选择日期则需要计算天数
        OrderMultiDate = OrderMultiDate.toString();
        //多选日期未处理
        /*if (OrderMultiDate!=""){
        	var DateArr=OrderMultiDate.split(String.fromCharCode(2));
        	dur=DateArr.length;
        }*/
        var DrugFormRowid = GetCellData(Row, "OrderDrugFormRowid");
        var OrderDoseQty = GetCellData(Row, "OrderDoseQty");
        var OrderDoseUOMRowid = GetCellData(Row, "OrderDoseUOMRowid");
        var PackQty = 1;
        var BaseDoseQty = 1;
        if ((Interval != "") && (Interval != null)) {
            var convert = Number(dur) / Number(Interval)
            var fact = (Number(dur)) % (Number(Interval));
            if (fact > 0) { fact = 1; } else { fact = 0; }
            dur = Math.floor(convert) + fact;
        }
        if (OrderDoseQty != "") {
            var valDoseQty = parseFloat(OrderDoseQty);
            //$.messager.alert("警告",valDoseQty+"^"+freq+"^"+dur+"^"+Interval+"^"+DrugFormRowid+"^"+OrderDoseUOMRowid+"^"+OrderConFac);
            if (freq == "") freq = 1;
            if (GlobalObj.CalDoseMethod != '') {
                //$.messager.alert("警告",CalDoseMethod);
                BaseDoseQty = cspRunServerMethod(GlobalObj.CalDoseMethod, OrderDoseUOMRowid, DrugFormRowid, valDoseQty);
                //$.messager.alert("警告","DrugFormRowid:"+DrugFormRowid+"  BaseDoseQty: "+BaseDoseQty+"   ItemConFac "+OrderConFac+"    valDoseQty:"+valDoseQty);
                if (BaseDoseQty == "") BaseDoseQty = 1
                try {
                    var NumTimes = 1;
                    if ((GlobalObj.PAAdmType != "I") || ((GlobalObj.PAAdmType == "I") && ((OrderPriorRowid == GlobalObj.OutOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OneOrderPriorRowid) || (OrderPriorRemarks == "ONE")))) {
                        if (FreqDispTimeStr != "") {
                            if (OrderStartDate == '') {
                                var CurrDateTime = cspRunServerMethod(GlobalObj.GetCurrentDateTimeMethod, PageLogicObj.defaultDataCache, "1");
                                var CurrDateTimeArr = CurrDateTime.split("^");
                                OrderStartDate = CurrDateTimeArr[0];
                            }
                            var OrderDurFactor = GetCellData(Row, "OrderDurFactor");
                            if (OrderDurFactor == "") OrderDurFactor = 1;
                            NumTimes = GetCountByFreqDispTime(FreqDispTimeStr, OrderStartDate, OrderDurFactor);
                        } else {
                            NumTimes = parseFloat(freq) * parseFloat(dur);
                        }
                    } else {
                        NumTimes = parseFloat(freq) * parseFloat(dur);
                    }
                    //$.messager.alert("警告","NumTimes :"+NumTimes)
                    var BaseDoseQtySum = parseFloat(BaseDoseQty) * parseFloat(NumTimes);
                    //$.messager.alert("警告","BaseDoseQtySum :"+BaseDoseQtySum);
                    PackQty = parseFloat(parseFloat(BaseDoseQtySum) / parseFloat(OrderConFac));
                    PackQty = PackQty.toFixed(4);
                    PackQty = Math.ceil(PackQty);
                    //$.messager.alert("警告","BaseDoseQtySum: "+BaseDoseQtySum+"   PackQty: "+PackQty)
                    //RoundUpNum=Math.ceil(valDoseQty);
                } catch (e) { $.messager.alert("警告", e.message) }
            }
        }
    } else {
        PackQty = GetCellData(Row, "OrderPackQty");
        if (PackQty == "") PackQty = 1
        BaseDoseQtySum = PackQty;
        var OrderDoseQty = GetCellData(Row, "OrderDoseQty");
        if (OrderDoseQty == "") OrderDoseQty = 1;
        if ((dur == 0) || (dur == "")) { dur = 1 }
        if ((freq == 0) || (freq == "")) { freq = 1 }
        if (GlobalObj.PAAdmType == "I") {
            //如果是住院有隔几日的频次,就要把数量置为1
            if (FreqDispTimeStr != "") freq = 1;
        }
        if (isNumber(freq) && isNumber(dur) && isNumber(OrderDoseQty) && (IsNotNeedChangeFlag != "Y")) {
            PackQty = parseInt(freq) * parseInt(dur) * parseInt(OrderDoseQty);
            BaseDoseQtySum = PackQty;
            BaseDoseQty = "";
        }

    }
    SetOrderFirstDayTimes(Row);
    //门诊输液次数
    SetOrderLocalInfusionQty(Row);

    //if ((PAAdmType=="I")&&(OrderPriorRowid!=OutOrderPriorRowid)&&(OrderPriorRowid!=OneOrderPriorRowid)) {
    //$.messager.alert("警告",OMOrderPriorRowid+"^"+OMSOrderPriorRowid+"^"+OrderPriorRowid);
    if (GlobalObj.PAAdmType == "I") {
        //中医院取药医嘱和出院带药医嘱需要整包装
        if (((OrderPriorRowid == GlobalObj.OutOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OneOrderPriorRowid) || (OrderPriorRemarks == "ONE")) && (GlobalObj.CFOutAndOneDefaultPackQty == 1)) {
            var OrderSum = parseFloat(OrderPrice) * PackQty;
            SetCellData(Row, "OrderPackQty", PackQty);
            SetCellData(Row, "OrderSum", OrderSum);
        } else if (((OldOrderPackQty != "") && (OrderType == "R")) || (OrderPriorRowid == GlobalObj.OMOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid)) {
            //如果已经有整包装或者是自备药医嘱则不用去计算金额
            return true;
        } else {
            var OrderSum = (parseFloat(OrderPrice) / parseFloat(OrderConFac)) * parseFloat(BaseDoseQtySum);
            OrderSum = OrderSum.toFixed(4);
            SetCellData(Row, "OrderBaseQty", BaseDoseQty);
            SetCellData(Row, "OrderBaseQtySum", BaseDoseQtySum);
            //非药品长期医嘱且非长嘱才改变数量
            //if ((OrderType!="R")&&(IsLongPrior(OrderPriorRowid)!='1')) SetCellData(Row,"OrderPackQty",PackQty);
            if (OrderType != "R") SetCellData(Row, "OrderPackQty", PackQty);
            SetCellData(Row, "OrderSum", OrderSum);
        }
        //出院带药医嘱计算可用天数
        if (OrderPriorRowid == GlobalObj.OutOrderPriorRowid) {
            SetOrderUsableDays(Row);
        }

    } else {
        //alert("BaseDoseQtySum="+BaseDoseQtySum)
        var DrugFormRowid = GetCellData(Row, "OrderDrugFormRowid");
        var OrderDoseQty = GetCellData(Row, "OrderDoseQty", Row);
        //if ((IsSpecForm(DrugFormRowid))&&(PAAdmType!="I")&&(HospitalCode=="BJXHYY")&&(OrderDoseQty==t['ByDoctor'])){
        //	SetOrderUsableDays(Row);
        //}else{
        if (PackQty <= 0) { PackQty = 1 }
        var OrderSum = parseFloat(OrderPrice) * PackQty;
        OrderSum = OrderSum.toFixed(4);
        SetCellData(Row, "OrderPackQty", PackQty);
        SetCellData(Row, "OrderBaseQty", BaseDoseQty);
        SetCellData(Row, "OrderBaseQtySum", BaseDoseQtySum);
        SetCellData(Row, "OrderSum", OrderSum);
        SetOrderUsableDays(Row);
        //}
    }
    CheckFreqAndPackQty(Row)
    if (PageLogicObj.m_AddItemToListMethod != "ARCOS") SetScreenSum();
    var OrderPHPrescType = GetCellData(Row, "OrderPHPrescType")
    if (OrderPHPrescType == "4") {
        if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
            SetCellData(Row, "OrderPackQty", "");
        }
    }
    //配液不填整包装
    var OrderNeedPIVAFlag = GetCellData(Row, "OrderNeedPIVAFlag");
    if (OrderNeedPIVAFlag == "Y") {
        SetCellData(Row, "OrderPackQty", "");
    }
    return true;
}

function SetOrderLocalInfusionQty(Row) {
    var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid");
    var OrderFreqFactor = GetCellData(Row, "OrderFreqFactor");
    var OrderFreqInterval = GetCellData(Row, "OrderFreqInterval");
    var OrderDurRowid = GetCellData(Row, "OrderDurRowid");
    var OrderDurFactor = GetCellData(Row, "OrderDurFactor");
    var OrderInstrRowid = GetCellData(Row, "OrderInstrRowid");
    var OrderType = GetCellData(Row, "OrderType");
    if ((OrderType == 'R') && (GlobalObj.GetLocalInfusionInstrMethod != '')) {
        var CFLocalInfusionInstrStr = cspRunServerMethod(GlobalObj.GetLocalInfusionInstrMethod);
        CFLocalInfusionInstrStr = "^" + CFLocalInfusionInstrStr + "^";
        if (CFLocalInfusionInstrStr.indexOf("^" + OrderInstrRowid + "^") != -1) {
            if (OrderFreqFactor == "") OrderFreqFactor = 1;
            if (OrderDurFactor == "") OrderFreqFactor = 1;
            if ((OrderFreqInterval != "") && (OrderFreqInterval != null)) {
                var convert = Number(OrderDurFactor) / Number(OrderFreqInterval)
                var fact = (Number(OrderDurFactor)) % (Number(OrderFreqInterval));
                if (fact > 0) {
                    fact = 1;
                } else {
                    fact = 0;
                }
                OrderDurFactor = Math.floor(convert) + fact;
            }
            var OrderLocalInfusionQty = parseInt(OrderFreqFactor) * parseInt(OrderDurFactor);
            SetCellData(Row, "OrderLocalInfusionQty", OrderLocalInfusionQty);
        }
    }
}

function SetOrderUsableDays(Row) {
    if (GlobalObj.CalcDurByArcimMethod == "") return;
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid");
    var OrderDurRowid = GetCellData(Row, "OrderDurRowid");
    var OrderPackQty = GetCellData(Row, "OrderPackQty");
    if (OrderPackQty == "") return;
    var OrderDoseQty = GetCellData(Row, "OrderDoseQty");
    var OrderDoseUOMRowid = GetCellData(Row, "OrderDoseUOMRowid");
    var OrderPackUOMRowid = GetCellData(Row, "OrderPackUOMRowid");

    var UsableDays = cspRunServerMethod(GlobalObj.CalcDurByArcimMethod, OrderARCIMRowid, OrderFreqRowid, OrderDurRowid, OrderPackQty, OrderDoseQty, OrderDoseUOMRowid, OrderPackUOMRowid);
    var OrderType = GetCellData(Row, "OrderDoseUOMRowid");
    if ((OrderType != "R") && (UsableDays == "0")) {
        UsableDays = ""
    }
    SetCellData(Row, "OrderUsableDays", UsableDays);
}

function ConervToDate(OrderStartDate) {
    var OrderStartDateArr = OrderStartDate.split("/");
    var OrderStartDateYear = OrderStartDateArr[2];
    var OrderStartDateMonth = parseInt(OrderStartDateArr[1], 10) - 1;
    var OrderStartDateDay = OrderStartDateArr[0];
    var objDate = new Date(OrderStartDateYear, OrderStartDateMonth, OrderStartDateDay, 0, 0, 0);
    return objDate;
}
//如果有图标和元素在同一列里?要调整元素的宽度
function AdjustWidth(objwidth) {
    if (objwidth != "") {
        var objwidtharr = objwidth.split("px")
        var objwidthnum = objwidtharr[0] - 25;
        objwidth = objwidthnum + "px"
    }
    return objwidth
}

function dateadd(date1, day) {
    var T = new Date();
    if (day < 0) day = 0;
    var t = Date.parse(date1) + day * 1000 * 3600 * 24;
    T.setTime(t);
    return T;
}

function GetCountByFreqDispTime(FreqDispTimeStr, StartDateStr, DurFactor) {
    var count = 0
    var StartTime = new Date();
    var objStartDate = ConervToDate(StartDateStr);
    var ArrData = FreqDispTimeStr.split(String.fromCharCode(1));
    for (var j = 0; j < DurFactor; j++) {
        //var TempDate=new Date();
        var TempDate = dateadd(objStartDate, j);
        var TempDateWeek = TempDate.getDay();
        //$.messager.alert("警告",TempDateWeek);
        for (var i = 0; i < ArrData.length; i++) {
            var ArrData1 = ArrData[i].split(String.fromCharCode(2));
            var DispTime = ArrData1[0];
            var DispWeek = ArrData1[1];
            if (DispWeek == TempDateWeek) { count = count + 1 }
            if ((DispWeek == 7) && (TempDateWeek == 0)) { count = count + 1 }
        }
    }

    return count;
}
//检查频次和整包装数量是否应该是可用的
function CheckFreqAndPackQty(Row) {
    var RowStyleObj = {};
    var OrderType = GetCellData(Row, "OrderType");
    var IdPackQty = Row + "_" + "OrderPackQty"
    var objPackQty = document.getElementById(IdPackQty);
    var IdOrderFreq = Row + "_" + "OrderFreq"
    var objFreq = document.getElementById(IdOrderFreq);
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
    /*
    if (OrderPriorRowid==GlobalObj.LongOrderPriorRowid){
    	if (objFreq){
    		var obj={OrderPackQty:false}
    		$.extend(RowStyleObj,obj);
    	}	
    }
    */
    //小时医嘱
    var HourFlag = cspRunServerMethod(GlobalObj.IsHourItem, OrderARCIMRowid);
    if (HourFlag == "1") {
        //小时医嘱不能录入频次
        var obj = { OrderFreq: false }
        $.extend(RowStyleObj, obj);
        ClearOrderFreq(Row);
        if (OrderPriorRowid == GlobalObj.LongOrderPriorRowid) {
            //小时医嘱，长期的也不能录入数量
            var obj = { OrderPackQty: false }
            $.extend(RowStyleObj, obj);
        }
    }
    //高值材料
    if (GlobalObj.HighValueControl == 1) {
        var IncItmHighValueFlag = cspRunServerMethod(GlobalObj.GetIncItmHighValueFlag, OrderARCIMRowid)
        var OrderMaterialBarCode = GetCellData(Row, "OrderMaterialBarcodeHiden");
        if (IncItmHighValueFlag == "Y") {
            //高值数量为1不可改
            SetCellData(Row, "OrderPackQty", 1);
            //高值医嘱不能录入频次
            SetCellData(Row, "OrderFreq", "");
            SetCellData(Row, "OrderFreqRowid", "");
            SetCellData(Row, "OrderFreqFactor", 1);
            //单次计量
            SetCellData(Row, "OrderDoseQty", "");
            //疗程
            SetCellData(Row, "OrderDur", "");
            SetCellData(Row, "OrderDurRowid", "");
            SetCellData(Row, "OrderDurFactor", 1);
            var obj = { OrderPackQty: false, OrderFreq: false, OrderDoseQty: false, OrderDur: false }
            $.extend(RowStyleObj, obj);
        }
    }
    //检查检验单次计量不可填写
    var ItemServiceFlag = cspRunServerMethod(GlobalObj.GetItemServiceFlagMethod, OrderARCIMRowid);
    if ((ItemServiceFlag == "1") || (OrderType == "L")) {
        var obj = { OrderDoseQty: false }
        $.extend(RowStyleObj, obj);

    }
    //ChangeCellDisable(Row,RowStyleObj);
    ChangeRowStyle(Row, RowStyleObj);

}

function ChangeLinkOrderPrior(OrderSeqNo, OrderPriorRowid, OrderStartDate, OrderStartTime, OrderPrior) {
    try {
        var rows = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rows.length; i++) {
            var Row = rows[i];
            var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
            var OrderType = GetCellData(Row, "OrderType");
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderMasterSeqNo == OrderSeqNo)) {
                var OldOrderPriorRowid = GetCellData("OrderPriorRowid", Row)
                    //$.messager.alert("警告",OrderPrior+"^"+OrderPriorRowid);
                var obj = document.getElementById(Row + "_OrderPrior");
                if (GlobalObj.OrderPriorContrlConfig == 1) {
                    var Obj = "";
                    if ($.isNumeric(Row) == true) {
                        Obj = document.getElementById(Row + "_OrderPrior");
                    } else {
                        Obj = document.getElementById("OrderPrior");
                    }
                    ClearAllList(Obj);
                    if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
                        //只有长期
                        Obj.options[Obj.length] = new Option("长期医嘱", GlobalObj.LongOrderPriorRowid);
                        //SetCellData(SubID,"OrderPrior",GlobalObj.LongOrderPriorRowid);
                        //SetCellData(SubID,"OrderPriorRowid",GlobalObj.LongOrderPriorRowid);
                        SetCellData(Row, "OrderPriorStr", GlobalObj.LongOrderPriorRowid + ":" + "长期医嘱");
                    }
                    if ((OrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
                        //只有临时
                        Obj.options[Obj.length] = new Option("临时医嘱", GlobalObj.ShortOrderPriorRowid);
                        //SetCellData(SubID,"OrderPrior",GlobalObj.ShortOrderPriorRowid);
                        //SetCellData(SubID,"OrderPriorRowid",GlobalObj.ShortOrderPriorRowid);
                        SetCellData(Row, "OrderPriorStr", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
                    }
                    if ((OrderPriorRowid == GlobalObj.OutOrderPriorRowid)) {
                        //出院带药
                        Obj.options[Obj.length] = new Option("出院带药", GlobalObj.OutOrderPriorRowid);
                        //SetCellData(SubID,"OrderPrior",GlobalObj.OutOrderPriorRowid);
                        //SetCellData(SubID,"OrderPriorRowid",GlobalObj.OutOrderPriorRowid);
                        SetCellData(Row, "OrderPriorStr", GlobalObj.OutOrderPriorRowid + ":" + "出院带药");
                    }

                }
                if (obj) {
                    //可编辑状态
                    SetCellData(Row, "OrderPrior", OrderPriorRowid);
                    SetCellData(Row, "OrderPriorRowid", OrderPriorRowid);
                } else {
                    SetCellData(Row, "OrderPrior", OrderPrior);
                    SetCellData(Row, "OrderPriorRowid", OrderPriorRowid);
                }
                OrderPriorchangeCommon(Row, OldOrderPriorRowid, OrderPriorRowid);
                if (OrderStartDate != "" && OrderStartTime != "") {
                    SetCellData(Row, "OrderStartDate", OrderStartDate + " " + OrderStartTime);
                }
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function ChangeLinkOrderFreq(OrderSeqNo, OrderPriorRowid, OrderPrior, OrderFreqRowid, OrderFreq, OrderFreqFactor, OrderFreqInterval, OrderFreqDispTimeStr, OrderStartDateStr) {
    try {
        var rows = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rows.length; i++) {
            var Row = rows[i];
            var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
            var OrderType = GetCellData(Row, "OrderType");
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderMasterSeqNo == OrderSeqNo) && (OrderMasterSeqNo != "")) {
                SetCellData(Row, "OrderFreq", OrderFreq);
                SetCellData(Row, "OrderFreqRowid", OrderFreqRowid);
                SetCellData(Row, "OrderFreqFactor", OrderFreqFactor);
                SetCellData(Row, "OrderFreqInterval", OrderFreqInterval);
                SetCellData(Row, "OrderFreqDispTimeStr", OrderFreqDispTimeStr);
                var OldOrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
                if (OrderPriorRowid != "") {
                    var obj = document.getElementById(Row + "_OrderPrior");
                    if (obj) {
                        //可编辑状态
                        SetCellData(Row, "OrderPrior", OrderPriorRowid);
                        SetCellData(Row, "OrderPriorRowid", OrderPriorRowid);
                    } else {
                        SetCellData(Row, "OrderPrior", OrderPrior);
                        SetCellData(Row, "OrderPriorRowid", OrderPriorRowid);
                    }
                }
                var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
                if (OldOrderPriorRowid != OrderPriorRowid) OrderPriorchangeCommon(OldOrderPriorRowid, OrderPriorRowid);
                if (OrderStartDateStr != "") {
                    SetCellData(Row, "OrderStartDate", OrderStartDateStr);
                }
                SetPackQty(Row);
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function ChangeLinkOrderInstr(OrderSeqNo, OrderInstrRowid, OrderInstr) {
    try {
        var rows = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rows.length; i++) {
            var Row = rows[i];
            var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
            var OrderType = GetCellData(Row, "OrderType");
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderMasterSeqNo != "") && (OrderMasterSeqNo == OrderSeqNo)) {
                var InstrRowId = GetCellData(Row, "OrderInstrRowid")
                if (!IsNotFollowInstr(InstrRowId)) {
                    SetCellData(Row, "OrderInstr", OrderInstr);
                    SetCellData(Row, "OrderInstrRowid", OrderInstrRowid);
                    var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
                    //用法定义接收科室,未定义用法接收科室,则还取原接收科室串
                    var InstrReclocStr = GetReclocByInstr(Row);
                    var OrderRecLocStr = GetRecLocStrByPrior(InstrReclocStr, OrderPriorRowid);
                    SetColumnList(Row, "OrderRecDep", OrderRecLocStr);
                    OrderRecDepChangeCom(Row);
                    //调用这个干嘛？ 
                    //PHCINDesc_lookuphandlerX(Row); 
                    SetPackQty(Row);
                }
                var InstrRowId = GetCellData(Row, "OrderInstrRowid");
                if (IsWYInstr(InstrRowId)) {
                    if (GlobalObj.PAAdmType != "I") {
                        SetCellData(Row, "OrderDoseQty", "");
                        SetCellData(Row, "OrderDur", "");
                        SetCellData(Row, "OrderDurRowid", "");
                        SetCellData(Row, "OrderDurFactor", "");
                    }
                }
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function IsNotFollowInstr(InstrRowId) {
    if (InstrRowId == "") return false;
    if (GlobalObj.NotFollowInstr == "") return false;
    var Instr = "^" + InstrRowId + "^";
    if (GlobalObj.NotFollowInstr.indexOf(Instr) < 0) return false;
    return true;
}
//开始日期时间改变
function OEORISttDatchangehandler(e) {
    var Row = GetEventRow(e)
    var OrderStartDateStr = GetCellData(Row, "OrderStartDate");
    OEORISttDat_lookupSelect(Row, OrderStartDateStr);
    SetOrderFirstDayTimes(Row);
    SetFocusCell(Row, "OrderStartDate");
}

function OEORISttDat_lookupSelect(Row, OrderStartDateStr) {
    //var obj=document.getElementById('OrderStartDatez'+Row);
    //obj.value=OrderStartDateStr;
    var OrderSeqNo = GetCellData(Row, "id");
    ChangeLinkOrderStartDate(OrderSeqNo, OrderStartDateStr)
    SetFocusCell(Row, "OrderStartDate");
}

function ChangeLinkOrderStartDate(OrderSeqNo, OrderStartDateStr) {
    var rows = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rows.length; i++) {
        var Row = rows[i];
        var OrderMasterSeqNo = GetCellData(Row, "OrderMasterSeqNo");
        var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderMasterSeqNo == OrderSeqNo)) {
            SetCellData(Row, "OrderStartDate", OrderStartDateStr);
        }
    }
}
//皮试改变事件
function OrderSkinTestChangehandler(e) {
    var ActionRowid = "";
    var Row = GetEventRow(e);
    var OrderHiddenPara = GetCellData(Row, "OrderHiddenPara");
    var eSrc = websys_getSrcElement(e);
    var SkinTestYY = mPiece(OrderHiddenPara, String.fromCharCode(1), 0);
    if (eSrc.checked) {
        if (SkinTestYY == 1) {
            var OrderPriorArray = GlobalObj.OrderActionStr.split("^");
            for (var i = 0; i < OrderPriorArray.length; i++) {
                var OrderPrior = OrderPriorArray[i].split(String.fromCharCode(1));
                if (OrderPrior[1] == "YY") { ActionRowid = OrderPrior[0]; }
            }
            SetCellData(Row, "OrderAction", ActionRowid);
            SetCellData(Row, "OrderActionRowid", ActionRowid);
        }
        var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
        if (OrderPriorRowid != GlobalObj.ShortOrderPriorRowid) {
            if (GlobalObj.OrderPriorContrlConfig == 1) {
                SetColumnList(Row, "OrderPrior", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
                SetCellData(Row, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
                SetCellData(Row, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
                SetCellData(Row, "OrderPriorStr", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
            }
            SetCellData(Row, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
            SetCellData(Row, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
            OrderPriorchangeCommon(Row, OrderPriorRowid, GlobalObj.ShortOrderPriorRowid);
            //调用OrderPriorchangeCommon方法会改变光标焦点到用法位置
            SetFocusCell(Row, "OrderAction");
        }
    } else {
        SetCellData(Row, "OrderAction", "");
        SetCellData(Row, "OrderActionRowid", "");
    }
}

function OrderSeqNokeydownhandler(e) {
    var rowid = GetEventRow(e);
    try { keycode = websys_getKey(e); } catch (e) { keycode = websys_getKey(); }
    try {

        if ((keycode == 13) || (keycode == 9)) {
            var OrderPackQty = GetCellData(rowid, "OrderPackQty");
            var obj = websys_getSrcElement(e);
            if (obj.value == "") {
                SetFocusCell(rowid, "OrderFreq");
            } else {
                if ((GlobalObj.PAAdmType == "I") || ((GlobalObj.PAAdmType != "I") && (OrderPackQty != ""))) {
                    window.setTimeout("Add_Order_row()", 200);
                } else {
                    var JumpAry = ['OrderPackQty'];
                    CellFocusJump(rowid, JumpAry, true);
                }
            }
        }
    } catch (e) {}
}

function ChangeLinkOrderRecDep(OrderSeqNo, OrderRecDepRowid, OrderStartDateStr) {
    try {
        var rows = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rows.length; i++) {
            //$.messager.alert("警告",OrderRecDepRowid+"^"+OrderSeqNo)
            var rowid = rows[i];
            var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
            var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
            var OrderType = GetCellData(rowid, "OrderType");
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderMasterSeqNo == OrderSeqNo)) {
                //验证子医嘱接受科室串中是否存在主医嘱接收科室
                var FindSubRecDep = false;
                var CurrentRecLocStr = GetCellData(rowid, "CurrentRecLocStr")
                var ArrData = CurrentRecLocStr.split(String.fromCharCode(2));
                for (var m = 0; m < ArrData.length; m++) {
                    var ArrData1 = ArrData[m].split(String.fromCharCode(1));
                    if (ArrData1[0] == OrderRecDepRowid) { FindSubRecDep = true };
                }
                if (FindSubRecDep == false) {
                    dhcsys_alert(t['SubOrderRecDepNotDefine']);
                    //清空关联
                    SetCellData(rowid, "OrderMasterSeqNo", "")
                    $("#" + rowid).find("td").removeClass("OrderMasterS");
                    OrderMasterHandler(rowid, "C");
                    return false;
                }
                SetCellData(rowid, "OrderRecDep", OrderRecDepRowid);
                SetCellData(rowid, "OrderRecDepRowid", OrderRecDepRowid);
                if (OrderStartDateStr != "") {
                    SetCellData(rowid, "OrderStartDate", OrderStartDateStr);
                }
            }
        }
    } catch (e) { $.messager.alert("警告", e.message) }
}

function ResetDefaultCurrLocStr(CurrentRecLocStr, ReDefaultRecLocRowID) {
    //var CurrentRecLocStr=ParamObj.CurrentRecLocStr;
    var ArrData = CurrentRecLocStr.split(String.fromCharCode(2));
    var findDefaultRecLocFlag = 0;
    var BeforeDefaultRecLocIndex = -1;
    var AfterDefaultRecLocIndex = -1;
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(String.fromCharCode(1));
        if (ArrData1[2] == "Y") {
            BeforeDefaultRecLocIndex = i;
        }
        if (ArrData1[0] == ReDefaultRecLocRowID) {
            var findDefaultRecLocFlag = 1;
            AfterDefaultRecLocIndex = i;
        }
    }
    if (findDefaultRecLocFlag == 1) {
        if (BeforeDefaultRecLocIndex >= 0) {
            var ArrData1 = ArrData[BeforeDefaultRecLocIndex].split(String.fromCharCode(1));
            ArrData1[2] = "N";
            ArrData[BeforeDefaultRecLocIndex] = ArrData1.join(String.fromCharCode(1));
        }
        if (AfterDefaultRecLocIndex >= 0) {
            var ArrData1 = ArrData[AfterDefaultRecLocIndex].split(String.fromCharCode(1));
            ArrData1[2] = "Y";
            ArrData[AfterDefaultRecLocIndex] = ArrData1.join(String.fromCharCode(1));
        }
    }

    return ArrData.join(String.fromCharCode(2));


}

function CheckLinkOrderRecDep(MainID, SubID) {
    var OrderType = GetCellData(SubID, "OrderType");
    var MasterOrderRecDepRowid = GetCellData(MainID, "OrderRecDepRowid");
    var OrderPriorRemarks = GetCellData(SubID, "OrderPriorRemarksRowId");
    if ((GlobalObj.CFSameRecDepForGroup == 1) && (OrderType == 'R')) {
        var OrderPriorRowid = GetCellData(SubID, "OrderPriorRowid");
        if ((OrderPriorRowid != GlobalObj.OMOrderPriorRowid) && (OrderPriorRowid != GlobalObj.OMSOrderPriorRowid) && (OrderPriorRemarks != "OM") && (OrderPriorRemarks != "ZT")) {
            var OrderARCIMRowid = GetCellData(SubID, "OrderARCIMRowid");
            var OrderName = GetCellData(SubID, "OrderName");
            var OrderRecDepDesc = GetCellData(MainID, "OrderRecDep");
            var ExpStr=GlobalObj.EpisodeID+"^"+session['LOGON.CTLOCID']+"^0";
            var Check = cspRunServerMethod(GlobalObj.CheckStockEnoughMethod, OrderARCIMRowid, 1, MasterOrderRecDepRowid, GlobalObj.PAAdmType,ExpStr);
            var CheckArr=Check.split("^");
            Check=CheckArr[0];
            if (Check == '0') {
                dhcsys_alert(OrderName + OrderRecDepDesc + t['QTY_NOTENOUGH']);
                SetCellData(SubID, "OrderMasterSeqNo", "")
                    //if (GlobalObj.HospitalCode=='BJDTYY'){
                    //DeleteRow(SubID);
                return false;
                //}
            } else if (Check == '-1') {
                dhcsys_alert(OrderName + OrderRecDepDesc + t['QTY_INCItemLocked']);
                return false;
            } else {
	            if (Check == "-2"){
			        dhcsys_alert(OrderName + "通过医嘱或子类绑定的"+CheckArr[1] + t['QTY_INCItemLocked']);
		            return false;
			        
			    } else if (Check == "-3"){
				    dhcsys_alert(OrderName + "通过医嘱或子类绑定的"+CheckArr[1] + t['QTY_NOTENOUGH']);
		            return false;
			    }
                var OrderType = GetCellData(MainID, "OrderType");
                if (OrderType != "R") return false;

                var FindSubRecDep = false;
                var CurrentRecLocStr = GetCellData(SubID, "CurrentRecLocStr")
                var ArrData = CurrentRecLocStr.split(String.fromCharCode(2));
                for (var i = 0; i < ArrData.length; i++) {
                    var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                    if (ArrData1[0] == MasterOrderRecDepRowid) { FindSubRecDep = true };
                }
                if (FindSubRecDep == false) {
                    dhcsys_alert(t['SubOrderRecDepNotDefine']);
                    //清空关联
                    SetCellData(SubID, "OrderMasterSeqNo", "")
                    return false;
                }
                if (FindSubRecDep != false) {
                    var EditStatus = GetEditStatus(SubID);
                    SetCellData(SubID, "OrderRecDepRowid", MasterOrderRecDepRowid);
                    if (EditStatus == true) {
                        SetCellData(SubID, "OrderRecDep", MasterOrderRecDepRowid);
                    } else {
                        SetCellData(SubID, "OrderRecDep", OrderRecDepDesc);
                    }
                }
            }
        }
    }
    return true;
}
//-------------高值更新
//高值条码
function OrderMaterialBarcodeContrl(rowid) {
    var label = GetCellData(rowid, "OrderMaterialBarcode");
    if (label == "") { return; }
    var AricmStr = cspRunServerMethod(GlobalObj.GetArcimByLabel, label)
    var ArcimArr = AricmStr.split("^")
    var arcimRowid = ArcimArr[0];
    if (arcimRowid == "") {
        dhcsys_alert("该条码对应的医嘱项目不存在,请核实!")
        return false;
    }
    if (ArcimArr[1] == "Enable") {
        var IncItmHighValueFlag = ArcimArr[7]
        if (IncItmHighValueFlag == "N") {
            var ret = AddItemToList(rowid, arcimRowid, "", "", "", "data", label);
            if (!ret) {
                ClearRow(rowid);
            }
        } else {
            if (GlobalObj.HighValueControl != 1) {
                dhcsys_alert("您所登录的科室没有录入高值材料的权限,请联系信息科确认!")
                return false;
            }
            //返回的是实库存数量。其实可以走统一的库存判断不用在这做判断

            var avaQty = ArcimArr[4]
            if (avaQty <= 0) {
                dhcsys_alert("该条码对应的医嘱库存不足.")
                return false;
            }
            var ReLocId = ArcimArr[5] //材料可用接收科室
            if (arcimRowid != "") {
                var ReLocIdFlag = "N";
                /*
                if($.isNumeric(rowid)==true){
                	//删除当前行
                	var PreRow=GetPreRowId();
                	DeleteRow(PreRow);
                }*/
                SetCellData(rowid, "OrderMaterialBarcode", label)
                SetCellData(rowid, "OrderMaterialBarcodeHiden", label);
                var ret = AddItemToList(rowid, arcimRowid, "", "", "", "data", label);
                if (ret == true) {
                    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
                    if (OrderARCIMRowid != "") {
                        var OrderRecLocStr = GetCellData(rowid, "CurrentRecLocStr");
                        var ArrData = OrderRecLocStr.split(String.fromCharCode(2));
                        for (var i = 0; i < ArrData.length; i++) {
                            var ArrData1 = ArrData[i].split(String.fromCharCode(1));
                            if ((ArrData1[0] == ReLocId) && (ReLocIdFlag != "Y")) { ReLocIdFlag = "Y" };
                        }
                        if (ReLocIdFlag == "N") {
                            dhcsys_alert("该条码不能在该科室使用!")
                            var id = GetCellData(rowid, "id");
                            ClearRow(id);
                            return false;
                        }
                        SetCellData(rowid, "OrderMaterialBarcodeHiden", label); //把条码放到一个隐藏的列里面
                        SetCellData(rowid, "OrderMaterialBarcode", label)
                    }
                } else {
                    ClearRow(rowid);
                }
            }
        }

    } else {
        dhcsys_alert("该条码不存在或者已被使用!")
        return false;
    }
}

function OrderMaterialBarcode_changehandler(e) {
    var rowid = GetEventRow(e);
    OrderMaterialBarcodeContrl(rowid);
    /*if (GlobalObj.HighValueControl==1){
    	OrderMaterialBarcodeContrl(rowid);
    }else{
    	dhcsys_alert("您所登录的科室没有录入高值材料的权限,请联系信息科确认!")
    	return false;
    }*/
}

function OrderMaterialBarcode_Keypresshandler(e) {
    var type = websys_getType(e);
    var key = websys_getKey(e);
    var rowid = GetEventRow(e);
    if (key == 13) {
        OrderMaterialBarcodeContrl(rowid);
    }
    /*if ((key==13)&&(GlobalObj.HighValueControl==1)) {
    	OrderMaterialBarcodeContrl(rowid);			
    }
    if(GlobalObj.HighValueControl!=1){
    	dhcsys_alert("您所登录的科室没有录入高值材料的权限,请联系信息科确认!")
    	return false;
    }*/
}
//审核医嘱时候再次对高值条码可用性检测
function CheckMaterialBarcode(LabelCode, Row) {
    if (GlobalObj.HighValueControl == 1) {
        var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
        var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
        var AricmStr = cspRunServerMethod(GlobalObj.GetArcimByLabel, LabelCode)
        var ArcimArr = AricmStr.split("^")
        if (ArcimArr[1] == "Enable") {
            var arcimRowid = ArcimArr[0]
            var avaQty = ArcimArr[4]
            if (avaQty <= 0) {
                $.messager.alert("警告", "该条码对应的医嘱库存不足.")
                return false;
            }
            var ReLocId = ArcimArr[5]; //材料可用接收科室
            var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");
            if (ReLocId != OrderRecDepRowid) {
                $.messager.alert("警告", "该条码接收科室错误!")
                return false;
            }
            if ((OrderARCIMRowid != "") && (OrderARCIMRowid != arcimRowid)) {
                $.messager.alert("警告", "条码和所对应的医嘱项目不符.")
                return false;
            }
        } else {
            $.messager.alert("警告", "条码:" + LabelCode + "不可用,请输入其它条码!")
            SetFocusCell(Row, "OrderMaterialBarcode");
            return false;
        }
        if (OrderPriorRowid != GlobalObj.ShortOrderPriorRowid) { $.messager.alert("警告", "高值材料请开临时医嘱使用!"); return false; }
    }
    return true
}
//-------------高值更新	
//出院带药根据病人的费别其他限制
function CheckOutOrderOtherContral(OrderName, OrderBillTypeRowid, DurRowid, ItemCatRowid, ARCIMRowidStr, ArcimId, FreqRowid, qtyPackUom, DoseQty, unitUomId) {
    if (GlobalObj.PAAdmType != "I") { return true }
    if (GlobalObj.CheckOutOrderOtherMethod != "") {
        var retDetail = cspRunServerMethod(GlobalObj.CheckOutOrderOtherMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, DurRowid, ItemCatRowid, ARCIMRowidStr, ArcimId, FreqRowid, qtyPackUom, DoseQty, unitUomId);
        var TempArr = retDetail.split("^");
        if (TempArr[0] == 1) {
            dhcsys_alert(TempArr[1]);
            return false;
        }
    }
    //判断是否有相同出院带药,仅提示
    if (GlobalObj.FindSameOutOrderItemMethod != "") {
        var ret = cspRunServerMethod(GlobalObj.FindSameOutOrderItemMethod, GlobalObj.EpisodeID, ArcimId, ARCIMRowidStr);
        if (ret == 1) {
            if (!dhcsys_confirm(OrderName + ",存在相同的出院带药医嘱,是否继续?")) return false;
        }
    }
    return true
}

function GetDefaultLabSpec(LabSpecStr) {
    var DefaultSpecRowid = "";
    var DefaultSpecDesc = "";
    var ArrData = LabSpecStr.split(String.fromCharCode(2));
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(String.fromCharCode(3));
        if (ArrData1[4] == "Y") {
            var DefaultSpecRowid = ArrData1[0];
            var DefaultSpecDesc = ArrData1[1];
        }
    }
    return DefaultSpecRowid
}

function ReSetOrderPriorRowid(OrderPriorRowid, OrderPriorRemarks) {
    switch (OrderPriorRemarks) {
        case "PRN":
            OrderPriorRowid = GlobalObj.PRNOrderPriorRowid;
            break;
        case "ONE":
            OrderPriorRowid = GlobalObj.OneOrderPriorRowid;
            break;
        case "OM":
            /*if (OrderPriorRowid==GlobalObj.ShortOrderPriorRowid) {
            	OrderPriorRowid=GlobalObj.OMOrderPriorRowid;
            }else{
            	OrderPriorRowid=GlobalObj.OMSOrderPriorRowid;
            }*/
            if (OrderPriorRowid != GlobalObj.LongOrderPriorRowid) {
                OrderPriorRowid = GlobalObj.OMOrderPriorRowid;
            } else {
                OrderPriorRowid = GlobalObj.OMSOrderPriorRowid;
            }
            break;
        case "ZT":
            /*if (OrderPriorRowid==GlobalObj.ShortOrderPriorRowid) {
            	OrderPriorRowid=GlobalObj.OMLSZTOrderPriorRowid;
            }else{
            	OrderPriorRowid=GlobalObj.OMCQZTOrderPriorRowid;
            }*/
            if (OrderPriorRowid != GlobalObj.LongOrderPriorRowid) {
                OrderPriorRowid = GlobalObj.OMLSZTOrderPriorRowid;
            } else {
                OrderPriorRowid = GlobalObj.OMCQZTOrderPriorRowid;
            }
            break;
        case "OUT":
            OrderPriorRowid = GlobalObj.OutOrderPriorRowid;
            break;
        default:
    }
    return OrderPriorRowid;
}
//疗程超量原因
function ExceedReasonChange(e) {
    var rowid = "";
    var obj = websys_getSrcElement(e);
    var rowid = GetEventRow(e);
    SetCellData(rowid, "ExceedReasonID", obj.value);
}
//打印门诊导诊单
function BtnPrtGuidPatHandler(RepeatFlag) {
    var url = "websys.default.csp?WEBSYS.TCOMPONENT=DHCDocPatGuideDocumentsPrt&EpisodeID=" + EpisodeID + "&mradm=" + mradm + "&PatientID=" + GlobalObj.PatientID;
    var ConfirmPrintAll = dhcsys_confirm("是否打印全部导诊单项目?");
    if (ConfirmPrintAll) {
        window.open(url, "DHCDocPatGuideDocumentsPrtPrintAll", "top=0,left=0,width=1,height=1,alwaysLowered=yes");
    } else {
        websys_createWindow(url, "DHCDocPatGuideDocumentsPrt", "top=100,left=200,width=1000,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes");
    }
}
//重新打印门诊导诊单
function BtnRePrtGuidPat_Click() {
    //补打导诊单 全部打印
    var RepeatFlag = 1;
    BtnPrtGuidPatHandler(RepeatFlag);
}
//保存为医嘱套
function SaveToArcos_Click() {
    var SelIds = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
    if (SelIds == null || SelIds.length == 0) {
        $.messager.alert("警告", "请选择要保存到医嘱套的记录");
        return;
    }
    var HasNosave = 0
    for (var i = 0; i < SelIds.length; i++) {
        var OrderItemRowid = GetCellData(SelIds[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(SelIds[i], "OrderARCIMRowid");
        if (OrderItemRowid == "" && OrderARCIMRowid != "") {
            var HasNosave = 1;
            break;
        }
    }
    if (HasNosave == 0) {
        $.messager.alert("警告", "选择的记录中不存在未审核的医嘱！")

        return false;
    }

    var RtnStr = UDHCOEOrderDescSetLink();
    if (!RtnStr) { return websys_cancel(); }
    var ArcosRowid = RtnStr.split("^")[0];
    if (ArcosRowid != "") { AddTOArcosARCIM(ArcosRowid, SelIds); } else { $.messager.alert("警告", "保存失败!"); return websys_cancel(); }
}
//插入医嘱套名称
function UDHCOEOrderDescSetLink() {
    //var lnk="websys.default.csp?WEBSYS.TCOMPONENT=UDHCFavOrderSets.Edit";
    var lnk = "udhcfavitem.edit.new.csp?TDis=1";
    var obj = new Object();
    var RtnStr = window.showModalDialog(lnk, obj, "dialogwidth:70;dialogheight:25;help:no;status:no;center:1;resizable:no");
    return RtnStr
}
//对应的医嘱套医嘱保存
function AddTOArcosARCIM(Arcosrowid, rowids) {
    if (Arcosrowid == "") { return websys_cancel(); }
    var len = rowids.length;
    //var rowids=$('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {

        //门诊的已经审核但未收费不会在录入的医嘱套中
        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        if (OrderItemRowid == "" && OrderARCIMRowid != "") {
            var OrderMasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
            var OrderSeqNo = GetCellData(rowids[i], "id");
            var OrderPriorRowid = GetCellData(rowids[i], "OrderPriorRowid");
            //存在关联号为空,也赋值了关联号到医嘱套维护界面,在AddCopyItemToList有判断不影响使用
            if (OrderMasterSeqNo == "") {
                //如果存在子医嘱则赋值,不存在则不赋值
                var SubRowidsAry = GetMasterSeqNo(rowids[i]);
                if (SubRowidsAry.length > 0) {
                    OrderMasterSeqNo = OrderSeqNo;
                }
            } else {
                OrderMasterSeqNo = OrderMasterSeqNo + "." + (OrderSeqNo - OrderMasterSeqNo)
            }
            var OrderDoseQty = GetCellData(rowids[i], "OrderDoseQty"); //剂量
            var OrderDoseUOM = GetCellData(rowids[i], "OrderDoseUOMRowid"); //剂量单位
            var OrderFreqRowID = GetCellData(rowids[i], "OrderFreqRowid"); //频次
            var OrderInstrRowID = GetCellData(rowids[i], "OrderInstrRowid"); //用法
            var OrderDurRowid = GetCellData(rowids[i], "OrderDurRowid"); //疗程
            var OrderPackQty = GetCellData(rowids[i], "OrderPackQty"); //整包装
            var OrderPackUOM = GetCellData(rowids[i], "OrderPackUOMRowid"); //整包装单位
            var OrderDepProcNote = GetCellData(rowids[i], "OrderDepProcNote"); //医嘱备注
            var OrderPriorRemarks = GetCellData(rowids[i], "OrderPriorRemarksRowId"); //附加说明
            if (OrderPriorRemarks == "false") OrderPriorRemarks = "";
            var SampleId = GetCellData(rowids[i], "OrderLabSpecRowid");
            //SampleId 标本ID,ARCOSItemNO  插入指定位置(医嘱录入不用), OrderPriorRemarksDR As %String
            var ret = tkMakeServerCall('web.DHCARCOrdSets', 'InsertItem', Arcosrowid, OrderARCIMRowid, OrderPackQty, OrderDoseQty, OrderDoseUOM, OrderFreqRowID, OrderDurRowid, OrderInstrRowID, OrderMasterSeqNo, OrderDepProcNote, OrderPriorRowid, SampleId, "", OrderPriorRemarks);
        }
    }

    $.messager.alert("警告", "保存成功")
    return websys_cancel();
}

function SetSaveForUserClickHandler() {
    var rowids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
    if (rowids == null || rowids.length == 0) {
        $.messager.alert("警告", "请选择行");
        return;
    }
    var SuccessCount = 0;
    var len = rowids.length;
    for (var i = 0; i < len; i++) {
        var OrderType = GetCellData(rowids[i], "OrderType");
        var OrderName = GetCellData(rowids[i], "OrderName");
        if (OrderType != "R") {
            $.messager.alert("警告", "医嘱项:[" + OrderName + "]不是药品,不允许添加!");
            continue;
        }
        var ret = OtherMenuUpdate("User", session["LOGON.USERID"], rowids[i]);
        if (parseFloat(ret) > 0) {
            SuccessCount = SuccessCount + 1
        }
    }
    if (parseFloat(SuccessCount) > 0) {
        $.messager.alert("提示", "有" + SuccessCount + "条记录保存成功.");
    }
    return websys_cancel();
}

function OtherMenuUpdate(ContralType, ContralKey, rowid) {
    try {
        var SeccessCount = 0;
        var ContralStr = "";
        ContralStr = GetContralStr(ContralType, ContralKey, rowid);
        if (ContralStr == "") return "";
        var OrderName = GetCellData(rowid, "OrderName");
        var UserID = session["LOGON.USERID"];
        var ret = cspRunServerMethod(GlobalObj.SaveItemDefaultMethod, ContralStr, UserID);
        var TempArr = ret.split("^");
        if (TempArr[0] == '0') { SeccessCount = SeccessCount + 1; } else if (TempArr[0] == '-100') { $.messager.alert("警告", "医嘱项:[" + OrderName + "],保存失败,错误代码:-100!") } else if (TempArr[0] == '-101') { $.messager.alert("警告", "医嘱项:[" + OrderName + "],保存失败,错误代码:-101!") } else {}

    } catch (e) { $.messager.alert("警告", e.message) }
    return SeccessCount;
}

function GetContralStr(ContralType, ContralKey, rowid) {
    var OrderName = GetCellData(rowid, "OrderName");
    var OrderItemRowid = GetCellData(rowid, "OrderItemRowid");
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    var OrderType = GetCellData(rowid, "OrderType");
    var OrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
    var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
    var OrderFreqRowid = GetCellData(rowid, "OrderFreqRowid");
    var OrderFreq = GetCellData(rowid, "OrderFreq");
    var OrderFreqFactor = GetCellData(rowid, "OrderFreqFactor");
    var OrderDurRowid = GetCellData(rowid, "OrderDurRowid");
    var OrderDur = GetCellData(rowid, "OrderDur");
    var OrderDurFactor = GetCellData(rowid, "OrderDurFactor");
    var OrderInstrRowid = GetCellData(rowid, "OrderInstrRowid");
    var OrderInstr = GetCellData(rowid, "OrderInstr");
    var OrderDoseQty = GetCellData(rowid, "OrderDoseQty");
    var OrderDoseUOMRowid = GetCellData(rowid, "OrderDoseUOMRowid");
    var OrderDoseUOM = GetCellData(rowid, "OrderDoseUOM");

    var OrderPackQty = GetCellData(rowid, "OrderPackQty");
    var OrderSeqNo = GetCellData(rowid, "id");
    var OrderMasterSeqNo = GetCellData(rowid, "OrderMasterSeqNo");
    var PHPrescType = GetCellData(rowid, "OrderPHPrescType");
    var OrderConFac = GetCellData(rowid, "OrderConFac");
    var OrderBaseQty = GetCellData(rowid, "OrderBaseQty");
    var OrderPrice = GetCellData(rowid, "OrderPrice");
    var OrderStartDateStr = GetCellData(rowid, "OrderStartDate");
    var OrderStartDate = "";
    if (OrderStartDateStr != "") {
        OrderStartDate = OrderStartDateStr.split(" ")[0];
    }
    var OrderPHForm = GetCellData(rowid, "OrderPHForm");
    var OrderItemSum = GetCellData(rowid, "OrderSum");
    var OrderEndDateStr = GetCellData(rowid, "OrderEndDate");
    var OrderEndDate = "";
    if (OrderStartDateStr != "") {
        OrderEndDate = OrderEndDateStr.split(" ")[0];
    }
    var OrderAlertStockQty = GetCellData(rowid, "OrderAlertStockQty");
    var OrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    var OrderHiddenPara = GetCellData(rowid, "OrderHiddenPara");
    var OrderPackUOM = GetCellData(rowid, "OrderPackUOMRowid");
    var OrderFirstDayTimes = GetCellData(rowid, "OrderFirstDayTimes");
    var OrderSkinTest = GetCellData(rowid, "OrderSkinTest");
    var OrderActionRowid = GetCellData(rowid, "OrderActionRowid");
    var OrderAction = GetCellData(rowid, "OrderAction");
    var OrderHiddenPara = GetCellData(rowid, "OrderHiddenPara");
    var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
    var Notes = "";
    //审查判断
    if (OrderARCIMRowid == "") {
        dhcsys_alert(t["NoItem"])
        return "";
    }
    if (ContralKey == "") {
        dhcsys_alert(t["NoContralType"])
        return "";
    }

    var ContralStr = OrderARCIMRowid + "^" + ContralType + "^" + ContralKey + "^" + OrderPriorRowid + "^" + OrderDoseQty + "^" + OrderDoseUOMRowid;
    ContralStr = ContralStr + "^" + OrderInstrRowid + "^" + OrderFreqRowid + "^" + OrderDurRowid + "^" + OrderPackQty + "^" + OrderSkinTest;
    ContralStr = ContralStr + "^" + OrderActionRowid + "^" + OrderMasterSeqNo + "^" + OrderSeqNo + "^" + Notes + "^" + GlobalObj.PAAdmType;

    return ContralStr;
}

//同步子医嘱首日次数
function OrderFirstDayTimeschangehandler(e) {
    var rowid = GetEventRow(e);
    var rowid = GetEventRow(e);
    ChangeFirstDayTimes(rowid)
}

function ChangeFirstDayTimes(rowid) {
    var OrderFirstDayTimes = GetCellData(rowid, "OrderFirstDayTimes");
    var rowids = GetMasterSeqNo(rowid);
    for (var i = 0; i < rowids.length; i++) {
        SetCellData(rowids[i], "OrderFirstDayTimes", OrderFirstDayTimes);
    }
}

function OrderFirstDayTimeskeypresshandler(e) {
    try { keycode = websys_getKey(e); } catch (e) { keycode = websys_getKey(); }
    if (keycode == 45) { window.event.keyCode = 0; return websys_cancel(); }

    if ((keycode > 47) && (keycode < 58)) {} else if (keycode == 13) {
        OrderFirstDayTimeschangehandler(e);
    } else {
        window.event.keyCode = 0;
        return websys_cancel();
    }
}
//需要配液
function OrderNeedPIVAFlagChangehandler(e) {
    try {
        var rowid = GetEventRow(e);
        CancelNeedPIVA(rowid)
    } catch (e) { $.messager.alert("警告", e.message) }
}
//部位说明改变
function OrderBodyPartchangehandler(e) {
    try {
        var rowid = GetEventRow(e);
        var obj = websys_getSrcElement(e);
        var OrderBodyPartID = obj.value;

        SetCellData(rowid, "OrderBodyPartID", OrderBodyPartID);

        ChangeLinkOrderBodyPart(rowid);
    } catch (e) { $.messager.alert("警告", e.message) }
}

function CancelNeedPIVA(rowid) {
    var OrderNeedPIVAFlag = GetCellData(rowid, "OrderNeedPIVAFlag");
    var OrderFreqRowid = GetCellData(rowid, "OrderFreqRowid");
    if (OrderNeedPIVAFlag == "Y") {
        OrderNeedPIVAFlag = true;
        var OrderPackQtyStyleObj = { OrderPackQty: false, OrderPackUOM: false }
    } else {
        OrderNeedPIVAFlag = false;
        var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
        var OrderPriorRemarks = GetCellData(rowid, "OrderPriorRemarks");
        var OrderType = GetCellData(rowid, "OrderType");
        var OrderPackQtyStyleObj = ContrlOrderPackQty(rowid, OrderPriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid);
    }
    if (OrderNeedPIVAFlag) { SetCellData(rowid, "OrderPackQty", ""); } else { SetPackQty(rowid); }
    ChangeCellDisable(rowid, OrderPackQtyStyleObj);
    var RowArry = GetSeqNolist(rowid);
    for (var i = 0; i < RowArry.length; i++) {
        SetCellData(RowArry[i], "OrderNeedPIVAFlag", OrderNeedPIVAFlag);
        if (OrderNeedPIVAFlag) { SetCellData(RowArry[i], "OrderPackQty", ""); } else { SetPackQty(RowArry[i]); }
        ChangeCellDisable(RowArry[i], OrderPackQtyStyleObj);
    }

}

function ChangeLinkOrderBodyPart(Row) {
    try {
        var OrderBodyPart = GetCellData(Row, "OrderBodyPart");
        var OrderBodyPartID = GetCellData(Row, "OrderBodyPartID");
        var RowArry = GetSeqNolist(Row);
        for (var i = 0; i < RowArry.length; i++) {
            SetCellData(RowArry[i], "OrderBodyPart", OrderBodyPartID);
            SetCellData(RowArry[i], "OrderBodyPartID", OrderBodyPartID);
        }
    } catch (e) { dhcsys_alert(e.message) }
}
//医嘱阶段改变
function OrderStagechangehandler(e) {
    try {
        var rowid = GetEventRow(e);
        var obj = websys_getSrcElement(e);
        var OrderStageCode = obj.value;

        SetCellData(rowid, "OrderStageCode", OrderStageCode);

        ChangeLinkOrderStage(rowid);
    } catch (e) { $.messager.alert("警告", e.message) }
}

function ChangeLinkOrderStage(Row) {
    try {
        var OrderStage = GetCellData(Row, "OrderStage");
        var OrderStageCode = GetCellData(Row, "OrderStageCode");
        var RowArry = GetSeqNolist(Row)
        for (var i = 0; i < RowArry.length; i++) {
            SetCellData(RowArry[i], "OrderStage", OrderStageCode);
            SetCellData(RowArry[i], "OrderStageCode", OrderStageCode);
        }
    } catch (e) { dhcsys_alert(e.message) }
}
//
function AntUseReasonchangehandler(e) {
    try {
        var rowid = GetEventRow(e);
        var obj = websys_getSrcElement(e);
        var AntUseReasonRowid = obj.value;
        SetCellData(rowid, "AntUseReasonRowid", AntUseReasonRowid);
    } catch (e) { $.messager.alert("警告", e.message) }
}
// 数量控制  返回 OrderPackQty{} 
function ContrlOrderPackQty(rowid, PriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid) {
    var OrderPackQtyObj = { OrderPackQty: true, OrderPackUOM: true };
    //门诊住院 区分
    if (GlobalObj.PAAdmType == "I") {
        //药品
        if (OrderType == "R") {
            //GlobalObj.CFLongOrderNotAllowPackQty  基本设置-》长期医嘱不能录入整数量
            //长期医嘱、长期自备药要医嘱不允许修改总量；
            if ((PriorRowid == GlobalObj.LongOrderPriorRowid || PriorRowid == GlobalObj.OMSOrderPriorRowid || PriorRowid == GlobalObj.OMCQZTOrderPriorRowid) && ((GlobalObj.CFLongOrderNotAllowPackQty == 1))) {
                OrderPackQtyObj.OrderPackQty = false;
                OrderPackQtyObj.OrderPackUOM = false;
            }
            //基本设置-》住院临时药品医嘱不允许录入整数量
            var OrderPriorRemarks = GetCellData(rowid, "OrderPriorRemarksRowId");
            if ((GlobalObj.ShortDrugOrdNotAllowPackQty == 1)&&(OrderPriorRemarks!="ONE")&&(PriorRowid != GlobalObj.OutOrderPriorRowid)) {
                OrderPackQtyObj.OrderPackQty = false;
                OrderPackQtyObj.OrderPackUOM = false;
            }
            //科室扩展设置-》不允许录入整包装数量
            if (GlobalObj.LocNotPackQty == 1) {
                OrderPackQtyObj.OrderPackQty = false;
                OrderPackQtyObj.OrderPackUOM = false;
            }
            if (!OrderPackQtyObj.OrderPackQty) { SetCellData(rowid, "OrderPackQty", "")}
        } else {
            //非药品带频次项目对于长期不能录入整数量的情况是一样的. 因为都是按执行记录数量字段计费,无频次可以修改数量
            var IdOrderFreq = rowid + "_" + "OrderFreq";
            var objFreq = document.getElementById(IdOrderFreq);
            if ((((objFreq) && (!objFreq.disabled)) || (OrderFreqRowid != "")) && (PriorRowid == GlobalObj.LongOrderPriorRowid || PriorRowid == GlobalObj.OMSOrderPriorRowid || PriorRowid == GlobalObj.OMCQZTOrderPriorRowid) && (GlobalObj.CFLongOrderNotAllowPackQty == 1)) {
                OrderPackQtyObj.OrderPackQty = false;
                OrderPackQtyObj.OrderPackUOM = false;
            }
        }
    } else {
        //门诊数量允许修改
        OrderPackQtyObj.OrderPackQty = true;
        OrderPackQtyObj.OrderPackUOM = true;
        if ((OrderType == "R") && (GlobalObj.LocNotPackQty == 1)) {
            OrderPackQtyObj.OrderPackQty = false;
            OrderPackQtyObj.OrderPackUOM = false;
        }
    }
    //标版控制非药品医嘱,数量单位不允许修改,解决数量单位和基本单位不一致时,收费异常
    if (OrderType != "R") {
        OrderPackQtyObj.OrderPackUOM = false;
    }
    return OrderPackQtyObj
}

//相互作用
function XHZY_Click() {
    if (GlobalObj.DHCDTInterface == 1) {
        //CreateXHZY();
        DaTongXHZYHander();
    }
    //知识库
    var rtnZSK = CheckLibPhaFunction("C", "", "")
}

function DaTongXHZYHander() {
    var Orders = "";
    var Para1 = "";
    var myrtn = 0;
    var rowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {
        //过滤已审核
        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        if (OrderItemRowid != "" || OrderARCIMRowid == "") { continue; }

        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        var OrderType = GetCellData(rowids[i], "OrderType");
        var OrderDurRowid = GetCellData(rowids[i], "OrderDurRowid");
        var OrderFreqRowid = GetCellData(rowids[i], "OrderFreqRowid");
        var OrderInstrRowid = GetCellData(rowids[i], "OrderInstrRowid");
        var OrderDoseQty = GetCellData(rowids[i], "OrderDoseQty");
        var OrderDoseUOMRowid = GetCellData(rowids[i], "OrderDoseUOMRowid");
        var OrderDrugFormRowid = GetCellData(rowids[i], "OrderDrugFormRowid");
        var OrderPHPrescType = GetCellData(rowids[i], "OrderPHPrescType")
        var OrderStartDate = GetCellData(rowids[i], "OrderStartDate")
        var OrderStartTime = GetCellData(rowids[i], "OrderStartTime")
        var OrderPriorRowid = GetCellData(rowids[i], "OrderPriorRowid");
        //传组号
        var MasterSeqNo = "";
        var OrderSeqNo = GetCellData(rowids[i], "id");
        var OrderMasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
        if (OrderMasterSeqNo != "") MasterSeqNo = OrderMasterSeqNo;
        //判断是否处理草药
        //if ((OrderPHPrescType==3)&&(DTCheckCNMed!="1")){continue;} 

        Para1 = OrderARCIMRowid + "!" + OrderDoseQty + "!" + OrderDoseUOMRowid;
        Para1 = Para1 + "!" + OrderFreqRowid + "!" + OrderDurRowid + "!" + OrderInstrRowid + "!" + OrderDrugFormRowid + "!" + MasterSeqNo + "!" + OrderPriorRowid + "!" + OrderStartDate + "!" + OrderStartTime;
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R")) {
            if (Orders == "") { Orders = Para1 } else { Orders = Orders + "^" + Para1 }
        }
    }
    var EpisodeID = GlobalObj.EpisodeID;
    if (EpisodeID != "") {
        //var UploadFlag="0";	
        var DocCode = session['LOGON.USERCODE'];
        var UserID = session['LOGON.USERID'];
        //web.DHCandDaTongInterface.GetPrescXML	
        var myPrescXML = cspRunServerMethod(GlobalObj.GetPrescXML, Orders, EpisodeID, DocCode, UserID);
        if (GlobalObj.PAAdmType == "I") {
            myrtn = dtywzxUI(28676, 1, myPrescXML);
        } else {
            myrtn = dtywzxUI(4, 0, myPrescXML);
        }

    }
    return myrtn;
}
///大通相互作用保存到大通服务器
function DaTongXHZYSave() {
    if (GlobalObj.DTDepNotDoUpLoad == 1) return 0;
    var Orders = "";
    var Para1 = "";
    var myrtn = 0;
    var rowids = $('#Order_DataGrid').getDataIDs();
    for (var i = 0; i < rowids.length; i++) {
        //过滤已审核
        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        if (OrderItemRowid != "" || OrderARCIMRowid == "") { continue; }

        var OrderItemRowid = GetCellData(rowids[i], "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(rowids[i], "OrderARCIMRowid");
        var OrderType = GetCellData(rowids[i], "OrderType");
        var OrderDurRowid = GetCellData(rowids[i], "OrderDurRowid");
        var OrderFreqRowid = GetCellData(rowids[i], "OrderFreqRowid");
        var OrderInstrRowid = GetCellData(rowids[i], "OrderInstrRowid");
        var OrderDoseQty = GetCellData(rowids[i], "OrderDoseQty");
        var OrderDoseUOMRowid = GetCellData(rowids[i], "OrderDoseUOMRowid");
        var OrderDrugFormRowid = GetCellData(rowids[i], "OrderDrugFormRowid");
        var OrderPHPrescType = GetCellData(rowids[i], "OrderPHPrescType")
        var OrderStartDate = GetCellData(rowids[i], "OrderStartDate")
        var OrderStartTime = GetCellData(rowids[i], "OrderStartTime")
        var OrderPriorRowid = GetCellData(rowids[i], "OrderPriorRowid");
        //传组号
        var MasterSeqNo = "";
        var OrderSeqNo = GetCellData(rowids[i], "id");
        var OrderMasterSeqNo = GetCellData(rowids[i], "OrderMasterSeqNo");
        if (OrderMasterSeqNo != "") MasterSeqNo = OrderMasterSeqNo;
        //判断是否处理草药
        //if ((OrderPHPrescType==3)&&(DTCheckCNMed!="1")){continue;} 

        Para1 = OrderARCIMRowid + "!" + OrderDoseQty + "!" + OrderDoseUOMRowid;
        Para1 = Para1 + "!" + OrderFreqRowid + "!" + OrderDurRowid + "!" + OrderInstrRowid + "!" + OrderDrugFormRowid + "!" + MasterSeqNo + "!" + OrderPriorRowid + "!" + OrderStartDate + "!" + OrderStartTime;
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "") && (OrderType == "R")) {
            if (Orders == "") { Orders = Para1 } else { Orders = Orders + "^" + Para1 }
        }
    }
    var EpisodeID = GlobalObj.EpisodeID;
    if ((EpisodeID != "")) {
        var DocCode = session['LOGON.USERCODE'];
        var UserID = session['LOGON.USERID'];

        var myPrescXML = cspRunServerMethod(GlobalObj.GetPrescXML, Orders, EpisodeID, DocCode, UserID);
        if (GlobalObj.PAAdmType == "I") {
            myrtn = dtywzxUI(28685, 1, myPrescXML);
        } else {
            myrtn = dtywzxUI(13, 0, myPrescXML);
        }
    }
    return myrtn;
}
// 药品说明书
function YDTS_Click() {
    //$.messager.alert("警告",GlobalObj.DHCDTInterface);
    if (GlobalObj.DHCDTInterface == 1) {
        //选中一行
        var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
        if (ids == null || ids.length == 0 || ids.length > 1) {
            $.messager.alert("警告", "请选择一条医嘱");
            return;
        }
        var itemid = GetCellData(ids[0], "OrderARCIMRowid");
        if (itemid == "") return;
        CreateYDTS(itemid, 1);
    } else {
        //知识库---如果使用大通的就不在展示知识库的。-如果需要展示单独设置使用新的按钮在这不进行统一设置。
        var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
        if (ids == null || ids.length == 0 || ids.length > 1) {
            $.messager.alert("警告", "请选择一条医嘱");
            return;
        }
        LinkMesageZSQ(ids[0])
    }
}

function CreateYDTS(Para, ShowType) {
    var itemid = Para;
    //web.DHCandDaTongInterface.GetDTYDTS
    var myDTYDTSXML = cspRunServerMethod(GlobalObj.GetDTYDTS, itemid);
    //$.messager.alert("警告",myDTYDTSXML);
    dtywzxUI(12, 0, myDTYDTSXML);
    return;

    var url = "udhcdt.ydts.csp?ItmID=" + Para + "&Type=" + ShowType;
    var newwin = window.open(url, "", "top=10000,left=10000");
    return;
}

function dtywzxUI(nCode, lParam, sXML) {
    var result = "";
    result = CaesarComponent.dtywzxUI(nCode, lParam, sXML);
    return result;
}
//补录关联医嘱
function SetVerifiedOrder(itemids) {
    var LinkMastStr = "^^^"
    var itemArr = itemids.split("^");
    $("#Prompt").html("");
    //置空关联
    NurseAddMastOrde(LinkMastStr);
    for (key in VerifiedOrderObj) {
        VerifiedOrderObj[key] = "";
    }
    if (itemids == "") {
        return
    }
    var OrderObj = {
            LinkedMasterOrderName: "",
            LinkedMasterOrderRowid: "",
            LinkedMasterOrderSeqNo: "",
            LinkedMasterOrderPriorRowid: "",
            LinkedMasterOrderFreRowId: "",
            LinkedMasterOrderFreFactor: "",
            LinkedMasterOrderFreInterval: "",
            LinkedMasterOrderFreDesc: ""
        }
        //取第一条 主医嘱
    var itemid = itemArr[0];
    var oneItem = cspRunServerMethod(GlobalObj.GetVerifiedOrder, itemid);

    var VerifiedOrderArr = oneItem.split("^");
    var Flag = VerifiedOrderArr[0];
    if (Flag != "0") {
        dhcsys_alert(Flag);
        return;
    }
    OrderObj.LinkedMasterOrderName = VerifiedOrderArr[1];
    OrderObj.LinkedMasterOrderRowid = VerifiedOrderArr[2];
    OrderObj.LinkedMasterOrderSeqNo = VerifiedOrderArr[3];
    OrderObj.LinkedMasterOrderPriorRowid = VerifiedOrderArr[4];
    var OrderFreStr = VerifiedOrderArr[5];
    OrderObj.LinkedMasterOrderFreRowId = mPiece(OrderFreStr, String.fromCharCode(1), 0);
    OrderObj.LinkedMasterOrderFreFactor = mPiece(OrderFreStr, String.fromCharCode(1), 1);
    OrderObj.LinkedMasterOrderFreInterval = mPiece(OrderFreStr, String.fromCharCode(1), 2);
    OrderObj.LinkedMasterOrderFreDesc = mPiece(OrderFreStr, String.fromCharCode(1), 3);
    LinkMastStr = OrderObj.LinkedMasterOrderRowid + "^" + OrderObj.LinkedMasterOrderSeqNo + "^" + OrderObj.LinkedMasterOrderPriorRowid + "^" + OrderFreStr;

    $("#Prompt").html("<font COLOR=RED>当前主医嘱: " + OrderObj.LinkedMasterOrderName + "   医嘱ID:" + OrderObj.LinkedMasterOrderRowid + "</font>");
    $.extend(VerifiedOrderObj, OrderObj);
    //验证已经录入到界面的医嘱进行关联
    NurseAddMastOrde(LinkMastStr)
}

function ClearVerifiedOrder() {
    $("#Prompt").html("");
    for (key in VerifiedOrderObj) {
        VerifiedOrderObj[key] = "";
    }
    //护士补录医嘱刷新清除右侧选中，清除已经关联的关系
    try {
        var par_win = window.parent.parent.parent.left.RPbottom
        if (par_win) {
            par_win.ClearCheck();
            NurseAddMastOrde("^^^", "");
        }
    } catch (e) {

    }
}
//****************抗生素11 更改以下方法,可直接替换********************************/
function ICheckDoctorTypePoison(OrderPoisonRowid, icode, Row, OrderPoisonCode) {
    var PrescCheck = CheckDoctorTypePoison_7(OrderPoisonRowid, icode, Row, OrderPoisonCode);
    if (PrescCheck == false) { return false; }
}
//****************抗生素11 以下是新加方法********************************/
//var AuditFlag=""  
// 7.0 抗菌药物调用方法
function CheckDoctorTypePoison_7(PoisonRowId, ArcimRowid, Row, OrderPoisonCode) {
    if (PoisonRowId == '') return true;
    if (OrderPoisonCode.indexOf("KSS") < 0) return true;
    var PAADMRowid = GlobalObj.EpisodeID;
    var DoctorTypePoisonStr = GlobalObj.DoctorTypePoisonStr;
    if (CheckAuditItem()) { return true; }
    var Checkret = 0 //CheckSuscept(PAADMRowid,ArcimRowid)
    if (Checkret == 1) {
        var ret = dhcsys_confirm(("病人对于该药品有耐药反应，是否对患者继续开该药品"), false);
        if (!ret) { return ret; }
    }
    //检查疗程之内的相同医嘱不在弹出登记表。
    //var rtn=CheckInDurSameIM(ArcimRowid,Row);
    //if (rtn==true){   return rtn ;}
    var Arr = DoctorTypePoisonStr.split("^");
    var ShowTabStr = ""
    var OrderPoisonDesc = ""
    if (GlobalObj.GetPHCPoisonByCode != "") {
        OrderPoisonDesc = cspRunServerMethod(GlobalObj.GetPHCPoisonByCode, OrderPoisonCode)
    }
    var ReasonFlag = 0
    for (j = 0; j < Arr.length; j++) {
        var TypePoisonRowId = mPiece(Arr[j], String.fromCharCode(1), 0);
        var TypeControl = mPiece(Arr[j], String.fromCharCode(1), 1);
        if (PoisonRowId == TypePoisonRowId) {
            ReasonFlag = 1
            if (TypeControl == 'F') {
                dhcsys_alert("该药品属于" + OrderPoisonDesc + "(管制分类)" + t['PoisonClassIsFobidden']);
                return false;
            }
            if (TypeControl == 'A') {
                var ret = dhcsys_confirm(("该药品属于" + OrderPoisonDesc + "(管制分类)" + t['PoisonClassNeedConfirm']), false);
                if (!ret) {
                    DeleteRow(Row);
                    return ret;
                }
            }

            if (TypeControl == 'P') {
                dhcsys_alert("治疗类药品请送检");
                if (OrderPoisonCode.indexOf("KSS3") >= 0) {
                    ShowTabStr = "Apply,Consult"
                    SetCellData(Row, "ShowTabStr", ShowTabStr);
                } else {
                    ShowTabStr = "Apply";
                    SetCellData(Row, "ShowTabStr", ShowTabStr);
                }
                var antMainUrl = "dhcdocantimain.csp?ShowTabStr=" + ShowTabStr + "&EpisodeID=" + PAADMRowid + "&ArcimRowid=" + ArcimRowid + "&OrderPoisonCode=" + OrderPoisonCode
                var ret = window.showModalDialog(antMainUrl, "", "dialogwidth:800px;dialogheight:600px;status:no;center:1;resizable:yes");
                if (ret != "") {
                    SetAntInfo(ret, Row)
                } else {
                    DeleteRow(Row);
                    return false;
                }
            }
            if (TypeControl == 'S') {
                //ReasonFlag=1
                //return true;
            }

            if (TypeControl == '') {
                //return true;
            }
        }
    }
    if (DoctorTypePoisonStr == "") {
        dhcsys_alert("该药品属于" + OrderPoisonDesc + "(管制分类)," + t['PoisonClassIsFobidden']);
        DeleteRow(Row);
        return false
    }
    if ((ShowTabStr == "") && (OrderPoisonCode.indexOf("KSS") >= 0) && (ReasonFlag == 1)) {
        dhcsys_alert("治疗类药品请送检");
        ShowTabStr = "UserReason"
        SetCellData(Row, "ShowTabStr", ShowTabStr);
        var antMainUrl = "dhcdocantimain.csp?ShowTabStr=" + ShowTabStr + "&EpisodeID=" + PAADMRowid + "&ArcimRowid=" + ArcimRowid + "&OrderPoisonCode=" + OrderPoisonCode
        var ret = window.showModalDialog(antMainUrl, "", "dialogwidth:800px;dialogheight:600px;status:no;center:1;resizable:yes");
        //if(ret!=""){
        if ((ret != "") && (ret != undefined)) {
            SetAntInfo(ret, Row);
        } else {
            DeleteRow(Row);
            return false;
        }
    }
    if (ReasonFlag == 0) {
        dhcsys_alert("该药品属于" + OrderPoisonDesc + "(管制分类)," + t['PoisonClassIsFobidden']);
        DeleteRow(Row);
        return false;
    }
    return true;
}

function SetAntInfo(AntInfoStr, Row) {
    if (AntInfoStr == "") {
        var Row = GetPreRowId();
        DeleteRow(Row);
    } else {
        var AntInfoArr = AntInfoStr.split("!")
        var UserReasonID = AntInfoArr[0]
        var AntibApplyRowid = AntInfoArr[1]
        var OrderInsId = AntInfoArr[2]
        var OrderInsDesc = AntInfoArr[3]
        var specailAction = AntInfoArr[4]
        SetCellData(Row, "OrderAntibApplyRowid", AntibApplyRowid);
        SetCellData(Row, "UserReasonId", UserReasonID); //使用目的 
        if ((OrderInsId != "") && (OrderInsDesc != "")) {
            SetCellData(Row, "OrderInstrRowid", OrderInsId);
            SetCellData(Row, "OrderInstr", OrderInsDesc);
        }
        if (specailAction == "isEmergency") {
            //SetCellData(Row,"OrderPrior",GlobalObj.ShortOrderPriorRowid);
            //SetCellData(Row,"OrderPriorRowid",GlobalObj.ShortOrderPriorRowid);
            SetColumnList(Row, "OrderPrior", GlobalObj.OrderPriorStr);
            SetCellData(Row, "OrderPrior", GlobalObj.ShortOrderPriorRowid);
            SetCellData(Row, "OrderPriorRowid", GlobalObj.ShortOrderPriorRowid);
            SetCellData(Row, "OrderPriorStr", GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱");
            OrderPriorchangeCommon(Row, "", GlobalObj.ShortOrderPriorRowid);
            var obj = { OrderPrior: false, OrderFreq: false };
            ChangeRowStyle(Row, obj)
            SetCellData(Row, "OrderFreqRowid", GlobalObj.ONCEFreqRowid);
            SetCellData(Row, "OrderFreq", GlobalObj.ONCEFreq);
            SetCellData(Row, "SpecialAction", "isEmergency||");
        }
    }
}

function DeleteAntReason(CurrentRow) {
    var UserReasonId = GetCellData(CurrentRow, "UserReasonId");
    if ((UserReasonId != "") && (GlobalObj.ReasonCanBeDeletedMethod != "")) {
        var rtn = cspRunServerMethod(GlobalObj.ReasonCanBeDeletedMethod, UserReasonId);
        if ((rtn == 1) && (GlobalObj.DeleteAntReasonMethod != "")) {
            var ret = cspRunServerMethod(GlobalObj.DeleteAntReasonMethod, UserReasonId);
        }
    }
}

function AntLoad() {
    var EpisodeID = GlobalObj.EpisodeID
    var userid = session['LOGON.USERID'];
    var AntAuditOrderStop = new GetKSSOrderStopInfo()
        //check is doctor or nurse
    var IsDoc = tkMakeServerCall("web.DHCDocAntiCommon", "GetCareType", userid)
    if (IsDoc == 1) {
        var ordInfo = tkMakeServerCall("web.DHCDocAntibioticReason", "GetAuditApplyInfo", EpisodeID, userid)
        if (ordInfo != "") {
            var antMainUrlnew = "dhcantauditinfo.csp?&EpisodeID=" + EpisodeID + "&userid=" + userid;
            var antMainret = window.showModalDialog(antMainUrlnew, "", "dialogwidth:620px;dialogheight:420px;status:no;center:1;resizable:yes");
            if ((antMainret != "") && (antMainret != undefined)) {
                //var Copyary = new Array();
                //Copyary[Copyary.length] = antMainret;
                //AddCopyItemToList(Copyary);
                var antArr=antMainret.split(',')
                AddCopyItemToList(antArr);
            }

        }
    }
}

//添加 抗菌药物检查方法。
function CheckAuditItem() {
    if (GlobalObj.AuditFlag == 1) { GlobalObj.AuditFlag = ""; return true; } else { return false; }
}

function CheckSuscept(episodeid, arcim) {
    var ret = 0;
    if (GlobalObj.CheckSusceptMethod != "") {
        var ret = cspRunServerMethod(GlobalObj.CheckSusceptMethod, episodeid, arcim);
        return ret;
    }
    return ret
}

function CheckInDurSameIM(ImRowid, Row) {
    var EpisodeID = GlobalObj.EpisodeID
    var flag = false;
    if (GlobalObj.CheckInDurSameIMMethod != "") {
        var ret = cspRunServerMethod(GlobalObj.CheckInDurSameIMMethod, EpisodeID, ImRowid);
        var retArr = ret.split("^")
        var ret1 = retArr[0];
        if (ret1 == 2) {
            var UserReasonID = retArr[1];
            SetCellData(Row, "UserReasonId", UserReasonID)
            flag = true
        }
    }
    return flag;
}

function CheckCMMRDiagnos(itemCatRowID) {
    //$.messager.alert("警告",itemCatRowID);
    var flag = false;
    var ret = tkMakeServerCall("web.DHCDocIPBookingCtl", "GetCMMRDiagnosByEpisode", GlobalObj.EpisodeID);
    //没有中医诊断

    if (ret == "N") {
        var MedItemCat = MedItemCatStr.split("^")
        for (var i = 0; i < MedItemCat.length; i++) {
            if (MedItemCat[i] == itemCatRowID) {
                flag = true;
            }
        }
    } else {
        flag = true;
    }
    //$.messager.alert("警告",flag);
    return flag;
}

//打开处方打印界面--20150108--lrf
function PrescriptList() {
    var posn = "height=" + (screen.availHeight - 40) + ",width=" + (screen.availWidth - 10) + ",top=0,left=0,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes";
    var path = "websys.default.csp?WEBSYS.TCOMPONENT=UDHCPrescript.Print&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&mradm=" + mradm + "&WardID=";
    websys_createWindow(path, false, posn);
}
//打开治疗单界面--20150108--lrf
function LabPrintList() {
    var posn = "height=" + (screen.availHeight - 40) + ",width=" + (screen.availWidth - 10) + ",top=0,left=0,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes";
    var path = "websys.default.csp?WEBSYS.TCOMPONENT=UDHCOrderItem.Lab.Print&PatientID=" + GlobalObj.PatientID + "&EpisodeID=" + GlobalObj.EpisodeID + "&mradm=" + mradm + "&WardID=";
    websys_createWindow(path, false, posn);
}

function CheckPermissionByARC(icode, OrderDesc) {
    return true;
    try {
        var ret = tkMakeServerCall("web.DHCST.Common.DrugInfoCommon", "GetMangerDrugByARC", icode);
        if ((ret == "") || (ret == null)) return true;
        ret = ret.split("^");
        var UserID = session['LOGON.USERID'];

        var MangerDrug = MangerDrugStr.split("^");

        for (var i = 0; i < MangerDrugStr.length; i++) {
            if (ret[1] == MangerDrug[i]) {
                var flag = tkMakeServerCall("web.DHCDocCommon", "GetPermissionsByUserID", UserID);
                if (flag != 1) {
                    dhcsys_alert(OrderDesc + ",无权限开此药")
                    return false;
                }
            }
        }
    } catch (e) {}
    return true;
}

function StopOrderItem() {
    var OrdList = "";
    var MastRowId = "";
    var rowids = GetAllRowId();
    for (var i = 0; i < rowids.length; i++) {
        //取子医嘱
        if ((document.getElementById("jqg_Order_DataGrid_" + rowids[i]).checked != true))
            continue;
        if (CheckIsItem(rowids[i]) == false) { continue; }
        var OEORIRowId = GetCellData(rowids[i], "OrderItemRowid");
        if (parseInt(rowids[i]) != rowids[i]) MastRowId = parseInt(rowids[i]);
        else MastRowId = "";
        if (OrdList == "") OrdList = OrdList + OEORIRowId + "&&&" + MastRowId;
        else OrdList = OrdList + "^" + OEORIRowId + "&&&" + GetCellData(MastRowId, "OrderItemRowid");
    }

    if (OrdList != "") {
        try {
            var rtn = tkMakeServerCall("web.UDHCStopOrderLook", "StopOrder", "", "", OrdList, session['LOGON.USERID'], "", "N");
            var flag=rtn.split("^")[0];
            if ((flag != 0)&&(flag != "-2000")) {
                $.messager.alert("警告", "停医嘱失败");
            }else if (flag == "-2000") {
		        alert("停医嘱失败!"+rtn.split("^")[1]+"有对应的申请单号,请在申请界面取消申请!")
		        return false
		    }
        } catch (e) {
            $.messager.alert("警告", "停止失败");
        }
    } else {
        $.messager.alert("警告", "请在已审核项目上勾选要停止的项目");
        return;
    }

    ReloadGrid("StopOrd");
}
//仅控制使用tab键跳转用,回车键因为焦点的不确定性(比如有弹出框)在相应的触发事件中处理跳转
function Doc_OnKeyDown(e) {
	if (GlobalObj.warning != "") {
		dhcsys_alert(GlobalObj.warning);
        return false;
	}
    var rowid = GetEventRow(e);

    var nextRowid = parseInt(rowid) + 1;
    var obj = websys_getSrcElement(e);
    var name = obj.name;
    var keycode = websys_getKey(e);
    /*
    if(name=="OrderDepProcNote"&&(keycode==9||keycode==13)){
       Add_Order_row();
       SetFocusCell(nextRowid,"OrderName");	 
    }
    */
    if (keycode == 9) {
        if (obj.id == (rowid + "_OrderInstr")) {
            var OrderDurObj = document.getElementById(rowid + "_OrderDur");
            var OrderPackQtyObj = document.getElementById(rowid + "_OrderPackQty");
            if (OrderDurObj && (OrderDurObj.disabled == false)) {
                SetFocusCell(rowid, "OrderDur");
            } else if (OrderPackQtyObj && (OrderPackQtyObj.disabled == false)) {
                SetFocusCell(rowid, "OrderPackQty");
            } else {
                window.setTimeout("Add_Order_row()", 200);
            }
        }

        if (obj.id == (rowid + "_OrderDoseUOM")) {
            SetFocusCell(rowid, "OrderFreq");
        }

        if (obj.id == (rowid + "_OrderDepProcNote")) {
            window.setTimeout("Add_Order_row()", 200);
        }
    }
    if (e){
	    var ctrlKeyFlag=e.ctrlKey;
	}else{
		var ctrlKeyFlag=window.event.ctrlKey;
	}
    if (ctrlKeyFlag){
	    if (event.keyCode == 83){ //保存医嘱
		    UpdateClickHandler();
		}else if(event.keyCode == 65){ //添加模板医嘱
			MultiTemplOrdEntry(e);
		}else if(event.keyCode == 82){ //关联 拆关联
			ChangeOrderSeqhandler(e);
		}else if(event.keyCode == 67){ //撤销医嘱
			if (GlobalObj.PAAdmType != "I") {
				StopOrderItem(e);
			}
		}else if(event.keyCode == 80){ //一键打印
		   if (GlobalObj.PAAdmType != "I") {
			   BtnPrtClickHandler(e);
		   }
		}
		return false;
	}
}
///------输液次数
//输入数字验证
function keypressisnumhandler(e) {
    try { keycode = websys_getKey(e); } catch (e) { keycode = websys_getKey(); }
    if (keycode == 45) { window.event.keyCode = 0; return websys_cancel(); }

    if ((keycode > 47) && (keycode < 58)) {} else {
        window.event.keyCode = 0;
        return websys_cancel();
    }
}
//输液次数change事件
function OrderLocalInfusionQty_changehandler(e) {
    var Row = GetEventRow(e);
    ChangeLinkOrderLocalInfusionQty(Row);
}

//输液次数同步  
function ChangeLinkOrderLocalInfusionQty(Row) {
    try {
        var OrderLocalInfusionQtyMain = GetCellData(Row, "OrderLocalInfusionQty").replace(/(^\s*)|(\s*$)/g, '');
        var RowArry = GetSeqNolist(Row)
        for (var i = 0; i < RowArry.length; i++) {
            SetCellData(RowArry[i], "OrderLocalInfusionQty", OrderLocalInfusionQtyMain)
        }
    } catch (e) { dhcsys_alert(e.message) }
}

//输液流速
function OrderSpeedFlowRate_changehandler(e) {
    var Row = GetEventRow(e);
    ChangeOrderSpeedFlowRate(Row)
}
//输液流速同步  
function ChangeOrderSpeedFlowRate(Row) {
    try {
        var OrderSpeedFlowRatemain = GetCellData(Row, "OrderSpeedFlowRate").replace(/(^\s*)|(\s*$)/g, '');
        var RowArry = GetSeqNolist(Row)
        for (var i = 0; i < RowArry.length; i++) {
            SetCellData(RowArry[i], "OrderSpeedFlowRate", OrderSpeedFlowRatemain)
        }
    } catch (e) { dhcsys_alert(e.message) }
}

function OrderEndDate_changehandler(e) {
    var Row = GetEventRow(e);
    ChangeLinkOrderEndDate(Row)
}

function ChangeLinkOrderEndDate(Row) {
    try {
        var OrderEndDate = GetCellData(Row, "OrderEndDate")
        var RowArry = GetSeqNolist(Row)
        for (var i = 0; i < RowArry.length; i++) {
            SetCellData(RowArry[i], "OrderEndDate", OrderEndDate)
        }
    } catch (e) { dhcsys_alert(e.message) }
}

function OrderDate_changehandler(e) {
    var Row = GetEventRow(e);
    ChangeLinkOrderDate(Row)
}

function ChangeLinkOrderDate(Row) {
    try {
        var OrderDate = GetCellData(Row, "OrderDate")
        var RowArry = GetSeqNolist(Row)
        for (var i = 0; i < RowArry.length; i++) {
            SetCellData(RowArry[i], "OrderDate", OrderDate)
        }
    } catch (e) { dhcsys_alert(e.message) }
}

//一键打印
function BtnPrtClickHandler() {
    var PatientID = GlobalObj.PatientID;
    var MRADMID = GlobalObj.mradm;
    var EpisodeID = GlobalObj.EpisodeID;
    var userid = session['LOGON.USERID'];
    var ctlocid = session['LOGON.CTLOCID'];
    //var PrtClick=new PrtClickInfo(EpisodeID,PatientID,MRADMID,ctlocid,userid)
    var lnk = "oeorder.printall.csp?PatientID=" + PatientID + "&EpisodeID=" + EpisodeID
    window.open(lnk, true, "status=1,scrollbars=1,top=20,left=10,width=1300,height=690");

}

function UpdateClickHandlerFinish() {
    /*var Url=window.location.href
	var HeadUrl=Url.split("?")[0]
	var BackUrl=Url.split("?")[1]
	var strArr=BackUrl.split("&")
    var strArrNew=strArr.slice(0,strArr.length-2)
    ////解决通过医嘱单医生复制医嘱审核之后，医嘱重复问题
    var NewStr=strArrNew.join("&")+"&copyOeoris=&copyTo="; 
    var Url=HeadUrl+"?"+NewStr
	window.location.href=Url*/
    window.location.href = window.location.href;
}

/// 协议包装,2014-05-30,by xp,End
///得到菜单参数
function GetMenuPara(ParaName) {
    var myrtn = "";
    var frm = dhcsys_getmenuform();
    if (frm) {
        myrtn = eval("frm." + ParaName + ".value");
    }
    return myrtn;
}
//以选中的第一条医嘱为准。 同步选中医嘱时间日期
function SynBtnClickHandler() {
    try {
        var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
        if (ids == null || ids.length == 0 || ids.length == 1) {
            $.messager.alert("警告", "请选择需要同步的多行记录");
            return;
        }
        ids = ids.sort();
        var OrderStartDateMain = GetCellData(ids[0], "OrderStartDate")
        var OrderDateMain = GetCellData(ids[0], "OrderDate")
        var len = ids.length;
        for (var i = 1; i < len; i++) {
            //已审核医嘱不能同步
            if (CheckIsItem(ids[i]) == false) {
                SetCellData(ids[i], "OrderStartDate", OrderStartDateMain)
                SetCellData(ids[i], "OrderDate", OrderDateMain)
            }
        }
        $.messager.alert("警告", "医嘱时间同步完成。请确认!");
    } catch (e) {};
}

///医嘱日期检测
function CheckOrderDateTime(Row) {
    var OrderStartDateMain = "",
        OrderDateMain = "",
        OrderEndDateMain = "";
    var OrderName = GetCellData(Row, "OrderName");
    var OrderStartDate = GetCellData(Row, "OrderStartDate").replace(/(^\s*)|(\s*$)/g, '')
    if (OrderStartDate != "") OrderStartDateMain = OrderStartDate.split(" ")[0];
    var OrderDate = GetCellData(Row, "OrderDate").replace(/(^\s*)|(\s*$)/g, '')
    if (OrderDate != "") OrderDateMain = OrderDate.split(" ")[0]
    var OrderEndDate = GetCellData(Row, "OrderEndDate").replace(/(^\s*)|(\s*$)/g, '')
    if (OrderEndDate != "") OrderEndDateMain = OrderEndDate.split(" ")[0];
    if (OrderDateMain == "") { $.messager.alert("警告", OrderName + " " + "请选择开医嘱日期"); return false; }
    if (OrderStartDateMain == "") { $.messager.alert("警告", OrderName + " " + "请选择医嘱开始日期"); return false; }
    if (GlobalObj.CurrentDischargeStatus == "B") {
        //$.extend(ParamObj,{OrderStartDate:GlobalObj.DischargeDate+' '+GlobalObj.DischargeTime});
        OrderDateMain = GlobalObj.DischargeDate
    }
    var CheckMessage = cspRunServerMethod(GlobalObj.CheckOrderDateMethod, GlobalObj.EpisodeID, OrderDate)
    if (CheckMessage != "") {
        $.messager.alert("警告", OrderName + " " + CheckMessage);
        return false;
    }
    if ((!CompareDate(OrderDateMain, OrderStartDateMain)) && (GlobalObj.ModifyDateTimeAuthority != "1")) {
        $.messager.alert("警告", OrderName + " " + "医嘱日期和医嘱开始日期错误请重新选择");
        return false;
    }
    if (!CompareDate(OrderStartDateMain, OrderEndDateMain)) {
        $.messager.alert("警告", OrderName + " " + "医嘱开始日期和停止日期错误请重新选择");
        return false;
    }
    return true;
}
//按用法手动补录医嘱方法
function AddLinkItemToList(ParaArr, MasterOrderItemRowId, MasterOrderSeqNo, MasterOrderPriorRowid, MasterOrderFreqStr, MasterOrderStartDate, MasterOrderStartTime) {

    //删除当前最后一行空白行
    //var CruRow=GetPreRowId();
    //if(CheckIsClear(CruRow)==true){DeleteRow(CruRow);}

    //var MasterOrderStartDate = cspRunServerMethod(GlobalObj.ConverDateMethod, MasterOrderStartDate, 3, 4);
    var length = ParaArr.length;
    for (var i = 0; i < length; i++) {
        var para1 = ParaArr[i].split("!")
        var icode = para1[0];
        var seqno = para1[1];
        var ItemOrderType = para1[2];
        var linkqty = para1[4];
        //var LinkNotes=para1[5];
        var Para = "";
        var CopyBillTypeRowId = "";
        //var rowids=$('#Order_DataGrid').getDataIDs();
        //if (rowids.length==0) Add_Order_row();
        Add_Order_row();
        if (CheckDiagnose(ItemOrderType)) {
            var CruRow = GetPreRowId();
            var ret = AddItemToList(CruRow, icode, Para, CopyBillTypeRowId, "")
            if (ret == true) { Add_Order_row() }
        }
    }
    SetVerifiedOrder(MasterOrderItemRowId);
}

//协议包装,2014-05-30,by xp,Start
//初始化需要接收科室还有医嘱项ID,注意初始化位置在前边两项之后进行附值
function GetBillUOMStr(rowid,SpecOrderPackUOMRowid) {
	if (typeof SpecOrderPackUOMRowid == "undefined") { SpecOrderPackUOMRowid="" }
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    var OrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
    //取协议包装单位
    if (OrderRecDepRowid != "") {
        var BillUOMStr = cspRunServerMethod(GlobalObj.GetBillUOMStrMethod, OrderARCIMRowid, OrderRecDepRowid, "OrderEntry");
        if (SpecOrderPackUOMRowid==""){
	        SetColumnList(rowid, "OrderPackUOM", BillUOMStr);
            SetCellData(rowid, "OrderPackUOMStr", BillUOMStr);
        }else{
	        ReSetBillUomBySpecPackUOM(rowid,BillUOMStr,SpecOrderPackUOMRowid);
	        SetCellData(rowid, "OrderPackUOMStr", BillUOMStr);
	    }
        OrderPackUOMchangeCommon(rowid);
    }
}
function ReSetBillUomBySpecPackUOM(rowid,BillUOMStr,SpecOrderPackUOMRowid){
	var DefaultOrderPackUOM = "";
    var DefaultOrderPackUOMDesc = "";
    var ArrData = BillUOMStr.split(String.fromCharCode(2));
    for (var i = 0; i < ArrData.length; i++) {
        var ArrData1 = ArrData[i].split(String.fromCharCode(1));
        if ((ArrData1[0] == SpecOrderPackUOMRowid)&&(SpecOrderPackUOMRowid!="")&&(SpecOrderPackUOMRowid!=undefined)) {
            var DefaultOrderPackUOM = ArrData1[0];
            var DefaultOrderPackUOMDesc = ArrData1[1];
        }
    }
    if (DefaultOrderPackUOM != "") {
        SetCellData(rowid, "OrderPackUOMRowid", DefaultOrderPackUOM);
        if (UIConfigObj.isEditCopyItem == true) {
            SetCellData(rowid, "OrderPackUOM", DefaultOrderPackUOM);
        }else{
	        SetCellData(rowid, "OrderPackUOM", DefaultOrderPackUOMDesc);
	    }
    }
}
function OrderPackUOMchangehandler(e) {
    var Row = GetEventRow(e);
    OrderPackUOMchangeCommon(Row);
	SetPackQty(Row);
    SetScreenSum();

}

function OrderPackUOMchangeCommon(Row) {
    var Id = Row + "_" + "OrderPackUOM";
    var obj = document.getElementById(Id);
    if ((obj) && (obj.type == "select-one")) {
        var selIndex = obj.selectedIndex;
        var PackUOMRowid = ""
        if (selIndex != -1) { PackUOMRowid = obj.options[selIndex].value; }
        SetCellData(Row, "OrderPackUOMRowid", PackUOMRowid);
        SetCellData(Row, "OrderPackUOM", PackUOMRowid);
        GetOrderPriceConUom(Row);
        XHZY_Click();
    }
}
// 根据单位变化,取医嘱整包装价格-----重新计算每行和总价格
function GetOrderPriceConUom(Row) {
    var LogonDep = ""
    var FindRecLocByLogonLoc;
    //如果按登录科室取接收科室?就把登录科室传进去
    var obj = document.getElementById("FindByLogDep");
    if (obj) {
        if (obj.checked) { FindRecLocByLogonLoc = 1 } else { FindRecLocByLogonLoc = 0 }
    }
    if (FindRecLocByLogonLoc == "1") { LogonDep = session['LOGON.CTLOCID'] }

    if (GlobalObj.PAAdmType != "I") {
        OrderBillTypeRowid = GetPrescBillTypeID();
    } else {
        OrderBillTypeRowid = GlobalObj.BillTypeID;
    }
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderOpenForAllHosp = $("#OrderOpenForAllHosp").val();
    var OrderPackUOMRowid = GetCellData(Row, "OrderPackUOMRowid");
    if (OrderPackUOMRowid == "") return;
    var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");
    var OrderMaterialBarCode = GetCellData(Row, "OrderMaterialBarcodeHiden");
    var ExpStr = OrderMaterialBarCode
    var retPrice = cspRunServerMethod(GlobalObj.GetOrderPriceConUomMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, LogonDep, OrderARCIMRowid, OrderOpenForAllHosp, OrderPackUOMRowid, OrderRecDepRowid, ExpStr);
    var ArrPrice = retPrice.split("^");
    var Price = ArrPrice[0];
    var OrderConFac = ArrPrice[4];
    if (Price < 0) {
        alert("此接收科室下无有效医嘱项,请切换接收科室或联系相关人员处理")
        websys_setfocus('OrderRecDep');
        var Price = ""
    }

    SetCellData(Row, "OrderPrice", Price);
    SetCellData(Row, "OrderConFac", OrderConFac);
    //------------修改协议单位，改变每行价格和总价
    var OrderPackQty = GetCellData(Row, "OrderPackQty");
    OrderPackQty = OrderPackQty.replace(/(^\s*)|(\s*$)/g, '');
    if (!isNumber(OrderPackQty) || (OrderPackQty == "")) {
        OrderPackQty = 1
    }
    var OrderSum = parseFloat(Price) * OrderPackQty;
    SetCellData(Row, "OrderSum", OrderSum);
    //SetScreenSum();
    //可用天数从新计算
    SetOrderUsableDays(Row)
        //转换单位和整包装数量无关
        //SetPackQty(Row);
}
//协议包装-----------end---------

//-------------医保分类 begin------------
function CreaterOrderInsurCat(rowid) {
    //医嘱项
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    //费别
    var OrderBillTypeRowid = GetCellData(rowid, "OrderBillTypeRowid");
    //医保分类
    var InsurCatStr = cspRunServerMethod(GlobalObj.GetArcimInsurCat, OrderARCIMRowid, OrderBillTypeRowid);
    SetColumnList(rowid, "OrderInsurCat", InsurCatStr);
    SetCellData(rowid, "OrderInsurCatHideen", InsurCatStr);
    OrderInsurCatchangeCommon(rowid);
}

function OrderInsurchangehandler(e) {
    var Row = GetEventRow(e);
    OrderInsurCatchangeCommon(Row)
}

function OrderInsurCatchangeCommon(Row) {
    var Id = Row + "_" + "OrderInsurCat";
    var obj = document.getElementById(Id);
    if ((obj) && (obj.type == "select-one")) {
        var selIndex = obj.selectedIndex;
        var OrderInsurCatRowId = ""
        if (selIndex != -1) { OrderInsurCatRowId = obj.options[selIndex].value; }
        SetCellData(Row, "OrderInsurCat", OrderInsurCatRowId);
        SetCellData(Row, "OrderInsurCatRowId", OrderInsurCatRowId);
    }
}
//-------------医保分类  end--------------
function transINVStr(myINVStr) {}


//-----------------------知识库接口  begin-----------------------------
//知识库接口
//Active C 较验 Q 查询  A 医嘱建议
//RowIn  具体行(初始化备注) Update审核医嘱标志
//RowIn 插叙某一行药品信息
function CheckLibPhaFunction(Active, RowIn, Update) {
    //是否开启知识库
    if (GlobalObj.ZSKOpen != 1) { return true }
    var Type = ""
    var OrderMesage = GetCheckLibPhaOrder(RowIn)
    if ((OrderMesage == "") && (Active != "A")) { return true; }

    var UserInfo = session['LOGON.USERID'] + "^" + session['LOGON.CTLOCID'] + "^" + session['LOGON.GROUPID'];
    var OrderItem = ""
    if (Active == "C") {
        OrderItem = tkMakeServerCall('web.DHCDocService', 'GetAdmOrdStr', GlobalObj.EpisodeID)
    }
    var ReturnStr = cspRunServerMethod(GlobalObj.CheckLibPha, GlobalObj.EpisodeID, Active, OrderItem, OrderMesage, UserInfo)
    var ReturnStrArry = ReturnStr.split("^")
    var rtn = ReturnStrArry[0]; //通过 0 1 空
    var ControlLev = ReturnStrArry[1]; //限制级别 0 1 空
    var Mesage = ReturnStrArry[2];
    if (Mesage != "") {
        Mesage = ChangeMesage(Mesage)
    }
    //验证
    if ((rtn != 1) && (Active == "C")) {
        if ((Update == "Y") && (ControlLev == 1)) {
            if (Mesage == "") { $.messager.alert("警告", "知识库验证限制!"); return false; } else { CreaterTooltip("", Mesage, 3, 1); return false; }
        }
        if (Update != "Y") {
            //通过验证但是有警示的在审核的时候不提示
            if (Mesage != "") { CreaterTooltip("", Mesage, 2, 1); return true }
        }
    }
    //查询
    if ((Active == "Q") && (RowIn != "")) {
        if (Mesage != "") { CreaterTooltip(RowIn, ReturnStrArry[2], "", 2) } else { CreaterTooltip(RowIn, "", "", 4) }
    }
    //建议医嘱
    if (Active == "A") {
        if (Mesage != "") {
            AdviceOrderShow(ReturnStrArry[2])
        } else {
            $.messager.alert("警告", '没有建议医嘱!')
        }
    }
    return true;
}
//展示提示建议医嘱信息
function AdviceOrder(Mesage) {
    CheckLibPhaFunction("A", "", "")
}

function AdviceOrderShow(ContenStr) {

    CreaterTooltip("", ContenStr, "", 3)
}

///获取知识库医嘱信息
function GetCheckLibPhaOrder(RowIn) {
    var OrdMesage = ""
    var OrdMesageSub = ""
        ///获取一行信息
    if (RowIn != "") {
        var OrderItemRowid = GetCellData(RowIn, "OrderItemRowid");
        var OrderARCIMRowid = GetCellData(RowIn, "OrderARCIMRowid");
        var OrderType = GetCellData(RowIn, "OrderType");
        if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
            OrdMesage = GetRowMesage(RowIn)
        }
    } else {
        ///检查所有要开医嘱冲突情况
        var rowidsSub = $('#Order_DataGrid').getDataIDs();
        for (var Sub = 0; Sub < rowidsSub.length; Sub++) {
            //过滤已审核
            var OrderItemRowid = GetCellData(rowidsSub[Sub], "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowidsSub[Sub], "OrderARCIMRowid");
            if ((OrderItemRowid != "") || (OrderARCIMRowid == "")) { continue; }

            var OrderName = GetCellData(rowidsSub[Sub], "OrderName");
            var OrderType = GetCellData(rowidsSub[Sub], "OrderType");
            OrdMesageSub = ""
            if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) { //药品、检查、检验
                var ItemServiceFlag = cspRunServerMethod(GlobalObj.GetItemServiceFlagMethod, OrderARCIMRowid);
                if ((OrderType == "R") || (OrderType == "L") || (ItemServiceFlag == 1)) {
                    OrdMesageSub = GetRowMesage(rowidsSub[Sub])
                }
                if (OrdMesageSub != "") {
                    if (OrdMesage == "") OrdMesage = OrdMesageSub;
                    else OrdMesage = OrdMesage + String.fromCharCode(2) + OrdMesageSub;
                }
            }
        }
    }
    return OrdMesage;
}
///获取一行医嘱信息
function GetRowMesage(RowSub) {
    var RowMesgaeGte = ""
    var OrderItemRowid = GetCellData(RowSub, "OrderItemRowid");
    var OrderARCIMRowid = GetCellData(RowSub, "OrderARCIMRowid");
    if (OrderARCIMRowid == "") { return "" }
    var OrderDurRowid = GetCellData(RowSub, "OrderDurRowid");
    var OrderFreqRowid = GetCellData(RowSub, "OrderFreqRowid");
    var OrderInstrRowid = GetCellData(RowSub, "OrderInstrRowid");
    var OrderDoseQty = GetCellData(RowSub, "OrderDoseQty");
    var OrderDoseUOMRowid = GetCellData(RowSub, "OrderDoseUOMRowid");
    var OrderDrugFormRowid = GetCellData(RowSub, "OrderDrugFormRowid");
    var OrderPHPrescType = GetCellData(RowSub, "OrderPHPrescType");

    var OrderStartDate = "";
    var OrderStartTime = "";
    var OrderStartDateStr = GetCellData(RowSub, "OrderStartDate");
    if (OrderStartDateStr != "") {
        OrderStartDate = OrderStartDateStr.split(" ")[0];
        OrderStartTime = OrderStartDateStr.split(" ")[1];
    }
    var OrderPriorRowid = GetCellData(RowSub, "OrderPriorRowid");
    var OrderPackQty = GetCellData(RowSub, "OrderPackQty");
    var OrderPackUOMDr = GetCellData(RowSub, "OrderPackUOMRowid");
    var OrderLabSpecRowid = GetCellData(RowSub, "OrderLabSpecRowid"); //标本
    var OrderOrderBodyPart = GetCellData(RowSub, "OrderBodyPartID");
    var OrderRecDepRowid = GetCellData(RowSub, "OrderRecDepRowid"); //接收科室ID
    var MasterSeqNo = ""; //关联号
    var OrderSeqNo = GetCellData(RowSub, "OrderSeqNo");
    var OrderMasterSeqNo = GetCellData(RowSub, "OrderMasterSeqNo");
    if (OrderMasterSeqNo != "") { MasterSeqNo = OrderMasterSeqNo; } else { MasterSeqNo = OrderSeqNo; }
    RowMesgaeGte = OrderARCIMRowid + "^" + OrderInstrRowid + "^" + OrderFreqRowid + "^" + OrderDoseQty + "^" + OrderDoseUOMRowid + "^" + OrderPackQty + "^" + OrderPackUOMDr + "^" + OrderDurRowid + "^" + MasterSeqNo + "^" + OrderLabSpecRowid + "^" + OrderOrderBodyPart + "^" + OrderRecDepRowid
    return RowMesgaeGte
}



//转换提示信息
function ChangeMesage(InMesage) {
    /*
    var InMessageAry=InMesage.split(String.fromCharCode(1));
    //alert("12222"+InMesage)
    InMesage=InMessageAry.join("<br>");
    //多西他赛:给药途径@给药途径禁用<br>甲氨蝶呤:给药途径@给药途径禁用<br>阿糖胞苷:给药途径@给药途径禁用!用药频率@频率禁用!用法用量@成人最大剂量每次不大于2mg，年龄大于65岁者，最大每次1mg成人最大剂量每次不大于2mg，
    InMesage=InMesage.replace(/@/g,'--');
    InMesage=InMesage.replace(/!/g,',');
    var Message=InMesage;
    */
    InMesage = InMesage.replace(String.fromCharCode(1), '。 ');
    var MesageArry = InMesage.split("!");
    var MesageLen = MesageArry.length;
    var Mesage = ""
    for (var LenMes = 0; LenMes < MesageLen; LenMes++) {
        if (MesageArry[LenMes].indexOf("@") >= 0) {
            var MesageTitle = MesageArry[LenMes].split("@")[0];
            var MesageTxt = MesageArry[LenMes].split("@")[1];
            if (MesageTxt == "") continue;
            if (Mesage == "") {
                Mesage = MesageTitle + "――" + MesageTxt;
            } else {
                Mesage = Mesage + "。" + MesageTitle + "――" + MesageTxt;
            }
        }
    }
    return Mesage
}

function LinkMesageZSQ(Row) {
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    if (OrderARCIMRowid != "") {
        var OrderGenericName = GetCellData(Row, "OrderGenericName");
        if (OrderGenericName == "") {
            OrderGenericName = cspRunServerMethod(GlobalObj.GetARCItemCode, OrderARCIMRowid)
        }
        var ARCItemSubCatDesc = cspRunServerMethod(GlobalObj.GetARCItemSubCatDesc, OrderARCIMRowid)
        var OrderType = GetCellData(Row, "OrderType");
        if (OrderType == "R") {
            var DurgMesage = cspRunServerMethod(GlobalObj.GetDurgArcimMesage, OrderARCIMRowid)
            var TYY = DurgMesage.split("^")[0];
            var JXCod = DurgMesage.split("^")[1];
            var Url = "dhc.bdp.ext.default.csp?extfilename=App/KB/Bus/DHC_DrugBrowser&GenCode=" + TYY + "&PointerCode=" + JXCod;
        } else if (OrderType == "L") {
            var DurgMesage = cspRunServerMethod(GlobalObj.GetLadArcimMesage, OrderARCIMRowid)
            var TYY = DurgMesage.split("^")[0];
            var JXCod = GetCellData(Row, "OrderLabSpecRowid"); //标本
            var Url = "dhc.bdp.ext.default.csp?extfilename=App/KB/Bus/DHC_LABBrowser&GenCode=" + TYY + "&PointerCode=" + JXCod;
        } else if (ARCItemSubCatDesc.indexOf("放射") >= 0) {
            var TYY = OrderGenericName;
            var JXCod = GetCellData(Row, "OrderBodyPartID");
            if (JXCod == "") {
                /*dhcsys_alert("请选择部位")
		  	    SetFocusCell(Row,"OrderBodyPart")
			    return false;
			    */
                dhcsys_alert("未查询到该放射说明书");
                return false;
            }
            if (JXCod.length == 1) JXCod = "0" + JXCod
            var Url = "dhc.bdp.ext.default.csp?extfilename=App/KB/Bus/DHC_RADIBrowser&GenCode=" + TYY + "&PointerCode=" + JXCod;
        } else if (ARCItemSubCatDesc.indexOf("超声") >= 0) {
            var TYY = OrderGenericName;
            var JXCod = GetCellData(Row, "OrderBodyPartID");
            if (JXCod == "") {
                /*dhcsys_alert("请选择部位")
		  	    SetFocusCell(Row,"OrderBodyPart")
			    return false;*/
                dhcsys_alert("未查询到该超声说明书");
                return false;
            }
            if (JXCod.length == 1) JXCod = "0" + JXCod
            var Url = "dhc.bdp.ext.default.csp?extfilename=App/KB/Bus/DHC_ULTRBrowser&GenCode=" + TYY + "&PointerCode=" + JXCod;
        } else if (ARCItemSubCatDesc.indexOf("内镜") >= 0) {
            var DurgMesage = cspRunServerMethod(GlobalObj.GetLadArcimMesage, OrderARCIMRowid)
            var TYY = DurgMesage.split("^")[0];
            var JXCod = GetCellData(Row, "OrderBodyPartID");
            if (JXCod == "") JXCod = "06" //默认胃 
            if (JXCod.length == 1) JXCod = "0" + JXCod
            var Url = "dhc.bdp.ext.default.csp?extfilename=App/KB/Bus/DHC_GASTBrowser&GenCode=" + TYY + "&PointerCode=" + JXCod;
        } else if (ARCItemSubCatDesc.indexOf("心电") >= 0) {
            var TYY = OrderGenericName;
            var JXCod = GetCellData(Row, "OrderBodyPartID");
            if (JXCod == "") JXCod = "04" //默认心脏
            if (JXCod.length == 1) JXCod = "0" + JXCod
            var Url = "dhc.bdp.ext.default.csp?extfilename=App/KB/Bus/DHC_ELECTBrowser&GenCode=" + TYY + "&PointerCode=" + JXCod;
        } else {
            dhcsys_alert("未找到相应的知识库信息")
            return false;
        }
        var winName = "ZSQNewOpen";
        var awidth = screen.availWidth - 300;
        var aheight = screen.availHeight - 300;
        var atop = (screen.availHeight - aheight) / 2;
        var aleft = (screen.availWidth - awidth) / 2;
        var param0 = "scrollbars=0,status=0,menubar=0,resizable=YES,location=0";
        var params = "top=" + atop + ",left=" + aleft + ",width=" + awidth + ",height=" + aheight + "," + param0;
        win = window.open(Url, winName, params); //打开新窗口   
        win.focus(); //新窗口获得焦点   
    }
}


///显示信息
/// Row 行
/// ContenStr信息
/// timeOut 停留时间
/// Type 显示模式

function CreaterTooltip(Row, ContenStr, timeOut, Type) {
    if (Type == 1) {
        if (ContenStr == "") return;
        //显示左上角可自动隐的信息提示 timeOut 定义时间 不能自动匹配宽度 left:0,
        timeOut = (timeOut * 1000)
        $.messager.show({
            title: '知识库检测信息',
            msg: ContenStr,
            showType: 'show',
            width: 650,
            top: 0,
            maximizable: true,
            timeout: timeOut,
            style: {
                right: '',
                top: window.document.body.scrollTop + window.document.documentElement.scrollTop,
                bottom: ''
            },
            disabled: false
        });
    } else if (Type == 2) {
        if (ContenStr == "") return;
        //初始化显示个医嘱的注释信息。提示禁忌用药信息---注释信息
        //ContenStr="适应证@头孢拉定/胶囊/$敏感菌感染!禁忌证@头孢拉定/胶囊/$对头孢类抗生素过敏者禁用!不良反应@头孢拉定/胶囊/$长期用药可致菌群失调，维生素B族。维生素K缺乏，二重感染等不良反应!注意事项@头孢拉定/胶囊/$对青霉素过敏或有过敏体质及肾功能不全者慎用/n儿童患者应用本品应谨慎并在检测下用药!!"
        //ContenStr可能超长导致url无效,将ContenStr暂存到后台获取临时ID
        var Len = Math.ceil(ContenStr.length / 1000);
        var tempContentIndex = Math.random();
        for (var i = 0; i < Len; i++) {
            var SplitItemStr = ContenStr.substr(i * 1000, 1000)
            var ret = tkMakeServerCall('web.DHCDocService', 'SettempContentIndex', tempContentIndex, session['LOGON.USERID'], i + 1, SplitItemStr);
        }
        tempContentIndex = session['LOGON.USERID'] + "^" + tempContentIndex;
        var url = "dhcdoczsk.csp?Mesage=" + "" + "&MesageType=2" + "&tempContentIndex=" + tempContentIndex;
        $("#" + Row + "_" + "OrderName").tooltip({
            position: 'bottom',
            content: $("<div></div>"),
            trackMouse: true,
            title: '知识库',
            deltaX: 100,
            deltaY: 0,
            onUpdate: function(content) {
                content.panel({
                    width: 600,
                    height: 600,
                    border: false,
                    href: url
                });
            },
            onShow: function() {
                $(this).tooltip('tip').css({
                    backgroundColor: '#FFFFFF',
                    borderColor: '#99FFFF'
                });
            }
        });
    } else if (Type == 3) {
        if (ContenStr == "") return;
        var Len = Math.ceil(ContenStr.length / 1000);
        var tempContentIndex = Math.random();
        for (var i = 0; i < Len; i++) {
            var SplitItemStr = ContenStr.substr(i * 1000, 1000)
            var ret = tkMakeServerCall('web.DHCDocService', 'SettempContentIndex', tempContentIndex, session['LOGON.USERID'], i + 1, SplitItemStr);
        }
        tempContentIndex = session['LOGON.USERID'] + "^" + tempContentIndex;
        var url = "dhcdoczsk.csp?Mesage=" + "" + "&MesageType=2" + "&tempContentIndex=" + tempContentIndex;

        $('#dd').dialog({
            title: '建议医嘱',
            width: 600,
            height: 400,
            maximizable: true,
            closed: false,
            cache: false,
            href: url,
            modal: false
        })
    } else if (Type == 4) {
        try {
            $("#" + Row + "_" + "OrderName").tooltip("destroy");
        } catch (e) { alert(e) }
    }
}

///-----------------------知识库接口  end-----------------------------

function CheckAntCombined(rowids) {
    var Paadmid = GlobalObj.EpisodeID;

    var ParrAllInfo = ""
    for (var i = 0; i < rowids.length; i++) {
        var KssOrderPoisonCode = GetCellData(rowids[i], "OrderPoisonCode");
        var KssUserReasonId = GetCellData(rowids[i], "UserReasonId"); //使用目的表id
        var KssOrderPriorRowid = GetCellData(rowids[i], "OrderPriorRowid"); //医嘱类型id
        if ((KssUserReasonId != "") && (KssOrderPoisonCode.indexOf("KSS") >= 0) && (KssOrderPriorRowid != "")) {
            if (ParrAllInfo == "") {
                var ParrAllInfo = KssUserReasonId + "@" + KssOrderPriorRowid;
                //var KssOrdPriRowid=KssOrderPriorRowid
            } else {
                var ParrAllInfo = ParrAllInfo + "^" + KssUserReasonId + "@" + KssOrderPriorRowid;
            }
        }

    }
    if (ParrAllInfo != "") {
        var CURetArr = tkMakeServerCall("web.DHCAntCombined", "GetCombinedNumFormDAUP", Paadmid, ParrAllInfo)
        var CHret = tkMakeServerCall("web.DHCAntCombined", "IfChangeFormDAUP", Paadmid, ParrAllInfo)
            //alert(CUret)
            //alert(CHret)
        var CUret = CURetArr.split("|")[0];
        var SameArcimName = CURetArr.split("|")[1];
        if (CUret == -1) {
            alert("存在相同的抗生素长期医嘱:" + SameArcimName);

            return false;
        }
        /*if((CUret==0)&&(CHret==0)){
            //首次用药
            var FirstKssret=tkMakeServerCall("web.DHCAntCombined","SaveCombinedInfo",Paadmid,ParrAllInfo,"","")
        }
        if((CUret!=0)||(CHret==1)){

            var CombinedUseUrl="KSSCombinedUse.csp?EpisodeID="+Paadmid+"&ParrAllInfo="+ParrAllInfo
            var ret=window.showModalDialog(CombinedUseUrl,"","dialogwidth:800px;dialogheight:600px;status:no;center:1;resizable:yes");

            if((ret=="")||(typeof(ret)=="undefined")){
                return false;
            }
            
        }*/
        if ((CUret > 1) || (CHret == 1)) {
            var CombinedUseUrl = "KSSCombinedUse.csp?EpisodeID=" + Paadmid + "&ParrAllInfo=" + ParrAllInfo
            var ret = window.showModalDialog(CombinedUseUrl, "", "dialogwidth:800px;dialogheight:600px;status:no;center:1;resizable:yes");
            if ((ret == "") || (typeof(ret) == "undefined")) {
                return false;
            }
        } else {
            //首次用药
            var FirstKssret = tkMakeServerCall("web.DHCAntCombined", "SaveCombinedInfo", Paadmid, ParrAllInfo, "", "")
        }
    }
    return true;
}
//护士补录医嘱--勾选的时候设置关联主医嘱
function NurseAddMastOrde(MastLinkStr) {
    try {
        var MastLinkStrArry = MastLinkStr.split("^")
        var LinkedMasterOrderRowid = MastLinkStrArry[0];
        var LinkedMasterOrderSeqNo = MastLinkStrArry[1];
        var LinkedMasterOrderPriorRowid = MastLinkStrArry[2];
        var OrderFreStr = MastLinkStrArry[3];
        var LinkedMasterOrderFreRowId = "";
        var LinkedMasterOrderFreFactor = "";
        var LinkedMasterOrderFreInterval = ""
        var LinkedMasterOrderFreDesc = "";
        if (OrderFreStr != "") {
            LinkedMasterOrderFreRowId = mPiece(OrderFreStr, String.fromCharCode(1), 0);
            LinkedMasterOrderFreFactor = mPiece(OrderFreStr, String.fromCharCode(1), 1);
            LinkedMasterOrderFreInterval = mPiece(OrderFreStr, String.fromCharCode(1), 2);
            LinkedMasterOrderFreDesc = mPiece(OrderFreStr, String.fromCharCode(1), 3);
        }
        //检查所有要开医嘱
        var rowidsSub = $('#Order_DataGrid').getDataIDs();
        for (var Sub = 0; Sub < rowidsSub.length; Sub++) {
            //过滤已审核
            var OrderItemRowid = GetCellData(rowidsSub[Sub], "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(rowidsSub[Sub], "OrderARCIMRowid");
            if ((OrderItemRowid != "") || (OrderARCIMRowid == "")) { continue; }
            //补录关联主医嘱信息
            SetCellData(rowidsSub[Sub], "LinkedMasterOrderRowid", LinkedMasterOrderRowid);
            SetCellData(rowidsSub[Sub], "LinkedMasterOrderSeqNo", LinkedMasterOrderSeqNo);
            if (LinkedMasterOrderFreRowId != "") {
                SetCellData(rowidsSub[Sub], "OrderFreq", LinkedMasterOrderFreDesc);
                SetCellData(rowidsSub[Sub], "OrderFreqRowid", LinkedMasterOrderFreRowId);
                SetCellData(rowidsSub[Sub], "OrderFreqFactor", LinkedMasterOrderFreFactor);
            }
            if (LinkedMasterOrderPriorRowid != "") {
                var PriorStr = cspRunServerMethod(GlobalObj.GetPrioCodeAndDesc, LinkedMasterOrderPriorRowid)
                var LinkedMasterOrderPriorDesc = PriorStr.split("^")[1];
                //强制模式
                if (GlobalObj.OrderPriorContrlConfig == 1) {
	                if ((LinkedMasterOrderPriorRowid == GlobalObj.OMSOrderPriorRowid) || (LinkedMasterOrderPriorRowid == GlobalObj.LongOrderPriorRowid)) {
		                var OrderPriorStr = GlobalObj.LongOrderPriorRowid + ":" + "长期医嘱";
                        SetColumnList(rowidsSub[Sub], "OrderPrior", OrderPriorStr);
		            }
		            if ((LinkedMasterOrderPriorRowid == GlobalObj.OMOrderPriorRowid) || (LinkedMasterOrderPriorRowid == GlobalObj.ShortOrderPriorRowid)) {
			            var OrderPriorStr = GlobalObj.ShortOrderPriorRowid + ":" + "临时医嘱";
			            SetColumnList(rowidsSub[Sub], "OrderPrior", OrderPriorStr);
			        }
	            }
                var obj = document.getElementById(rowidsSub[Sub] + "_OrderPrior");
                if (obj) {
                    //可编辑状态
                    SetCellData(rowidsSub[Sub], "OrderPrior", LinkedMasterOrderPriorRowid);
                } else {
                    SetCellData(rowidsSub[Sub], "OrderPrior", LinkedMasterOrderPriorDesc);
                }
                var RowStyleObj = {};
                SetCellData(rowidsSub[Sub], "OrderPriorRowid", LinkedMasterOrderPriorRowid);
                var obj = { OrderPrior: false }
	            $.extend(RowStyleObj, obj);
				ChangeRowStyle(rowidsSub[Sub], RowStyleObj);
            }
        }


    } catch (e) {}
}

//获取一行的状态是否选中兼容审核未审核/子医嘱选择(1.1) 
function GetRowCheckFlag(rowid) {
    var CheckFlag = "-1"
    var ArryObj = document.getElementsByTagName("INPUT");
    for (var SubInput = 0; SubInput < ArryObj.length; SubInput++) {
        if (ArryObj[SubInput].id == ("jqg_Order_DataGrid_" + rowid)) {
            if (ArryObj[SubInput].checked) { CheckFlag = "Y" } else { CheckFlag = "N" }
        }
    }
    return CheckFlag
}
//设置一行的选中属性 Statu:true,false
function SetRowCheckFlag(rowid, Statu) {
    var ArryObj = document.getElementsByTagName("INPUT");
    for (var SubInput = 0; SubInput < ArryObj.length; SubInput++) {

        if (ArryObj[SubInput].id == ("jqg_Order_DataGrid_" + rowid)) {
            ArryObj[SubInput].checked = Statu
        }
    }
}
//患者自备
function OrderSelfOMFlagChangehandler(e) {
    var Row = GetEventRow(e);
    var OrderSelfOMFlag = GetCellData(Row, "OrderSelfOMFlag");
    if (OrderSelfOMFlag == "Y") {
        SetCellData(Row, "OrderPriorRemarks", "OM");
        SetCellData(Row, "OrderPriorRemarksRowId", "OM");
        CheckOrderPriorRemarks(Row);
    }

}

function SaveCASign(ContainerName, OrdList, OperationType) {
    try {
        if (ContainerName == "") return false;
        //1.批量认证
        var CASignOrdStr = "";
        var TempIDs = OrdList.split("^");
        var IDsLen = TempIDs.length;
        for (var k = 0; k < IDsLen; k++) {
            var TempNewOrdDR = TempIDs[k].split("&");
            if (TempNewOrdDR.length <= 0) continue;
            var newOrdIdDR = TempNewOrdDR[0];
            if (CASignOrdStr == "") CASignOrdStr = newOrdIdDR;
            else CASignOrdStr = CASignOrdStr + "^" + newOrdIdDR;
        }
        var SignOrdHashStr = "",
            SignedOrdStr = "",
            CASignOrdValStr = "";
        var CASignOrdArr = CASignOrdStr.split("^");
        for (var count = 0; count < CASignOrdArr.length; count++) {
            var CASignOrdId = CASignOrdArr[count];

            var OEORIItemXML = cspRunServerMethod(GlobalObj.GetOEORIItemXMLMethod, CASignOrdId, OperationType);



            var OEORIItemXMLArr = OEORIItemXML.split(String.fromCharCode(2));
            for (var ordcount = 0; ordcount < OEORIItemXMLArr.length; ordcount++) {
                if (OEORIItemXMLArr[ordcount] == "") continue;
                var OEORIItemXML = OEORIItemXMLArr[ordcount].split(String.fromCharCode(1))[1];
                var OEORIOperationType = OEORIItemXMLArr[ordcount].split(String.fromCharCode(1))[0];
                //$.messager.alert("警告","OEORIItemXML:"+OEORIItemXML);
                var OEORIItemXMLHash = HashData(OEORIItemXML);
                //$.messager.alert("警告","HashOEORIItemXML:"+OEORIItemXMLHash);
                if (SignOrdHashStr == "") SignOrdHashStr = OEORIItemXMLHash;
                else SignOrdHashStr = SignOrdHashStr + "&&&&&&&&&&" + OEORIItemXMLHash;
                //$.messager.alert("警告",ContainerName);
                var SignedData = SignedOrdData(OEORIItemXMLHash, ContainerName);
                if (SignedOrdStr == "") SignedOrdStr = SignedData;
                else SignedOrdStr = SignedOrdStr + "&&&&&&&&&&" + SignedData;


                if (CASignOrdValStr == "") CASignOrdValStr = OEORIOperationType + String.fromCharCode(1) + CASignOrdId;
                else CASignOrdValStr = CASignOrdValStr + "^" + OEORIOperationType + String.fromCharCode(1) + CASignOrdId;
            }
            /*
			var OEORIItemXMLHash=HashData(OEORIItemXML);
			if(SignOrdHashStr=="") SignOrdHashStr=OEORIItemXMLHash;
			else SignOrdHashStr=SignOrdHashStr+"&&&&&&&&&&"+OEORIItemXMLHash;
			var SignedData=SignedOrdData(OEORIItemXMLHash,ContainerName);
			if(SignedOrdStr=="") SignedOrdStr=SignedData;
			else SignedOrdStr=SignedOrdStr+"&&&&&&&&&&"+SignedData;
			//alert("HashOEORIItemXML:"+HashOEORIItemXML);
		  //AddData(HashOEORIItemXML);
		  */

        }
        if (SignOrdHashStr != "") SignOrdHashStr = SignOrdHashStr + "&&&&&&&&&&";
        if (SignedOrdStr != "") SignedOrdStr = SignedOrdStr + "&&&&&&&&&&";
        //获取客户端证书
        var varCert = GetSignCert(ContainerName);
        var varCertCode = GetUniqueID(varCert);
        /*
		alert("CASignOrdStr:"+CASignOrdStr);
		alert("SignOrdHashStr:"+SignOrdHashStr);
		alert("varCert:"+varCert);
		alert("SignedData:"+SignedOrdStr);
	  */
        if ((CASignOrdValStr != "") && (SignOrdHashStr != "") && (varCert != "") && (SignedOrdStr != "")) {
            //3.保存签名信息记录
            ////																												CASignOrdValStr,session['LOGON.USERID'],"A",					SignOrdHashStr,varCertCode,SignedOrdStr,""
            var ret = cspRunServerMethod(GlobalObj.InsertCASignInfoMethod, CASignOrdValStr, session['LOGON.USERID'], OperationType, SignOrdHashStr, varCertCode, SignedOrdStr, "");
            if (ret != "0") { alert("数字签名没成功"); return false; }
        } else {
            alert("数字签名错误");
            return false;
        }
        return true;
    } catch (e) { alert(e.message); return false; }
}

function GetLogonLocByFlag() {
    var FindRecLocByLogonLoc;
    //如果按登录科室取接收科室?就把登录科室传进去
    var obj = document.getElementById("FindByLogDep");
    if (obj) {
        if (obj.checked) { FindRecLocByLogonLoc = 1 } else { FindRecLocByLogonLoc = 0 }
    }
    var LogonDep = ""
    if (FindRecLocByLogonLoc == "1") { LogonDep = session['LOGON.CTLOCID'] }
    return LogonDep;
}
//记录时间日志,用于在操作页面功能的时候需要记录时间
//FunctionName 调用此方法的所在函数名，Position 在函数中的位置
function SetTimeLog(FunctionName, Position) {
    if (UIConfigObj.isSetTimeLog != true) return;

    var myDate = new Date();
    var DateTime = myDate.toLocaleString() + '.' + myDate.getMilliseconds();
    var TimeLogStr = 'FunctionName:' + FunctionName + ',Position:' + Position + ',DateTime:' + DateTime;

    var UserId = session['LOGON.USERID'];
    var PageTimeLogData = $('#PageTimeLogData').data(UserId);
    if (!PageTimeLogData) {
        PageTimeLogData = TimeLogStr;
    } else {
        PageTimeLogData = PageTimeLogData + String.fromCharCode(10) + String.fromCharCode(13) + TimeLogStr;
    }
    //大于一定长度自动重新记录
    if (PageTimeLogData.length > 32749) {
        $('#PageTimeLogData').data(UserId, TimeLogStr)
    } else {
        $('#PageTimeLogData').data(UserId, PageTimeLogData)
    }

    return;
}
//将日志写入到文本,FunctionName 调用此方法的所在函数名
function SetTimeLogToServer(FunctionName) {
    if (UIConfigObj.isSetTimeLog != true) return;

    var myDate = new Date();
    var DateTime = myDate.toLocaleString() + '.' + myDate.getMilliseconds();

    var UserId = session['LOGON.USERID'];
    var PageTimeLogData = $('#PageTimeLogData').data(UserId);
    PageTimeLogData = PageTimeLogData + String.fromCharCode(10) + String.fromCharCode(13) + '在' + FunctionName + '下写入完成,时间:' + DateTime + String.fromCharCode(10) + String.fromCharCode(13);

    var ret = tkMakeServerCall("web.DHCDocOrderEntry", "SaveOrderTimeLog", UserId, PageTimeLogData);
    return;
}
//写文件函数,无权限写文件
function WriteLogFile(FileTxt, Address) {
    var fs, f1, itmString, CountString, TempList;
    fs = new ActiveXObject("Scripting.FileSystemObject");
    if (fs.FileExists(Address)) { fs.DeleteFile(Address, false); }
    f1 = fs.CreateTextFile(Address, true);
    f1.WriteLine(FileTxt);
    f1.Close();
    return true;
}

function OrderMsgChange() {
    if (GlobalObj.CFOrderMsgAlert != 1) return false;
    if ((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "undefined") && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "")) return false;

    var Find = 0
    try {
        var rowid = "";
        var rowids = $('#Order_DataGrid').getDataIDs();
        if (rowids == "") {
            $("#Prompt").text("提示信息")
            return false;
        }
        if (rowids.length > 0) {
            for (var i = rowids.length; i >= 0; i--) {
                if (Find == 1) continue;
                var rowid = rowids[i];
                var OrderItemRowid = GetCellData(rowid, "OrderItemRowid")
                var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid")
                var OrderName = GetCellData(rowid, "OrderName")
                if ((rowids.length == 1) && (OrderARCIMRowid == "")) $("#Prompt").text("提示信息")
                if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
                    var OrderMsg = cspRunServerMethod(GlobalObj.GetARCIMOrderMsg, OrderARCIMRowid)
                    if (OrderMsg != "") {
                        $("#Prompt").text("提示信息:" + OrderName + OrderMsg)
                        Find = 1
                    } else {
                        $("#Prompt").text("提示信息")
                    }
                } else {
                    $("#Prompt").text("提示信息")
                }
            }

        }
    } catch (e) { $.messager.alert("警告", e.message) }
}
//处方类型维护――》限制页面未审金额
function CheckUnSaveBillTypeSum(Amount, OrderBillTypeRowid, OrderBillType) {
    if ((GlobalObj.PAAdmType != "O") || (Amount == 0)) { return true }
    //只有在门诊时才存在PrescBillType TAB页
    //OrderBillType为处方(DHCPAADMPrescType)描述,OrderBillTypeRowid为费别Rowid
    var PrescLimitSum = "";
    var PrescLimitStr = GetPrescLimit(OrderBillType, OrderBillTypeRowid);
    if (PrescLimitStr != "") PrescLimitSum = PrescLimitStr.split("!")[8];
    if ((Amount > PrescLimitSum) && (PrescLimitSum != "")) { return false; }
    /*if (GlobalObj.CheckBillTypeSumMethod!=""){
    	var retDetail=cspRunServerMethod(GlobalObj.CheckBillTypeSumMethod,GlobalObj.EpisodeID,OrderBillTypeRowid,PrescLimitSum,Amount);
    	if (retDetail==1) {return false}
    }*/
    return true
}

function GetOrderPriorByPriorStr(OrderPriorStr, OrderPriorRowid) {
    var Ary = OrderPriorStr.split(';');
    for (var i = 0; i < Ary.length; i++) {
        if (Ary[i].indexOf(':') == -1) continue;
        var OneAry = Ary[i].split(':');
        if (OneAry[0] == OrderPriorRowid) {
            return OneAry[1];
        }
    }
    return ""
}

function CheckCureItemConfig(rowid) {
    var OrderHiddenPara = GetCellData(rowid, "OrderHiddenPara");
    var OrderItemCatRowid = mPiece(OrderHiddenPara, String.fromCharCode(1), 2);
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    var OrderRecDepRowid = GetCellData(rowid, "OrderRecDepRowid");
    //走治疗申请单的治疗项目控制总数量不可填写
    if ((OrderRecDepRowid != "") && (OrderItemCatRowid != "") && (OrderARCIMRowid != "")) {
        var CureItemFlag = tkMakeServerCall("web.DHCDocCureApp", "CheckItem", OrderARCIMRowid, OrderItemCatRowid, OrderRecDepRowid);
        if (CureItemFlag == "1") {
            var OrderPackQtyStyleObj = { OrderPackQty: false, OrderPackUOM: false }
            SetPackQty(rowid);
        } else {
            var OrderPriorRowid = GetCellData(rowid, "OrderPriorRowid");
            var OrderPriorRemarks = GetCellData(rowid, "OrderPriorRemarks");
            var OrderType = GetCellData(rowid, "OrderType");
            var OrderFreqRowid = GetCellData(rowid, "OrderFreqRowid");
            var OrderPackQtyStyleObj = ContrlOrderPackQty(rowid, OrderPriorRowid, OrderPriorRemarks, OrderType, OrderFreqRowid);
            //配液医嘱不可以录入整包装数量
            var OrderNeedPIVAFlag = GetCellData(rowid, "OrderNeedPIVAFlag");
            if (OrderNeedPIVAFlag == "Y") {
                var OrderPackQtyStyleObj = { OrderPackQty: false, OrderPackUOM: false }
            }
        }
        ChangeCellDisable(rowid, OrderPackQtyStyleObj);
    }
}
var CurrentOrdNameRow = "";

function SetOrdNameList(PreNameD) {
    CurrentOrdNameRow = PreNameD;
    var fileview = $.extend({}, $.fn.datagrid.defaults.view, {
        onAfterRender: function(target) {
            ReSetFocus();
        }
        //,onBeforeRender:function (target, rows){ReSetSelect();} 
    });
    $('#' + PreNameD + '_OrderName').combogrid({
        width: 240,
        panelWidth: 800,
        panelHeight: 300,
        view: fileview,
        delay: 0,
        mode: 'remote',
        url: '../csp/dhcdoc.cure.query.combo.easyui.csp',
        fitColumns: false,
        striped: true,
        editable: true,
        pagination: true, //是否分页   
        rownumbers: true, //序号   
        collapsible: false, //是否可折叠的   
        fit: true, //自动大小   
        pageSize: 10, //每页显示的记录条数，默认为10   
        pageList: [10, 20, 30], //可以设置每页记录条数的列表   
        method: 'post',
        idField: 'ArcimDr',
        //textField: '医嘱名称',    
        columns: [
            [{
                field: 'ArcimDr',
                title: 'ArcimDr',
                width: 120,
                hidden: true
            }, {
                field: 'OrdInfo',
                title: 'OrdInfo',
                width: 120,
                hidden: true
            }, {
                field: '医嘱名称',
                title: '医嘱名称',
                width: 350,
                sortable: true
            }, {
                field: '子类',
                title: '子类',
                width: 50,
                sortable: true
            }, {
                field: '价格',
                title: '价格',
                width: 80,
                sortable: true
            }, {
                field: '计价单位',
                title: '计价单位',
                width: 50,
                sortable: true
            }, {
                field: '医保类别',
                title: '医保类别',
                width: 50,
                sortable: true
            }, {
                field: '自付比例',
                title: '自付比例',
                width: 50,
                sortable: true
            }, {
                field: '接收科室',
                title: '接收科室',
                width: 180,
                sortable: true
            }, {
                field: '支付限额',
                title: '支付限额',
                width: 50,
                sortable: true
            }, {
                field: '控制类型',
                title: '控制类型',
                width: 50,
                sortable: true
            }]
        ],
        keyHandler: {
            up: function() {
                //取得选中行
                var selected = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getSelected');
                if(selected) {
                    //取得选中行的rowIndex
                    var index = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getRowIndex', selected);
                    //向上移动到第一行为止
                    if(index > 0) {
                        $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('selectRow', index - 1);
                    }
                } else {
                    var rows = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getRows');
                    if(rows.length > 0) {
                        $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('selectRow', rows.length - 1);
                    }
                }

            },
            down: function() {
                //取得选中行
                var selected = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getSelected');
                if(selected) {
                    //取得选中行的rowIndex
                    var index = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getRowIndex', selected);
                    //向下移动到当页最后一行为止
                    if(index < $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getData').rows.length - 1) {
                        $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('selectRow', index + 1);
                    }
                } else if($('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getData').rows.length > 0) {
                    $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('selectRow', 0);
                }
            },
            left: function() {
                return false
            },
            right: function() {
                return false
            },
            enter: function() {
                //文本框的内容为选中行的的字段内容
                var selected = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getSelected');
                $('#' + PreNameD + '_OrderName').combogrid('hidePanel');
                if(selected) {
                    //$('#'+PreNameD+'_OrderName').combogrid("options").value=selected.HIDDEN;
                    OrderItemLookupSelect(selected.OrdInfo, PreNameD)
                }
                //选中后让下拉表格消失

            },
            query: function(q) {
                if(q.length <= 2) $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('loadData', {
                    total: 0,
                    rows: []
                });
                //alert(q)
                ///如果输入的最后一位是数字，那么就自动定位到该行
                if(session['LOGON.GROUPDESC'] != "手术室护士") {
                    var RowLength = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid("getRows").length;
                    var SelNum = q.charAt(q.length - 1)
                    if(($.isNumeric(SelNum) == true) && (SelNum > 0) && (RowLength >= SelNum)) {
                        $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('selectRow', SelNum - 1);
                        var selected = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getSelected');
                        if(selected) {
                            $('#' + PreNameD + '_OrderName').combogrid('hidePanel');
                            OrderItemLookupSelect(selected.OrdInfo, PreNameD);
                            $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('loadData', {
                                total: 0,
                                rows: []
                            });
                        }
                        $('#' + PreNameD + '_OrderName').combogrid('hidePanel');
                        return false;
                    }
                }

                //$('#'+PreNameD+'_OrderName').combogrid("grid").datagrid("reload",{'keyword':q});
                if(this.AutoSearchTimeOut) {
                    window.clearTimeout(this.AutoSearchTimeOut)
                    this.AutoSearchTimeOut = window.setTimeout("LoadOrdItemData('" + q + "','" + PreNameD + "')", 400)
                } else {
                    this.AutoSearchTimeOut = window.setTimeout("LoadOrdItemData('" + q + "','" + PreNameD + "')", 400)
                }
                $('#' + PreNameD + '_OrderName').combogrid("setValue", q);
            }
        },
        onSelect: function() {
            //var q=$('#'+PreNameD+'_OrderName').combogrid("getValue");
            var q=$('#'+PreNameD+'_OrderName').combo("getText");
            //alert(q)
            var selected = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getSelected');
            if(selected) {
                $('#' + PreNameD + '_OrderName').combogrid("options").value = selected.ArcimDr;
                
            }
            window.event.returnValue = false;
        },
        onClickRow: function(row) {
            //alert(row)
            var selected = $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getSelected');
            if(selected) {
                OrderItemLookupSelect(selected.OrdInfo, PreNameD)
                $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('loadData', {
                    total: 0,
                    rows: []
                });
                //$('#'+PreNameD+'_OrderName').combogrid("options").value=selected.OrdInfo;
            }
        },
        onLoadSuccess: function(data) {
            if($('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('getData').rows.length > 0) {
                $('#' + PreNameD + '_OrderName').combogrid('grid').datagrid('selectRow', 0);
            }
			
			//lxz  医嘱检索完之后按照库存修改字体颜色
			var AllData=$('#'+PreNameD+'_OrderName').combogrid('grid').datagrid('getRows')
			if (AllData.length>0){
				for (var jR=0;jR<AllData.length;jR++)
				{
					var OrderInfo=AllData[jR].OrdInfo;
					var OrderInfoArry=OrderInfo.split("^")
					var OrderType=OrderInfoArry[5];
					var StockQty=OrderInfoArry[21]; //实库存
					var ArcimID=OrderInfoArry[1];
					var type=OrderInfoArry[3];
					var HaveStock=OrderInfoArry[30]; //走库存判断接口 web.DHCDocOrderComm->CheckBeforeUpdate 判断是否有可用库存 Y 有
					if ((OrderType=="R")&&(type="ARCIM")&&(HaveStock!="Y")){
						$("[datagrid-row-index='" + jR + "']").css({ "color": "red" }); //修改行字体颜色-药品实库存不存在行字体为红色
					}
				}
			}
			
			
        }
    });

}

function ReSetFocus() {
    if (GlobalObj.OEORIRealTimeQuery == 1) {
        var CurrentPagNum = $(".pagination-num").val()
        if (CurrentPagNum > 1) {
            window.setTimeout(function() {
                var CurrentOrdName = $('#' + CurrentOrdNameRow + '_OrderName').combo("getText");
                if (CurrentOrdName != "") {
                    var CheckValue = /^\d+$/;
                    if (CheckValue.test(CurrentOrdName)) {
                        $('#' + CurrentOrdNameRow + '_OrderName').combogrid("setValue", "");
                        $('#' + CurrentOrdNameRow + '_OrderName').combo("setText", "")
                    }
                }
            }, 100)
        }
        SetFocusCell(CurrentOrdNameRow, "OrderName");
    }
}

function ReSetSelect() {
    //alert(1)
    //$('#'+CurrentOrdNameRow+'_OrderName').combogrid('grid').datagrid('unselectAll'); 
}

function LoadOrdItemData(desc, PreNameD) {

    var obj = $('#' + PreNameD + '_OrderName')
    if (desc == "") return false;
    if (desc.length < 2) { return false; }
    var queryParams = new Object();

    var CurLogonDep = session['LOGON.CTLOCID'];
    var GroupID = session['LOGON.GROUPID'];
    var catID = ""
    var subCatID = "";
    var P5 = "";
    var LogonDep = ""
    var OrderPriorRowid = "";
    var P9 = "",
        P10 = "";
    var OrdCatGrp = "";
    var OrdCateGoryRowId = GetCellData(PreNameD, "OrdCateGoryRowId")
    var OrdCateGoryObj = document.getElementById(PreNameD + "_OrdCateGory");
    if (+OrdCateGoryObj.scrollWidth != "0") OrdCatGrp = OrdCateGoryRowId

    queryParams.ClassName = 'web.DHCDocOrderEntry';
    queryParams.QueryName = 'LookUpItemNew';
    queryParams.Arg1 = desc;
    queryParams.Arg2 = GroupID;
    queryParams.Arg3 = catID;
    queryParams.Arg4 = subCatID;
    queryParams.Arg5 = P5;
    queryParams.Arg6 = LogonDep;
    queryParams.Arg7 = OrderPriorRowid;
    queryParams.Arg8 = GlobalObj.EpisodeID;
    queryParams.Arg9 = P9;
    queryParams.Arg10 = P10;
    queryParams.Arg11 = session["LOGON.USERID"];
    queryParams.Arg12 = OrdCatGrp;
    queryParams.Arg13 = "";
    queryParams.Arg14 = CurLogonDep;
    queryParams.ArgCnt = 14;
    //alert("rowids"+rowids)
    //var opts = $('#'+rowids+'_OrderName').combogrid("grid").datagrid("options");
    var opts = obj.combogrid("grid").datagrid("options");
    //queryParams.Arg5 =qor.u;
    opts.url = "../csp/dhcdoc.config.query.grid.easyui.csp";
    //$('#'+rowids+'_OrderName').combogrid("grid").datagrid('load', queryParams);
    obj.combogrid("grid").datagrid('load', queryParams);
}

function OrderDataGirdclick(e) {
    if ((VerifiedOrderObj) && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "undefined") && (VerifiedOrderObj.LinkedMasterOrderPriorRowid != "")) return false;
    if (GlobalObj.CFOrderMsgAlert != 1) return false;
    var rowid = GetEventRow(e)
    if (rowid == "") return false;
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid")
    var OrderName = GetCellData(rowid, "OrderName")
    var OrderMsg = cspRunServerMethod(GlobalObj.GetARCIMOrderMsg, OrderARCIMRowid)
    if (OrderMsg != "") {
        $("#Prompt").text("提示信息:" + OrderName + OrderMsg)
    }
}

function OpenChangeOrderClick() {
    DiaUpdateClick()
}

function DiaUpdateClick() {
    var rowids = GetSelRowId()
    var rtn = StopOrd(rowids)
        //alert("StopOrd:"+rtn)
    var flag = rtn.split("###")[0]
    switch (flag) {
        case "0":
            //alert("OK");
            alert("医嘱已停止")
            break;
        case "-1":
            alert("用户不是医护人员!");
            break;
        case "-2":
            alert("Paid医嘱不能停止");
            break;
        case "-4":
            alert("签名密码错误");
            break;
        case "-5":
            alert("原医嘱不是核实状态");
            break;
        case "-300":
            alert("已执行医嘱，不可以停!");
            break;
        case "-200":
            alert("已计费医嘱不可停止");
            break;
        case false:
            break;
        default:
            l
            alert("停止失败:" + flag)
    }

    if (flag != "0") { return fase }
    var rowids = $('#Order_DataGrid').getDataIDs();
    var OrdList = rtn.split("###")[1]
    var NewOrdList = "";
    for (var i = 0; i < OrdList.split("^").length; i++) {
        if (NewOrdList == "") NewOrdList = OrdList.split("^")[i].split("&")[0];
        else NewOrdList = NewOrdList + "^" + OrdList.split("^")[i].split("&")[0];
    }
    NewOrdList = "^" + NewOrdList + "^";
    for (var k = 0; k < rowids.length; k++) {
        //过滤已审核
        var OrderItemRowid = GetCellData(rowids[k], "OrderItemRowid");
        //if(OrdList.indexOf(OrderItemRowid+"&")==-1){continue}
        if (NewOrdList.indexOf("^" + OrderItemRowid + "^") == -1) { continue }
        SetCellData(rowids[k], "OrderItemRowid", "")
        var OrderBindSource = GetCellData(rowids[k], "OrderBindSource")
        if (OrderBindSource != "") {
            DeleteAntReason(rowids[k]);
            $('#Order_DataGrid').delRowData(rowids[k]);
        }
        var OrderName = GetCellData(rowids[k], "OrderItemRowid");
        SetNewOrderClass(rowids[k])
        EditRow(rowids[k], "1");

    }
}
//对医嘱录入输入完别名选择医嘱后的焦点跳转
function CellFocusJumpAfterOrderName(rowid, OrderType) {
    if (OrderType == "R") {
        SetFocusCell(rowid, "OrderDoseQty");
    } else {
        if (OrderType == "P") {
            SetFocusCell(rowid, "OrderPrice");
        } else {
            var OrderPHPrescType = GetCellData(rowid, "OrderPHPrescType");
            var OrderFreqRowid = GetCellData(rowid, "OrderFreqRowid");
            if (OrderType == "P") {
                SetFocusCell(rowid, "OrderPrice");
            } else if ((OrderPHPrescType == "4") && (OrderFreqRowid == "")) {
                SetFocusCell(rowid, "OrderFreq");
            } else {
                var OrderPackQtyObj = document.getElementById(rowid + "_OrderPackQty");
                if (OrderPackQtyObj && (OrderPackQtyObj.disabled == false)) {
                    SetFocusCell(rowid, "OrderPackQty");
                } else {
                    //判断如果整包装数量是空,跳转到单次剂量
                    var OrderPackQty = GetCellData(rowid, "OrderPackQty");
                    if (OrderPackQty != "") { window.setTimeout("Add_Order_row()", 200); } else {
                        SetFocusCell(rowid, "OrderDoseQty");
                    }

                }
            }

        }
    }
}
//对医嘱录入行上列的跳转封装的统一方法
//rowid 行ID,JumpAry 需要跳转的列名数组,IsAddRow 是否需要新增行
function CellFocusJump(rowid, JumpAry, IsAddRow) {
    if (!$.isArray(JumpAry)) return;
    var JumpCellName="";
    var IsJumpSess = false;
    for (var i = 0; i < JumpAry.length; i++) {
        var OneJumpCellName = JumpAry[i];
        var CellObj = document.getElementById(rowid + "_" + OneJumpCellName);
        if (CellObj && (CellObj.disabled == false)) {
            SetFocusCell(rowid, OneJumpCellName);
            IsJumpSess = true;
            JumpCellName=OneJumpCellName;
            break;
        }
    }
    if (!IsJumpSess && IsAddRow) {
        window.setTimeout("Add_Order_row()", 200);
        JumpCellName="OrderName";
    }

    return JumpCellName;
}

function CheckInsuCostControl() {
    try {
        var InputOrderInfo = ""
        var rowids = $('#Order_DataGrid').getDataIDs();
        for (var i = 0; i < rowids.length; i++) {
            var Row = rowids[i]
            var OrderItemRowid = GetCellData(Row, "OrderItemRowid");
            var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
            var StyleConfigStr = GetCellData(Row, "StyleConfigStr");
            var StyleConfigObj = {};
            if (StyleConfigStr != "") {
                StyleConfigObj = eval("(" + StyleConfigStr + ")");
            }
            if ((GlobalObj.PAAdmType != "I") && (StyleConfigObj.OrderPackQty != true) && (OrderItemRowid != "")) { continue }
            if (OrderARCIMRowid == "") { continue; }

            var OrderName = GetCellData(Row, "OrderName");
            ///1医嘱项编码
            var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
            ///2下医嘱科室
            var OrderDepCode = session['LOGON.CTLOCID'];
            var OrderStartDate = "";
            var OrderStartTime = "";
            var OrderStartDateStr = GetCellData(Row, "OrderStartDate");
            if (OrderStartDateStr != "") {
                //3医嘱日期
                OrderStartDate = OrderStartDateStr.split(" ")[0];
                //4医嘱时间
                OrderStartTime = OrderStartDateStr.split(" ")[1];
            }
            //5医嘱医生编码
            var OrderDocCode = GlobalObj.LogonDoctorID;
            //6医嘱医生职称CTPCP_CarPrvTp_DR->CTCPT_Desc
            var OrderCarPrvTp = ""
                //7婴儿出生日期
            var BabyBrithDay = ""
                //8婴儿出生时间
            var BabyBrithTime = ""
                //9婴儿费标志	1:婴儿费 0：其他费
            var BabyFeeFlag = ""
                //10是否药品 Y:药品 N:非药品
            var OrderType = GetCellData(Row, "OrderType");
            var DurgFlag = "Y"
            if (OrderType != "R") var DurgFlag = "N"
                //11单方复方标志	1：单方 0：复方
            var SDFlag = ""
                //12中药贴数
            var CMQty = ""
                //13中药用量
            var CMDoseQty = ""
                //14医嘱优先级编码
            var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
            var OrderPriorRemarks = GetCellData(Row, "OrderPriorRemarks");
            OrderPriorRowid = ReSetOrderPriorRowid(OrderPriorRowid, OrderPriorRemarks);
            //15用药途径	
            var OrderInstrRowid = GetCellData(Row, "OrderInstrRowid");
            //16频次
            var OrderFreqRowid = GetCellData(Row, "OrderFreqRowid");
            //17疗程
            var OrderDurRowid = GetCellData(Row, "OrderDurRowid");
            var OrderFreqFactor = GetCellData(Row, "OrderFreqFactor");
            //18单次用量
            var OrderDoseQty = GetCellData(Row, "OrderDoseQty");
            //19每日用量
            var OrderPDQty = parseFloat(OrderDoseQty) * parseFloat(OrderFreqFactor)
                //20首次服药量
                //var OrderFirstDayTimes=GetColumnData("OrderFirstDayTimes",Row);
            var OrderFirstDayTimes = OrderDoseQty
                //21用量对应的单位
            var OrderDoseUOM = GetCellData(Row, "OrderDoseUOM");
            var OrderDoseUOMRowid = GetCellData(Row, "OrderDoseUOMRowid");
            //22数量单位
            var OrderPackUOMRowid = GetCellData(Row, "OrderPackUOMRowid");
            //23数量单位与用量单位关系
            var CalDose = ""
                //24数量
            var OrderPackQty = GetCellData(Row, "OrderPackQty");
            //25单价
            var OrderPrice = GetCellData(Row, "OrderPrice");
            //26金额
            var OrderSum = GetCellData(Row, "OrderSum");
            //27用户ID
            var UserID = session['LOGON.USERID'];
            //28接受科室
            var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");
            var OrdStr = OrderARCIMRowid + "^" + OrderDepCode + "^" + OrderStartDate + "^" + OrderStartTime + "^" + OrderDocCode
                //6
            var OrdStr = OrdStr + "^" + OrderCarPrvTp + "^" + BabyBrithDay + "^" + BabyBrithTime + "^" + BabyFeeFlag + "^" + DurgFlag
                //11
            var OrdStr = OrdStr + "^" + SDFlag + "^" + CMQty + "^" + CMDoseQty + "^" + OrderPriorRowid + "^" + OrderInstrRowid
                //16
            var OrdStr = OrdStr + "^" + OrderFreqRowid + "^" + OrderDurRowid + "^" + OrderDoseQty + "^" + OrderPDQty + "^" + OrderFirstDayTimes
                //21
            var OrdStr = OrdStr + "^" + OrderDoseUOMRowid + "^" + OrderPackUOMRowid + "^" + CalDose + "^" + OrderPackQty + "^" + OrderPrice
                //26
            var OrdStr = OrdStr + "^" + OrderSum + "^" + UserID + "^" + OrderRecDepRowid

            if (InputOrderInfo == "") {
                InputOrderInfo = OrdStr
            } else {
                InputOrderInfo = InputOrderInfo + String.fromCharCode(2) + OrdStr
            }

        }
        //alert(GlobalObj.EpisodeID+"!!!"+InputOrderInfo)
        var Rtn = cspRunServerMethod(GlobalObj.CheckInsuCostControlMethod, GlobalObj.EpisodeID, InputOrderInfo)

        if (Rtn != "") {
            var ErrType = Rtn.split("^")[0]
            var ErrMsg = Rtn.split("^")[1]
            if (ErrType == "0") {
                $.messager.alert("根据医保控费政策", ErrMsg)
            } else if (ErrType == "1") {
                return dhcsys_confirm("根据医保控费政策:" + ErrMsg + "，是否继续?")
            } else if (ErrType == "2") {
                $.messager.alert("根据医保控费政策", ErrMsg + ".不允许审核！")
                return false
            }
        }
        return true
    } catch (e) {
        alert(e.message);
    }
    return true
}
//治疗项目判断  康复治疗控制  2016-05-13
function CheckDHCDocTreatItem(Row) {
    try {
        var OrderName = GetCellData(Row, "OrderName");
        var OrderDoseQty = $.trim(GetCellData(Row, "OrderDoseQty"));
        var OrderPackQty = $.trim(GetCellData(Row, "OrderPackQty"));
        var OrderPriorRowid = GetCellData(Row, "OrderPriorRowid");
        var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
        var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");

        var CureItemFlag = tkMakeServerCall("DHCDoc.DHCDocCure.Apply", "GetCureItemFlag", OrderARCIMRowid);
        var CureLocFlag = tkMakeServerCall("DHCDoc.DHCDocCure.Apply", "GetCureLocFlag", OrderRecDepRowid);
        if ((CureItemFlag != "1") || (CureLocFlag != "1")) return true;
        if ((OrderPriorRowid == GlobalObj.LongOrderPriorRowid) || (OrderPriorRowid == GlobalObj.OMSOrderPriorRowid)) {
            dhcsys_alert(OrderName + "为治疗项目,不能开长期医嘱")
            return false;
        }
        if (OrderDoseQty != "") {
            dhcsys_alert(OrderName + "不能填写单次数量")
            return false;
        }
        if (OrderPackQty == "") {
            dhcsys_alert(OrderName + "为治疗项目,数量必须填写")
            return false;
        }
    } catch (e) {
        return true;
    }
}

function GetRecPrice(Row) {
    if (GlobalObj.PAAdmType != "I") {
        OrderBillTypeRowid = GetPrescBillTypeID();
    } else {
        OrderBillTypeRowid = GlobalObj.BillTypeID;
    }
    var OrderARCIMRowid = GetCellData(Row, "OrderARCIMRowid");
    var OrderOpenForAllHosp = ""; //$("#OrderOpenForAllHosp").val();
    var OrderPackUOMRowid = GetCellData(Row, "OrderPackUOMRowid");
    if (OrderPackUOMRowid == "") return;
    var OrderRecDepRowid = GetCellData(Row, "OrderRecDepRowid");
    var LogonDep = ""
    var obj = document.getElementById("FindByLogDep");
    if (obj) {
        if (obj.checked) { FindRecLocByLogonLoc = 1 } else { FindRecLocByLogonLoc = 0 }
    }
    if (FindRecLocByLogonLoc == "1") { LogonDep = session['LOGON.CTLOCID'] }
    var retPrice = cspRunServerMethod(GlobalObj.GetOrderPriceConUomMethod, GlobalObj.EpisodeID, OrderBillTypeRowid, LogonDep, OrderARCIMRowid, OrderOpenForAllHosp, OrderPackUOMRowid, OrderRecDepRowid);
    if (retPrice==undefined) retPrice="0^0^0^0^0";
    var ArrPrice = retPrice.split("^");
    var Price = ArrPrice[0];
    if (Price < 0) {
        Alert("此接收下无有效医嘱项,请切换接收科室或者联系相关人员处理")
        websys_setfocus('OrderRecDep');
    }
    return retPrice
}

function SaveOrderToEMR() {
    if (GlobalObj.PAAdmType == "I") {
        return true;
    }
    var OrdList = tkMakeServerCall("web.DHCOEOrdItem", "GetOrderDataToEMR", GlobalObj.EpisodeID)
        //\r\n+1.0(编号-依次递增)+医嘱名称+剂量+单位+频次+疗程+(第二条，后边一次类推N条）\r\n+2.0+医嘱名称+剂量+单位+频次+疗程
        //parent.updateEMRInstanceData("oeord",OrdList)
    if (typeof(parent.invokeChartFun) === 'function') {
        parent.invokeChartFun('门诊病历', 'updateEMRInstanceData', "oeord", OrdList);
    }
    return OrdList
}

function FormateNumber(Number) {
    if ((Number == "")||(Number==" ")) return "";
    if (Number.indexOf(".") == -1) { return +Number }
    var FirstNum = Number.split(".")[0];
    FirstNum = +FirstNum
    var SecondNum = ""
    if (Number.indexOf(".") != -1) SecondNum = Number.split(".")[1];
    if (SecondNum != "") SecondNum = SecondNum
    if (SecondNum != "") {
        return FirstNum + "." + SecondNum;
    } else {
        return FirstNum;
    }
}
//检查医嘱优先级是否在允许范围内
function CheckPriorAllow(OrderPriorRowid, OrderARCIMRowid, OrderName) {
    var PriorCheckRet = CheckPriorAllowRange(OrderPriorRowid, OrderARCIMRowid);
    if (parseFloat(PriorCheckRet) >= 1) {
        if ((PriorCheckRet == 1) || (PriorCheckRet == 2)) {
            $.messager.alert("警告", OrderName + t['PriorNoAllow']);
        } else if (PriorCheckRet == 3) {
            $.messager.alert("警告", OrderName + t['PriorNoAllow_Exam_Lab']);
        } else if (PriorCheckRet == 4) {
            $.messager.alert("警告", OrderName + "是出院医嘱,只能开临时!");
        } else if (PriorCheckRet == 5) {
            $.messager.alert("警告", OrderName + ",不能将该非药品医嘱开为出院带药医嘱.");
        }else {
            $.messager.alert("警告", OrderName + t['PriorNoAllow_Other']);
        }
        return false;
    }
    return true;
}
var PHCINDesczLookupGrid;

function InstrFocusHandler(e) {
    if (!PageLogicObj.isComboEnable) return websys_cancel();
    var obj = websys_getSrcElement(e);

    var rowid = "";
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }

    var Id = obj.id;
    //var InstrName=$(obj).val();	
    var ARCIMRowId = GetCellData(rowid, "OrderARCIMRowid");
    ShowInstrLookup = 1

    PHCINDesczLookupGrid = new dhcc.icare.Lookup({
        lookupListComponetId: 1872,
        lookupPage: "用法选择",
        lookupName: Id,
        listClassName: 'web.DHCDocOrderCommon',
        listQueryName: 'LookUpInstr',
        listProperties: [function() { return $(obj).val(); }, GlobalObj.PAAdmType, ARCIMRowId],
        listeners: { 'selectRow': InstrLookUpSelect },
        pageSize: 20,
        isCombo: PageLogicObj.isComboEnable
    });
    return websys_cancel();
}

var PHCFRDesczLookupGrid;

function FrequencyFocusHandler(e) {
    if (!PageLogicObj.isComboEnable) return websys_cancel();
    var obj = websys_getSrcElement(e);
    var rowid = "";
    if (obj.id.indexOf("_") > 0) {
        rowid = obj.id.split("_")[0];
    }

    var Id = obj.id;
    //var FreqName=$(obj).val();
    //var ARCIMRowId=GetCellData(rowid,"OrderARCIMRowid");
    ShowFreqLookup = 1

    PHCFRDesczLookupGrid = new dhcc.icare.Lookup({
        lookupListComponetId: 1872,
        lookupPage: "频次选择",
        lookupName: Id,
        listClassName: 'web.DHCDocOrderCommon',
        listQueryName: 'LookUpFrequency',
        listProperties: [function() { return $(obj).val(); }, GlobalObj.PAAdmType],
        listeners: { 'selectRow': FrequencyLookUpSelect },
        pageSize: 20,
        isCombo: PageLogicObj.isComboEnable
    });
    return websys_cancel();
}

var PHCDUDesczLookupGrid;

function DurationFocusHandler(e) {
    if (!PageLogicObj.isComboEnable) return websys_cancel();
    var obj = websys_getSrcElement(e);
    var key = websys_getKey(e);
    var type = websys_getType(e);
    var Id = obj.id;
    //var DurName=$(obj).val();//这样点击图片取不了值

    ShowDurLookup = 1
    PHCDUDesczLookupGrid = new dhcc.icare.Lookup({
        lookupListComponetId: 1872,
        lookupPage: "疗程选择",
        lookupName: Id,
        listClassName: 'web.DHCDocOrderCommon',
        listQueryName: 'LookUpDuration',
        listProperties: [function() { return $(obj).val(); }],
        listeners: { 'selectRow': DurationLookUpSelect },
        pageSize: 20,
        isCombo: PageLogicObj.isComboEnable
    });
    return websys_cancel();
}

function MultiTemplOrdEntry() {
	var ItemCount=0;
    for (var i = 0; i < $(".ordtemplatecheck").length; i++) {
        var checkboxid = $(".ordtemplatecheck")[i].id;
        if ($("#" + checkboxid + "").is(":checked")) {
	        ItemCount=ItemCount+1;
            var checkidArr = checkboxid.split("_");
            var checkidlength = checkidArr.length;
            var itemclass = checkidArr[checkidlength - 3] + "_" + checkidArr[checkidlength - 2] + "_" + checkidArr[checkidlength - 1];
            var itemid = $("." + itemclass + "").attr("id");
            addSelectedFav(itemid);
            $("#" + checkboxid + "").attr('checked', false);
        }
    }
    if (ItemCount==0){
	    alert("请选择需要添加的模板医嘱!")
	    return false;
	}
}
//记录基础代码数据使用次数
function DHCDocUseCount(ValueId, TableName) {
    var rtn = tkMakeServerCall("DHCDoc.Log.DHCDocCTUseCount", "Save", TableName, ValueId, session["LOGON.USERID"], "U", session["LOGON.USERID"])
}

function OrdCateGoryChange(e) {
    var rowid = "";
    var obj = websys_getSrcElement(e);
    var rowid = GetEventRow(e);
    var OrdCateGoryid = obj.value;
    var OrderARCIMRowid = GetCellData(rowid, "OrderARCIMRowid");
    if (OrderARCIMRowid != "") {
        DeleteAntReason(rowid);
        $('#Order_DataGrid').delRowData(rowid);
        var rowid = Add_Order_row();
        SetCellData(rowid, "OrdCateGory", OrdCateGoryid);
    }
    SetCellData(rowid, "OrdCateGoryRowId", OrdCateGoryid);
    if (GlobalObj.OEORIRealTimeQuery == 1) {
        var OrderNameObj = document.getElementById(rowid + "_OrderName");
        if (OrderNameObj && (OrderNameObj.disabled == false)) {
            $('#' + rowid + '_OrderName').combogrid("setValue", "");
        } else {
            $('#' + rowid + '_OrderName').combo("setText", "")
        }
    } else {
        SetCellData(rowid, "OrderName", "");
        if (typeof ItemzLookupGrid == "object") {
            ItemzLookupGrid.hide();
        }
    }
    SetFocusCell(rowid, "OrderName");
}
function SetUpToRowClickHandler(){
    var ids=$('#Order_DataGrid').jqGrid("getGridParam", "selarrrow"); 
    if (ids == null || ids.length == 0) {
		if (PageLogicObj.FocusRowIndex > 0) {
			if ($("#jqg_Order_DataGrid_" + PageLogicObj.FocusRowIndex).attr("checked") != true) {
				$("#Order_DataGrid").setSelection(PageLogicObj.FocusRowIndex, true);
			}
		}
    }
    var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
	if(ids.length>1){
	   alert("不能同时选中两个");
	}else{
	   GetGirdOneDataUp(ids);
	}
    
}
function GetGirdOneDataUp(rowid){
	//保存数据
	//Save_Order_row();
	var DataArry=new Array();
	
	for(var i=0;i<2;i++){
		//不取已经审核医嘱 和空白行
		//if(CheckIsItem(rowids[i])==true){continue;}
		var CurRowid=parseInt(rowid)-i;
		
		var OrderItemRowid=GetCellData(CurRowid,"OrderItemRowid");
		var OrderARCIMRowid=GetCellData(CurRowid,"OrderARCIMRowid");
		if(OrderItemRowid != "" || OrderARCIMRowid == ""){return;}
		//保存行
		EndEditRow(CurRowid);
		var curRowData = $("#Order_DataGrid").getRowData(CurRowid);
		
		

		curRowData["id"]=parseInt(rowid)+i-1;
		
		DataArry[DataArry.length]=curRowData;
	}	
	for(var i=0;i<DataArry.length;i++){
		var data=DataArry[i];
		
		//var rowid=Add_Session_row(data);
		SetRowData(data["id"],data,"");
		EditRow(data["id"]);
		//处理被动交换的行是主医嘱的情况 start
		if (i==1){
			var SeqNo=data["id"];
			var rowids = $('#Order_DataGrid').getDataIDs();
	        for (var k = 0; k < rowids.length; k++) {
	            var OrderItemRowid = GetCellData(rowids[k], "OrderItemRowid");
	            var OrderARCIMRowid = GetCellData(rowids[k], "OrderARCIMRowid");
	            if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
		            var OrderMasterSeqNo = GetCellData(rowids[k], "OrderMasterSeqNo");
		            if (OrderMasterSeqNo==DataArry[0]["id"]){
			            SetCellData(rowids[k], "OrderMasterSeqNo",SeqNo)
			        }
	            }
	        }
		}
		//***********end******************
	}	
	var idi=parseInt(rowid)-1;	
	$("#Order_DataGrid").jqGrid('setSelection',idi);
	var idid=parseInt(rowid)
	$("#Order_DataGrid").jqGrid('resetSelection',idid);
	$("#Order_DataGrid").setSelection(idid,false);

}
function SetDownToRowClickHandler(){
    var ids=$('#Order_DataGrid').jqGrid("getGridParam", "selarrrow"); 
    if (ids == null || ids.length == 0) {
		if (PageLogicObj.FocusRowIndex > 0) {
			if ($("#jqg_Order_DataGrid_" + PageLogicObj.FocusRowIndex).attr("checked") != true) {
				$("#Order_DataGrid").setSelection(PageLogicObj.FocusRowIndex, true);
			}
		}
    }
    var ids = $('#Order_DataGrid').jqGrid("getGridParam", "selarrrow");
    if(ids.length>1){
	   alert("不能同时选中两个");
	}else{
	   GetGirdOneDataDown(ids);
	}
}
function GetGirdOneDataDown(rowid){
	//保存数据
	//Save_Order_row();
	var DataArry=new Array();
	for(var i=0;i<2;i++){
		//不取已经审核医嘱 和空白行
		//if(CheckIsItem(rowids[i])==true){continue;}
		var CurRowid=parseInt(rowid)+i;
		
		var OrderItemRowid=GetCellData(CurRowid,"OrderItemRowid");
		var OrderARCIMRowid=GetCellData(CurRowid,"OrderARCIMRowid");
		if(OrderItemRowid != "" || OrderARCIMRowid == ""){return;}
		//保存行
		EndEditRow(CurRowid);
		var curRowData = $("#Order_DataGrid").getRowData(CurRowid);
		curRowData["id"]=parseInt(rowid)-i+1;
		
		DataArry[DataArry.length]=curRowData;
	}	
	for(var i=0;i<DataArry.length;i++){
		var data=DataArry[i];
		
		//var rowid=Add_Session_row(data);
		SetRowData(data["id"],data,"");
		EditRow(data["id"])
		//处理被动交换的行是主医嘱的情况 start
		if (i==1){
			var SeqNo=data["id"];
			var rowids = $('#Order_DataGrid').getDataIDs();
	        for (var k = 0; k < rowids.length; k++) {
	            var OrderItemRowid = GetCellData(rowids[k], "OrderItemRowid");
	            var OrderARCIMRowid = GetCellData(rowids[k], "OrderARCIMRowid");
	            if ((OrderARCIMRowid != "") && (OrderItemRowid == "")) {
		            var OrderMasterSeqNo = GetCellData(rowids[k], "OrderMasterSeqNo");
		            if (OrderMasterSeqNo==DataArry[0]["id"]){
			            SetCellData(rowids[k], "OrderMasterSeqNo",SeqNo)
			        }
	            }
	        }
		}
		//***********end******************
	}	
	var idi=parseInt(rowid)+1;	
	//$("#Order_DataGrid").trigger("reloadGrid");
	$("#Order_DataGrid").jqGrid('setSelection',idi);
	var idid=parseInt(rowid)
	$("#Order_DataGrid").jqGrid('resetSelection',idid);
	$("#Order_DataGrid").setSelection(idid,false);

}

///判断是否含有病危医嘱
function HavZFOrderStr(OrderItemStr)
{
	var BVFlag="N"
	var OrderItemStrArrt=OrderItemStr.split(String.fromCharCode(1))
	for (var i=0;i<OrderItemStrArrt.length;i++)
	{
		var SubItemArry=OrderItemStrArrt[i].split("^");
		var ArcimID=SubItemArry[0]
		if (ArcimID=="12110||1"){
			BVFlag="Y"
		}
	}
	return BVFlag
}
//保存到模板
function SaveToTemplate_Click()
{ 
	var SelIds=$('#Order_DataGrid').jqGrid("getGridParam", "selarrrow"); 			
	if(SelIds==null || SelIds.length==0) {  
		$.messager.alert("警告","请选择要保存到医嘱的记录");  
		return;  
	}
    var HasNosave=0
    for(var i=0;i<SelIds.length;i++){
	     var OrderItemRowid=GetCellData(SelIds[i],"OrderItemRowid");
	     var OrderARCIMRowid=GetCellData(SelIds[i],"OrderARCIMRowid");
	     if(OrderItemRowid=="" && OrderARCIMRowid!=""){	
	     	var HasNosave=1;
			break;
		  }	     
     }
     if (HasNosave==0){
	     $.messager.alert("警告","选择的记录中不存在未审核的医嘱！")

	     return false;
     }
	 var AddTOArcosARCIMDatas=GetAddTOArcosARCIMDatas(SelIds)
     var RtnStr=UDHCOEOrderSaveToTemplate(AddTOArcosARCIMDatas);
	
	 OEPrefClickHandler();
	 return websys_cancel();
	
	 var ArcosRowid=RtnStr.split("^")[0];
	 if (ArcosRowid!=""){
		 $.messager.alert("警告","保存成功!")
		
	 }
	 else{$.messager.alert("警告","保存失败!");return websys_cancel();}
}
function UDHCOEOrderSaveToTemplate(AddTOArcosARCIMDatas)
{
	var XCONTEXT=GlobalObj.XCONTEXT
	var IDStr=tkMakeServerCall("web.DHCUserFavItems","GetUserwebsysPreferencesID",session['LOGON.USERID'],session['LOGON.CTLOCID'],XCONTEXT)
	if (IDStr.split(",")[1]==""){
		alert("请先新建个人模板才能使用此功能。")
		return false
	}
	//var lnk="websys.default.csp?WEBSYS.TCOMPONENT=UDHCOEOrderSaveToTemplate&Type="+"西药"+"&AddTOArcosARCIMDatas="+escape(AddTOArcosARCIMDatas)+"&XCONTEXT="+escape(XCONTEXT);
	var lnk="websys.default.csp?WEBSYS.TCOMPONENT=UDHCOEOrderSaveToTemplate&Type="+"西药"+"&AddTOArcosARCIMDatas="+escape(AddTOArcosARCIMDatas)+"&XCONTEXT="+escape(XCONTEXT);
	var obj=new Object();  
	obj.name=AddTOArcosARCIMDatas; 
	var RtnStr=window.showModalDialog(lnk,obj,"dialogwidth:35;dialogheight:50;help:no;status:no;center:1;resizable:no");
	//var RtnStr=window.open(lnk,"UDHCOEOrderSaveToTemplate","dialogwidth:100;dialogheight:200;help:no;status:no;center:1;resizable:no");	
    return  RtnStr
	}
function GetAddTOArcosARCIMDatas(rowids)
{
	var retstring=""
	var len=rowids.length;
     //var rowids=$('#Order_DataGrid').getDataIDs();
     for(var i=0;i<rowids.length;i++){ 

	    //门诊的已经审核但未收费不会在录入的医嘱套中
		var OrderItemRowid=GetCellData(rowids[i],"OrderItemRowid");
	    var OrderARCIMRowid=GetCellData(rowids[i],"OrderARCIMRowid");
	    if(OrderItemRowid=="" && OrderARCIMRowid!=""){
			var OrderMasterSeqNo=GetCellData(rowids[i],"OrderMasterSeqNo");
			var OrderSeqNo=GetCellData(rowids[i],"id");
			var OrderPriorRowid=GetCellData(rowids[i],"OrderPriorRowid");
			//存在关联号为空,也赋值了关联号到医嘱套维护界面,在AddCopyItemToList有判断不影响使用
			if(OrderMasterSeqNo==""){
				//如果存在子医嘱则赋值,不存在则不赋值
				var SubRowidsAry=GetMasterSeqNo(rowids[i]);
				if (SubRowidsAry.length > 0) {
					OrderMasterSeqNo=OrderSeqNo;
				}
			}else{
				OrderMasterSeqNo=OrderMasterSeqNo+"."+(OrderSeqNo-OrderMasterSeqNo)
			}
			var OrderDoseQty=GetCellData(rowids[i],"OrderDoseQty");//剂量
			var OrderDoseUOM=GetCellData(rowids[i],"OrderDoseUOMRowid");//剂量单位
			var OrderFreqRowID=GetCellData(rowids[i],"OrderFreqRowid"); //频次
			var OrderInstrRowID=GetCellData(rowids[i],"OrderInstrRowid"); //用法
			var OrderDurRowid=GetCellData(rowids[i],"OrderDurRowid");     //疗程
			var OrderPackQty=GetCellData(rowids[i],"OrderPackQty"); //整包装
			var OrderPackUOM=GetCellData(rowids[i],"OrderPackUOMRowid"); //整包装单位
			var OrderDepProcNote=GetCellData(rowids[i],"OrderDepProcNote"); //医嘱备注
			var OrderPriorRemarks=GetCellData(rowids[i],"OrderPriorRemarksRowId"); //附加说明
			if (OrderPriorRemarks=="false") OrderPriorRemarks="";
			var SampleId=GetCellData(rowids[i],"OrderLabSpecRowid");
			//SampleId 标本ID,ARCOSItemNO  插入指定位置(医嘱录入不用), OrderPriorRemarksDR As %String
			//var ret=tkMakeServerCall('web.DHCARCOrdSets','InsertItem',Arcosrowid,OrderARCIMRowid,OrderPackQty,OrderDoseQty,OrderDoseUOM,OrderFreqRowID,OrderDurRowid,OrderInstrRowID,OrderMasterSeqNo,OrderDepProcNote,OrderPriorRowid,SampleId,"",OrderPriorRemarks);
			if (retstring==""){retstring=OrderARCIMRowid+"^"+OrderPackQty+"^"+OrderDoseQty+"^"+OrderDoseUOM+"^"+OrderFreqRowID+"^"+OrderDurRowid+"^"+OrderInstrRowID+"^"+OrderMasterSeqNo+"^"+OrderDepProcNote+"^"+OrderPriorRowid+"^"+SampleId+"^"+""+"^"+OrderPriorRemarks}else{
			retstring=retstring+String.fromCharCode(2)+OrderARCIMRowid+"^"+OrderPackQty+"^"+OrderDoseQty+"^"+OrderDoseUOM+"^"+OrderFreqRowID+"^"+OrderDurRowid+"^"+OrderInstrRowID+"^"+OrderMasterSeqNo+"^"+OrderDepProcNote+"^"+OrderPriorRowid+"^"+SampleId+"^"+""+"^"+OrderPriorRemarks
			}
		}
    }
	
    
   
	return retstring
	}