!function(){var e={639:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SoundRecognizer=void 0;const i=n(r(870));t.SoundRecognizer=class{constructor(){this.rec=null,this.wave=null,this.SampleRate=16e3,this.testBitRate=16,this.isCloseRecorder=!1,this.SendInterval=300,this.realTimeSendTryType="wav",this.realTimeSendTryEncBusy=0,this.realTimeSendTryTime=0,this.realTimeSendTryNumber=0,this.transferUploadNumberMax=0,this.realTimeSendTryChunk=null,this.soundType="wav",this.recwaveElm=null,this.dataSize=6400}onDataSizeUpload(e){}TransferProcess(e,t,r,n,i){}init(e){this.soundType=e.soundType||"wav",this.SampleRate=e.sampleRate||16e3,this.recwaveElm=e.recwaveElm||"",this.onDataSizeUpload=e.onDataSizeUpload||this.onDataSizeUpload,this.initRecorder()}RealTimeSendTryReset(e){this.realTimeSendTryType=e,this.realTimeSendTryTime=0}RealTimeSendTry(e,t){var r=this,n=Date.now();i.default.prototype;if(0==this.realTimeSendTryTime&&(this.realTimeSendTryTime=n,this.realTimeSendTryEncBusy=0,this.realTimeSendTryNumber=0,this.transferUploadNumberMax=0,this.realTimeSendTryChunk=null),t||!(n-this.realTimeSendTryTime<this.SendInterval)){this.realTimeSendTryTime=n;for(var s=++this.realTimeSendTryNumber,a=i.default.SampleData(e.buffers,e.srcSampleRate,this.SampleRate,this.realTimeSendTryChunk,{frameType:t?"":this.realTimeSendTryType}),o=this.realTimeSendTryChunk?this.realTimeSendTryChunk.index:0;o<a.index;o++)e.buffers[o]=null;if(this.realTimeSendTryChunk=a,0==a.data.length||t&&a.data.length<2e3)this.TransferUpload(s,null,0,null,t);else if(t||!(this.realTimeSendTryEncBusy>=2)){this.realTimeSendTryEncBusy++;var h=Date.now(),c=i.default({type:this.realTimeSendTryType,sampleRate:this.SampleRate,bitRate:this.testBitRate});c.mock(a.data,a.sampleRate),c.stop((function(e,n){r.realTimeSendTryEncBusy&&r.realTimeSendTryEncBusy--,e.encTime=Date.now()-h,r.TransferUpload(s,e,n,c,t)}),(function(e){r.realTimeSendTryEncBusy&&r.realTimeSendTryEncBusy--}))}}}recordClose(){try{this.rec.close((()=>this.isCloseRecorder=!0)),this.RealTimeSendTry(this.rec,!0)}catch(e){}}recordEnd(){try{this.rec.stop((()=>this.recordClose()),(()=>this.recordClose()))}catch(e){}}initRecorder(){var e=this,t=i.default({type:e.soundType,bitRate:e.testBitRate,sampleRate:e.SampleRate,onProcess:function(r,n,i,s){e.RealTimeSendTry(t,!1)}});i.default.CLog=null,t.open((function(){t.start(),e.isCloseRecorder=!1,e.RealTimeSendTryReset(e.soundType)})),this.rec=t}TransferUpload(e,t,r,n,i){if(t){var s=t,a=new FileReader,o=this;a.onloadend=function(e){var t=e.target.result,r=new Int8Array(t);if(r.length>0){82==r[0]&&73==r[1]&&70==r[2]&&70==r[3]&&(r=r.slice(44));for(var n=new Int8Array(o.dataSize),i=0,s=0;s<r.byteLength;s++)n[i++]=r[s],(s+1)%o.dataSize==0&&(o.onDataSizeUpload&&o.onDataSizeUpload(n),n=r.byteLength-s-1>=o.dataSize?new Int8Array(o.dataSize):new Int8Array(r.byteLength-s-1),i=0),s+1==r.byteLength&&(s+1)%o.dataSize!=0&&o.onDataSizeUpload&&o.onDataSizeUpload(n)}},a.readAsArrayBuffer(s)}}}},582:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CryptoJS=void 0;var r,n,i,s,a,o=o||function(e,t){var r={},n=r.lib={},i=function(){},s=n.Base={extend:function(e){i.prototype=this;var t=new i;return e&&t.mixIn(e),t.hasOwnProperty("init")||(t.init=function(){t.$super.init.apply(this,arguments)}),t.init.prototype=t,t.$super=this,t},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}},a=n.WordArray=s.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=null!=t?t:4*e.length},toString:function(e){return(e||h).stringify(this)},concat:function(e){var t=this.words,r=e.words,n=this.sigBytes;if(e=e.sigBytes,this.clamp(),n%4)for(var i=0;i<e;i++)t[n+i>>>2]|=(r[i>>>2]>>>24-i%4*8&255)<<24-(n+i)%4*8;else if(65535<r.length)for(i=0;i<e;i+=4)t[n+i>>>2]=r[i>>>2];else t.push.apply(t,r);return this.sigBytes+=e,this},clamp:function(){var t=this.words,r=this.sigBytes;t[r>>>2]&=4294967295<<32-r%4*8,t.length=e.ceil(r/4)},clone:function(){var e=s.clone.call(this);return e.words=this.words.slice(0),e},random:function(t){for(var r=[],n=0;n<t;n+=4)r.push(4294967296*e.random()|0);return new a.init(r,t)}}),o=r.enc={},h=o.Hex={stringify:function(e){var t=e.words;e=e.sigBytes;for(var r=[],n=0;n<e;n++){var i=t[n>>>2]>>>24-n%4*8&255;r.push((i>>>4).toString(16)),r.push((15&i).toString(16))}return r.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n+=2)r[n>>>3]|=parseInt(e.substr(n,2),16)<<24-n%8*4;return new a.init(r,t/2)}},c=o.Latin1={stringify:function(e){var t=e.words;e=e.sigBytes;for(var r=[],n=0;n<e;n++)r.push(String.fromCharCode(t[n>>>2]>>>24-n%4*8&255));return r.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n++)r[n>>>2]|=(255&e.charCodeAt(n))<<24-n%4*8;return new a.init(r,t)}},f=o.Utf8={stringify:function(e){try{return decodeURIComponent(escape(c.stringify(e)))}catch(e){throw Error("Malformed UTF-8 data")}},parse:function(e){return c.parse(unescape(encodeURIComponent(e)))}},l=n.BufferedBlockAlgorithm=s.extend({reset:function(){this._data=new a.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=f.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(t){var r=this._data,n=r.words,i=r.sigBytes,s=this.blockSize,o=i/(4*s);if(t=(o=t?e.ceil(o):e.max((0|o)-this._minBufferSize,0))*s,i=e.min(4*t,i),t){for(var h=0;h<t;h+=s)this._doProcessBlock(n,h);h=n.splice(0,t),r.sigBytes-=i}return new a.init(h,i)},clone:function(){var e=s.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0});n.Hasher=l.extend({cfg:s.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){l.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(e){return function(t,r){return new e.init(r).finalize(t)}},_createHmacHelper:function(e){return function(t,r){return new u.HMAC.init(e,r).finalize(t)}}});var u=r.algo={};return r}(Math);t.CryptoJS=o,n=(a=(r=o).lib).WordArray,i=a.Hasher,s=[],a=r.algo.SHA1=i.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,t){for(var r=this._hash.words,n=r[0],i=r[1],a=r[2],o=r[3],h=r[4],c=0;80>c;c++){if(16>c)s[c]=0|e[t+c];else{var f=s[c-3]^s[c-8]^s[c-14]^s[c-16];s[c]=f<<1|f>>>31}f=(n<<5|n>>>27)+h+s[c],f=20>c?f+(1518500249+(i&a|~i&o)):40>c?f+(1859775393+(i^a^o)):60>c?f+((i&a|i&o|a&o)-1894007588):f+((i^a^o)-899497514),h=o,o=a,a=i<<30|i>>>2,i=n,n=f}r[0]=r[0]+n|0,r[1]=r[1]+i|0,r[2]=r[2]+a|0,r[3]=r[3]+o|0,r[4]=r[4]+h|0},_doFinalize:function(){var e=this._data,t=e.words,r=8*this._nDataBytes,n=8*e.sigBytes;return t[n>>>5]|=128<<24-n%32,t[14+(n+64>>>9<<4)]=Math.floor(r/4294967296),t[15+(n+64>>>9<<4)]=r,e.sigBytes=4*t.length,this._process(),this._hash},clone:function(){var e=i.clone.call(this);return e._hash=this._hash.clone(),e}}),r.SHA1=i._createHelper(a),r.HmacSHA1=i._createHmacHelper(a),function(){var e=o,t=e.enc.Utf8;e.algo.HMAC=e.lib.Base.extend({init:function(e,r){e=this._hasher=new e.init,"string"==typeof r&&(r=t.parse(r));var n=e.blockSize,i=4*n;r.sigBytes>i&&(r=e.finalize(r)),r.clamp();for(var s=this._oKey=r.clone(),a=this._iKey=r.clone(),o=s.words,h=a.words,c=0;c<n;c++)o[c]^=1549556828,h[c]^=909522486;s.sigBytes=a.sigBytes=i,this.reset()},reset:function(){var e=this._hasher;e.reset(),e.update(this._iKey)},update:function(e){return this._hasher.update(e),this},finalize:function(e){var t=this._hasher;return e=t.finalize(e),t.reset(),t.finalize(this._oKey.clone().concat(e))}})}()},411:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MD5=t.arrayBufferToBase64=void 0,t.arrayBufferToBase64=function(e){var t="",r=new Uint8Array(e),n=r.byteLength;for(let e=0;e<n;e++)t+=String.fromCharCode(r[e]);return window.btoa(t)};class r{constructor(){this.hexcase=0,this.b64pad=""}static get instance(){return this._instance||(this._instance=new r),this._instance}hex_md5(e){return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(e)))}b64_md5(e){return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(e)))}any_md5(e,t){return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(e)),t)}hex_hmac_md5(e,t){return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(e),this.str2rstr_utf8(t)))}b64_hmac_md5(e,t){return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(e),this.str2rstr_utf8(t)))}any_hmac_md5(e,t,r){return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(e),this.str2rstr_utf8(t)),r)}md5_vm_test(){return"900150983cd24fb0d6963f7d28e17f72"==this.hex_md5("abc").toLowerCase()}rstr_md5(e){return this.binl2rstr(this.binl_md5(this.rstr2binl(e),8*e.length))}rstr_hmac_md5(e,t){var r=this.rstr2binl(e);r.length>16&&(r=this.binl_md5(r,8*e.length));for(var n=Array(16),i=Array(16),s=0;s<16;s++)n[s]=909522486^r[s],i[s]=1549556828^r[s];var a=this.binl_md5(n.concat(this.rstr2binl(t)),512+8*t.length);return this.binl2rstr(this.binl_md5(i.concat(a),640))}rstr2hex(e){try{this.hexcase}catch(e){this.hexcase=0}for(var t,r=this.hexcase?"0123456789ABCDEF":"0123456789abcdef",n="",i=0;i<e.length;i++)t=e.charCodeAt(i),n+=r.charAt(t>>>4&15)+r.charAt(15&t);return n}rstr2b64(e){try{this.b64pad}catch(e){this.b64pad=""}for(var t="",r=e.length,n=0;n<r;n+=3)for(var i=e.charCodeAt(n)<<16|(n+1<r?e.charCodeAt(n+1)<<8:0)|(n+2<r?e.charCodeAt(n+2):0),s=0;s<4;s++)8*n+6*s>8*e.length?t+=this.b64pad:t+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(i>>>6*(3-s)&63);return t}rstr2any(e,t){var r,n,i,s,a,o=t.length,h=Array(Math.ceil(e.length/2));for(r=0;r<h.length;r++)h[r]=e.charCodeAt(2*r)<<8|e.charCodeAt(2*r+1);var c=Math.ceil(8*e.length/(Math.log(t.length)/Math.log(2))),f=Array(c);for(n=0;n<c;n++){for(a=Array(),s=0,r=0;r<h.length;r++)s=(s<<16)+h[r],s-=(i=Math.floor(s/o))*o,(a.length>0||i>0)&&(a[a.length]=i);f[n]=s,h=a}var l="";for(r=f.length-1;r>=0;r--)l+=t.charAt(f[r]);return l}str2rstr_utf8(e){for(var t,r,n="",i=-1;++i<e.length;)t=e.charCodeAt(i),r=i+1<e.length?e.charCodeAt(i+1):0,55296<=t&&t<=56319&&56320<=r&&r<=57343&&(t=65536+((1023&t)<<10)+(1023&r),i++),t<=127?n+=String.fromCharCode(t):t<=2047?n+=String.fromCharCode(192|t>>>6&31,128|63&t):t<=65535?n+=String.fromCharCode(224|t>>>12&15,128|t>>>6&63,128|63&t):t<=2097151&&(n+=String.fromCharCode(240|t>>>18&7,128|t>>>12&63,128|t>>>6&63,128|63&t));return n}str2rstr_utf16le(e){for(var t="",r=0;r<e.length;r++)t+=String.fromCharCode(255&e.charCodeAt(r),e.charCodeAt(r)>>>8&255);return t}str2rstr_utf16be(e){for(var t="",r=0;r<e.length;r++)t+=String.fromCharCode(e.charCodeAt(r)>>>8&255,255&e.charCodeAt(r));return t}rstr2binl(e){for(var t=Array(e.length>>2),r=0;r<t.length;r++)t[r]=0;for(r=0;r<8*e.length;r+=8)t[r>>5]|=(255&e.charCodeAt(r/8))<<r%32;return t}binl2rstr(e){for(var t="",r=0;r<32*e.length;r+=8)t+=String.fromCharCode(e[r>>5]>>>r%32&255);return t}binl_md5(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;for(var r=1732584193,n=-271733879,i=-1732584194,s=271733878,a=0;a<e.length;a+=16){var o=r,h=n,c=i,f=s;r=this.md5_ff(r,n,i,s,e[a+0],7,-680876936),s=this.md5_ff(s,r,n,i,e[a+1],12,-389564586),i=this.md5_ff(i,s,r,n,e[a+2],17,606105819),n=this.md5_ff(n,i,s,r,e[a+3],22,-1044525330),r=this.md5_ff(r,n,i,s,e[a+4],7,-176418897),s=this.md5_ff(s,r,n,i,e[a+5],12,1200080426),i=this.md5_ff(i,s,r,n,e[a+6],17,-1473231341),n=this.md5_ff(n,i,s,r,e[a+7],22,-45705983),r=this.md5_ff(r,n,i,s,e[a+8],7,1770035416),s=this.md5_ff(s,r,n,i,e[a+9],12,-1958414417),i=this.md5_ff(i,s,r,n,e[a+10],17,-42063),n=this.md5_ff(n,i,s,r,e[a+11],22,-1990404162),r=this.md5_ff(r,n,i,s,e[a+12],7,1804603682),s=this.md5_ff(s,r,n,i,e[a+13],12,-40341101),i=this.md5_ff(i,s,r,n,e[a+14],17,-1502002290),n=this.md5_ff(n,i,s,r,e[a+15],22,1236535329),r=this.md5_gg(r,n,i,s,e[a+1],5,-165796510),s=this.md5_gg(s,r,n,i,e[a+6],9,-1069501632),i=this.md5_gg(i,s,r,n,e[a+11],14,643717713),n=this.md5_gg(n,i,s,r,e[a+0],20,-373897302),r=this.md5_gg(r,n,i,s,e[a+5],5,-701558691),s=this.md5_gg(s,r,n,i,e[a+10],9,38016083),i=this.md5_gg(i,s,r,n,e[a+15],14,-660478335),n=this.md5_gg(n,i,s,r,e[a+4],20,-405537848),r=this.md5_gg(r,n,i,s,e[a+9],5,568446438),s=this.md5_gg(s,r,n,i,e[a+14],9,-1019803690),i=this.md5_gg(i,s,r,n,e[a+3],14,-187363961),n=this.md5_gg(n,i,s,r,e[a+8],20,1163531501),r=this.md5_gg(r,n,i,s,e[a+13],5,-1444681467),s=this.md5_gg(s,r,n,i,e[a+2],9,-51403784),i=this.md5_gg(i,s,r,n,e[a+7],14,1735328473),n=this.md5_gg(n,i,s,r,e[a+12],20,-1926607734),r=this.md5_hh(r,n,i,s,e[a+5],4,-378558),s=this.md5_hh(s,r,n,i,e[a+8],11,-2022574463),i=this.md5_hh(i,s,r,n,e[a+11],16,1839030562),n=this.md5_hh(n,i,s,r,e[a+14],23,-35309556),r=this.md5_hh(r,n,i,s,e[a+1],4,-1530992060),s=this.md5_hh(s,r,n,i,e[a+4],11,1272893353),i=this.md5_hh(i,s,r,n,e[a+7],16,-155497632),n=this.md5_hh(n,i,s,r,e[a+10],23,-1094730640),r=this.md5_hh(r,n,i,s,e[a+13],4,681279174),s=this.md5_hh(s,r,n,i,e[a+0],11,-358537222),i=this.md5_hh(i,s,r,n,e[a+3],16,-722521979),n=this.md5_hh(n,i,s,r,e[a+6],23,76029189),r=this.md5_hh(r,n,i,s,e[a+9],4,-640364487),s=this.md5_hh(s,r,n,i,e[a+12],11,-421815835),i=this.md5_hh(i,s,r,n,e[a+15],16,530742520),n=this.md5_hh(n,i,s,r,e[a+2],23,-995338651),r=this.md5_ii(r,n,i,s,e[a+0],6,-198630844),s=this.md5_ii(s,r,n,i,e[a+7],10,1126891415),i=this.md5_ii(i,s,r,n,e[a+14],15,-1416354905),n=this.md5_ii(n,i,s,r,e[a+5],21,-57434055),r=this.md5_ii(r,n,i,s,e[a+12],6,1700485571),s=this.md5_ii(s,r,n,i,e[a+3],10,-1894986606),i=this.md5_ii(i,s,r,n,e[a+10],15,-1051523),n=this.md5_ii(n,i,s,r,e[a+1],21,-2054922799),r=this.md5_ii(r,n,i,s,e[a+8],6,1873313359),s=this.md5_ii(s,r,n,i,e[a+15],10,-30611744),i=this.md5_ii(i,s,r,n,e[a+6],15,-1560198380),n=this.md5_ii(n,i,s,r,e[a+13],21,1309151649),r=this.md5_ii(r,n,i,s,e[a+4],6,-145523070),s=this.md5_ii(s,r,n,i,e[a+11],10,-1120210379),i=this.md5_ii(i,s,r,n,e[a+2],15,718787259),n=this.md5_ii(n,i,s,r,e[a+9],21,-343485551),r=this.safe_add(r,o),n=this.safe_add(n,h),i=this.safe_add(i,c),s=this.safe_add(s,f)}return[r,n,i,s]}md5_cmn(e,t,r,n,i,s){return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(t,e),this.safe_add(n,s)),i),r)}md5_ff(e,t,r,n,i,s,a){return this.md5_cmn(t&r|~t&n,e,t,i,s,a)}md5_gg(e,t,r,n,i,s,a){return this.md5_cmn(t&n|r&~n,e,t,i,s,a)}md5_hh(e,t,r,n,i,s,a){return this.md5_cmn(t^r^n,e,t,i,s,a)}md5_ii(e,t,r,n,i,s,a){return this.md5_cmn(r^(t|~n),e,t,i,s,a)}safe_add(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}bit_rol(e,t){return e<<t|e>>>32-t}}t.MD5=r},882:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NLPAdaptor=void 0;t.NLPAdaptor=class{constructor(e){this.nlpPath="",this.scene="4",this.soundRef=null,this.callback=function(e){},this.nlpPath=e.nlpPath,this.scene=e.scene,this.soundRef=e.soundRef,this.callback=e.callback}parse(e,t){t=t||this.scene;let r=encodeURIComponent(e),n=this.nlpPath.replace("${sent}",r).replace("${scene}",t);jQuery.ajax({url:n,dataType:"json",timeout:1e3,type:"GET",global:!1}).then((e=>{this.callback.call(this,e)}))}}},895:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SysSound=void 0;const n=r(411),i=r(582),s=r(639),a=r(882);t.SysSound=class{constructor(e){this.apiKey="",this.apiSecret="",this.ws_path="",this.ws_url="",this.session_id="",this.token_val="",this.nlpAdaptor=null,this.soundRecognizer=new s.SoundRecognizer,this.messageEvents=[function(e){return!0}],this.onopen=new Function,this.onclose=new Function,this.onmessage=new Function,this.onerror=new Function;var t=Math.round((new Date).getTime()/1e3),r="secretID="+e.apiSecret+"&timestamp="+t,o=n.MD5.instance.hex_md5(r),h=i.CryptoJS.HmacSHA1(o,e.apiKey);this.ws_url=e.wsPath+"?isFirst=0&signature="+h+"&liveTime=20000&"+r,this.nlpAdaptor=new a.NLPAdaptor({nlpPath:e.nlpPath,scene:e.scene,soundRef:this,callback:function(e){for(let t=0;t<this.soundRef.messageEvents.length;t++)"function"==typeof this.soundRef.messageEvents[t]&&this.soundRef.messageEvents[t].call(this.soundRef,e)}})}parseResult(e){return 200==(e=JSON.parse(e)).code&&""!=e.results?1==e.is_final?{success:!0,data:e}:(null==e.results&&(e.results=""),{success:!1,data:e}):{success:!1,data:e}}openWebSocket(){"WebSocket"in window&&(this.ws=new WebSocket(this.ws_url),this.ws.onopen=()=>{this.ws.send(JSON.stringify({action:"InitStreamingASR",devid:"test_202004211132",scene:"tongyong",token:this.token_val,codec:"pcm",sample_rate:16e3,meeting_id:"test02_68_20200421185308"}))},this.ws.onmessage=e=>{var t=JSON.parse(e.data);(t.code=200)&&"speech recognition initialization succeeded"==t.description&&(this.session_id=t.session_id);var r=this.parseResult(e.data);r.success&&this.nlpAdaptor&&this.nlpAdaptor.parse(r.data.results)},this.ws.onclose=()=>{},this.ws.onerror=()=>{})}sendBytesToWebSocket(e){var t=n.arrayBufferToBase64(e),r=JSON.stringify({action:"StreamingASR",session_id:this.session_id,end_flag:0,audio_data:t});3===this.ws.readyState?this.openWebSocket():1===this.ws.readyState&&this.ws.send(r)}startRecording(){var e;this.openWebSocket(),null==this.soundRecognizer.rec?this.soundRecognizer.init({soundType:"wav",sampleRate:16e3,recwaveElm:".recwave",onDataSizeUpload:(e=this,function(t){e.sendBytesToWebSocket.call(e,t)})}):this.soundRecognizer.initRecorder()}stopRecording(){var e=JSON.stringify({action:"RelStreamingASR",session_id:this.session_id});this.ws.send(e),this.soundRecognizer.recordClose(),this.ws.close()}}},870:function(e,t,r){var n;!function(e){"use strict";var t=function(){},r=function(e){return new v(e)};r.LM="2022-08-06 20:51";var n="Recorder",i="getUserMedia",s="srcSampleRate",a="sampleRate";r.IsOpen=function(){var e=r.Stream;if(e){var t=(e.getTracks&&e.getTracks()||e.audioTracks||[])[0];if(t){var n=t.readyState;return"live"==n||n==t.LIVE}}return!1},r.BufferSize=4096,r.Destroy=function(){for(var e in m(n+" Destroy"),d(),o)o[e]()};var o={};r.BindDestroy=function(e,t){o[e]=t},r.Support=function(){var t=e.AudioContext;if(t||(t=e.webkitAudioContext),!t)return!1;var n=navigator.mediaDevices||{};return n[i]||(n=navigator)[i]||(n[i]=n.webkitGetUserMedia||n.mozGetUserMedia||n.msGetUserMedia),!!n[i]&&(r.Scope=n,r.Ctx&&"closed"!=r.Ctx.state||(r.Ctx=new t,r.BindDestroy("Ctx",(function(){var e=r.Ctx;e&&e.close&&(e.close(),r.Ctx=0)}))),!0)};var h="ConnectEnableWebM";r[h]=!0;var c="ConnectEnableWorklet";r[c]=!1;var f=function(t,i){var s,o,f,d=t.BufferSize||r.BufferSize,p=r.Ctx,v=t.Stream,g=function(e){var t=v._m=p.createMediaStreamSource(v),r=p.destination,n="createMediaStreamDestination";p[n]&&(r=p[n]()),t.connect(e),e.connect(r)},y="",S=v._call,b=function(e){for(var t in S){for(var r=e.length,n=new Int16Array(r),i=0,s=0;s<r;s++){var a=Math.max(-1,Math.min(1,e[s]));a=a<0?32768*a:32767*a,n[s]=a,i+=Math.abs(a)}for(var o in S)S[o](n,i);return}},w="ScriptProcessor",T="audioWorklet",C=n+" "+T,A="RecProc",R="MediaRecorder",k=R+".WebM.PCM",x=p.createScriptProcessor||p.createJavaScriptNode,M="。由于"+T+"内部1秒375次回调，在移动端可能会有性能问题导致回调丢失录音变短，PC端无影响，暂不建议开启"+T+"。",I=function(){o=v.isWorklet=!1,l(v),m("Connect采用老的"+w+"，"+(r[c]?"但已":"可")+"设置"+n+"."+c+"=true尝试启用"+T+y+M,3);var e=v._p=x.call(p,d,1,1);g(e);var t="_D220626",i=r[t];i&&m("Use "+n+"."+t,3),e.onaudioprocess=function(e){var t=e.inputBuffer.getChannelData(0);i?(t=new Float32Array(t),setTimeout((function(){b(t)}))):b(t)}},z=function(){s=v.isWebM=!1,u(v),o=v.isWorklet=!x||r[c];var t=e.AudioWorkletNode;if(o&&p[T]&&t){var i=function(){return o&&v._na},a=v._na=function(){""!==f&&(clearTimeout(f),f=setTimeout((function(){f=0,i()&&(m(T+"未返回任何音频，恢复使用"+w,3),x&&I())}),500))},h=function(){if(i()){var e=v._n=new t(p,A,{processorOptions:{bufferSize:d}});g(e),e.port.onmessage=function(e){f&&(clearTimeout(f),f=""),i()?b(e.data.val):o||m(T+"多余回调",3)},m("Connect采用"+T+"，设置"+n+"."+c+"=false可恢复老式"+w+y+M,3)}};p.resume()[S&&"finally"]((function(){if(i())if(p[A])h();else{var e,t,r=(t="class "+A+" extends AudioWorkletProcessor{",t+="constructor "+(e=function(e){return e.toString().replace(/^function|DEL_/g,"").replace(/\$RA/g,C)})((function(e){DEL_super(e);var t=this,r=e.processorOptions.bufferSize;t.bufferSize=r,t.buffer=new Float32Array(2*r),t.pos=0,t.port.onmessage=function(e){e.data.kill&&(t.kill=!0)}})),t+="process "+e((function(e,t,r){var n=this,i=n.bufferSize,s=n.buffer,a=n.pos;if((e=(e[0]||[])[0]||[]).length){s.set(e,a);var o=~~((a+=e.length)/i)*i;if(o){this.port.postMessage({val:s.slice(0,o)});var h=s.subarray(o,a);(s=new Float32Array(2*i)).set(h),a=h.length,n.buffer=s}n.pos=a}return!n.kill})),t+='}try{registerProcessor("'+A+'", '+A+')}catch(e){console.error("'+C+'注册失败",e)}',"data:text/javascript;base64,"+btoa(unescape(encodeURIComponent(t))));p[T].addModule(r).then((function(e){i()&&(p[A]=1,h(),f&&a())}))[S&&"catch"]((function(e){m(T+".addModule失败",1,e),i()&&I()}))}}))}else I()};!function(){var t=e[R],o="ondataavailable",c="audio/webm; codecs=pcm";s=v.isWebM=r[h];var l=t&&o in t.prototype&&t.isTypeSupported(c);if(y=l?"":"（此浏览器不支持"+k+"）",!i||!s||!l)return z();var u=function(){return s&&v._ra},g=(v._ra=function(){""!==f&&(clearTimeout(f),f=setTimeout((function(){u()&&(m(R+"未返回任何音频，降级使用"+T,3),z())}),500))},Object.assign({mimeType:c},r.ConnectWebMOptions)),S=v._r=new t(v,g),C=v._rd={sampleRate:p[a]};S[o]=function(e){var t=new FileReader;t.onloadend=function(){if(u()){var e=_(new Uint8Array(t.result),C);if(!e)return;if(-1==e)return void z();f&&(clearTimeout(f),f=""),b(e)}else s||m(R+"多余回调",3)},t.readAsArrayBuffer(e.data)},S.start(~~(d/48)),m("Connect采用"+k+"，设置"+n+"."+h+"=false可恢复使用"+T+"或老式"+w)}()},l=function(e){e._na=null,e._n&&(e._n.port.postMessage({kill:!0}),e._n.disconnect(),e._n=null)},u=function(e){e._ra=null,e._r&&(e._r.stop(),e._r=null)},d=function(e){var t=(e=e||r)==r,n=e.Stream;if(n&&(n._m&&(n._m.disconnect(),n._m=null),n._p&&(n._p.disconnect(),n._p.onaudioprocess=n._p=null),l(n),u(n),t)){for(var i=n.getTracks&&n.getTracks()||n.audioTracks||[],s=0;s<i.length;s++){var a=i[s];a.stop&&a.stop()}n.stop&&n.stop()}e.Stream=0};r.SampleData=function(e,t,r,n,i){n||(n={});var s=n.index||0,a=n.offset||0,o=n.frameNext||[];i||(i={});var h=i.frameSize||1;i.frameType&&(h="mp3"==i.frameType?1152:1);var c=e.length;c+1<s&&m("SampleData似乎传入了未重置chunk "+s+">"+c,3);for(var f=0,l=s;l<c;l++)f+=e[l].length;f=Math.max(0,f-Math.floor(a));var u=t/r;1<u?f=Math.floor(f/u):(u=1,r=t),f+=o.length;var d=new Int16Array(f),p=0;for(l=0;l<o.length;l++)d[p]=o[l],p++;for(;s<c;s++){for(var v=e[s],_=(l=a,v.length);l<_;){var g=Math.floor(l),y=Math.ceil(l),S=l-g,b=v[g],w=y<_?v[y]:(e[s+1]||[b])[0]||0;d[p]=b+(w-b)*S,p++,l+=u}a=l-_}o=null;var T=d.length%h;if(0<T){var C=2*(d.length-T);o=new Int16Array(d.buffer.slice(C)),d=new Int16Array(d.buffer.slice(0,C))}return{index:s,offset:a,frameNext:o,sampleRate:r,data:d}},r.PowerLevel=function(e,t){var r=e/t||0;return r<1251?Math.round(r/1250*10):Math.round(Math.min(100,Math.max(0,100*(1+Math.log(r/1e4)/Math.log(10)))))};var m=function(e,t){};try{!console.log.apply}catch(e){}r.CLog=m;var p=0;function v(e){this.id=++p,w();var r={type:"mp3",bitRate:16,sampleRate:16e3,onProcess:t};for(var n in e)r[n]=e[n];this.set=r,this._S=9,this.Sync={O:9,C:9}}r.Sync={O:9,C:9},r.prototype=v.prototype={CLog:m,_streamStore:function(){return this.set.sourceStream?this:r},open:function(n,s){var a=this,o=a._streamStore();n=n||t;var h=function(e,t){t=!!t,a.CLog("录音open失败："+e+",isUserNotAllow:"+t,1),s&&s(e,t)},c=function(){a.CLog("open ok id:"+a.id),n(),a._SO=0},l=o.Sync,u=++l.O,m=l.C;a._O=a._O_=u,a._SO=a._S;var p=a.envCheck({envName:"H5",canProcess:!0});if(p)h("不能录音："+p);else if(a.set.sourceStream){if(!r.Support())return void h("不支持此浏览器从流中获取录音");d(o),a.Stream=a.set.sourceStream,a.Stream._call={};try{f(o)}catch(n){return void h("从流中打开录音失败："+n.message)}c()}else{var v=function(t,r){try{e.top.a}catch(t){return void h('无权录音(跨域，请尝试给iframe添加麦克风访问策略，如allow="camera;microphone")')}/Permission|Allow/i.test(t)?h("用户拒绝了录音权限",!0):!1===e.isSecureContext?h("浏览器禁止不安全页面录音，可开启https解决"):/Found/i.test(t)?h(r+"，无可用麦克风"):h(r)};if(r.IsOpen())c();else if(r.Support()){var _=function(e){setTimeout((function(){e._call={};var t=r.Stream;t&&(d(),e._call=t._call),r.Stream=e,function(){if(m!=l.C||!a._O){var e="open被取消";return u==l.O?a.close():e="open被中断",h(e),!0}}()||(r.IsOpen()?(t&&a.CLog("发现同时多次调用open",1),f(o,1),c()):h("录音功能无效：无音频流"))}),100)},g=function(e){var t=e.name||e.message||e.code+":"+e;a.CLog("请求录音权限错误",1,e),v(t,"无法录音："+t)},y={noiseSuppression:!1,echoCancellation:!1},S=a.set.audioTrackSet;for(var b in S)y[b]=S[b];y.sampleRate=r.Ctx.sampleRate;try{var w=r.Scope[i]({audio:y},_,g)}catch(n){a.CLog(i,3,n),w=r.Scope[i]({audio:!0},_,g)}w&&w.then&&w.then(_)[n&&"catch"](g)}else v("","此浏览器不支持录音")}},close:function(e){e=e||t;var r=this,n=r._streamStore();r._stop();var i=n.Sync;if(r._O=0,r._O_!=i.O)return r.CLog("close被忽略（因为同时open了多个rec，只有最后一个会真正close）",3),void e();i.C++,d(n),r.CLog("close"),e()},mock:function(e,t){var r=this;return r._stop(),r.isMock=1,r.mockEnvInfo=null,r.buffers=[e],r.recSize=e.length,r[s]=t,r},envCheck:function(t){var n,i=this.set,s="CPU_BE";if(n||r[s]||!e.Int8Array||new Int8Array(new Int32Array([1]).buffer)[0]||(w(s),n="不支持CPU_BE架构"),!n){var a=i.type;this[a+"_envCheck"]?n=this[a+"_envCheck"](t,i):i.takeoffEncodeChunk&&(n=a+"类型"+(this[a]?"":"(未加载编码器)")+"不支持设置takeoffEncodeChunk")}return n||""},envStart:function(e,t){var r=this,n=r.set;r.isMock=e?1:0,r.mockEnvInfo=e,r.buffers=[],r.recSize=0,r.envInLast=0,r.envInFirst=0,r.envInFix=0,r.envInFixTs=[];var i=n[a];if(t<i?n[a]=t:i=0,r[s]=t,r.CLog(s+": "+t+" set."+a+": "+n[a]+(i?" 忽略"+i:""),i?3:0),r.engineCtx=0,r[n.type+"_start"]){var o=r.engineCtx=r[n.type+"_start"](n);o&&(o.pcmDatas=[],o.pcmSize=0)}},envResume:function(){this.envInFixTs=[]},envIn:function(e,t){var n=this,i=n.set,o=n.engineCtx,h=n[s],c=e.length,f=r.PowerLevel(t,c),l=n.buffers,u=l.length;l.push(e);var d=l,m=u,p=Date.now(),v=Math.round(c/h*1e3);n.envInLast=p,1==n.buffers.length&&(n.envInFirst=p-v);var _=n.envInFixTs;_.splice(0,0,{t:p,d:v});for(var g=p,y=0,S=0;S<_.length;S++){var b=_[S];if(3e3<p-b.t){_.length=S;break}g=b.t,y+=b.d}var w=_[1],T=p-g;if(T/3<T-y&&(w&&1e3<T||6<=_.length)){var C=p-w.t-v;if(v/5<C){var A=!i.disableEnvInFix;if(n.CLog("["+p+"]"+(A?"":"未")+"补偿"+C+"ms",3),n.envInFix+=C,A){var R=new Int16Array(C*h/1e3);c+=R.length,l.push(R)}}}var k=n.recSize,x=c,M=k+x;if(n.recSize=M,o){var I=r.SampleData(l,h,i[a],o.chunkInfo);o.chunkInfo=I,M=(k=o.pcmSize)+(x=I.data.length),o.pcmSize=M,l=o.pcmDatas,u=l.length,l.push(I.data),h=I[a]}var z=Math.round(M/h*1e3),B=l.length,D=d.length,L=function(){for(var e=U?0:-x,t=null==l[0],r=u;r<B;r++){var s=l[r];null==s?t=1:(e+=s.length,o&&s.length&&n[i.type+"_encode"](o,s))}if(t&&o)for(r=m,d[0]&&(r=0);r<D;r++)d[r]=null;t&&(e=U?x:0,l[0]=null),o?o.pcmSize+=e:n.recSize+=e},U=0;try{U=i.onProcess(l,f,z,h,u,L)}catch(e){}var P=Date.now()-p;if(10<P&&1e3<n.envInFirst-p&&n.CLog("rec.set.onProcess低性能，耗时"+P+"ms",3),!0===U){var O=0;for(S=u;S<B;S++)null==l[S]?O=1:l[S]=new Int16Array(0);O?n.CLog("未进入异步前不能清除buffers",3):o?o.pcmSize-=x:n.recSize-=x}else L()},start:function(){var e=this,t=r.Ctx,n=1;if(e.set.sourceStream?e.Stream||(n=0):r.IsOpen()||(n=0),n)if(e.CLog("开始录音"),e._stop(),e.state=3,e.envStart(null,t[a]),e._SO&&e._SO+1!=e._S)e.CLog("start被中断",3);else{e._SO=0;var i=function(){3==e.state&&(e.state=1,e.resume())};"suspended"==t.state?(e.CLog("wait ctx resume..."),t.resume().then((function(){e.CLog("ctx resume"),i()}))):i()}else e.CLog("未open",1)},pause:function(){var e=this;e.state&&(e.state=2,e.CLog("pause"),delete e._streamStore().Stream._call[e.id])},resume:function(){var e,t=this;if(t.state){t.state=1,t.CLog("resume"),t.envResume();var r=t._streamStore().Stream;r._call[t.id]=function(e,r){1==t.state&&t.envIn(e,r)},(e=r)._na&&e._na(),e._ra&&e._ra()}},_stop:function(e){var t=this,r=t.set;t.isMock||t._S++,t.state&&(t.pause(),t.state=0),!e&&t[r.type+"_stop"]&&(t[r.type+"_stop"](t.engineCtx),t.engineCtx=0)},stop:function(e,t,n){var i,o=this,h=o.set,c=o.envInLast-o.envInFirst,f=c&&o.buffers.length;o.CLog("stop 和start时差"+(c?c+"ms 补偿"+o.envInFix+"ms envIn:"+f+" fps:"+(f/c*1e3).toFixed(1):"-"));var l=function(){o._stop(),n&&o.close()},u=function(e){o.CLog("结束录音失败："+e,1),t&&t(e),l()},d=function(t,r){if(o.CLog("结束录音 编码花"+(Date.now()-i)+"ms 音频时长"+r+"ms 文件大小"+t.size+"b"),h.takeoffEncodeChunk)o.CLog("启用takeoffEncodeChunk后stop返回的blob长度为0不提供音频数据",3);else if(t.size<Math.max(100,r/2))return void u("生成的"+h.type+"无效");e&&e(t,r),l()};if(!o.isMock){var m=3==o.state;if(!o.state||m)return void u("未开始录音"+(m?"，开始录音前无用户交互导致AudioContext未运行":""));o._stop(!0)}var p=o.recSize;if(p)if(o.buffers[0])if(o[h.type]){if(o.isMock){var v=o.envCheck(o.mockEnvInfo||{envName:"mock",canProcess:!1});if(v)return void u("录音错误："+v)}var _=o.engineCtx;if(o[h.type+"_complete"]&&_){var g=Math.round(_.pcmSize/h[a]*1e3);return i=Date.now(),void o[h.type+"_complete"](_,(function(e){d(e,g)}),u)}i=Date.now();var y=r.SampleData(o.buffers,o[s],h[a]);h[a]=y[a];var S=y.data;g=Math.round(S.length/h[a]*1e3),o.CLog("采样"+p+"->"+S.length+" 花:"+(Date.now()-i)+"ms"),setTimeout((function(){i=Date.now(),o[h.type](S,(function(e){d(e,g)}),(function(e){u(e)}))}))}else u("未加载"+h.type+"编码器");else u("音频buffers被释放");else u("未采集到录音")}},e[n]&&(m("重复引入"+n,3),e[n].Destroy()),e[n]=r;var _=function(e,t){t.pos||(t.pos=[0],t.tracks={},t.bytes=[]);var r=t.tracks,n=[t.pos[0]],i=function(){t.pos[0]=n[0]},s=t.bytes.length,o=new Uint8Array(s+e.length);if(o.set(t.bytes),o.set(e,s),t.bytes=o,!t._ht){if(S(o,n),b(o,n),!g(S(o,n),[24,83,128,103]))return;for(S(o,n);n[0]<o.length;){var h=S(o,n),c=b(o,n),f=[0],l=0;if(!c)return;if(g(h,[22,84,174,107])){for(;f[0]<c.length;){var u=S(c,f),d=b(c,f),p=[0],v={channels:0,sampleRate:0};if(g(u,[174]))for(;p[0]<d.length;){var _=S(d,p),w=b(d,p),T=[0];if(g(_,[215])){var C=y(w);v.number=C,r[C]=v}else if(g(_,[131])){1==(C=y(w))?v.type="video":2==C?(v.type="audio",l||(t.track0=v),v.idx=l++):v.type="Type-"+C}else if(g(_,[134])){for(var A="",R=0;R<w.length;R++)A+=String.fromCharCode(w[R]);v.codec=A}else if(g(_,[225]))for(;T[0]<w.length;){var k=S(w,T),x=b(w,T);if(g(k,[181])){C=0;var M=new Uint8Array(x.reverse()).buffer;4==x.length?C=new Float32Array(M)[0]:8==x.length?C=new Float64Array(M)[0]:m("WebM Track !Float",1,x),v[a]=Math.round(C)}else g(k,[98,100])?v.bitDepth=y(x):g(k,[159])&&(v.channels=y(x))}}}t._ht=1,m("WebM Tracks",r),i();break}}}var I=t.track0;if(I){if(16==I.bitDepth&&/FLOAT/i.test(I.codec)&&(I.bitDepth=32,m("WebM 16改32位",3)),I[a]!=t[a]||32!=I.bitDepth||I.channels<1||!/(\b|_)PCM\b/i.test(I.codec))return t.bytes=[],t.bad||m("WebM Track非预期",3,t),-(t.bad=1);for(var z=[],B=0;n[0]<o.length;){u=S(o,n);if(!(d=b(o,n)))break;if(g(u,[163]))if(0===(v=r[15&d[0]]).idx){var D=new Uint8Array(d.length-4);for(R=4;R<d.length;R++)D[R-4]=d[R];z.push(D),B+=D.length}i()}if(B){var L=new Uint8Array(o.length-t.pos[0]);L.set(o.subarray(t.pos[0])),t.bytes=L,t.pos[0]=0;D=new Uint8Array(B),R=0;for(var U=0;R<z.length;R++)D.set(z[R],U),U+=z[R].length;M=new Float32Array(D.buffer);if(1<I.channels){var P=[];for(R=0;R<M.length;)P.push(M[R]),R+=I.channels;M=new Float32Array(P)}return M}}},g=function(e,t){if(!e||e.length!=t.length)return!1;if(1==e.length)return e[0]==t[0];for(var r=0;r<e.length;r++)if(e[r]!=t[r])return!1;return!0},y=function(e){for(var t="",r=0;r<e.length;r++){var n=e[r];t+=(n<16?"0":"")+n.toString(16)}return parseInt(t,16)||0},S=function(e,t,r){var n=t[0];if(!(n>=e.length)){var i=("0000000"+e[n].toString(2)).substr(-8),s=/^(0*1)(\d*)$/.exec(i);if(s){var a=s[1].length,o=[];if(!(n+a>e.length)){for(var h=0;h<a;h++)o[h]=e[n],n++;return r&&(o[0]=parseInt(s[2]||"0",2)),t[0]=n,o}}}},b=function(e,t){var r=S(e,t,1);if(r){var n=y(r),i=t[0],s=[];if(n<2147483647){if(i+n>e.length)return;for(var a=0;a<n;a++)s[a]=e[i],i++}return t[0]=i,s}};r.TrafficImgUrl="//ia.51.la/go1?id=20469973&pvFlag=1";var w=r.Traffic=function(e){e=e?"/"+n+"/Report/"+e:"";var t=r.TrafficImgUrl;if(t){var i=r.Traffic,s=/^(https?:..[^\/#]*\/?)[^#]*/i.exec(location.href)||[],a=s[1]||"http://file/",o=(s[0]||a)+e;if(0==t.indexOf("//")&&(t=/^https:/i.test(o)?"https:"+t:"http:"+t),e&&(t=t+"&cu="+encodeURIComponent(a+e)),!i[o])i[o]=1,(new Image).src=t,m("Traffic Analysis Image: "+(e||n+".TrafficImgUrl="+r.TrafficImgUrl))}}}(window),void 0!==(n=function(){return Recorder}.call(t,r,t,e))&&(e.exports=n),e.exports&&(e.exports=Recorder),function(){"use strict";Recorder.prototype.enc_wav={stable:!0,testmsg:"支持位数8位、16位（填在比特率里面），采样率取值无限制"},Recorder.prototype.wav=function(e,t,r){var n=this.set,i=e.length,s=n.sampleRate,a=8==n.bitRate?8:16,o=i*(a/8),h=new ArrayBuffer(44+o),c=new DataView(h),f=0,l=function(e){for(var t=0;t<e.length;t++,f++)c.setUint8(f,e.charCodeAt(t))},u=function(e){c.setUint16(f,e,!0),f+=2},d=function(e){c.setUint32(f,e,!0),f+=4};if(l("RIFF"),d(36+o),l("WAVE"),l("fmt "),d(16),u(1),u(1),d(s),d(s*(a/8)),u(a/8),u(a),l("data"),d(o),8==a)for(var m=0;m<i;m++,f++){var p=128+(e[m]>>8);c.setInt8(f,p,!0)}else for(m=0;m<i;m++,f+=2)c.setInt16(f,e[m],!0);t(new Blob([c.buffer],{type:"audio/wav"}))}}()}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}();!function(){"use strict";const e=r(895);r.g.SysSound=e.SysSound}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,