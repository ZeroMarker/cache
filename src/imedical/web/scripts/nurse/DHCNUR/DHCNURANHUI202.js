var DHCNurCheckRecT102=new Ext.data.JsonStore({data:[],fields:['OrdDate','OrdTime','ARCIMDesc','DateEx','TimeEx','CPTEx','ArcimDR','ORW']});var DHCNurLabRecT103=new Ext.data.JsonStore({data:[],fields:['StDateTime','ARCIMDes','LabEpisodeNo','testcode','LabDate','LabTime','LabCpt','RowId']});var DHCPatOrdListT103=new Ext.data.JsonStore({data:[],fields:['OrdDate','OrdTime','ARCIMDesc','PriorDes','Meth','PHFreq','Dose','DoseUnit','OrdStat','Doctor','Oew','OrdSub','Sel','SeqNo']});var DHCNURANHUI15TEMT101=new Ext.data.JsonStore({data:[],fields:['RecDate','RecTime','Item1','Item7','Item4','Item5','Item6']});var ret="";var checkret="";var comboret="";var arrgrid=new Array(); var PatSevenTmp=""; var PatBloodPress=""; var PatBreath=""; var PatBreath="";var PatBPress="";var PatPPress=""; var PatWeight="";var SumInName="";var SumInAmount="";var SumOutName="";var SumOutAmount="";var PartInName="";var PartInAmount="";var PartOutName="";var PartOutAmount="";var DisplaySumInName="";var DisplaySumInAmount="";var DisplaySumOutName="";var DisplaySumOutAmount="";var OrdInName="";var OrdInAmount="";var ICountCls="";var OCountCls="";var GetNurseRecSet=document.getElementById('GetNurseRecSet');if (GetNurseRecSet){	var ret=cspRunServerMethod(GetNurseRecSet.value,EmrCode);	var hh=ret.split("^");		SumInName=hh[0].split("&")[0];	SumInAmount=hh[0].split("&")[1];	SumOutName=hh[1].split("&")[0];	SumOutAmount=hh[1].split("&")[1];	PartInName=hh[2].split("&")[0];	PartInAmount=hh[2].split("&")[1];	PartOutName=hh[3].split("&")[0];	PartOutAmount=hh[3].split("&")[1];	DisplaySumInName=hh[7].split("&")[0];	DisplaySumInAmount=hh[7].split("&")[1];	DisplaySumOutName=hh[8].split("&")[0];	DisplaySumOutAmount=hh[8].split("&")[1];	OrdInName=hh[11].split("&")[0];;    OrdInAmount=hh[11].split("&")[1];;    if(OrdInName=="")    {     	OrdInName=SumInName;    }    if (OrdInAmount=="")    {    	OrdInAmount=SumInAmount    }    if (OrdInName=="")    {    	OrdInName="CaseMeasure"    }							      //alert(OrdInName)	//debugger;}var MeasureRel = new Hashtable();var UserType="";var GetUserType=document.getElementById('GetUserType');if (GetUserType){	UserType=cspRunServerMethod(GetUserType.value,session['LOGON.USERID']);}var grid;var DiagnosDr=""; function GetSevenSMTZ(){      myId = "";	var arr = new Array();	//alert(2221)	// 录入界面	var a = cspRunServerMethod(pdata1, "", "DHCNURANHUI15TEM", EpisodeID, "");	// alert(a);	arr = eval(a);	//alert(222)	var window = new Ext.Window({				title : '当日7点体温明细',				width : 400,				height : 300,				autoScroll : true,				layout : 'absolute',				// plain: true,				// modal: true,				// bodyStyle: 'padding:5px;',				// /buttonAlign: 'center',				items : arr,				buttons : [{							text : '确定',							handler : function() {								setSevenTmp(); 								//Save(window);								window.close();							}						}, {							text : '取消',							handler : function() {								window.close();							}						}]			});   grid1=Ext.getCmp("Tmpgrid"); 	setsize("Tmpgridpl","gform","Tmpgrid");  var but1=Ext.getCmp("Tmpgridbut1");	but1.hide();	var but=Ext.getCmp("Tmpgridbut2");	but.hide();	findTmp();	  Ext.override(Ext.grid.RowSelectionModel, {		onEditorKey : function(F, E) {			var C = E.getKey(), G, D = this.grid, B = D.activeEditor;			var A = E.shiftKey;			if (C == E.TAB) {				E.stopEvent();				B.completeEdit();				if (A) {					G = D.walkCells(B.row, B.col - 1, -1, this.acceptsNav,							this);				} else {					G = D.walkCells(B.row, B.col + 1, 1, this.acceptsNav,							this);				}			} else {				if (C == E.ENTER) {					E.stopEvent();					// alert(B);					B.completeEdit();					if (this.moveEditorOnEnter !== false) {						if (A) {							// G = D.walkCells(B.row - 1, B.col, -1,							// this.acceptsNav,this)							G = D.walkCells(B.row, B.col - 1, -1,									this.acceptsNav, this);						} else {							// G = D.walkCells(B.row + 1, B.col, 1,							// this.acceptsNav,this)							G = D.walkCells(B.row, B.col + 1, 1,									this.acceptsNav, this);						}					}				} else {					if (C == E.ESC) {						B.cancelEdit();					}				}			}			if (G) {				D.startEditing(G[0], G[1]);			}		}	});    var sm2 = new Ext.grid.RowSelectionModel({           moveEditorOnEnter: true,           singleSelect: false,           listeners: {               rowselect : function(sm, row, rec) {                    //alert("cc");                   //centerForm.getForm().loadRecord(rec);               }           }         });  window.show();   grid1=Ext.getCmp("Tmpgrid");   //alert(grid1);   grid1.on('rowclick', function(){rowbtn();});}   function rowbtn()  {            var Tmpgrid=Ext.getCmp("Tmpgrid");          	var rowObj = Tmpgrid.getSelectionModel().getSelections();	          var len = rowObj.length;            if(len < 1)	          {      		         //Ext.Msg.show({title:'注意',msg:'请选择需要修改的数据!',buttons: Ext.Msg.OK,icon:Ext.MessageBox.WARNING});		         return;	          } 	          else	          { 	          	PatSevenTmp = rowObj[0].get("Item1");	            PatBloodPress=rowObj[0].get("Item7");               PatBreath=rowObj[0].get("Item4");               PatBPress=rowObj[0].get("Item5");              PatPPress=rowObj[0].get("Item6");            }        }          function setSevenTmp (){	   var Item14=Ext.getCmp('Item14');		 Item14.setValue(PatSevenTmp); 		 var Item15=Ext.getCmp('Item15');		 Item15.setValue(PatBloodPress); 		 var Item16=Ext.getCmp('Item16');		 Item16.setValue(PatBreath);     var Item17=Ext.getCmp('Item17');		 Item17.setValue(PatBPress);     var Item18=Ext.getCmp('Item18');		 Item18.setValue(PatPPress);  	 var GetPatRecntWeight=document.getElementById('GetPatRecntWeight');  //取最近一次患者体重	   PatWeight=cspRunServerMethod(GetPatRecntWeight.value,EpisodeID);     var Item19=Ext.getCmp('Item19');		 Item19.setValue(PatWeight);    	}  function findTmp(){	REC = new Array();	var adm = EpisodeID;	var StartDate = diffDate(new Date(),0);	var EndDate = diffDate(new Date(),1);	var GeTmptQueryData = document.getElementById('GeTmptQueryData');	var Tmpgrid = Ext.getCmp("Tmpgrid"); 	//var parr =adm+"^"+StartDate+"^"+EndDate;	var parr =adm+"^"+StartDate+"^"+EndDate+"^7:00:00^8:00:00";	if ((StartDate=="")||(EndDate=="")) return;   var a = cspRunServerMethod(GeTmptQueryData.value, "web.DHCThreeNew:GetPatTempData", "Parr$" + parr, "AddRec");	Tmpgrid.store.loadData(REC);}function gethead(){	var GetHead=document.getElementById('GetHead');	var ret=cspRunServerMethod(GetHead.value,EpisodeID);	var hh=ret.split("^");	return hh[0]+"  "+hh[1];	//debugger;}function formatDate(value){  	try	{	   return value ? value.dateFormat('Y-m-d') : '';	}	catch(err)	{	   return '';	} };function eachItem1(item,index,length) {       if (item.xtype=="datefield") {               //修改下拉框的请求地址    			ret=ret+item.id+"|"+formatDate(item.getValue())+"^";   			          }     if (item.xtype=="timefield") {               //修改下拉框的请求地址    			//debugger;			ret=  ret+item.id+"|"+item.getValue()+"^";             } 	 if (item.xtype=="combo") {               //修改下拉框的请求地址    			//debugger;			comboret=  comboret+item.id+"|"+item.getValue()+"!"+item.lastSelectionText+"^";             } 	 if (item.xtype=="textfield") {               //修改下拉框的请求地址    			//debugger;			ret=  ret+item.id+"|"+item.getValue()+"^";             } 	 if (item.xtype=="textarea") {               //修改下拉框的请求地址    			ret=  ret+item.id+"|"+item.getRawValue()+"^";             } 	 if (item.xtype=="checkbox") {               //修改下拉框的请求地址    			//debugger;			if (item.checked==true) checkret=checkret+item.id+"|"+item.boxLabel+"^";          else {checkret=checkret+item.id+"|"+""+"^";}    } 	      if (item.items && item.items.getCount() > 0) {          item.items.each(eachItem1, this);       }   }   var ITypItm="Item11|Item12|Item48"; //后取数据字典型  function BodyLoadHandler(){	var but=Ext.getCmp("butSave");    but.on('click',Save);	var but=Ext.getCmp("butPrint");    but.on('click',function(){printNurRecHHD("DHCNurPrnMouldANHUI202")});	var Item12 = Ext.getCmp("Item12"); 	Item12.on('specialkey',cmbkey);   //找数据		var Item11 = Ext.getCmp("Item11"); 	Item11.on('specialkey',cmbkey);   //找数据			var Item48 = Ext.getCmp("Item48"); 	Item48.on('specialkey',cmbkey);   //找数据	setvalue()	setsize("mygridpl","gform","mygrid");	var but1=Ext.getCmp("mygridbut1");	but1.on('click',additm);	var but=Ext.getCmp("mygridbut2");	but.setText("选行保存");	but.on('click',save);	Ext.override(Ext.Editor, {			onSpecialKey : function(field, e) {				var key = e.getKey();				this.fireEvent('specialkey', field, e);			}		});Ext.override(Ext.grid.RowSelectionModel, {			onEditorKey : function(F, E) {				var C = E.getKey(), G, D = this.grid, B = D.activeEditor;				var A = E.shiftKey; 				//debugger;        if (C == E.RIGHT) {        // alert();        E.stopEvent();        B.completeEdit();        G = D.walkCells(B.row,B.col+1, 1, this.acceptsNav,this);        }               if (C == E.LEFT) {        // alert();        E.stopEvent();        B.completeEdit();        G = D.walkCells(B.row,B.col-1, 1, this.acceptsNav,this);        }       if (C == E.DOWN) {       // alert();       E.stopEvent();       B.completeEdit();       G = D.walkCells(B.row+1,4, 1, this.acceptsNav,this);       }             if (C == E.UP) {       // alert();       E.stopEvent();       B.completeEdit();       G = D.walkCells(B.row-1,4, 1, this.acceptsNav,this);       }        				if (C == E.TAB) {					E.stopEvent();					B.completeEdit();					if (A) {						G = D.walkCells(B.row, B.col - 1, -1, this.acceptsNav,								this);					} else {						G = D.walkCells(B.row, B.col + 1, 1, this.acceptsNav,								this);					}				} else {					if (C == E.ENTER) {						E.stopEvent();						// alert(B);						B.completeEdit();						if (this.moveEditorOnEnter !== false) {							if (A) {								// G = D.walkCells(B.row - 1, B.col, -1,								// this.acceptsNav,this)								G = D.walkCells(B.row, B.col - 1, -1,										this.acceptsNav, this);							} else {								// G = D.walkCells(B.row + 1, B.col, 1,								// this.acceptsNav,this)								G = D.walkCells(B.row, B.col + 1, 1,										this.acceptsNav, this);							}						}					} else {						if (C == E.ESC) {							B.cancelEdit();						}					}				}				if (G) {					D.startEditing(G[0], G[1]);				}			}		});    var sm2 = new Ext.grid.RowSelectionModel({           moveEditorOnEnter: true,           singleSelect: false,           listeners: {               //rowselect : function(sm, row, rec) {                   //centerForm.getForm().loadRecord(rec);              // }           }         });  	grid=Ext.getCmp('mygrid');  	grid.setTitle(gethead());  	var mydate=new Date();  	var tobar=grid.getTopToolbar();   	tobar.addItem(            "-");     tobar.addButton(	  {		className: 'new-topic-button',		text: "全部保存",		handler:AllSave,		id:'mygridbutAllSave'	  } 	);  	tobar.addItem(	    {			xtype:'datefield',			//format: 'Y-m-d',			id:'mygridstdate',			value:(diffDate(new Date(),0))		},	    {			xtype:'timefield',			width:100,			format: 'H:i',			value:'0:00',			id:'mygridsttime'		},	    {			xtype:'datefield',			//format: 'Y-m-d',			id:'mygridenddate',			value:diffDate(new Date(),1)		},	    {			xtype:'timefield',			width:100,			id:'mygridendtime',			format: 'H:i',			value:'0:00'		}	);	tobar.addButton(	  {		className: 'new-topic-button',		text: "查询",		handler:find,		id:'mygridSch'	  }	);	/*    tobar.addButton(		  {			//className: 'new-topic-button',			text: "统计",			handler:findStat,			id:'mygridStat'		  }	  );   	tobar.addButton(		  {			//className: 'new-topic-button',			text: "打印",			handler:printNurRec,			id:'PrintBut'		  }	  );*/  	//tobar.addButton(	//	  {	//		//className: 'new-topic-button',	//		text: "续打印设置",	//		handler:PrintSet,	//		id:'XPrintSet'	//	  }	//  );   	tobar.addItem ("-",{			xtype:'checkbox',			id:'IfCancelRec',			checked:false,			boxLabel:'显示作废记录' 			});	//tobar.render(grid.tbar);	tobar.doLayout();  	if (UserType=="DOCTOR") 	{ 		if (but1) but1.hide(); 		if (but) but.hide(); 		//var obj=Ext.getCmp("PrintBut"); 		//if (obj) obj.hide();  		var obj=Ext.getCmp("XPrintSet"); 		if (obj) obj.hide();		 	} 	else 	{		grid.addListener('rowcontextmenu', rightClickFn);		grid.addListener('rowclick', rowClickFn); 	}grid.on('mouseover',function(e){//添加mouseover事件    return;	var index = grid.getView().findRowIndex(e.getTarget());//根据mouse所在的target可以取到列的位置	if(index!==false){//当取到了正确的列时，（因为如果传入的target列没有取到的时候会返回false）		var store = grid.getStore();		var totalRow="";		if (store.getCount()>0) totalRow=store.getAt(index).get(DisplaySumInName);		if ((totalRow)&&(totalRow.indexOf("入液量")>-1))		{			//var record = store.getAt(index);//把这列的record取出来			//var str = Ext.encode(record.data);//组装一个字符串，这个需要你自己来完成，这儿我把他序列化			var par=store.getAt(index).get("par");			var rw=store.getAt(index).get("rw");			var totalRow1,totalRow2,totalRow3,totalRow4;			if ((par)&&(rw))			{				var GetSubInOut=document.getElementById('GetSubInOut');				if (GetSubInOut)				{					var ret=cspRunServerMethod(GetSubInOut.value,par+"^"+rw);					var retArr=ret.split("@");					totalRow1=retArr[0];					totalRow2=retArr[1];					totalRow3=retArr[2];					totalRow4=retArr[3];				}	 				}			else			{				totalRow1=store.getAt(index).get(PartInName);				totalRow2=store.getAt(index).get(PartInAmount);				totalRow3=store.getAt(index).get(PartOutName);				totalRow4=store.getAt(index).get(PartOutAmount);			}			//var str="<p>"+totalRow1+"</p><p>"+totalRow2+"</p><p>"+totalRow3+"</p><p>"+totalRow4+"</p>";			var str="<TABLE borderColor=#000000 width='100%' bgColor=#ffffff border=1 cellSpacing=0 cellPadding=0><TBODY>";			str=str+"<TR bgColor=#D2E9FF><TD></TD><TD>名称</TD><TD>量</TD></TR>";			var totalRow2Arr=totalRow2.split(";");			str=str+"<TR><TD bgColor=#D2E9FF rowSpan="+(totalRow2Arr.length-1)+">入液量分项</TD><TD>"+totalRow2Arr[0].replace(":","</TD><TD>")+"</TD></TR>";			for (var i=1;i<(totalRow2Arr.length-1);i++)			{				str=str+"<TR><TD>"+totalRow2Arr[i].replace(":","</TD><TD>")+"</TD></TR>";			}			var totalRow4Arr=totalRow4.split(";");			str=str+"<TR><TD bgColor=#D2E9FF rowSpan="+(totalRow4Arr.length-1)+">出液量分项</TD><TD>"+totalRow4Arr[0].replace(":","</TD><TD>")+"</TD></TR>";			for (var i=1;i<(totalRow4Arr.length-1);i++)			{				str=str+"<TR><TD>"+totalRow4Arr[i].replace(":","</TD><TD>")+"</TD></TR>";			}			str=str+"</TBODY></TABLE>";			var rowEl = Ext.get(e.getTarget());//把target转换成Ext.Element对象			rowEl.set({				'ext:qtip':str  //设置它的tip属性			},false);	  }	}});       Ext.QuickTips.init();//注意，提示初始化必须要有grid.getStore().on('load',function(s,records){          var girdcount=0;          s.each(function(r){              if(r.get(DisplaySumInName)=='总入液量='){                    grid.getView().getRow(girdcount).style.backgroundColor='#F7FE2E';              }              if(r.get(DisplaySumInName)=='入液量='){                    grid.getView().getRow(girdcount).style.backgroundColor='#A7FE2E';              }              girdcount=girdcount+1;          });       //scope:this       });	find();	} function additm(){   	var Plant = Ext.data.Record.create([	{name:'CareDate'}, 	{name:'CareTime'},	{name:'Item1'},	{name:'Item2'},	{name:'Item3'},	{name:'Item4'},	{name:'Item5'},	{name:'Item6'},	{name:'Item7'},	{name:'Item8'},	{name:'Item9'}, 	{name:'Item10'},	{name:'Item11'},	{name:'Item12'},	{name:'Item13'},	{name:'Item14'},	{name:'Item15'},	{name:'Item16'},	{name:'Item17'}, 	{name:'Item18'},	{name:'Item19'}, 	{name:'Item20'},	{name:'Item21'},	{name:'Item22'},	{name:'Item23'},	{name:'Item24'},	{name:'Item25'},	{name:'Item26'},	{name:'Item27'},	{name:'Item28'},	{name:'Item29'},	{name:'Item30'},	{name:'Item31'},	{name:'Item32'},	{name:'Item33'},	{name:'Item34'},	{name:'Item35'},	{name:'Item36'},	{name:'Item37'},	{name:'Item38'},	{name:'Item39'},	{name:'Item40'},	{name:'Item41'},	{name:'Item42'},	{name:'Item43'},	{name:'Item44'},	{name:'Item45'},	{name:'Item46'},	{name:'Item47'}, 	{name:'Item48'},	{name:'Item49'},	{name:'Item50'},	{name:'Item51'},	{name:'Item52'},	{name:'Item53'},	{name:'Item54'},	{name:'Item55'},	{name:'Item56'},	{name:'Item57'}, 	{name:'Item58'},	{name:'Item59'},	{name:'Item60'},	{name:'Item61'},	{name:'Item62'},	{name:'Item63'},	{name:'Item64'},	{name:'Item65'},	{name:'Item66'},	{name:'Item67'}, 	{name:'Item68'},	{name:'Item69'},	{name:'Item70'},	{name:'CaseMeasure'},	{name:'User'},	{name:'rw'},	{name:'par'}      ]);    var count = grid.store.getCount();     var r = new Plant({CareDate:new Date(),CareTime:new Date().dateFormat('H:i'),Item49:new Date().dateFormat('H:i')});     grid.store.commitChanges();     grid.store.insert(0,r);     	return;} var rightClick = new Ext.menu.Menu(  {            id : 'rightClickCont',            items : [  {                id:'rMenu1',                text : '医嘱',                handler:OrdSch            },  {                id:'rMenu2',                text : '病情措施及处理',                handler:Measure            }, {                id:'rMenu7',                text : '作废',                handler:CancelRecord            }]        });function rightClickFn(client, rowIndex, e)  {          e.preventDefault();          grid=client;		  CurrRowIndex=rowIndex;          rightClick.showAt(e.getXY());            }function rowClickFn(grid, rowIndex, e)  {                //alert('你单击了' + rowIndex);            }              function MultiFun(){	var GetMulti=document.getElementById('GetMulti');	var getcheckform=document.getElementById('getcheckform');		var ret= cspRunServerMethod(GetMulti.value, "DHCNURANHUI202");    var grid=Ext.getCmp('mygrid');    var tt=ret.split('^');	var ab="";	for (i=0;i<tt.length;i++)	{		if (tt[i]=="") continue;		//debugger;		var dd=grid.getSelectionModel().getSelections()[0].get(tt[i]); 		if (dd==undefined)dd=""		if (dd!="") ab=ab+dd+"^"+tt[i]+"!";		else ab=ab+"^"+tt[i]+"!";	}	var tabstr=cspRunServerMethod(getcheckform.value, "DHCNURANHUI202",ab);	var tabarr=tabstr.split('!');		var tbitm=new Array();		for (i = 0; i < tabarr.length; i++) 		{			if (tabarr[i] == "") 				continue;			var itmm = tabarr[i].split('^');			tbitm.push({				xtype: 'panel',				id: itmm[0],				title: itmm[1],				//height: 1000,				layout: 'absolute',				//frame:false,				//palin:false,				closable: false,				items: eval(itmm[2])						})				//alert(itmm[2]);		}	var subttab=new Ext.TabPanel({	    activeTab : 0,//        autoTabs: true,        resizeTabs:true,         //height:200,      //  width:300,        enableTabScroll:true, 	   items:tbitm     });	 	var window = new Ext.Window({		title: '多选',		width: 450,		height: 480,		id:'mulForm',		autoScroll: true,		layout: 'fit',		plain: true,		frame:true,		items: subttab ,  		buttons:[{id:'mulselbut',text:'保存',handler:SaveMulCheck}]	});	   window.show(); }var checkret="";function SaveMulCheck(){  checkret="";  var gform=Ext.getCmp("mulForm");  gform.items.each(eachItem, this);  	var aa=checkret.split('^');	var ht = new Hashtable();	//debugger;	for (i = 0; i < aa.length; i++) {		if (aa[i] == "") 			continue;		var itm = aa[i].split('|');		var aitm = itm[0].split('_');		if (ht.contains(aitm[0])) {		  var val=ht.items(aitm[0])		  ht.remove(aitm[0]);		  var dd=val+";"+itm[1];		  ht.add(aitm[0],dd);		}		else {		ht.add(aitm[0], itm[1])	    }			}	var mygrid=Ext.getCmp('mygrid');	 for(var i in ht.keys())	 {	  var key =ht.keys()[i];      var restr = ht.items(key);	   mygrid.getSelectionModel().getSelections()[0].set(key,restr); 	 }	alert(checkret);}/*function add(a1, a2){	attenitm.push({		xtype:'panel',		id: a1,		title: a2,		region:'center',		height:1000,		layout:'fit',		closable:true,		items:[]	})} */function multiSel(ret){		var grid1=Ext.getCmp('multigrid');		var code=grid1.getSelectionModel().getSelections()[0].get("itm3");     var itname=grid1.getSelectionModel().getSelections()[0].get("itm4"); 	  var getcheckform=document.getElementById('getcheckform');		alert(itname+"!!"+code)		var ret=cspRunServerMethod(getcheckform.value, "DHCNURANHUI202",itname,code,"");			var CareDate=grid.getSelectionModel().getSelections()[0].get("CareDate"); 		var aa=new Array();		aa=eval(aa);    /*		debugger;		for(var i=0;i<items.length;i++){             panl.remove(items[i]);           }            panl.doLayout();		panl.add(new Ext.form.Checkbox({                        id:"addboxModule",                                    name:"userModule",                    boxLabel : 'moduleName'                    }));*/		panl.doLayout();		debugger;		 }function addMulitm(ret){	var grid1=Ext.getCmp('multigrid');  	var Plant = Ext.data.Record.create([	{name:'itm1'},	{name:'itm2'},	{name:'itm3'},	{name:'itm4'}      ]);	var itm=ret.split('^');	for (i = 0; i < itm.length; i++) {		if (itm[i]=="") continue;		var aa=itm[i].split('!');		var count = grid1.store.getCount();		var r = new Plant({			itm1: aa[0],			itm2: "",			itm3:aa[1],			itm4:aa[2]		});		grid1.store.commitChanges();		grid1.store.insert(count, r);	}   return;   }              function OrdSch1(){	// var CurrAdm=selections[rowIndex].get("Adm");	selections = grid.getSelectionModel().getSelections();	var arr = new Array();	var a = cspRunServerMethod(pdata1, "", "DHCPatOrdList", EpisodeID, "");	arr = eval(a);	var window = new Ext.Window({		title: '医嘱',		width: 550,		height: 550,		autoScroll: true,		layout: 'absolute',		plain: true,		frame: true,		//modal: true,		//bodyStyle: 'padding:5px;',		///buttonAlign: 'center',		items: arr	});	var butin=Ext.getCmp('ordgridbut1');  butin.text="确定"; 	//debugger;  butin.on('click',SureIn);  window.show();}function OrdSch(){         	// var CurrAdm=selections[rowIndex].get("Adm");	selections = grid.getSelectionModel().getSelections();	var arr = new Array();	var a = cspRunServerMethod(pdata1, "", "DHCPatOrdList", EpisodeID, "");	arr = eval(a);	var window = new Ext.Window({		title: '医嘱',		x:100,		width: 450,		height: 550,		autoScroll: true,		layout: 'absolute',		plain: true,		frame:true,		//modal: true,		//bodyStyle: 'padding:5px;',		///buttonAlign: 'center',		items: arr	});	var mydate=new Date();	var	grid1=Ext.getCmp("ordgrid");	grid1.getBottomToolbar().hide();	tobar=grid1.getTopToolbar();	tobar.addItem(	    {			xtype:'datefield',			//format: 'Y-m-d',			id:'ordgridstdate',			value:(diffDate(new Date(),-1))		},	    {			xtype:'datefield',			//format: 'Y-m-d',			id:'ordgridenddate',			value:new Date()		}	);	tobar.addButton(	  {		className: 'new-topic-button',		text: "查询",		//handler:find,		id:'ordgridSch'	  }	);	var butin=Ext.getCmp('ordgridbut2');	butin.hide();	var butin=Ext.getCmp('ordgridbut1');	butin.text="确定";	//debugger;	butin.on('click',SureIn);	var butschord=Ext.getCmp('ordgridSch');	butschord.on('click',SchOrd);	window.show();} var condata=new Array();function add(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){ //OrdDate,OrdTime,ARCIMDesc,PriorDes,Meth,PHFreq,Dose,PhQtyOrd,OrdStat,Doctor,Oew,OrdSub,Sel,SeqNo 	condata.push({		OrdDate: a,		OrdTime: b,		ARCIMDesc: c,		PriorDes: d,		Meth: e,		PHFreq: f,		Dose: g,		DoseUnit: h,		PhQtyOrd: i,		OrdStat: j,		Doctor: k,		Oew: l,		OrdSub: m,		SeqNo: o	});}function SchOrd(){	condata=new Array();	var adm=EpisodeID;	var StDate= Ext.getCmp("ordgridstdate");	var Enddate= Ext.getCmp("ordgridenddate");	var GetQueryData=document.getElementById('GetQueryData1');	var ordgrid=Ext.getCmp("ordgrid");	var parr=adm+"^"+StDate.value+"^"+Enddate.value; 	var a=cspRunServerMethod(GetQueryData.value,"web.DHCNUREMR:GetPatOrd","parr$"+parr,"add");	// grid.width=document.body.offsetWidth;	ordgrid.store.loadData(condata);}function Schlab(){	condata=new Array();	var adm=EpisodeID;	var StDate= Ext.getCmp("LabGridstdate");	var Enddate= Ext.getCmp("LabGridenddate");	var GetQueryData=document.getElementById('GetQueryData1');	var ordgrid=Ext.getCmp("LabGrid");  //var parr=adm+"^"+StDate.value+"^"+Enddate.value;	//alert(adm); 	var a=cspRunServerMethod(GetQueryData.value,"web.DHCNurJYRESULT:GetLabNo","Adm$"+adm,"AddLab");  // grid.width=document.body.offsetWidth;  ordgrid.store.loadData(condata);   }function AddLab(a,b,c,d,e,f,g,h){	//OrdDate,OrdTime,ARCIMDesc,ORW,DateEx,TimeEx ,CPTEx,ArcimDR		condata.push({			ARCIMDes:a,			LabEpisodeNo:b,			StDateTime:c,			RowId:d,			testcode:e,			LabCpt:f,			LabDate:g,			LabTime:h		});}function AddCheck(a,b,c,d,e,f,g,h){	//OrdDate,OrdTime,ARCIMDesc,ORW,DateEx,TimeEx ,CPTEx,ArcimDR		condata.push({			OrdDate:a,			OrdTime:b,			ARCIMDesc:c,			ORW:d,			DateEx:e,			TimeEx:f ,			CPTEx:g,			ArcimDR:h		});}function SchCheck(){	condata=new Array();	var adm=EpisodeID;	var StDate= Ext.getCmp("CheckGridstdate");	var Enddate= Ext.getCmp("CheckGridenddate");	var GetQueryData=document.getElementById('GetQueryData1');	var ordgrid=Ext.getCmp("CheckGrid");    var parr=adm+"^"+StDate.value+"^"+Enddate.value; 	var a=cspRunServerMethod(GetQueryData.value,"web.DHCNurJYRESULT:GetOrdRadia","parr$"+parr,"AddCheck");   // grid.width=document.body.offsetWidth;        ordgrid.store.loadData(condata);   }function Measure(){   /* selections = grid.getSelectionModel().getSelections(); 	var arr = new Array();	var a = cspRunServerMethod(pdata1, "", "DHCNURMeasure", EpisodeID, "");	arr = eval(a);*/	//EmrCode,EpisodeId,fieldCode		MeasureRel = new Hashtable();     var grid1=Ext.getCmp('mygrid');	var par=grid1.getSelectionModel().getSelections()[0].get("par"); 	var rw=grid1.getSelectionModel().getSelections()[0].get("rw");    // debugger;	var rowid=par+"||"+rw;	if (par==undefined)	{		rowid="";	}	var parr="DHCNURANHUI202^"+EpisodeID+"^CaseMeasureXml^"+rowid;	//alert(parr);	var arr = new Array();	var a = cspRunServerMethod(pdata1, "", "DHCPatOrdList", EpisodeID, "");	arr = eval(a);	var arrlab = new Array();	a = cspRunServerMethod(pdata1, "", "DHCNurLabRec", EpisodeID, "");	arrlab = eval(a);	var arrcheck = new Array();	a = cspRunServerMethod(pdata1, "", "DHCNurCheckRec", EpisodeID, "");	arrcheck = eval(a);	var arrResult = new Array();	a = cspRunServerMethod(pdata1, "", "DHCNurLCResult", EpisodeID, "");	arrResult = eval(a);	//DHCNurLCResult	var north_item = new Ext.Panel({   			title: '',   			region: 'north',   			//contentEl: 'north-div',   			split: true,   							frame:true,			border: true,   			//collapsible: true,   			height: 200,   			items:[{				xtype:"tabpanel",				activeTab:0,				frame:true,				items:[	  				{title:"医嘱",			  			width: 550,			  			height: 200,			  			autoScroll: true,		      			layout:'absolute',			  			items:arr},			         		{title:"检查",			  			width: 550,			  			height: 200,			  			autoScroll: true,		      			layout:'absolute',			  			items:arrcheck			 			},			         		{title:"检验",			  			width: 550,			  			height: 200,			  			autoScroll: true,		      			layout:'absolute',			  			items:arrlab			 			}]						 }]		});                var arr = new Array();	        var a = cspRunServerMethod(pdata1, "", "DHCNURMeasure", EpisodeID, "");	        arr = eval(a);            var emrknowurl="dhcnuremrknow.csp?EmrCode=DHCNurKnowldge&Parr="+parr+"&EpisodeID="+EpisodeID;			//alert(emrknowurl);            //中间               var center_item = new Ext.Panel({                   region: 'center',             		autoScroll: true,                split: true,                   layout: 'fit',                   collapsible: false,  				height:50,                 minSize: 50,     				frame:true,                items: arrResult            });                //南边，状态栏               var south_item = new Ext.Panel({                   region: 'south',                 	// contentEl: 'south-div',                   split: true,                  	// border: true,                  	// collapsible: true,            		autoScroll: true,                layout: 'absolute',                   minSize: 200,  				height:200,  				frame:true,                //items: arr 				buttons: [{						text: '确定',						handler: function(){							//	Save();							//	window.close();							sureMeasure();						}					}, {						text: '取消',						handler: function(){							window.close();						}					}],				html: '<iframe id ="southTab" name="ddd" style="width:100%; height:100%" src='+emrknowurl+' ></iframe>'                            });                   //中间的中间，功能菜单    	//alert(parr);	var window = new Ext.Window({ 		title: '医嘱',		width: 550,		modal:true,		height: 580,		id:'CaseForm',		autoScroll: true,		layout: 'border',		plain: true,		frame:true,		items: [north_item, center_item,south_item]   	});	var grid=Ext.getCmp("LabGrid");	var tobar=grid.getTopToolbar();	addtitCon(tobar,grid.id);	grid=Ext.getCmp("CheckGrid");	tobar=grid.getTopToolbar();	addtitCon(tobar,grid.id);	grid=Ext.getCmp("ordgrid");	tobar=grid.getTopToolbar();	addtitCon(tobar,grid.id);		var butschlab=Ext.getCmp('LabGridSch');	butschlab.on('click',Schlab);		var butschord=Ext.getCmp('ordgridSch');	butschord.on('click',SchOrd);		var butschcheck=Ext.getCmp('CheckGridSch');	butschcheck.on('click',SchCheck);		var gridc=Ext.getCmp('CheckGrid');	gridc.on('click',gridcheckclick);		var gridl=Ext.getCmp('LabGrid');	gridl.on('click',gridLabclick);	var mygrid=Ext.getCmp("mygrid");      ////var butsure=Ext.getCmp('_Button6');   //butsure.on('click',sureMeasure);	var rowObj = mygrid.getSelectionModel().getSelections();	var len = rowObj.length;	if (len < 1) {		//Ext.Msg.show({title:'注意',msg:'请选择需要修改的数据!',buttons: Ext.Msg.OK,icon:Ext.MessageBox.WARNING});		return;	}	else {		//var content = rowObj[0].get("CaseMeasure");		//var TxtCaseMeasure=Ext.getCmp('TxtCaseMeasure');		//TxtCaseMeasure.setValue(content);	} //var mydate=new Date(); //var butord=Ext.getCmp('_Button5'); //butord.on=('click',OrdSch1); window.show(); //alert();}function Measure1(){  selections = grid.getSelectionModel().getSelections(); 	var arr = new Array();	var a = cspRunServerMethod(pdata1, "", "DHCNURMeasure", EpisodeID, "");	arr = eval(a);	var window = new Ext.Window({		title: '医嘱',		width: 550,		height: 450,		autoScroll: true,		layout: 'absolute',		plain: true,		frame:true,		//modal: true,		//bodyStyle: 'padding:5px;',		///buttonAlign: 'center',		items: arr	}); var mydate=new Date(); var butord=Ext.getCmp('_Button5'); butord.on=('click',OrdSch1); window.show();}function sureMeasure(){	 var gform=Ext.getCmp("gform");   //gform.items.each(eachItem, this);  	var TxtCaseMeasure=Ext.getCmp('TxtCaseMeasure');	var frm=Ext.getCmp('CaseForm');	var aa=document.getElementById("southTab");	var CareCon=Ext.get("southTab").dom.contentWindow.document.getElementById("DesignForm");	//alert(CareCon.QichTextCon.GetCellText());	var win=Ext.get("southTab").dom.contentWindow;   // var parr="DHCNURANHUI202^"+EpisodeID+"^CaseMeasureXml";	var ret=southTab.Save();		var grid1=Ext.getCmp('mygrid');	CaseMeasureID=ret; 	var rwIndex=grid1.getSelectionModel().last;	MeasureRel.add(rwIndex,CaseMeasureID);	//debugger;	grid.getSelectionModel().getSelections()[0].set("CaseMeasure",CareCon.QichTextCon.GetCellText());	frm.close();}function gridcheckclick(){	 var grid=Ext.getCmp("CheckGrid");  	var rowObj = grid.getSelectionModel().getSelections();	var len = rowObj.length;	var GetRadiaNote=document.getElementById('GetRadiaNote');	if(len < 1)	{		//Ext.Msg.show({title:'注意',msg:'请选择需要修改的数据!',buttons: Ext.Msg.OK,icon:Ext.MessageBox.WARNING});		return;	}	else	{		var rowid = rowObj[0].get("ORW");		var a=cspRunServerMethod(GetRadiaNote.value,rowid);        var LCResult=Ext.getCmp('LCResult');		a=a.replace("_$c(13,10)_",String.fromCharCode(13)+String.fromCharCode(10));		var aa=a.split("_$c_");		var txt="";		for (i=0;i<aa.length;i++)		{			if (aa[i]=="")  continue;			txt=txt+aa[i];//+String.fromCharCode(13)+String.fromCharCode(10);		}		LCResult.setValue(txt);		//EpisodeID=rowObj[0].get("EpisodeId");		/*for (i = 0; i < top.frames.length; i++) {			alert(top.frames[i].name);		}		var frm = top.frames[0].document.forms["fEPRMENU"];	    frm.EpisodeID.value=EpisodeID;        ModConsult();*/	}}function gridLabclick(){	 var grid=Ext.getCmp("LabGrid");  	var rowObj = grid.getSelectionModel().getSelections();	var len = rowObj.length;	var GetLabItemdata=document.getElementById('GetLabItemdata');	if(len < 1)	{		//Ext.Msg.show({title:'注意',msg:'请选择需要修改的数据!',buttons: Ext.Msg.OK,icon:Ext.MessageBox.WARNING});		return;	}	else	{		var labno = rowObj[0].get("LabEpisodeNo");		var tesc=rowObj[0].get("testcode");		var ARCIMDes=rowObj[0].get("ARCIMDes");		var a=cspRunServerMethod(GetLabItemdata.value,labno,tesc);		if (a=="-1") return;		var LCResult=Ext.getCmp('LCResult');		//a=a.replace("&",String.fromCharCode(13)+String.fromCharCode(10));		var aa=a.split("$");		var aresult=aa[1].split('&');		var txt="";		for (i=0;i<aresult.length;i++)		{			if (aresult[i]=="")  continue;			var labar=aresult[i].split("^");			txt=txt+labar+String.fromCharCode(13)+String.fromCharCode(10);		}		LCResult.setValue("        "+ARCIMDes+String.fromCharCode(13)+String.fromCharCode(10)+txt);		//EpisodeID=rowObj[0].get("EpisodeId");		/*for (i = 0; i < top.frames.length; i++) {			alert(top.frames[i].name);		}		var frm = top.frames[0].document.forms["fEPRMENU"];	    frm.EpisodeID.value=EpisodeID;        ModConsult();*/	}}function find(){	//var link="dhcnurtempature.csp?EpisodeID="+EpisodeID;   /// window.open (link,'体温单','height=1,width=1,top=0,left=0,toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no')    // window.close();  // alert(parent.frames.length);    MeasureRel = new Hashtable();    REC = new Array();	var adm = EpisodeID;	var StDate = Ext.getCmp("mygridstdate");	var StTime = Ext.getCmp("mygridsttime");	var Enddate = Ext.getCmp("mygridenddate");	var EndTime = Ext.getCmp("mygridendtime");	var GetQueryData = document.getElementById('GetQueryData');	var mygrid = Ext.getCmp("mygrid");	var IfCancelRec=Ext.getCmp("IfCancelRec").getValue();	var parr = adm + "^" + StDate.value + "^" + StTime.value + "^" + Enddate.value + "^" + EndTime.value + "^"+"DHCNURANHUI202" + "^" + IfCancelRec;	// debugger;	var a = cspRunServerMethod(GetQueryData.value, "web.DHCNurRecComm:GetCareRecComm", "parr$" + parr, "AddRec");	mygrid.store.loadData(REC);}function InOutNod(){ //小结    	var SaveOutIn=document.getElementById('SaveOutIn');	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { Ext.Msg.alert('提示', "请先点'统计'按钮!"); return; }	else	{	  var countstr=""; //合计项	  var countcls=ICountCls+"&"+OCountCls;	  var tt=countcls.split('&');	  for (i=0;i<tt.length;i++)	  {	  	if (tt[i]=="") continue;		countstr=countstr+tt[i]+"|"+objRow[0].get(tt[i])+"^";	  }	  var CareDate=objRow[0].get("CareDate");	  var CareTime=objRow[0].get("CareTime");	  var inamount=objRow[0].get(DisplaySumInAmount);	  var OutQtAmount=objRow[0].get(DisplaySumOutAmount);	  var InPart=objRow[0].get(PartInAmount);	  var OutPart=objRow[0].get(PartOutAmount);	  //var StatTime=objRow[0].get("Item1");	  //var StatHours=objRow[0].get("Item2");	  var CaseMeasure=objRow[0].get("CaseMeasure");	  var CaseMeasureArr=CaseMeasure.split(" ");	  if (CaseMeasureArr.length>1)	  {	  	var StatTime=CaseMeasureArr[0];	  	var StatHours=CaseMeasureArr[1];	  }	  else	  {	  	var StatTime="";	  	var StatHours="";	  }		var str=countstr+"^SumInAmount|"+inamount+"^SumOutAmount|"+OutQtAmount+"^CareDate|"+formatDate(CareDate)+"^CareTime|"+CareTime+"^Typ|Nod^"+"InPart|"+InPart+"^OutPart|"+OutPart+"^StatTime|"+StatTime+"^StatHours|"+StatHours;		var diaggrid = Ext.getCmp('diaggrid');		if (diaggrid) {  		var selModel=diaggrid.getSelectionModel();  		if (selModel.hasSelection()) {     			var objDiagRow = selModel.getSelections();		  							DiagnosDr=objDiagRow[0].get("rw");			}			else {				DiagnosDr="";				}		}		else {			DiagnosDr="";		}		str=str+"^DiagnosDr|"+DiagnosDr;		//alert(str);		var a=cspRunServerMethod(SaveOutIn.value,EpisodeID,str,session['LOGON.USERID'],"DHCNURANHUI202");		find();	}}function InOutSum(){	var SaveOutIn=document.getElementById('SaveOutIn');	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { Ext.Msg.alert('提示', "请先点'统计'按钮!"); return; }	else	{	  var countstr=""; //合计项	  var countcls=ICountCls+"&"+OCountCls;	  var tt=countcls.split('&');	  for (i=0;i<tt.length;i++)	  {	  	if (tt[i]=="") continue;		countstr=countstr+tt[i]+"|"+objRow[0].get(tt[i])+"^";	  }      var CareDate=objRow[0].get("CareDate"); 	  var CareTime=objRow[0].get("CareTime");	  var inamount=objRow[0].get(DisplaySumInAmount);	  var OutQtAmount=objRow[0].get(DisplaySumOutAmount);	  var InPart=objRow[0].get(PartInAmount);	  var OutPart=objRow[0].get(PartOutAmount);		//var StatTime=objRow[0].get("Item1");	  //var StatHours=objRow[0].get("Item2");	  var CaseMeasure=objRow[0].get("CaseMeasure");	  var CaseMeasureArr=CaseMeasure.split(" ");	  if (CaseMeasureArr.length>1)	  {	  	var StatTime=CaseMeasureArr[0];	  	var StatHours=CaseMeasureArr[1];	  }	  else	  {	  	var StatTime="";	  	var StatHours="";	  }		var str=countstr+"^SumInAmount|"+inamount+"^SumOutAmount|"+OutQtAmount+"^CareDate|"+formatDate(CareDate)+"^CareTime|"+CareTime+"^Typ|Sum^"+"InPart|"+InPart+"^OutPart|"+OutPart+"^StatTime|"+StatTime+"^StatHours|"+StatHours;		//alert(str);		var diaggrid = Ext.getCmp('diaggrid');		if (diaggrid) {  		var selModel=diaggrid.getSelectionModel();  		if (selModel.hasSelection()) {     			var objDiagRow = selModel.getSelections();		  							DiagnosDr=objDiagRow[0].get("rw");			}			else {				DiagnosDr="";				}		}		else {			DiagnosDr="";		}		str=str+"^DiagnosDr|"+DiagnosDr;		//alert(str);		var a=cspRunServerMethod(SaveOutIn.value,EpisodeID,str,session['LOGON.USERID'],"DHCNURANHUI202");		find(); }}function UpdateRelDiagnos(){	var arr = new Array();	var a = cspRunServerMethod(pdata1, "", "DHCNurRelDiagnos", EpisodeID, "");	arr = eval(a);	var window = new Ext.Window({		title: '关联诊断记录',		width: 615,		height: 235,		autoScroll: true,		layout: 'absolute',		plain: true,		frame:true,		//modal: true,		//bodyStyle: 'padding:5px;',		///buttonAlign: 'center',		items: arr	});	var butin=Ext.getCmp('diaggridbut1');	butin.text="确定";	butin.on('click',UpdateDiagnos);	var but2=Ext.getCmp('diaggridbut2');	but2.text="插入小结";	but2.on('click',UpdateDiagnos1);	var diaggrid = Ext.getCmp('diaggrid');	var diagtobar=diaggrid.getTopToolbar();	diagtobar.addButton({		className: 'new-topic-button',		text: "插入24小时",		handler:UpdateDiagnos2,		id:'diaggridbut3'  	});	//debugger;	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length > 0) {		var inname = objRow[0].get(DisplaySumInName);		var outname = objRow[0].get(DisplaySumOutName);		if ((inname)&&(outname)&&((inname.indexOf("入液量") != -1) || (outname.indexOf("出液量") != -1))) {			butin.hide();		}		else {			but2.hide();			var but3 = Ext.getCmp('diaggridbut3');			but3.hide();		}	}	SchDiag();	window.show();}function UpdateDiagnos(){	var diaggrid=Ext.getCmp("diaggrid");	var objDiagnosRow=diaggrid.getSelectionModel().getSelections();	if (objDiagnosRow.length == 0) { Ext.Msg.alert('提示', "请先选择一条诊断记录!"); return; }	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { Ext.Msg.alert('提示', "请先选择一条护理记录!"); return; }	else	{		save();	}}function UpdateDiagnos1(){	var diaggrid=Ext.getCmp("diaggrid");	var objDiagnosRow=diaggrid.getSelectionModel().getSelections();	if (objDiagnosRow.length == 0) { Ext.Msg.alert('提示', "请先选择一条诊断记录!"); return; }	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { Ext.Msg.alert('提示', "请先选择一条统计记录!"); return; }	else	{		InOutNod();	}}function UpdateDiagnos2(){	var diaggrid=Ext.getCmp("diaggrid");	var objDiagnosRow=diaggrid.getSelectionModel().getSelections();	if (objDiagnosRow.length == 0) { Ext.Msg.alert('提示', "请先选择一条诊断记录!"); return; }	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { Ext.Msg.alert('提示', "请先选择一条统计记录!"); return; }	else	{		InOutSum();	}}function SchDiag(){	condata=new Array();	var adm=EpisodeID;	var GetQueryData=document.getElementById('GetQueryData1');	var diaggrid=Ext.getCmp("diaggrid");	//alert(adm); 	var a=cspRunServerMethod(GetQueryData.value,"web.DHCNurseRecordComm:GetCopyDiagnos","parr$"+adm,"AddDiag");  	diaggrid.store.loadData(condata);   }function AddDiag(a1,a2,a3,a4,a5){	condata.push({		DiagNos:a1,		RecUser:a2,		RecDate:a3,		RecTime:a4,		rw:a5	});} function DBC2SBC(str)   {	var result = '';	if ((str)&&(str.length)) {		for (i = 0; i < str.length; i++) {			code = str.charCodeAt(i);			if (code >= 65281 && code <= 65373) {				result += String.fromCharCode(str.charCodeAt(i) - 65248);			}			else {				if (code == 12288) {					result += String.fromCharCode(str.charCodeAt(i) - 12288 + 32);				}				else {					result += str.charAt(i);				}			}		}	}	else{		result=str;	}  	return result;   }function SureIn() {	var grid = Ext.getCmp('ordgrid');	var mygrid=Ext.getCmp('mygrid');	var store = grid.store;	var rowCount = store.getCount(); //记录数	/*var cm = grid.getColumnModel();	var colCount = cm.getColumnCount(); //列数	var view = grid.getView();*/	var num=0;    var selModel = grid.getSelectionModel();       if (selModel.hasSelection()) {          	// Ext.Msg.confirm("警告", "确定要删除吗？", function(button) {   				var selections = selModel.getSelections();				//var rowIndex = grid.store.indexOf(grid.getSelectionModel().getSelected());				//grid.getSelectionModel().selectRow(rowIndex);				//debugger;				var caredate,caretime;				Ext.each(selections, function(item) {					var des=item.data.ARCIMDesc;					des=des.replace("_____","");					var ml=item.data.Dose;					var unit=item.data.DoseUnit;					if ((unit!="ml")&&(unit!="ML")) ml=0;					var seqno=item.data.SeqNo;					var rowIndex = grid.store.indexOf(item);					for (var i = rowIndex-1; i >=0; i--) {						var subdes=store.getAt(i).data.ARCIMDesc;						subdes=subdes.replace("_____","");						var subml=store.getAt(i).data.Dose;						var subunit=store.getAt(i).data.DoseUnit;						if (subunit!="ml") subml=0;						var subseqno=store.getAt(i).data.SeqNo;						if (subseqno==seqno)						{							des=subdes+","+des;							ml=eval(ml)+eval(subml);						}						else						{							break;							}					}					for (var i = rowIndex+1; i < store.getCount(); i++) {												var subdes=store.getAt(i).data.ARCIMDesc;						//alert(subdes);						subdes=subdes.replace("_____","");						var subml=store.getAt(i).data.Dose;						var subunit=store.getAt(i).data.DoseUnit;						if ((subunit!="ml")&&(subunit!="ML")) subml=0;						var subseqno=store.getAt(i).data.SeqNo;						if (subseqno==seqno)						{							des=des+","+subdes;							ml=eval(ml)+eval(subml);						}						else						{							break;							}					}					if (num == 0) {						caredate=mygrid.getStore().getAt(0).get("CareDate");						caretime=mygrid.getStore().getAt(0).get("CareTime");						var objRow=mygrid.getSelectionModel().getSelections();						if (objRow.length == 0) { Ext.Msg.alert('提示', "请先选择某行!"); return; }						else						{							//alert(OrdInName+"^"+OrdInAmount)								objRow[0].set(OrdInName, des);								objRow[0].set(OrdInAmount, ml);						}					}else{						additm();						mygrid.getSelectionModel().selectRow(mygrid.store.getCount()-1);   						mygrid.getSelectionModel().getSelections()[0].set("CareDate", caredate);						mygrid.getSelectionModel().getSelections()[0].set("CareTime", caretime);						mygrid.getSelectionModel().getSelections()[0].set(OrdInName, des);						mygrid.getSelectionModel().getSelections()[0].set(OrdInAmount, ml);					}					num++;				});        } }function AllSave(){	var store = grid.store;	var rowCount = store.getCount(); //记录数	var cm = grid.getColumnModel();	var colCount = cm.getColumnCount();	var list = [];	var rowObj = grid.getSelectionModel().getSelections();		var len = rowObj.length;	//	for (var r = 0;r < len; r++) {	//	list.push(rowObj[r].data);	//}			var grid1=Ext.getCmp('mygrid');	var rwIndex=grid1.getSelectionModel().last;	var CaseMeasureID="CaseMeasureID|";	//debugger;	if (MeasureRel.contains(rwIndex))	{		var rid=MeasureRel.items(rwIndex);				CaseMeasureID=CaseMeasureID+rid;	}	for (var i = 0; i < store.getCount(); i++) {		list.push(store.getAt(i).data);		//	debugger;	}	var RecSave=document.getElementById('RecSave');	for (var i = 0; i < list.length; i++) {	  var obj=list[i];	  var str="";	  var CareDate="";	  var CareTime="";	  var flag="0";		for (var p in obj) {			var aa = formatDate(obj[p]);							if (p=="CareDate") CareDate=aa;			if (p=='CareTime') CareTime=obj[p];			if (p=="") continue;			if ((p == DisplaySumInName) && (obj[p].indexOf("入液量") != -1)) {				flag = "1";			}			if ((p==DisplaySumOutName)&&(obj[p].indexOf("出液量")!= -1))			{				flag="1";			} 			if (aa == "") 			{					str = str + p + "|" + DBC2SBC(obj[p]) + '^';			}else			{			  	str = str + p + "|" + aa + '^';				}		}		if ((str!="")&&(flag=="0"))		{			if (str.indexOf("CareDate")==-1)			{				str=str+"CareDate|"+CareDate+"^CareTime|"+CareTime;				//debugger;			}			var diaggrid = Ext.getCmp('diaggrid');			if (diaggrid) {	  		var selModel=diaggrid.getSelectionModel();	  		if (selModel.hasSelection()) {   	  			var objDiagRow = selModel.getSelections();		  								DiagnosDr=objDiagRow[0].get("rw");				}				else {					DiagnosDr="";					}			}			else {				DiagnosDr="";			}			str=str+"DiagnosDr|"+DiagnosDr;			str=str+"^"+CaseMeasureID;			//alert(str);			var a=cspRunServerMethod(RecSave.value,EpisodeID,str,session['LOGON.USERID'],"DHCNURANHUI202",session['LOGON.GROUPDESC']);			if (a!="0")			{				alert(a);				return;			}		}	}	find();}  function save(){	var store = grid.store;	var rowCount = store.getCount(); //记录数	var cm = grid.getColumnModel();	var colCount = cm.getColumnCount();	var list = [];	var rowObj = grid.getSelectionModel().getSelections();		var len = rowObj.length;		for (var r = 0;r < len; r++) {		list.push(rowObj[r].data);	}			var grid1=Ext.getCmp('mygrid');	var rwIndex=grid1.getSelectionModel().last;	var CaseMeasureID="CaseMeasureID|";	//debugger;	if (MeasureRel.contains(rwIndex))	{		var rid=MeasureRel.items(rwIndex);				CaseMeasureID=CaseMeasureID+rid;	}	//for (var i = 0; i < store.getCount(); i++) {	//	list.push(store.getAt(i).data);	//	//	debugger;	//}	var RecSave=document.getElementById('RecSave');	for (var i = 0; i < list.length; i++) {	  var obj=list[i];	  var str="";	  var CareDate="";	  var CareTime="";	  var flag="0";		for (var p in obj) {			var aa = formatDate(obj[p]);							if (p=="CareDate") CareDate=aa;			if (p=='CareTime') CareTime=obj[p];			if (p=="") continue;			if ((p == DisplaySumInName) && (obj[p].indexOf("入液量") != -1)) {				flag = "1";			}			if ((p==DisplaySumOutName)&&(obj[p].indexOf("出液量")!= -1))			{				flag="1";			} 			if (aa == "") 			{					str = str + p + "|" + DBC2SBC(obj[p]) + '^';			}else			{			  	str = str + p + "|" + aa + '^';				}		}		if ((str!="")&&(flag=="0"))		{			//	if (str.indexOf("CareDate")==-1)			//{		//	str=str+"CareDate|"+CareDate+"^CareTime|"+CareTime;				//debugger;			//}			var diaggrid = Ext.getCmp('diaggrid');			if (diaggrid) {	  		var selModel=diaggrid.getSelectionModel();	  		if (selModel.hasSelection()) {   	  			var objDiagRow = selModel.getSelections();		  								DiagnosDr=objDiagRow[0].get("rw");				}				else {					DiagnosDr="";					}			}			else {				DiagnosDr="";			}			str=str+"DiagnosDr|"+DiagnosDr;			str=str+"^"+CaseMeasureID;			//alert(str);			var a=cspRunServerMethod(RecSave.value,EpisodeID,str,session['LOGON.USERID'],"DHCNURANHUI202",session['LOGON.GROUPDESC']);			if (a!="0")			{				alert(a);				return;			}		}	}	find();}  function addtitCon(tobar,lab){	var but1=Ext.getCmp(lab+"but1");	but1.hide();	var but2=Ext.getCmp(lab+"but2");	but2.hide();		tobar.addItem(	    {			xtype:'datefield',			format: 'Y-m-d',			id:lab+'stdate',			value:(diffDate(new Date(),-1))		},	    {			xtype:'datefield',			format: 'Y-m-d',			id:lab+'enddate',			value:new Date()		}	);	tobar.addButton(	  {		className: 'new-topic-button',		text: "查询",		//handler:find,		id:lab+'Sch'	  }	);}  function findStat(){  //查询出入液量合计    var adm=EpisodeID;	var StDate= Ext.getCmp("mygridstdate");	var StTime= Ext.getCmp("mygridsttime");	var Enddate= Ext.getCmp("mygridenddate");	var EndTime= Ext.getCmp("mygridendtime");	var GeInOutAmount=document.getElementById('GeInOutAmount');	var mygrid=Ext.getCmp("mygrid");	 	var a=cspRunServerMethod(GeInOutAmount.value,adm,StDate.value,StTime.value,Enddate.value,EndTime.value,"DHCNURANHUI202");	if (a=="") { Ext.Msg.alert('提示', "无护理记录数据!"); return; }	//additm();	additmstat(Enddate.value,EndTime.value);	var tt=a.split('^');	alert(a);	mygrid.getSelectionModel().selectRow(mygrid.store.getCount()-1);   	for (i=0;i<tt.length;i++)	{		itm=tt[i].split('|');		mygrid.getSelectionModel().getSelections()[0].set(itm[0],itm[1]); 	}	//alert(tt);}/*function printNurRec(){		alert("bb");		var GetPrnSet=document.getElementById('GetPrnSet');		var GetHead=document.getElementById('GetPatInfo');		var ret=cspRunServerMethod(GetHead.value,EpisodeID);		var hh=ret.split("^");		//alert("ddd");		//debugger;		var a=cspRunServerMethod(GetPrnSet.value,"DHCNURANHUI202",EpisodeID); //page, caredattim, prnpos, adm,Typ,user		if (a=="") return;		var GetLableRec=document.getElementById('GetLableRec');		var LabHead=cspRunServerMethod(GetLableRec.value,"DHCNURANHUI202^"+session['LOGON.CTLOCID']);		var tm=a.split("^");		var stdate="" //tm[2];		var stim="" //tm[3];		var edate="" //tm[4];		var etim="" //tm[5];		//PrintCommPic.RHeadCaption=hh[1];		//PrintCommPic.LHeadCaption=hh[0];		//PrintCommPic.RFootCaption="第";		//PrintCommPic.LFootCaption="页";		//PrintCommPic.LFootCaption=hh[2];		PrintCommPic.TitleStr=ret;		PrintCommPic.SetPreView("1");		PrintCommPic.PrnLoc=session['LOGON.CTLOCID'];		var aa=tm[1].split("&");		//PrintCommPic.stPage=aa[0];		//if (aa.length>1) PrintCommPic.stRow=aa[1];		PrintCommPic.stPage=0;		PrintCommPic.stRow=0;		PrintCommPic.previewPrint="1"; //是否弹出设置界面		//PrintCommPic.stprintpos=tm[0];		PrintCommPic.stprintpos=0;		//alert(PrintCommPic.Pages);		PrintCommPic.SetConnectStr(CacheDB);		alert(webIP); 		PrintCommPic.WebUrl=webIP+"/trakcare/web/DWR.DoctorRound.cls";		PrintCommPic.ItmName = "DHCNurPrnMouldANHUI3"; //338155!2010-07-13!0:00!!		//debugger;		var parr=EpisodeID+"!"+stdate+"!"+stim+"!"+edate+"!"+etim+"!DHCNURANHUI202";		PrintCommPic.ID = "";		PrintCommPic.MultID = "";		//PrintCommPic.MthArr="web.DHCConsult:getConsultInfo&id:"+myid;		if(LabHead!="")PrintCommPic.LabHead=LabHead;		PrintCommPic.SetParrm(parr); // ="EpisodeId" ; //"p1:0^p2:"		PrintCommPic.PrintOut();		var SavePrnSet=document.getElementById('SavePrnSet');		//debugger;		var CareDateTim=PrintCommPic.CareDateTim;		if (CareDateTim=="") return ;		var pages=PrintCommPic.pages;		var stRow=PrintCommPic.stRow;		//debugger;		var stprintpos=PrintCommPic.stPrintPos;		//alert(pages+","+CareDateTim+","+stprintpos+","+EpisodeID+","+"DHCNURANHUI202"+","+session['LOGON.USERID']+","+PrintCommPic.PrnFlag);		//PrnFlag==1说明是打印预览		if (PrintCommPic.PrnFlag==1) return;		//如果原记录保存打印到第8页则当打印第8页之前页时不保存打印记录		if (pages<aa[0]) return;		var a=cspRunServerMethod(SavePrnSet.value,pages,CareDateTim,stprintpos,EpisodeID,"DHCNURANHUI202",session['LOGON.USERID']); //page, caredattim, prnpos, adm,Typ,user		//find();}*/function additmstat(statenddate,statendtime){  	var Plant = Ext.data.Record.create([	{name:'CareDate'}, 	{name:'CareTime'},	{name:'Item1'},	{name:'Item2'},	{name:'Item3'},	{name:'Item4'},	{name:'Item5'},	{name:'Item6'},	{name:'Item7'},	{name:'Item8'},	{name:'Item9'}, 	{name:'Item10'},	{name:'Item11'},	{name:'Item12'},	{name:'Item13'},	{name:'Item14'},	{name:'Item15'},	{name:'Item16'},	{name:'Item17'}, 	{name:'Item18'},	{name:'Item19'}, 	{name:'Item20'},	{name:'Item21'},	{name:'Item22'},	{name:'Item23'},	{name:'Item24'},	{name:'Item25'},	{name:'Item26'},	{name:'Item27'},	{name:'Item28'},	{name:'Item29'},	{name:'Item30'},	{name:'Item31'},	{name:'Item32'},	{name:'Item33'},	{name:'Item34'},	{name:'Item35'},	{name:'Item36'},	{name:'Item37'},	{name:'Item38'},	{name:'Item39'},	{name:'Item40'},	{name:'Item41'},	{name:'Item42'},	{name:'Item43'},	{name:'Item44'},	{name:'Item45'},	{name:'Item46'},	{name:'Item47'}, 	{name:'Item48'},	{name:'Item49'},	{name:'Item50'},	{name:'Item51'},	{name:'Item52'},	{name:'Item53'},	{name:'Item54'},	{name:'Item55'},	{name:'Item56'},	{name:'Item57'}, 	{name:'Item58'},	{name:'Item59'},	{name:'Item60'},	{name:'Item61'},	{name:'Item62'},	{name:'Item63'},	{name:'Item64'},	{name:'Item65'},	{name:'Item66'},	{name:'Item67'}, 	{name:'Item68'},	{name:'Item69'},	{name:'Item70'},	{name:'CaseMeasure'},	{name:'User'},	{name:'rw'},	{name:'par'}      ]);    var count = grid.store.getCount();     var r = new Plant({CareDate:getDate(statenddate),CareTime:statendtime});     grid.store.commitChanges();     grid.store.insert(count,r);    return;}function setVal2(itm,val){	    if (val=="") return ;	   	var tt=val.split('!');		//alert(tt);	 	var cm=Ext.getCmp(itm);		person=new Array();		addperson(tt[1],tt[0]);		cm.store.loadData(person);		cm.setValue(tt[0]);		 } function setVal3(itm,val){	    if (val=="") return ;	   	var tt=val.split('!');		//alert(tt);	 	var cm=Ext.getCmp(itm);		opertion=new Array();		addopertion(tt[1],tt[0]);		cm.store.loadData(opertion);		cm.setValue(tt[0]);		 } function cmbkey(field, e){ 		if (e.getKey() ==Ext.EventObject.ENTER)	{		var pp=field.lastQuery;				getlistdata(pp,field);	//	alert(ret);			}}var person=new Array();function getlistdata(p,cmb){	var GetPerson =document.getElementById('GetPerson');	//debugger;	    var ret=cspRunServerMethod(GetPerson.value,p);   	if (ret!="")	{		var aa=ret.split('^');		for (i=0;i<aa.length;i++)		{			if (aa[i]=="" ) continue;			var it=aa[i].split('|');			addperson(it[1],it[0]);		}		//debugger;		cmb.store.loadData(person);	}}function addperson(a,b){	person.push(	{		desc:a,		id:b	}	);}function cmbkey1(field, e){	if (e.getKey() ==Ext.EventObject.ENTER)	{		var pp=field.lastQuery;		getoperlistdata(pp,field);	//	alert(ret);			}}var opertion=new Array();function getoperlistdata(p,cmb){	var GetPer =document.getElementById('GetOper');	//debugger;    var ret=cspRunServerMethod(GetOper.value,p);	if (ret!="")	{		var aa=ret.split('^');		for (i=0;i<aa.length;i++)		{			if (aa[i]=="" ) continue;			var it=aa[i].split('|');			addopertion(it[1],it[0]);		}		//debugger;		cmb.store.loadData(opertion);	}}function addopertion(a,b){	opertion.push(	{		desc:a,		id:b	}	);}function btclose(){	window.close();}function cmbkey222(field, e){	if (e.getKey() ==Ext.EventObject.ENTER)	{		var pp=field.lastQuery;		getlistdata(pp,field);	//	alert(ret);			}}var person=new Array();function getlistdata222(p,cmb){	var GetPerson =document.getElementById('GetPerson');	//debugger;    var ret=cspRunServerMethod(GetPerson.value,p);	if (ret!="")	{		var aa=ret.split('^');		for (i=0;i<aa.length;i++)		{			if (aa[i]=="" ) continue;			var it=aa[i].split('|');			addperson(it[1],it[0]);		}		//debugger;		cmb.store.loadData(person);	}}function addperson(a,b){	person.push(	{		desc:a,		id:b	}	);}var REC=new Array();function AddRec(str){	//var a=new Object(eval(str));	//var obj = eval('(' + str + ')');	//arrgrid.push(obj);	//debugger; 	//alert(str);		//var a=new Object(eval(str));	var obj = eval('(' + str + ')');	if (obj.CareDate!=undefined)obj.CareDate=getDate(obj.CareDate);	//obj.PregHPregDate=getDate(obj.PregHPregDate);	REC.push(obj);	//debugger;	}function setvalue(){	//alert(ExamId);   var ha = new Hashtable();   var getid=document.getElementById('GetId');   var id=cspRunServerMethod(getid.value,EmrCode,EpisodeID);   //alert(id);   if (id != "") {   	var getVal = document.getElementById('getVal');   	var ret = cspRunServerMethod(getVal.value, id);   	var tm = ret.split('^')    //alert(tm);		sethashvalue(ha, tm);							}			else {				getPatInfo();				return;				//var PatInfo = document.getElementById('PatInfo');				//if (PatInfo) {				//alert(12);					//var ret = cspRunServerMethod(PatInfo.value, EpisodeID, EmrCode);					//var tm = ret.split('^')					//sethashvalue(ha, tm)				}				// debugger;    	      	 var gform=Ext.getCmp("gform");     gform.items.each(eachItem, this);  	 //  alert(a);	for (var i=0 ; i<ht.keys().length;i++)//for...in statement get all of Array's index	{		var key = ht.keys()[i];		//restr += ht.items(key) + " " + ht.parent[key] + "<br/>";		if (key.indexOf("_") == -1) 		{			//alert(key);			var flag=ifflag(key );   //界面显示			if (flag==true)			{								if (ha.contains(key)) setVal2(key ,ha.items(key));				//debugger;				continue;			}   					var itm = Ext.getCmp(key);			if (ha.contains(key)) 			itm.setValue(getval(ha.items(key)));				    }else{			var aa=key.split('_');			if(ha.contains(aa[0]))			{			  setcheckvalue(key,ha.items(aa[0]));			} 		}    } }function getval(itm){	var tm=itm.split('!');//	alert(tm)	return tm[0];}function ifflag(itm){	var tm=ITypItm.split('|');	var flag=false;	for (var i=0;i<tm.length;i++)	{		if (itm==tm[i])		{			flag=true;		}	}	return flag ;} function ifflag1(itm){	var tm=ITypItm1.split('|');	var flag=false;	for (var i=0;i<tm.length;i++)	{		if (itm==tm[i])		{			flag=true;		}	}	return flag ;}function Save(){  ret="";  checkret="";  comboret="";   var getid=document.getElementById("GetId");   var id=cspRunServerMethod(getid.value,EmrCode,EpisodeID);   var SaveRec=document.getElementById('Save');  var gform=Ext.getCmp("gform");  gform.items.each(eachItem1, this);    //alert(EmrCode) ret+"&"+checkret+"&"+comboret;  //alert(checkret); if (id==""){ var Id=cspRunServerMethod(SaveRec.value,"^EmrUser|"+session['LOGON.USERID']+"^EmrCode|"+EmrCode+"^"+ret+"^DetLocDr|"+session['LOGON.CTLOCID']+"^EpisodeId|"+EpisodeID+"&"+checkret+"&"+comboret,""); alert("已保存!");  return; //alert(NurRecId); }else{  var Id=cspRunServerMethod(SaveRec.value,"^EmrUser|"+session['LOGON.USERID']+"^EmrCode|"+EmrCode+"^"+ret+"^DetLocDr|"+session['LOGON.CTLOCID']+"^EpisodeId|"+EpisodeID+"&"+checkret+"&"+comboret,id);  if (Id!=="")		{     alert("已保存!");     return;    }     else    {       alert("保存失败!");     return;	  } }}function getPatInfo(){	//return ;	var PatInfo=document.getElementById('PatInfo');	if (PatInfo) {		var ret=cspRunServerMethod(PatInfo.value,EpisodeID);		//alert(ret);	 	var tt=ret.split('^');	 	var patName = Ext.getCmp("Item1");	 	patName.setValue(getValueByCode(tt[4]));	 	var sex = Ext.getCmp("Item2"); 	 	sex.setValue(getValueByCode(tt[6]));	 	var  regno= Ext.getCmp("Item6");	 	regno.setValue(getValueByCode(tt[9]));	 	var age = Ext.getCmp("Item3");	 	age.setValue(getValueByCode(tt[3]));	 	var patLoc = Ext.getCmp("Item4");	 	patLoc.setValue(getValueByCode(tt[1]));	 	var bedCode = Ext.getCmp("Item5");	 	bedCode.setValue(getValueByCode(tt[5]));	 	var diag = Ext.getCmp("Item7");	 	diag.setValue(getValueByCode(tt[8]));	 	//var admdate = Ext.getCmp("Item7");	 //	admdate.setValue(getValueByCode(tt[10]));	 //	var admtime = Ext.getCmp("Item8");	 	//admtime.setValue(getValueByCode(tt[11]));	 	//var admstime = Ext.getCmp("Item33");	 	//admstime.setValue(getValueByCode(tt[12]));	 	//alert("tt")		//alert("dd");	 	//var MedCareNo = Ext.getCmp("Item411");	 	//MedCareNo.setValue(getValueByCode(tt[9]));	}}function getValueByCode(tempStr){	var retStr=tempStr;	var strArr = tempStr.split("|");	if (strArr.length>1) 	{		retStr=strArr[1];	}	return retStr;} function printNurRec(){	//alert(1212)			var GetPrnSet=document.getElementById('GetPrnSet');			var GetHead=document.getElementById('GetPatInfo');			var ret=cspRunServerMethod(GetHead.value,EpisodeID);			//alert(ret);	var hh=ret.split("^");				var getid=document.getElementById('GetId');        	var id=cspRunServerMethod(getid.value,EmrCode,EpisodeID);			//debugger;			var a=cspRunServerMethod(GetPrnSet.value,"DHCNURANHUI202",EpisodeID); 	//page, caredattim, prnpos, adm,Typ,user		if (a=="") return;			var GetLableRec=document.getElementById('GetLableRec');			var LabHead=cspRunServerMethod(GetLableRec.value,"DHCNURANHUI202^"+session['LOGON.CTLOCID']);			var tm=a.split("^");			var stdate="" 	//tm[2];			var stim="" 	//tm[3];			var edate="" 	//tm[4];			var etim="" 	//tm[5];			//PrintCommPic.RHeadCaption=hh[1];			//PrintCommPic.LHeadCaption=hh[0];			//PrintCommPic.RFootCaption="第";			//PrintCommPic.LFootCaption="页";			//PrintCommPic.LFootCaption=hh[2];			PrintCommPic.TitleStr=ret;			PrintCommPic.SetPreView("1");			PrintCommPic.PrnLoc=session['LOGON.CTLOCID'];			var aa=tm[1].split("&");			//PrintCommPic.stPage=aa[0];			//if (aa.length>1) 	PrintCommPic.stRow=aa[1];			PrintCommPic.stPage=0;			PrintCommPic.stRow=0;			PrintCommPic.previewPrint="1"; 	//是否弹出设置界面			//PrintCommPic.stprintpos=tm[0];			PrintCommPic.stprintpos=0;			//alert(PrintCommPic.Pages);		PrintCommPic.SetConnectStr(CacheDB);	//PrintCommPic.WebUrl=webIP+"/trakcare/web/DWR.DoctorRound.cls"; 	PrintCommPic.WebUrl=webIP+"/dthealth/web/DWR.DoctorRound.cls";	//PrintCommPic.WebUrl=WebIp+"/trakcarelive/trak/web/DWR.DoctorRound.cls";	//PrintCommPic.WebUrl=webIP+"/trakcare/web/DWR.DoctorRound.cls";	//PrintCommPic.WebUrl=webIP+"/trakcare/web/DWR.DoctorRound.cls";	PrintCommPic.ItmName = "DHCNurPrnMouldANHUI202"; 	//338155!2010-07-13!0:00!!			//debugger;			var parr=EpisodeID+"!"+stdate+"!"+stim+"!"+edate+"!"+etim+"!DHCNURANHUI202";;			PrintCommPic.ID = "";			PrintCommPic.MultID = "";			var mth1="Nur.DHCMoudData:getVal&parr:"+id+"!";		PrintCommPic.MthArr=mth1;			//PrintCommPic.MthArr="web.DHCConsult:getConsultInfo&id:"+myid;			if(LabHead!="")PrintCommPic.LabHead=LabHead;			PrintCommPic.SetParrm(parr); 	// ="EpisodeId" ; 	//"p1:0^p2:"			PrintCommPic.PrintOut();			var SavePrnSet=document.getElementById('SavePrnSet');			//debugger;			var CareDateTim=PrintCommPic.CareDateTim;			if (CareDateTim=="") return ;			var pages=PrintCommPic.pages;   			var stRow=PrintCommPic.stRow;			//debugger;			var stprintpos=PrintCommPic.stPrintPos;			//alert(pages+","+CareDateTim+","+stprintpos+","+EpisodeID+","+"DHCNURANHUI202"+","+session['LOGON.USERID']+","+PrintCommPic.PrnFlag);			//PrnFlag==1说明是打印预览			if (PrintCommPic.PrnFlag==1) return;			//如果原记录保存打印到第8页则当打印第8页之前页时不保存打印记录			if (pages<aa[0]) return;			//var a=cspRunServerMethod(SavePrnSet.value,pages,CareDateTim,stprintpos,EpisodeID,"DHCNURANHUI202",session['LOGON.USERID']);	//page, caredattim, prnpos, adm,Typ,user			//find();}function butPrintFn(){	        	//alert("cc");		printNurRec();	        	return;			} /*function butPrintFn(){			PrintCommPic.RHeadCaption='dddd';			PrintCommPic.LHeadCaption="3333333";			//PrintCommPic.RFootCaption="第";			//PrintCommPic.LFootCaption="页";			//PrintCommPic.LFootCaption="88";			//alert(PrintCommPic.Pages);			PrintCommPic.SetConnectStr(CacheDB);			PrintCommPic.ItmName = "DHCNurPrnMouldANHUI16";			//debugger;			//var parr="@"+EpisodeID+"@DHCNURHYD_Assessment@DHCNURHYD_DisSummary";						//var parr="@"+EpisodeID+"@DHCNURANHUI202";			//PrintCommPic.MthArr="web.DHCNurMouldDataComm:GetPrnValComm&parr:"+parr;						var parr="@"+EpisodeID+"@DHCNURANHUI202";			parr=parr+"|web.DHCMGtestpge:DHCNurOperComplexPrn&parr$"+EpisodeID;       		PrintCommPic.MthArr="web.DHCNurMouldDataComm:GetPrnValComm&parr:"+parr;			//alert(PrintCommPic.MthArr);			//PrintCommPic.LabHead=LabHead;						//PrintCommPic.SetParrm(parr);			PrintCommPic.PrintOut();}*/ function CancelRecord(){	var objCancelRecord=document.getElementById('CancelRecord');	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { alert("请先选择一条护理记录!"); return; }	else	{		var flag = confirm("你确定要作废此条记录吗!")		if(flag) 		{			var par=objRow[0].get("par");			var rw=objRow[0].get("rw");			//alert(par+","+rw+","+session['LOGON.USERID']+","+session['LOGON.GROUPDESC']);			if (objCancelRecord) {				var a = cspRunServerMethod(objCancelRecord.value, par, rw, session['LOGON.USERID'], session['LOGON.GROUPDESC']);			if (a!=0){					alert(a);					return;			}			else{					find();				}		}						}	           	}}