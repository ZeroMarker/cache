var Height = document.body.clientHeight;var Width = document.body.clientWidth;var ret="";var checkret="";var comboret="";var arrgrid=new Array();var DHCMGNurCheckGradeT101 = new Ext.data.Store({	proxy:new Ext.data.HttpProxy({		url:"../csp/dhc.nurse.ext.common.getdata.csp"	}),	reader:new Ext.data.JsonReader({		root:'rows',		totalProperty:'results',		fields:[{			'name':'ItemCode',			'mapping':'ItemCode'		},{			'name':'ItemDesc',			'mapping':'ItemDesc'		},{			'name':'ItemValue',			'mapping':'ItemValue'		},{			'name':'ItemDedStand',			'mapping':'ItemDedStand'		},{			'name':'CheckScore',			'mapping':'CheckScore'		},{			'name':'CheckMem',			'mapping':'CheckMem'		},{			'name':'CheckPeople',			'mapping':'CheckPeople'		},{			'name':'rw',			'mapping':'rw'		},{			'name':'Par',			'mapping':'Par'		},{			'name':'MinLevel',			'mapping':'MinLevel'		}]	}),	baseParams:{		className:'web.DHCMgQualCheck',		methodName:'GetQualItemGrade',		type:'RecQuery'	}});var DHCMgNurCheckQuickInT103=new Ext.data.Store({	proxy:new Ext.data.HttpProxy({		URL:"../csp/dhc.nurse.ext.common.getdata.csp"	}),	reader:new Ext.data.JsonReader({		root:'rows',		totalProperty:'results',		fields:[{			'name':'LocDes',			'mapping':'LocDes'		}, {			'name':'LocDr',			'mapping':'LocDr'		}]	}),	baseParams:{		className:'web.DHCMgNurSysComm',		methodName:'FindWardLoc',		type:'Query'	}});function SizeChange(changewidth) {	var fheight=document.body.offsetHeight;	var fwidth=document.body.offsetWidth;	var fm=Ext.getCmp('gform');	fm.setHeight(fheight);	fm.setWidth(fwidth+changewidth);	setsize("mygridpl","gform","mygrid");}// var commould=CreateComboBoxQ("commould","MouldName","rw","模块","","150","web.DHCMgNurSysComm","GetMould.RecQuery","sid",0,0);var stdate=new Ext.form.DateField({	name:'StDate',	id:'StDate',	//format:'Y-m-d',	tabIndex:'0',//	height:20,//	width:119,	xtype:'datefield',	value:new Date().add(Date.DAY, -7)});var eddate=new Ext.form.DateField({	name:'EndDate',	id:'EndDate',	//format:'Y-m-d',	tabIndex:'0',//	height:21,//	width:116,	xtype:'datefield',	value:new Date()});var WardLoc=new Ext.form.ComboBox({	name:'WardLoc',	id:'WardLoc',	typeAhead:true,	store:new Ext.data.Store({		proxy:new Ext.data.HttpProxy({			url:"../csp/dhc.nurse.ext.common.getdata.csp"		}),		reader:new Ext.data.JsonReader({			root:'rows',			totalProperty:'results',			fields:[{				'name':'LocDes',				'mapping':'LocDes'			},{				'name':'LocDr',				'mapping':'LocDr'			}]		}),		baseParams:{			className:'web.DHCMgNurSysComm',			methodName:'FindWardLoc',			type:'Query'		}	}),	listeners:{		    focus: {				fn: function (e) {				e.expand();				this.doQuery(this.allQuery, true);				},				buffer: 200			},			beforequery: function (e) {				var combo = e.combo;				var me = this;				if (!e.forceAll) {					var input = e.query;					var regExp = new RegExp("^" + input + ".*", "i");						combo.store.filterBy(function (record, id) {						var text = getPinyin(record.data[me.displayField]);						return regExp.test(text)|regExp.test(record.data[me.displayField]);					});					combo.expand();					combo.select(0, true);					return false;				}		    }	},	//tabIndex:'0',	listWidth:200,//	height:18,//	width:191,	xtype:'combo',	displayField:'LocDes',	valueField:'LocDr',	hideTrigger:false,	queryParam:'HsDr',	forceSelection:true,	triggerAction:'all',	minChars:1,	pageSize:10,	typeAhead:false,	typeAheadDelay:1000,	loadingText:'Searching...'});var chktyp=new Ext.form.ComboBox({	name:'ChkTyp',	id:'ChkTyp',	tabIndex:'0',	//height:20,	width:120,	xtype:'combo',	store:new Ext.data.JsonStore({		data:[{			desc:'护士长',			id:'Nur'		},{			desc:'大科护士长',			id:'LocNur'		},{			desc:'护理部',			id:'MasterNur'		}],		fields:['desc','id']	}),	displayField:'desc',	valueField:'id',	allowBlank:true,	mode:'local',	value:''});var getsschk=document.getElementById('getsschk');var NurTyp=cspRunServerMethod(getsschk.value, session['LOGON.USERID']);var QualScore=0;var QualWeight=0;var UserTyp=""function BodyLoadHandler(){	var myGridPl = Ext.getCmp('mygridpl'); 	myGridPl.setWidth(Width); 	myGridPl.setHeight(Height-30);	var getItmValue=document.getElementById('getItmValue');	if (NurTyp==0){}	if (NurTyp==1){		Ext.getCmp("ChkTyp").setValue("Nur");		Ext.getCmp("ChkTyp").disable();	}	if (NurTyp==2){		Ext.getCmp("ChkTyp").setValue("LocNur");		Ext.getCmp("ChkTyp").disable();	}	if (NurTyp==3){		Ext.getCmp("ChkTyp").setValue("MasterNur");		Ext.getCmp("ChkTyp").disable();	}	QualScore=cspRunServerMethod(getItmValue.value,CheckCode);	var grid=Ext.getCmp('mygrid');	grid.on('dblclick',function(){ModCheck(NurTyp);});	var mydate=new Date();	var tobar=grid.getTopToolbar();	var but1=Ext.getCmp("mygridbut1");	but1.hide();	var but=Ext.getCmp("mygridbut2");	but.hide();	var loctyp=Ext.getCmp("LocTyp");	var SortPos=Ext.getCmp("SortPos");	var gform=Ext.getCmp("gform");	tobar.addItem("-","类型",chktyp);	tobar.addItem("-","查询病区",WardLoc);	tobar.addItem("-","查询日期",stdate);	tobar.addItem("-",eddate);	tbar2=new Ext.Toolbar({});	tbar2.addItem("-");	tbar2.addButton({		text:"增加",		icon:'../images/uiimages/edit_add.png',		handler:function(){NewCheck(NurTyp);},		id:'btnnew'	});	tbar2.addItem("-");	tbar2.addButton({		text:"编辑",		handler:function(){ModCheck(NurTyp);},		icon:'../images/uiimages/pencil.png',		id:'btnmod'	});	tbar2.addItem("-");	tbar2.addButton({		text:"删除",		handler:function(){DelCheck();},		icon:'../images/uiimages/edit_remove.png',		id:'btndelete'	});	tbar2.addItem("-");	tbar2.addButton({		text:"快速输入(满分病区)",		icon:'../images/uiimages/updatediag.png',		handler:function(){QuickCheckIn();},		id:'btnquickin'	});	tbar2.addItem("-");	tbar2.addButton({		text:"查询",		icon:'../images/uiimages/search.png',		handler:function(){SchQual();},		id:'btnSch'	});	//tbar2.addItem("-");	tbar2.addButton({		text:"统计平均值",		handler:function(){SumAverage();},		id:'btnSum',		hidden:true,		icon:'../Image/icons/application_add.png'	});	grid.getBottomToolbar().hide();	var bbar2 = new Ext.PagingToolbar({		pageSize:30,		store:grid.store,		displayInfo:true,		displayMsg:'显示第 {0} 条到 {1} 条记录，一共 {2} 条',		emptyMsg:"没有记录"	});	tbar2.render(grid.tbar);	bbar2.render(grid.bbar);	tobar.doLayout();	WardLoc.store.on("beforeload", function() {		var laststr1=WardLoc.lastQuery		if (laststr1!=undefined)			WardLoc.store.baseParams.ward=laststr1;			WardLoc.store.baseParams.HsDr=1;			WardLoc.store.baseParams.typ="Ward";	});	var mygrid=Ext.getCmp("mygrid");	mygrid.store.on("beforeload",function(){		var stdate=Ext.getCmp("StDate").getValue();		if(!stdate){			Ext.Msg.alert('提示','查询开始日期不能为空！');			return;		}else{			if(stdate instanceof Date){				stdate = stdate.format('Y-m-d');				}		}		var eddate=Ext.getCmp("EndDate").getValue();		if(!eddate){			Ext.Msg.alert('提示','查询结束日期不能为空！');			return;		}else{			if(eddate instanceof Date){				eddate = eddate.format('Y-m-d');			}		}		var ward=Ext.getCmp("WardLoc").getValue();		var mygrid=Ext.getCmp("mygrid");		mygrid.store.baseParams.QualDr=CheckRoomId;		mygrid.store.baseParams.WardLoc=ward;		mygrid.store.baseParams.CheckCode=CheckCode;		mygrid.store.baseParams.SEDate=stdate+"^"+eddate;		mygrid.store.baseParams.typ=Ext.getCmp('ChkTyp').getValue();	});	//setsize("mygridpl","gform","mygrid",30);	document.onkeydown = BsKeyDown;	SchQual();	var len = grid.getColumnModel().getColumnCount();	for(var i = 0 ;i < len;i++){	 			if(grid.getColumnModel().getDataIndex(i) == 'rw'){			grid.getColumnModel().setHidden(i,true);		}  }}function SumAverage(){	var StDate=Ext.getCmp("StDate").value;	var EndDate=Ext.getCmp("EndDate").value;	var ward=Ext.getCmp("WardLoc").getValue();	var warddesc=Ext.getCmp("WardLoc").getRawValue();	var ChkTyp=Ext.getCmp("ChkTyp").getValue();	var GeAmount=document.getElementById('GeAmount');	var mygrid=Ext.getCmp("mygrid");	if (mygrid.store.getCount()==0) {		Ext.Msg.alert('提示', "请先选择查询，当前数据为空!");		return;	}	if (ward==""){		Ext.Msg.alert('提示',"请选择需要统计的科室!");		return;	}	var a=cspRunServerMethod(GeAmount.value,CheckRoomId,ward,ChkTyp,StDate,EndDate);	if(a==""){		Ext.Msg.alert('提示',"无质控记录数据!");		return;	}	additmstat(StDate);	mygrid.getSelectionModel().selectRow(mygrid.store.getCount()-1);	mygrid.getSelectionModel().getSelections()[0].set("ChkTyp",ChkTyp);	mygrid.getSelectionModel().getSelections()[0].set("WardLoc",warddesc);	mygrid.getSelectionModel().getSelections()[0].set("PatName","平均分");	mygrid.getSelectionModel().getSelections()[0].set("Score",a);	mygrid.getSelectionModel().getSelections()[0].set("Question",warddesc+"在"+StDate+"至"+EndDate+"的平均分");}function additmstat(statenddate,statendtime){	var grid=Ext.getCmp("mygrid");	var Plant=Ext.data.Record.create([{		name:'CareDate'	},{		name:'ChkTyp'	},{		name:'WardLoc'	},{		name:'PatName'	},{		name:'QualDesc'	},{		name:'Score'	},{		name:'CheckDate'	},{		name:'CheckUser'	},{		name:'Question'	},{		name:'rw'	}]);	var count=grid.store.getCount();	var r=new Plant({		CareDate:getDate(statenddate)	});	grid.store.commitChanges();	grid.store.insert(count,r);	return;}var MedCareNofunction BsKeyDown(){	if(document.all){		var iekey=window.event.keyCode;		if(iekey==13){			var itm=event.srcElement.id			if(event.srcElement.id=="MedCareNo"){				MedCareNo=Ext.getCmp("MedCareNo").getValue();				var num=8-MedCareNo.length				for(var i=0;i<num;i++){					MedCareNo="0"+MedCareNo				}				Ext.getCmp("MedCareNo").setValue(MedCareNo);				getPatName(MedCareNo);			}		}	}}function getPatName(No){	var PatName=document.getElementById('getPatName');	var Name=cspRunServerMethod(PatName.value,No);	Ext.getCmp("CheckPat").setValue(Name);}function SchQual(){	var mygrid=Ext.getCmp("mygrid");	//var chktyp=Ext.getCmp("ChkTyp").getValue();	mygrid.store.load({		params:{			start:0,			limit:30		}	});}//设置查询界面function setGrpLayout(NurTyp){	if(NurTyp=="1"){		cmbitm.add("WardLoc","ward");		Ext.getCmp("ChkTyp").setValue("Nur");		comboload1(Ext.getCmp("WardLoc"),session['LOGON.CTLOCID']);	}	if(NurTyp=="2"){		Ext.getCmp("ChkTyp").setValue("LocNur");		var getchktypPar=document.getElementById('getchktypPar');		var Par=cspRunServerMethod(getchktypPar.value,session['LOGON.USERID']);		cmbitm.add("WardLoc","Par");		comboload2(Ext.getCmp("WardLoc"),Par);	}	if(NurTyp=="3"){		Ext.getCmp("ChkTyp").setValue("MasterNur");	}}var cmbitm=new Hashtable();function comboload2(itm,val){	itm.getStore().baseParams[cmbitm.items(itm.id)]=val;	if(val!=""){		itm.getStore().load({			params:{				start:0,				limit:100			},			callback:function(){				itm.setValue(session['LOGON.CTLOCID']);			}		});	}}function comboload1(itm,val){	//itm.getStore().baseParams[cmbitm.items(itm.id)] = val;	if(val!=""){		itm.getStore().load({			params:{				start:0,				limit:100			},			callback:function(a,b,c){				itm.setValue(val);			}		});	}}function setCheckLayout(NurTyp){ // 设置评分界面的	if(NurTyp=="1"){		cmbitm.add("CheckWard","ward");		cmbitm.add("CheckUser","nur");		comboload1(Ext.getCmp("CheckUser"),session['LOGON.USERID']);		//comboload1(Ext.getCmp("CheckWard"),session['LOGON.CTLOCID']);	}	if(NurTyp=="2"){		var getchktypPar=document.getElementById('getchktypPar');		var Par=cspRunServerMethod(getchktypPar.value,session['LOGON.USERID']);		cmbitm.add("CheckWard","Par");		comboload2(Ext.getCmp("CheckWard"),Par);		cmbitm.add("CheckUser","nur");		comboload1(Ext.getCmp("CheckUser"),session['LOGON.USERID']);	}	if(NurTyp=="3"){		cmbitm.add("CheckUser","nur");		comboload1(Ext.getCmp("CheckUser"),session['LOGON.USERID']);	}}function grid1click(){	var grid=Ext.getCmp("mygrid1");	var rowObj=grid.getSelectionModel().getSelections();	if(rowObj.length==0){		// alert("请选择一条记录！");		return;	}	var sort=rowObj[0].get("SortPos");	var sortpos=Ext.getCmp("SortPos1");	sortpos.setValue(sort);}function ModCheck(NurTyp){	var grid=Ext.getCmp("mygrid");	var rowObj=grid.getSelectionModel().getSelections();	if(rowObj.length==0){		Ext.Msg.alert('提示',"请选择一条记录！");		return;	}	var Par=rowObj[0].get("rw");	CheckValue=new Hashtable();	CheckReason=new Hashtable();	CheckPeople=new Hashtable();	// CheckPeople = new Hashtable();	Check(NurTyp,Par);}function NewCheck(NurTyp){	Check(NurTyp,"");	CheckValue=new Hashtable();	CheckReason=new Hashtable();	CheckPeople=new Hashtable();	Ext.getCmp("CheckScore").setValue(QualScore);}function Check(NurTyp,Par){	var arr=new Array();	var a=cspRunServerMethod(pdata1,"","DHCMGNurCheckGrade","","");	arr=eval(a);	var pagesize=50;	window1=new Ext.Window({		title:'质控检查',		id:'gform2',		x:10,y:2,		width:850,		height:550,		autoScroll:true,		layout:'absolute',		modal:true,		items:arr,		resizable:false	});	window1.show();	//sm1.checkOnly =true;	CheckWard2=Ext.getCmp("CheckWard");	sm1.handleMouseDown=Ext.emptyFn;	//不响应MouseDown事件	var hd_checker = Ext.getCmp('mygrid1').getEl().select('div.x-grid3-hd-checker');	hd_checker.removeClass('x-grid3-hd-checker'); // 去掉全选框	sm1.on('rowselect',function(sm_,rowIndex,record){ // 行选中的时候		var CheckWard=Ext.getCmp("CheckWard").getValue();		if (CheckWard==""){			Ext.Msg.alert('提示',"请先选择检查病区");			iniform(pagesize);			return;		}		var row=record;		var itmvalue=parseFloat(row.get("ItemValue")).toFixed(2);		row.set("CheckScore",itmvalue);		numflag=isNaN(row.get("ItemValue"));		var numflag=isNaN(row.get("CheckScore"));		if (numflag==true)			row.set("CheckScore","");		if (numflag == true){			Ext.Msg.alert('提示',"分值类型不对！");			return;		}		var flag=row.get("MinLevel");		var ItemCode=row.get("ItemCode");		var ItemDesc=row.get("ItemDesc");		row.set("CheckMem",ItemDesc);		var CheckMem=row.get("CheckMem");		var People=row.get("CheckPeople");		if (flag=="N"){			row.set("CheckScore","");			row.set("CheckMem","");			Ext.Msg.alert('提示',"不能选小标题，请重新选择");			var mygrid=Ext.getCmp('mygrid1');			mygrid.getView().getRow(rowIndex).style.backgroundColor='#855E42';			//mygrid.getView().getRow(rowIndex).			return;		}		var checkscore=parseFloat(row.get("CheckScore")).toFixed(2);		if(parseFloat(checkscore)>parseFloat(itmvalue)){			row.set("CheckScore","");		}else{			// 扣分			if(CheckValue.contains(ItemCode)){				CheckValue.remove(ItemCode);			}else{			}			CheckValue.add(ItemCode,checkscore);		}		CheckReason.add(ItemCode,CheckMem);		if(CheckPeople.contains(ItemCode)){			CheckPeople.remove(ItemCode);		}else{		}		CheckPeople.add(ItemCode,People);		SetScore();	},this);	sm1.on('rowdeselect',function(sm_,rowIndex,record){	// 行未选中的时候		var row=record;		var ItemCode=row.get("ItemCode");		var CheckMem=row.get("CheckMem");		if (CheckValue.contains(ItemCode)){			CheckValue.remove(ItemCode);		}else{		}		//CheckReason.add(ItemCode);		CheckReason.remove(ItemCode);		if(CheckPeople.contains(ItemCode)){			CheckPeople.remove(ItemCode);		}else{		}		row.set("CheckScore","");		row.set("CheckMem","");		SetScore();	},this);	var myGridPl = Ext.getCmp('mygrid1pl');	myGridPl.setHeight(500);	myGridPl.setWidth(820);	Ext.getCmp("CheckUser").hide();	Ext.getCmp("B111").hide();//	var but1=Ext.getCmp("mygrid1but1");//	but1.hide();//	var but=Ext.getCmp("mygrid1but2");//	but.hide();	var grid=Ext.getCmp('mygrid1');	grid.getTopToolbar().hide();	grid.getBottomToolbar().hide();	var bbar2 = new Ext.PagingToolbar({		pageSize:1000,		store:grid.store,		displayInfo:true,		displayMsg:'显示第 {0} 条到 {1} 条记录，一共 {2} 条',		emptyMsg:"没有记录"	});	bbar2.render(grid.bbar);	bbar2.hide();	var len = grid.getColumnModel().getColumnCount();	for(var i = 0 ;i < len;i++){		if(grid.getColumnModel().getDataIndex(i) == 'rw'){			grid.getColumnModel().setHidden(i,true);		}		if(grid.getColumnModel().getDataIndex(i) == 'Par'){			grid.getColumnModel().setHidden(i,true);		}		if(grid.getColumnModel().getDataIndex(i) == 'MinLevel'){			grid.getColumnModel().setHidden(i,true);		}  }	var stdata=Ext.getCmp("mygrid1").store;	stdata.on('beforeload',function(){		stdata.baseParams.parr=CheckCode+"^"+Par;// Par被选中的行ID	})	Ext.getCmp('CheckWard').store.on('beforeload',function(){		var wardstore=Ext.getCmp('CheckWard').store;		var laststr2=Ext.getCmp('CheckWard').lastQuery		if(laststr2!=undefined)			wardstore.baseParams.ward=laststr2;		wardstore.baseParams.HsDr=1;		wardstore.baseParams.typ="Ward";	});	Ext.getCmp('CheckUser').store.on('beforeload',function(){		var CheckUser=Ext.getCmp('CheckUser').store;	});	var SearchPatBtn=Ext.getCmp('SearchPatBtn');	SearchPatBtn.setIcon('../images/uiimages/search.png');	SearchPatBtn.on('click', searchPat);	var btnSure=Ext.getCmp('btnSure');	btnSure.setText('保存');	btnSure.setIcon('../images/uiimages/filesave.png');	btnSure.on('click',function(){SureCheck(Par);});	if(CheckRoomId!=""){		var getVal=document.getElementById('getVal2');		var ret=cspRunServerMethod(getVal.value,CheckRoomId);		var ha=new Hashtable();		var tm=ret.split('^')		sethashvalue(ha,tm)		//var CheckDate1=ha.items("CheckStDate");		Ext.getCmp("CheckDate").setValue(ha.items("CheckStDate"));	}	if(Par!=""){		var grid=Ext.getCmp('mygrid');		var rowObj=grid.getSelectionModel().getSelections();		var getVal=document.getElementById('getVal');		var ret=cspRunServerMethod(getVal.value, Par);		var arr=ret.split('^');		cmbitm.add("CheckWard","ward");		cmbitm.add("CheckUser","nur");		comboload1(Ext.getCmp("CheckWard"),arr[1]);		var CheckUserStore = Ext.getCmp("CheckUser").getStore();		CheckUserStore.load();		comboload1(Ext.getCmp("CheckUser"), arr[3]);		Ext.getCmp("CheckScore").setValue(arr[2]);		Ext.getCmp("CheckPat").setValue(arr[4]);		Ext.getCmp("CheckDate").setValue(arr[0]);		Ext.getCmp("CheckDate").disable();	  Ext.getCmp("CheckWard").disable();		// Ext.getCmp("CheckUser").disable();		// setqualitmdata(Par);//初始化扣分值，与扣分原因	}//	var pagesize=50;	var cmb=Ext.getCmp("CheckWard");	cmb.on('select',function(){iniform(pagesize);});	if(Par=="")		setCheckLayout(NurTyp);	// grid.on("rowselect",afterEidt,grid)	grid.on("afteredit", afterEidt, grid);	Ext.getCmp('mygrid1').toolbars[1].pageSize=pagesize;	Ext.getCmp("mygrid1").store.load({params:{start:0,limit:pagesize},callback:function(){			var mygrid=Ext.getCmp('mygrid1');			var n=mygrid.getStore().getCount();			var store=mygrid.store;			var arrsel=new Array();			for(var j=0;j<n;j++){				var CheckScore = store.getAt(j).get("CheckScore");				if(CheckScore!=""){					arrsel[j]=j;				}				if(store.getAt(j).get("MinLevel")=="N")				{			    mygrid.getView().getRow(j).style.backgroundColor='#855E42';//  #A7FE2E				}			}			mygrid.getSelectionModel().selectRows(arrsel,true);		}	});}function iniform(pagesize){	Ext.getCmp("CheckScore").setValue(QualScore);	Ext.getCmp("mygrid1").store.load({		params:{			start:0,			limit:pagesize		},		callback:function(){			var mygrid=Ext.getCmp('mygrid1');			var n=mygrid.getStore().getCount();			var store=mygrid.store;			for(var j=0;j<n;j++){				if(store.getAt(j).get("MinLevel")=="N")				{			    mygrid.getView().getRow(j).style.backgroundColor='#855E42';				}			}		}				});	Ext.getCmp('CheckPat').setValue("");}function SetScore(){ // 计算得分	var Score=QualScore;	for(var i=0;i<CheckValue.keys().length; i++)// for...in statement	{		var key=CheckValue.keys()[i];		if(CheckValue.items(key)=="")			continue;		Score=Score-parseFloat(CheckValue.items(key)).toFixed(2);	}	if(Score!=NaN){		Ext.getCmp("CheckScore").setValue(Score);	}}function DelCheck(){	var grid=Ext.getCmp("mygrid");	var rowObj=grid.getSelectionModel().getSelections();	if(rowObj.length==0){		alert("请选择一条记录！");		return;	}	var Par = rowObj[0].get("rw");	var delQual=document.getElementById('delQual');	if (confirm('确定删除选中的项？')) {			var ret=cspRunServerMethod(delQual.value,Par);			SchQual();	}		}function SunXiao(){	var grid=Ext.getCmp("mygrid1");	var store=grid.store;	var rowCount=store.getCount(); // 记录数	var cm=grid.getColumnModel();	var colCount=cm.getColumnCount();	var list=[];	// for (var i = 0; i < store.getCount(); i++) {	// list.push(store.getAt(i).data);	// //debugger;	// }	var rowObj=grid.getSelectionModel().getSelections();	var len=rowObj.length;	for(var r=0;r<len;r++){		list.push(rowObj[r].data);	}	for(var i=0;i<list.length;i++){		var obj=list[i];		rw=obj["rw"];		des=obj["ItemValue"];		// additmItm("mygrid1",des,rw);	}}function additmItm(griditm,Qual,idrw){	var grid=Ext.getCmp(griditm);	var n=grid.getStore().getCount();	var store=grid.store;	for(var j=0;j<n;j++){		var rw=store.getAt(j).get("rw");		if(rw==idrw)			return;	}	var Plant=Ext.data.Record.create([]);			// the "name" below matches the tag name to read, except "availDate"			// which is mapped to the tag "availability"	var count=grid.store.getCount();	var r=new Plant({		Qual:Qual,		rw:idrw	});	grid.store.commitChanges();	grid.store.insert(count,r);	return;}function SureCheck(CheckPar){	var CheckDate=Ext.getCmp("CheckDate").getValue();	if(!CheckDate){		Ext.Msg.alert('提示','检查日期不能为空！');		return;	}else{		if(CheckDate instanceof Date){			CheckDate = CheckDate.format('Y-m-d');		}	}	var CheckUser=Ext.getCmp("CheckUser").getValue();	var CheckWard=Ext.getCmp("CheckWard").getValue();	var ChkTyp=Ext.getCmp("ChkTyp").getValue();	var CheckScore=Ext.getCmp("CheckScore").getValue();	var CheckPat=Ext.getCmp("CheckPat").getValue();	if(CheckWard==""){		Ext.Msg.alert('提示',"检查病区不能为空！");		return;	}	if(CheckUser==""){     CheckUser=session['LOGON.USERID'];		//alert("检查者不能为空！");		//return;	}	if(NurTyp=="1"){		NurTyp="Nur";	}	if(NurTyp=="2"){		NurTyp="LocNur";	}	if(NurTyp=="3"){		NurTyp="MasterNur";	}	//SunXiao();	var chkval="";	var checkreason="";	var checkpeople="";	for(var i=0;i<CheckValue.keys().length;i++){		var key=CheckValue.keys()[i];		chkval=chkval+key+"|"+CheckValue.items(key)+"^";	}	for(var i=0;i<CheckReason.keys().length;i++){		var key=CheckReason.keys()[i];		checkreason=checkreason+key+"|"+CheckReason.items(key)+"^";	}	for(var i=0;i<CheckPeople.keys().length;i++){		var key=CheckPeople.keys()[i];		checkpeople=checkpeople+key+"|"+CheckPeople.items(key)+"^";	}	var SaveQual=document.getElementById('SaveQual');	CheckPar=cspRunServerMethod(SaveQual.value,CheckDate,CheckUser,CheckTyp,CheckCode,CheckWard,CheckScore,"",CheckPat,CheckPar,CheckRoomId,"","",NurTyp);	if(CheckPar=="Room"){		Ext.Msg.alert('提示',"该质控类型,被检查科室已经评分不能重复评分!");		return;	}	if(CheckPar!=""){		var SaveQualItem=document.getElementById('SaveQualItem');		CheckPar=cspRunServerMethod(SaveQualItem.value,CheckCode,chkval,checkreason,CheckPar,checkpeople);	}	window1.close();	SchQual();}/* * grid.on("afteredit",afterEidt,grid); //EditorGridPanel的afteredit事件 *  * function afterEidt(e){ e.row;;//修改过的行从0开始 e.column;//修改列 * e.originalValue;//原始值 e.value;//修改后的值 e.grid;//当前修改的grid e.field;//正在被编辑的字段名 * e.record;//正在被编辑的行 } var row = e.record; var price = row.get("price"); var * totalPrice = parseInt(e.value) * price; totalPrice = * parseFloat(totalPrice).toFixed(2); * row.set(e.grid.getColumnModel().getDataIndex(7), totalPrice); 1.var * classificationRadioGroup = Ext.getCmp('classifications'); 2. var * classifications = ""; 3. classificationRadioGroup.eachItem(function(item){ 4. * if(item.checked == true){ 5. classifications += item.inputValue+";"; 6. } 7. * }); *  *  * var sex=Ext.getCmp('selectsex'); 2 sex.eachItem(function(item){ 3 * if(item.checked===true){ 4 alert(item.inputValue);5 } 6 }); * Ext.override(Ext.form.RadioGroup, { getValue: function(){ var v; if * (this.rendered) { this.items.each(function(item){ if (!item.getValue()) * return true; v = item.getRawValue(); return false; }); } else { for (var k in * this.items) { if (this.items[k].checked) { v = this.items[k].inputValue; * break; } } } return v; }, setValue: function(v){ if (this.rendered) * this.items.each(function(item){ item.setValue(item.getRawValue() == v); }); * else { for (var k in this.items) { this.items[k].checked = * this.items[k].inputValue == v; } } } }); */var CheckValue=new Hashtable();var CheckReason=new Hashtable();var CheckPeople=new Hashtable();function setqualitmdata(Par){	var getval=document.getElementById('getqualitmdata');	var ret=cspRunServerMethod(getval.value,Par);	var tm=ret.split('^')	for(var i=0;i<tm.length;i++){		if(tm[i]=="")			continue;		var arr=tm[i].split('|');		CheckValue.add(arr[0],arr[2]);		CheckReason.add(arr[0],arr[1]);		CheckPeople.add(arr[0],arr[3])	}}function afterEidt(e) { // 拿到选中的列 ,下面是在editGridPanel中	// var record = grid.getSelectionModel().selection.record;	// 如果是在GridPanel中，拿到record的方法为如下	// var record = grid.getSelectionModel().getSelected();	// 调用record的set方法格式为	// record.set(名称,值)	// 其中名称是dataindex对应的值。	// alert(e);	// 最后提交以下	// record.commit()	var row=e.record;	if(row.get("CheckScore")=="")		return;	var itmvalue=parseFloat(row.get("ItemValue")).toFixed(2);	var numflag=isNaN(row.get("CheckScore"));	if(numflag==true)		row.set("CheckScore","");	numflag=isNaN(row.get("ItemValue"));	if(numflag == true){		alert("分值类型不对！");		return;	}	var flag=row.get("MinLevel");	var ItemCode=row.get("ItemCode");	var CheckMem=row.get("CheckMem");	var People=row.get("CheckPeople");	if (flag=="N")		row.set("CheckScore","");	var checkscore=parseFloat(row.get("CheckScore")).toFixed(2);	if(parseFloat(checkscore)>parseFloat(itmvalue)){		row.set("CheckScore","");	}else{		//扣分		if(CheckValue.contains(ItemCode)){			CheckValue.remove(ItemCode);		}else{		}		CheckValue.add(ItemCode,checkscore);	}	// 扣分原因	if(CheckReason.contains(ItemCode)){		CheckReason.remove(ItemCode);	}else{	}	CheckReason.add(ItemCode, CheckMem);	if(CheckPeople.contains(ItemCode)){		CheckPeople.remove(ItemCode);	}else{	}	CheckPeople.add(ItemCode,People);	SetScore();}var window1;function QuickCheckIn() {	var arr=new Array();	//var DHCMgNurCheckQuickInT103=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"../csp/dhc.nurse.ext.common.getdata.csp"}),reader:new Ext.data.JsonReader({root:'rows',totalProperty:'results',fields:[{'name':'LocDes','mapping':'LocDes'},{'name':'LocDr','mapping':'LocDr'}]}),baseParams:{className:'web.DHCMgNurSysComm',methodName:'FindWardLoc',type:'Query'}});	var DHCMgNurCheckQuickIn2T104=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:"../csp/dhc.nurse.ext.common.getdata.csp"}),reader:new Ext.data.JsonReader({root:'rows',totalProperty:'results',fields:[{'name':'LocDes','mapping':'LocDes'},{'name':'LocDr','mapping':'LocDr'}]}),baseParams:{className:'web.DHCMgNurSysComm',methodName:'FindWardLoc',type:'Query'}});	// 录入界面	var a=cspRunServerMethod(pdata1,"","DHCMgNurCheckQuickIn2","","");	arr=eval(a);	var window=new Ext.Window({		title:'快速评分',		id:'gform3',		x:150,y:2,		width:365,height:400,		autoScroll:true,		layout:'absolute',		modal:true,		resizable:false,		items:[arr]	});	window.show();	var gridPl2 = Ext.getCmp('mygrid2pl');	gridPl2.setHeight(297);	var grid=Ext.getCmp('mygrid2');	grid.getTopToolbar().hide()	var but1=Ext.getCmp("mygrid2but1");	but1.hide();	var but=Ext.getCmp("mygrid2but2");	but.hide();	var btnSure=Ext.getCmp('btnSure');	btnSure.setText('保存');	btnSure.setIcon('../images/uiimages/filesave.png');	btnSure.on('click',function(){quickSure(window);});	Ext.getCmp('CheckDate').setValue(new Date());	Ext.getCmp('mygrid2').store.on('beforeload',function(){		var hsdr=1;		var mygrid=Ext.getCmp('mygrid2');		mygrid.store.baseParams.HsDr=hsdr;		mygrid.store.baseParams.typ='Ward';	});	cmbitm.add('CheckUser','nur');	//comboload1(Ext.getCmp('CheckUser'),session['LOGON.USERID']);	Ext.getCmp('CheckUser').store.on("beforeLoad",function(){    	var CheckUser=Ext.getCmp('CheckUser').store;    	CheckUser.baseParams.Par=CheckRoomId;  }); // var grid=Ext.getCmp('mygrid2');  var bbar = grid.getBottomToolbar ();	bbar.hide();	var bbar2 = new Ext.PagingToolbar({		pageSize:30,		store:grid.store,		displayInfo:true,		displayMsg:'显示第 {0} 条到 {1} 条记录，一共 {2} 条',		emptyMsg:"没有记录"	});	bbar2.render(grid.bbar);	setgrid();}function quickSure(win) {	var grid=Ext.getCmp("mygrid2");	var store=grid.store;	var rowCount=store.getCount(); // 记录数	var cm=grid.getColumnModel();	var colCount=cm.getColumnCount();	var list=[];	var CheckDate=Ext.getCmp("CheckDate").getValue();	if(CheckDate && CheckDate  instanceof Date){		CheckDate = CheckDate.format('Y-m-d');	}	var CheckUser=Ext.getCmp("CheckUser").getValue();	//var CheckTyp=Ext.getCmp("CheckTyp").getValue();	var CheckScore=QualScore;	if(CheckUser==""){		Ext.Msg.alert('提示',"检查者不能为空！");		return;	}	var rowObj=grid.getSelectionModel().getSelections();	var len=rowObj.length;	for(var r=0;r<len;r++){		list.push(rowObj[r].data);	}	var SaveQt=document.getElementById('SaveMulitms');	var rw="";	var str="";	for(var i=0;i<list.length;i++){		var obj=list[i];		rw=obj["LocDr"];		str=str + rw + "^";	}	if(str!=""){		//alert(CheckUser+"^"+str+"^"+CheckCode+"^"+CheckDate+"^"+CheckTyp+"^"+CheckScore+"^"+CheckRoomId)		var a=cspRunServerMethod(SaveQt.value,CheckUser,str,CheckCode,CheckDate,CheckTyp,CheckScore,CheckRoomId,NurTyp);		if(a!=0) {			SchQual();		}	}	win.close();}function setgrid() {	/*	 * var grid = Ext.getCmp("mygrid"); var	 * GetQueryData=document.getElementById('GetQueryData'); arrgrid=new	 * Array(); var a = cspRunServerMethod(GetQueryData.value,	 * "web.DHCNurHDCodeComm:HDMode", "","AddRec");	 * grid.store.loadData(arrgrid);	 */	var grid1=Ext.getCmp("mygrid2");	grid1.store.load({		params:{			start:0,			limit:30		}	});}var CurrSelItm = "";function SaveItm(){	ret="";	checkret="";	comboret="";	var Save=document.getElementById('Save');	var gform=Ext.getCmp("gform2");	gform.items.each(eachItem, this);	// var rw=cspRunServerMethod(getemrcodeid.value,code,NurRecId);	// var parr=ret+"&"+checkret+"&"+comboret;	var parr="rw|"+CurrSelItm+"^Par|"+curmenuid+"^"+ret+"^"+checkret+"^"+comboret;	// return;	// var	// id=cspRunServerMethod(SaveExam.value,"id|"+ret+"^CTLocDr|"+session['LOGON.CTLOCID']+"^"+checkret+"^"+comboret);	// //+"^UserDr|"+session['LOGON.USERID']	var row=cspRunServerMethod(Save.value,parr);	// win.close();	Ext.getCmp("mygrid2").store.load({		params:{			start:0,			limit:10,			Par:curmenuid		}	});	return;}function itmAdd(){	CurrSelItm = ""	SaveItm();}function itmMod(){	if(CurrSelItm=="")		return;	SaveItm();}function clearscreen(){	Ext.getCmp("ItemDesc").setValue("");	Ext.getCmp("ItemCode").setValue("");	Ext.getCmp("ItemLevel").setValue("");	Ext.getCmp("ItemMem").setValue("");	Ext.getCmp("ItemValue").setValue("");	setbutstatus(0);}function setbutstatus(flag){	var but1=Ext.getCmp("butSave");	var but=Ext.getCmp("butMod");	var but2=Ext.getCmp("butClear");	if(flag==0){		but.disable();		but1.enable();	}else{		but1.disable();		but.enable();	}}function griddblclick(){	var grid=Ext.getCmp("mygrid2");	var rowObj=grid.getSelectionModel().getSelections();	var len=rowObj.length;	var list=[];	if(rowObj.length==0){		return;	}	CurrSelItm=rowObj[0].get("rw");	setbutstatus(1);	for(var r=0;r<len;r++){		list.push(rowObj[r].data);	}	for(var i=0;i<list.length;i++){		var obj=list[i];		for(var p in obj){			var itm=Ext.getCmp(p);			if(itm!=undefined)				itm.setValue(obj[p]);		}	}}function setvalue(menid){	var ha=new Hashtable();	var getval=document.getElementById('getVal');	var ret=cspRunServerMethod(getval.value, menid);	var tm=ret.split('^')	sethashvalue(ha,tm)	// debugger;	// var tm1=ret.split('^')	// sethashvalue(ha,tm1);	var gform=Ext.getCmp("gform2");	gform.items.each(eachItem, this);	for(var i=0;i<ht.keys().length;i++)// for...in statement get all of	// Array's index	{		var key=ht.keys()[i];		// restr += ht.items(key) + " " + ht.parent[key] + "<br/>";		if(key.indexOf("_")==-1){			var itm=Ext.getCmp(key);			if(ha.contains(key))				if(itm.xtype=="combo"){					comboload(itm,ha.items(key));				}else{					itm.setValue(ha.items(key));				}		}else{			var aa=key.split('_');			if(ha.contains(aa[0])){				setcheckvalue(key, ha.items(aa[0]));			}		}	}}function comboload(itm,str){	var aa=str.split('!');	var par=itm.id;	if(aa.length<2){		itm.setValue(str);		return;	}	if(str!=""){		itm.getStore().load({			params:{				start:0,				limit:10,				locdes:aa[0]			},			callback:function(){				itm.setValue(aa[1])			}		});	}}function Save(win,menuid){	ret="";	checkret="";	comboret="";	var Save=document.getElementById('Save2');	var gform=Ext.getCmp("gform2");	gform.items.each(eachItem,this);	// var rw=cspRunServerMethod(getemrcodeid.value,code,NurRecId);	// var parr=ret+"&"+checkret+"&"+comboret;	var parr="rw|"+menuid+"^"+ret+"^"+checkret+"^"+comboret;	// var id=cspRunServerMethod(SaveExam.value,"id|"+ret+"^CTLocDr|"+session['LOGON.CTLOCID']+"^"+checkret+"^"+comboret);	// //+"^UserDr|"+session['LOGON.USERID']	menuid=cspRunServerMethod(Save.value,parr);	curmenuid=menuid;	win.close();	loadgrid();	return;}function setgrid1(){	/*	 * var grid = Ext.getCmp("mygrid"); var	 * GetQueryData=document.getElementById('GetQueryData'); arrgrid=new	 * Array(); var a = cspRunServerMethod(GetQueryData.value,	 * "web.DHCNurHDCodeComm:HDMode", "","AddRec");	 * grid.store.loadData(arrgrid);	 */	var mygrid = Ext.getCmp("mygrid1");	// var parr = getParameters()	// alert(parr);	// debugger;	mygrid.store.load({		params:{			start:0,			limit:10		}	});}function additm(){	var grid=Ext.getCmp('mygrid1');	var Plant=Ext.data.Record.create([]);			// the "name" below matches the tag name to read, except "availDate"			// which is mapped to the tag "availability"	var count=grid.store.getCount();	var r=new Plant();	grid.store.commitChanges();	grid.store.insert(count,r);	return;}function setSelItem(){	var loctyp=Ext.getCmp("LocTyp1").getValue();	var hsdr=1;	var mygrid=Ext.getCmp("mygrid");	var getselloc=document.getElementById('getselloc');	var a=cspRunServerMethod(getselloc.value,hsdr,loctyp);	mygrid.getSelectionModel().clearSelections();	if(a!=""){		var ha=new Hashtable();		var arr=a.split('^');		for(var i=0;i<arr.length;i++){			ha.add(arr[i],arr[i]);		}		var n=mygrid.getStore().getCount();		var store=mygrid.store;		var arrsel=new Array();		for(var j=0;j<n;j++){			var LocDr=store.getAt(j).get("LocDr");			if(ha.contains(LocDr)){				arrsel[j]=j;			}		}		mygrid.getSelectionModel().selectRows(arrsel,true);	}}function typdelete(){	var grid=Ext.getCmp("mygrid");	var rowObj=grid.getSelectionModel().getSelections();	var len=rowObj.length;	if(len==0){		Ext.Msg.alert('提示',"请先选择一行!");		return;	};	var QtDelete=document.getElementById('QtDelete');	if(QtDelete){		var id=rowObj[0].get("rw");		var ee=cspRunServerMethod(QtDelete.value,id);		if(ee!="0"){			alert(ee);			return;		}	}	setgrid();};function searchPat() {	var CheckWard = Ext.getCmp('CheckWard').getValue();	if (!CheckWard) {		alert('请先选择病区！');		return;	}	var Patstore = new Ext.data.Store({			proxy : new Ext.data.HttpProxy({				url : "../csp/dhc.nurse.ext.common.getdata.csp"			}),			reader : new Ext.data.JsonReader({				root : 'rows',				totalProperty : 'results',				fields : [{						'name' : 'PapNo',						'mapping' : 'PapNo'					}, /* {						'name' : 'Adm',						'mapping' : 'Adm'					}, {						'name' : 'HisNo',						'mapping' : 'HisNo'					},  */{						'name' : 'Patient',						'mapping' : 'Patient'					}, {						'name' : 'BedNo',						'mapping' : 'BedNo'					}, {						'name' : 'Diagnos',						'mapping' : 'Diagnos'					}				]			}),			baseParams : {				className : 'web.DHCNurHBComm',				methodName : 'FindPatients',				type : 'RecQuery',				parr : CheckWard			}		});	var winPat = new Ext.Window({			title : '在院患者',			id : 'winPat',			width : 700,			height : 500,			autoScroll : true,			layout : 'absolute',			modal : true,			resizable : false,			items : [new Ext.grid.GridPanel({					id : 'patgrid',					name : 'patgrid',					loadMask : true,					stripeRows : true,					height : 530,					width : '100%',					store : Patstore,					colModel : new Ext.grid.ColumnModel({						columns : [new Ext.grid.RowNumberer(), {								header : '登记号',								dataIndex : 'PapNo',								width : 100							}, /* {								header : '就诊号',								dataIndex : 'Adm',								width : 100							}, {								header : '住院号',								dataIndex : 'HisNo',								width : 100							}, */ {								header : '姓名',								dataIndex : 'Patient',								width : 100							}, {								header : '床号',								dataIndex : 'BedNo',								width : 100							}, {								header : '诊断',								dataIndex : 'Diagnos',								width : 300							}						],						defaultSortable : false,						enableColumnMove : false,						viewConfig : {							forceFit : true						}					}),					bbar : new Ext.PagingToolbar({						store : Patstore,						displayInfo : true,						pageSize : 20					})				})			],			buttons : [{					text : '确定',					id : 'btnPatSave',					icon:'../images/uiimages/filesave.png',					handler : function () {						funPatSure();					}				}, {					text : '取消',					id : 'btnPatCancel',					icon:'../images/uiimages/cancel.png',					handler : function () {						winPat.close();					}				}			]		});	winPat.show();	Patstore.load({		baseParams : {			start : 0,			limit : 20		}	});}function funPatSure() {	var records = Ext.getCmp('patgrid').getSelectionModel().getSelections();	if (records.length == 0) {		return;	}	var record = records[0];	Ext.getCmp('CheckPat').setValue(record.get('PapNo'));	Ext.getCmp('winPat').close();}