var locdata = new Array(); var arrtim=new Array(); var Turmbledata = new Array(); var TurmbleDYdata = new Array();addTurmble("是","是") addTurmble("否","否")addTurmble("全部","全部") addTurmbleDY("是","是") addTurmbleDY("否","否")addTurmbleDY("全部","全部")cspRunServerMethod(GetWardLoc, 'addloc'); var getScore=document.getElementById('getScore');cspRunServerMethod(getScore.value, 'addtmp');function addTurmbleDY(a, b) {	TurmbleDYdata.push({				TurmbleDY : a,				TurmbledesDY : b			});}function addTurmble(a, b) {	Turmbledata.push({				Turmble : a,				Turmbledes : b			});}var TurmbleDYloc = new Ext.data.JsonStore({			data : TurmbleDYdata,			fields : ['TurmbleDY', 'TurmbledesDY']		});var Turmbleloc = new Ext.data.JsonStore({			data : Turmbledata,			fields : ['Turmble', 'Turmbledes']		});function AddRec(str){	var obj = eval('(' + str + ')');	REC.push(obj);}function addtmp(a, b) {	arrtim.push({				idv : a,				des : b 				});  } var storeloc = new Ext.data.JsonStore({			data : locdata,			fields : ['loc', 'locdes']		});function addloc(a, b) {	locdata.push({				loc : a,				locdes : b			});} var storetim = new Ext.data.JsonStore({			data : arrtim,			fields : ['idv', 'des']		});var ScoreField = new Ext.form.ComboBox({			id : 'DHCNURImpressScoreS',			hiddenName : 'DHCNURImpressScore1',			store : storetim,			width : 150,			//editable:false,			triggerAction:'all',			fieldLabel : '分值范围',			valueField : 'idv',			displayField : 'des',			allowBlank : true,			mode : 'local',			anchor : '100%'		}); 		var TurmbleField = new Ext.form.ComboBox({			id : 'Turmblesys',			hiddenName : 'Turmble1',			store : Turmbleloc,			width : 60,			fieldLabel : '是否发生压疮',			valueField : 'Turmble',			displayField : 'Turmbledes',			allowBlank : true,			mode : 'local',			anchor : '100%'		}); 		var TurmbleDYField = new Ext.form.ComboBox({			id : 'TurmbleDYsys',			hiddenName : 'TurmbleDY1',			store : TurmbleDYloc,			width : 60,			fieldLabel : '是否带入压疮',			valueField : 'TurmbleDY',			displayField : 'TurmbledesDY',			allowBlank : true,			mode : 'local',			anchor : '100%'		});//护理单元var comboboxDep = new Ext.form.ComboBox({	name : 'comboboxDep',	id : 'comboboxDep',	store : new Ext.data.Store({		proxy : new Ext.data.HttpProxy({			url : "../csp/dhc.nurse.ext.common.getdata.csp"		}),		reader : new Ext.data.JsonReader({			root : 'rows',			totalProperty : 'results',			fields : [{				'name' : 'ctlocDesc',				'mapping' : 'ctlocDesc'			}, {				'name' : 'CtLocDr',				'mapping' : 'CtLocDr'			}]		}),		baseParams : {			className : 'web.DHCNurHCRecComm',			methodName : 'Wardgetloc',			type : 'Query'		}	}),		listeners:{		    focus: {				fn: function (e) {				e.expand();				this.doQuery(this.allQuery, true);				},				buffer: 200			},			beforequery: function (e) {				var combo = e.combo;				var me = this;				if (!e.forceAll) {					var input = e.query;					var regExp = new RegExp("^" + input + ".*", "i");						combo.store.filterBy(function (record, id) {						var text = getPinyin(record.data[me.displayField]);						return regExp.test(text)|regExp.test(record.data[me.displayField]); 					});					combo.expand();					combo.select(0, true);					return false;				}		    }	},	//tabIndex : '0',	listWidth : 280,//	height : 18,	width : 270,	xtype : 'combo',	displayField : 'ctlocDesc',	valueField : 'CtLocDr',	hideTrigger : false,	queryParam : 'ward1',	forceSelection : true,	triggerAction : 'all',	minChars : 1,	pageSize : 10,	typeAhead : false,	typeAheadDelay : 1000,	loadingText : 'Searching...'});  var locField = new Ext.form.ComboBox({			id : 'locsys',			hiddenName : 'loc1',			store : storeloc,			width : 200,			fieldLabel : '病区',			valueField : 'loc',			displayField : 'locdes',			allowBlank : true,			mode : 'local',			anchor : '100%'		});function BodyLoadHandler() { 	  	 var but1 = Ext.getCmp("DHCNURANHUI11gridbut1");	 but1.hide();	 var but2 = Ext.getCmp("DHCNURANHUI11gridbut2");	 but2.hide();        Ext.override(Ext.grid.RowSelectionModel, {			onEditorKey : function(F, E) {				var C = E.getKey(), G, D = this.grid, B = D.activeEditor;				var A = E.shiftKey; 				//debugger;        if (C == E.RIGHT) {        // alert();        E.stopEvent();        B.completeEdit();        G = D.walkCells(B.row,B.col+1, 1, this.acceptsNav,this);        }               if (C == E.LEFT) {        // alert();        E.stopEvent();        B.completeEdit();        G = D.walkCells(B.row,B.col-1, 1, this.acceptsNav,this);        }       if (C == E.DOWN) {       // alert();       E.stopEvent();       B.completeEdit();       G = D.walkCells(B.row+1,4, 1, this.acceptsNav,this);       }             if (C == E.UP) {       // alert();       E.stopEvent();       B.completeEdit();       G = D.walkCells(B.row-1,4, 1, this.acceptsNav,this);       }        				if (C == E.TAB) {					E.stopEvent();					B.completeEdit();					if (A) {						G = D.walkCells(B.row, B.col - 1, -1, this.acceptsNav,								this);					} else {						G = D.walkCells(B.row, B.col + 1, 1, this.acceptsNav,								this);					}				} else {					if (C == E.ENTER) {						E.stopEvent();						// alert(B);						B.completeEdit();						if (this.moveEditorOnEnter !== false) {							if (A) {								// G = D.walkCells(B.row - 1, B.col, -1,								// this.acceptsNav,this)								G = D.walkCells(B.row, B.col - 1, -1,										this.acceptsNav, this);							} else {								// G = D.walkCells(B.row + 1, B.col, 1,								// this.acceptsNav,this)								G = D.walkCells(B.row, B.col + 1, 1,										this.acceptsNav, this);							}						}					} else {						if (C == E.ESC) {							B.cancelEdit();						}					}				}				if (G) {					D.startEditing(G[0], G[1]);				}			}		});    var sm2 = new Ext.grid.RowSelectionModel({           moveEditorOnEnter: true,           singleSelect: true,           listeners: {               //rowselect : function(sm, row, rec) {                   //centerForm.getForm().loadRecord(rec);              // }           }         });                 	 setsize("DHCNURANHUI11gridpl", "gform", "DHCNURANHUI11grid"); 	 grid = Ext.getCmp('DHCNURANHUI11grid');      var len = grid.getColumnModel().getColumnCount();		for (var i = 0; i < len; i++) {			if (grid.getColumnModel().getDataIndex(i) == 'Tid') {				grid.getColumnModel().setHidden(i, true);			}		}   grid.addListener('rowdblclick', rowdblclickFn);                                  var mydate = new Date();	 var tobar = grid.getTopToolbar();	 tobar.addItem ("-");	  tobar.addItem({		xtype:'datefield',		//format: 'Y-m-d',		id:'DHCNURANHUI11gridstartdate',		value:(diffDate(new Date(),-1))		}, '-',{		xtype:'datefield',		//format: 'Y-m-d',		id:'DHCNURANHUI11gridenddate',		value:(diffDate(new Date(),0))	}); 	 tobar.addItem ("-");	 tobar.addItem('病区', comboboxDep); 	 tobar.addItem ("-");	 tobar.addItem('分值上限', ScoreField); 	// tobar.addItem('是否发生压疮', TurmbleField); 	// tobar.addItem('是否带入压疮', TurmbleDYField);  grid.addListener('rowcontextmenu', rightClickFn);    var dep=Ext.getCmp('comboboxDep'); 	dep.store.on("beforeLoad",function(){		var wardstore=dep.store;		var str=dep.lastQuery		wardstore.baseParams.ward=str; 		}); 	var comboboxDepStore=Ext.getCmp('comboboxDep').getStore();	comboboxDepStore.load({params:{start:0,limit:2000}}); 		/* tobar.addItem ("-");  	tobar.addButton(		  {			className: 'new-topic-button',			text: "查询",			handler:find,			id:'DHCNURANHUI11gridSch'		  }); */	tbar2=new Ext.Toolbar({	});	//tbar2.addItem('病区', comboboxDep); 	//tbar2.addItem('分值上限', ScoreField); 	tbar2.addItem ("-");	tbar2.addItem('是否发生压疮', TurmbleField); 	tbar2.addItem ("-");	tbar2.addItem('是否带入压疮', TurmbleDYField);	tbar2.addItem ("-");  	tbar2.addButton(		  {			className: 'new-topic-button',			text: "查询",			handler:find,			id:'DHCNURANHUI11gridSch'		  });	tbar2.render(grid.tbar);}var rightClick = new Ext.menu.Menu(  { 	   id : 'rightClickCont',     items : [             {                id:'rMenu1',                text : '作废',                handler:DelteRecord            }       ]    }); function DelteRecord(){ 	var objDelteRecord=document.getElementById('DelteRecord'); 	var objRow=grid.getSelectionModel().getSelections();  if (objRow.length == 0) { alert("请先选择一条压疮记录!"); return; }  else	{		var flag=confirm("你确定要作废此条压疮记录吗?作废后不可恢复");		if(flag)		{			var adm=objRow[0].get("Tadm"); 			var Tid=objRow[0].get("Tid"); 	        if (objDelteRecord) { 	        var a = cspRunServerMethod(objDelteRecord.value ,adm,Tid,"DHCNURANHUI9",session['LOGON.USERID']); 	        if (a!=0){						alert(a);						return;					}			else{					find();				}                     } 		}     }}  function setvalue(id,EpisodeID,e){	var ha = new Hashtable();  if (id != "")   {   	//alert("1");   	var getVal = document.getElementById('getVal');   	var ret = cspRunServerMethod(getVal.value, id);    var tm = ret.split('^');		sethashvalue(ha, tm);  } 	else 	{				//getPatInfo();				return;	}  	// debugger;         	 var gform=Ext.getCmp("gform");   gform.items.each(eachItem, this);  	 //  alert(a);	for (var i=0 ; i<ht.keys().length;i++)//for...in statement get all of Array's index	{		var key = ht.keys()[i]; 		//restr += ht.items(key) + " " + ht.parent[key] + "<br/>";		if (key.indexOf("_") == -1) 		{			//alert(key);			var flag=ifflag(key );			//alert(flag);			if (flag==true)			{				if (ha.contains(key)) setVal2(key ,ha.items(key));				//debugger;				continue;			} 						var flag=ifflag1(key );			if (flag==true)			{				if (ha.contains(key)) setVal2(key ,ha.items(key));				//debugger;				continue;			} 						var flag=ifflag2(key );			if (flag==true)			{				if (ha.contains(key)) setVal2(key ,ha.items(key));				//debugger;				continue;			} 						var itm = Ext.getCmp(key);			if (ha.contains(key)) 			itm.setValue(getval(ha.items(key)));				    }else{			var aa=key.split('_'); 			if(ha.contains(aa[0]))			{			  setcheckvalue(key,ha.items(aa[0]));			}		}    }    //find(); }   function rowdblclickFn(grid, rowIndex, e)  {          //alert(EpisodeID);   	        //alert(id);	        	        //var a = cspRunServerMethod(pdata1, "", "DHCNURANHUI10", EpisodeID, ""); 	        //var a=cspRunServerMethod(getid.value,"DHCNURANHUI10",EpisodeID);	        //arr = eval(a);  	        //if (id != "")           //{            //var getVal = document.getElementById('getVal');   	        //var ret = cspRunServerMethod(getVal.value, id);            //var tm = ret.split('^');             //alert(tm);                        //sethashvalue(ha, tm);          //}	           //var window = new Ext.Window({		      //title: '跌倒坠床上报',		      //width: 850,		      //height: 650,		      //autoScroll: true,		      //layout: 'absolute',		      //plain: true,		      //frame:true,		  		//items:arr	       //});	      //setvalue(id,EpisodeID)        //window.show();                    //alert('你单击了' + rowIndex);          selections = grid.getSelectionModel().getSelections(); 	        var arr = new Array();   	        EpisodeID=grid.store.getAt(rowIndex).get("Tadm");  	        var id=grid.store.getAt(rowIndex).get("Tid"); 			//alert(id)	 	         var lnk= "DHCNurEmrComm.csp?"+"&EmrCode=DHCNURANHUI9"+"&EpisodeID="+EpisodeID+"&NurRecId="+id; 	        //var lnk= "dhcnuremrcomm.csp?"+"&EmrCode=DHCNURANHUI9&EpisodeID="+EpisodeID+"&NurRecId="+id;  	         	        window.open(lnk,"htm",'toolbar=no,location=no,directories=no,resizable=yes,width=860,height=700'); }function rightClickFn(client, rowIndex, e)  {          e.preventDefault();          grid=client;		  CurrRowIndex=rowIndex;          rightClick.showAt(e.getXY());            }  function PrintCareRecord1(){	alert("odj2");	//var w=window.parent.parent;	 //alert(w.frames.length);	 //var len=w.frames.length;	 //var PrintComm=w.frames["eprmenu"].document.getElementById("PrintComm");	 //PrintComm.value="PrintComm.PrintCom"	 //var PrintComm=document.getElementById("PrintComm");	 //alert(PrintComm);	// for (i=0;i<len;i++)	// {	//  alert(w.frames[i].name);	// }  /*		alert(1);	alert(window.parent.parent.frames.length);	 var len=window.parent.frames.length;	 alert("len="+len);	 for (i=0;i<len;i++)	 {	 	alert(window.parent.frames[i].name);	 	}	 return;*/    //var stdate = Ext.getCmp("mygridstdate");		//var enddate = Ext.getCmp("mygridenddate");		//var AllFlag = Ext.getCmp("AllFlag").getValue();    //PrintComm.RHeadCaption = tm[1];    //PrintComm.LHeadCaption ="" //"科室: "+LogLoc+"     时间段: "+stdate.value+" 至 "+enddate.value;    //PrintComm.LFootCaption = tm[2];   	//var ret=cspRunServerMethod(GetHead.value,EpisodeID);    //alert(ret);        /*PrintComm.SetPreView("1");    PrintComm.stPage = 0;    PrintComm.stRow = 0;    PrintComm.previewPrint="0"; //是否弹出设置界面    PrintComm.stprintpos = 0;    PrintComm.SetConnectStr(CacheDB);    PrintComm.ItmName = "DHCNurPrnMouldANHUI14";    PrintComm.ID = "";    PrintComm.MultID = "";    PrintComm.MthArr = "";		//alert("EpisodeID="+EpisodeID+" stdate="+stdate.value+" enddate="+enddate.value+" AllFlag="+AllFlag);		var parr=EpisodeID+"!"+""+"!"+""+"!"+""+"!"+""+"!DHCNURANHUI13";    PrintComm.SetParrm(parr);    PrintComm.PrintOut();  */            var GetPrnSet=document.getElementById('GetPrnSet');		var GetHead=document.getElementById('GetPatInfo');		var ret=cspRunServerMethod(GetHead.value,EpisodeID);		var hh=ret.split("^");		alert("ddd");		//debugger;		var a=cspRunServerMethod(GetPrnSet.value,"DHCNURANHUI13",EpisodeID); //page, caredattim, prnpos, adm,Typ,user		if (a=="") return;		var GetLableRec=document.getElementById('GetLableRec');		var LabHead=cspRunServerMethod(GetLableRec.value,"DHCNURANHUI13^"+session['LOGON.CTLOCID']);		var tm=a.split("^");		var stdate="" //tm[2];		var stim="" //tm[3];		var edate="" //tm[4];		var etim="" //tm[5];		alert(ret);		//PrintComm.RHeadCaption=hh[1];		//PrintComm.LHeadCaption=hh[0];		//PrintComm.RFootCaption="第";		//PrintComm.LFootCaption="页";		//PrintComm.LFootCaption=hh[2];		debugger;		PrintComm.TitleStr=ret;		alert(PrintComm.TitleStr);		PrintComm.SetPreView("1");		PrintComm.PrnLoc=session['LOGON.CTLOCID'];		var aa=tm[1].split("&");		//PrintComm.stPage=aa[0];		//if (aa.length>1) PrintComm.stRow=aa[1];		PrintComm.stPage=0;		PrintComm.stRow=0;		PrintComm.previewPrint="1"; //是否弹出设置界面		//PrintComm.stprintpos=tm[0];		PrintComm.stprintpos=0;		//alert(PrintComm.Pages);		PrintComm.SetConnectStr(CacheDB);   	PrintComm.ItmName = "DHCNurPrnMouldANHUI14"; //338155!2010-07-13!0:00!!		//debugger;		var parr=EpisodeID+"!"+stdate+"!"+stim+"!"+edate+"!"+etim+"!DHCNURANHUI13";		PrintComm.ID = "";		PrintComm.MultID = "";		//PrintComm.MthArr="web.DHCConsult:getConsultInfo&id:"+myid;		if(LabHead!="")PrintComm.LabHead=LabHead;		PrintComm.SetParrm(parr); // ="EpisodeId" ; //"p1:0^p2:" 		//alert(parr);		PrintComm.PrintOut();		var SavePrnSet=document.getElementById('SavePrnSet');		//debugger;		var CareDateTim=PrintComm.CareDateTim;		if (CareDateTim=="") return ;		var pages=PrintComm.pages;		var stRow=PrintComm.stRow;		//debugger;		var stprintpos=PrintComm.stPrintPos;		//alert(pages+","+CareDateTim+","+stprintpos+","+EpisodeID+","+"DHCNURANHUI5"+","+session['LOGON.USERID']+","+PrintComm.PrnFlag);		//PrnFlag==1说明是打印预览		if (PrintComm.PrnFlag==1) return;		//如果原记录保存打印到第8页则当打印第8页之前页时不保存打印记录		if (pages<aa[0]) return;		var a=cspRunServerMethod(SavePrnSet.value,pages,CareDateTim,stprintpos,EpisodeID,"DHCNURANHUI13",session['LOGON.USERID']); //page, caredattim, prnpos, adm,Typ,user}     function find(){ 	 //alert();	 //var w=window.parent;   //alert(w.frames[0].name)	 //alert(w.frames.length);	 //debugger	 //var len=w.frames.length;	 //alert(w.frames[0].name);	 //w.frames[0].PrintCareRecord();	 //w.frames["TRAK_main"].PrintCareRecord();	 //var PrintComm=w.frames[0].document.getElementById("PrintComm");	 //alert(PrintComm);		REC = new Array();	var StartDate = formatDate(Ext.getCmp("DHCNURANHUI11gridstartdate").getValue());	var EndDate = formatDate(Ext.getCmp("DHCNURANHUI11gridenddate").getValue()); 	var locsys = Ext.getCmp("comboboxDep").getValue(); 	var Turmblesys = Ext.getCmp("Turmblesys").getValue();	var DHCNURImpressScoreS = Ext.getCmp("DHCNURImpressScoreS").getRawValue();  	var TurmbleDYsys = Ext.getCmp("TurmbleDYsys").getValue();   	var EmrCode="DHCNURANHUI9" 	var parr =StartDate+"^"+EndDate+"^"+locsys+"^"+session['LOGON.CTLOCID']+"^"+EmrCode+"^"+Turmblesys+"^"+DHCNURImpressScoreS+"^"+TurmbleDYsys;	if ((StartDate=="")||(EndDate=="")) return;  var GetQueryData = document.getElementById('GetQueryData');  var DHCNURANHUI11grid = Ext.getCmp("DHCNURANHUI11grid");  //alert(parr)  var a = cspRunServerMethod(GetQueryData.value, "web.DHCBlurQuery:DHCNURKPQuery", "Parr$" + parr, "AddRec");  DHCNURANHUI11grid.store.loadData(REC); }