var ret="";var checkret="";var comboret=""; var grid;var arrgrid=new Array();function eachItem1(item,index,length) {       if (item.xtype=="datefield") {               //修改下拉框的请求地址    			ret=ret+item.id+"|"+formatDate(item.getValue())+"^";   	    }     if (item.xtype=="timefield") {               //修改下拉框的请求地址    			//debugger;			ret=  ret+item.id+"|"+item.getValue()+"^";         } 	 if (item.xtype=="combo") {               //修改下拉框的请求地址    			//debugger;			comboret=  comboret+item.id+"|"+item.getValue()+"!"+item.lastSelectionText+"^";         } 	 if (item.xtype=="textfield") {               //修改下拉框的请求地址    			//debugger;			ret=  ret+item.id+"|"+item.getValue()+"^";         } 	 if (item.xtype=="textarea") {               //修改下拉框的请求地址    			ret=  ret+item.id+"|"+item.getRawValue()+"^";       } 	 if (item.xtype=="checkbox") {               //修改下拉框的请求地址    			//debugger;			if (item.checked==true) checkret=checkret+item.id+"|"+item.boxLabel+"^";			else {checkret=checkret+item.id+"|"+""+"^";}        } 	      if (item.items && item.items.getCount() > 0) {          item.items.each(eachItem1, this);       }   } function rightClickFn(client, rowIndex, e)  {          e.preventDefault();          grid=client;		  CurrRowIndex=rowIndex;          rightClick.showAt(e.getXY());            } var ITypItm="Item40"; //后取数据字典型 var ILISTTypItm="FOURLIST"; //后取数据字典型 function BodyLoadHandler(){		setsize("mygridpl","gform","mygrid"); //alert(EmrCode);	var but1=Ext.getCmp("mygridbut1");  but1.on('click',additm);   var but=Ext.getCmp("mygridbut2");	but.setText("选行保存");  but.on('click',gridsave);   var diag = Ext.getCmp("Item13");   diag.disable();  grid=Ext.getCmp('mygrid');  grid.getBottomToolbar().hide()  var tobar=grid.getTopToolbar();  tobar.addItem("-");       	tobar.addButton(	  {		className: 'new-topic-button',		text: "全部保存",		handler:AllSave,		id:'mygridbutAllSave'	  } 	);	 tobar.addItem("-");      	tobar.addButton(	  {		className: 'new-topic-button',		text: "查询",		handler:find,		id:'mygridsearch'	  } 	);
 grid=Ext.getCmp('mygrid');  grid.setTitle(gethead());    grid.on('afteredit',scoreSum,this);     var but=Ext.getCmp("butSave");      but.on('click',Save);	var but=Ext.getCmp("butPrint");  but.on('click',function(){	  var retflag=tkMakeServerCall("web.DHCMGtestpge","JugeIfWSubRec",EpisodeID,EmrCode);	  if((retflag!=0)&&(retflag!=1))	  {		  alert(retflag);		  return;	  }	  else	  {		  if(retflag==0)		  {			  alert("该病人尚未填写表格数据,不能打印!");			  return;		  }	  }	  printNurRecHHD("DHCNurPrnMouldANHUI9");	  }); 	//var GetQueryData=document.getElementById('GetQueryData');     var but=Ext.getCmp("butGetScore");  but.on('click',butGetScore);  	var Item2 = Ext.getCmp("Item40");		Item2.on('specialkey',cmbkey); 		var FOURLIST = Ext.getCmp("FOURLIST");		FOURLIST.on('specialkey',FOURLISTcmbkey); 	getFourlistdata("",FOURLIST)		//setVal2(ExamId); 		Ext.override(Ext.grid.RowSelectionModel, {			onEditorKey : function(F, E) {				var C = E.getKey(), G, D = this.grid, B = D.activeEditor;				var A = E.shiftKey; 				//debugger;        if (C == E.RIGHT) {        // alert();        E.stopEvent();        B.completeEdit();        G = D.walkCells(B.row,B.col+1, 1, this.acceptsNav,this);        }               if (C == E.LEFT) {        // alert();        E.stopEvent();        B.completeEdit();        G = D.walkCells(B.row,B.col-1, 1, this.acceptsNav,this);        }       if (C == E.DOWN) {       // alert();       E.stopEvent();       B.completeEdit();       G = D.walkCells(B.row+1,4, 1, this.acceptsNav,this);       }             if (C == E.UP) {       // alert();       E.stopEvent();       B.completeEdit();       G = D.walkCells(B.row-1,4, 1, this.acceptsNav,this);       }        				if (C == E.TAB) {					E.stopEvent();					B.completeEdit();					if (A) {						G = D.walkCells(B.row, B.col - 1, -1, this.acceptsNav,								this);					} else {						G = D.walkCells(B.row, B.col + 1, 1, this.acceptsNav,								this);					}				} else {					if (C == E.ENTER) {						E.stopEvent();						// alert(B);						B.completeEdit();						if (this.moveEditorOnEnter !== false) {							if (A) {								// G = D.walkCells(B.row - 1, B.col, -1,								// this.acceptsNav,this)								G = D.walkCells(B.row, B.col - 1, -1,										this.acceptsNav, this);							} else {								// G = D.walkCells(B.row + 1, B.col, 1,								// this.acceptsNav,this)								G = D.walkCells(B.row, B.col + 1, 1,										this.acceptsNav, this);							}						}					} else {						if (C == E.ESC) {							B.cancelEdit();						}					}				}				if (G) {					D.startEditing(G[0], G[1]);				}			}		});    var sm2 = new Ext.grid.RowSelectionModel({           moveEditorOnEnter: true,           singleSelect: true,           listeners: {               //rowselect : function(sm, row, rec) {                   //centerForm.getForm().loadRecord(rec);              // }           }         });	 setsize("mygrid", "gform", "mygrid"); 	 grid = Ext.getCmp('mygrid');        grid.addListener('rowcontextmenu', rightClickFn);			var score1 = Ext.getCmp("Item30"); 	score1.on('change',scoreAdd,this);   var score1 = Ext.getCmp("Item31"); 	score1.on('change',scoreAdd,this); 	var score1 = Ext.getCmp("Item32"); 	score1.on('change',scoreAdd,this); 	var score1 = Ext.getCmp("Item33"); 	score1.on('change',scoreAdd,this); 	var score1 = Ext.getCmp("Item34"); 	score1.on('change',scoreAdd,this); 	var score1 = Ext.getCmp("Item35"); 	score1.on('change',scoreAdd,this);	//var Item29 = Ext.getCmp("Item29");   //editor: new Ext.grid.GridEditor(new Ext.form.TextField({readOnly:"true"}))}  	//CaseMeasure.readonly="false";  SetPatInfoDisable();	  setvalue()	//alert(SpId);}function SetPatInfoDisable(){		var patName = Ext.getCmp("Item3");	 	patName.disable();	 	var sex = Ext.getCmp("Item42");	 	sex.disable();	 	var  regno= Ext.getCmp("Item6");	 	regno.disable();	 	var age = Ext.getCmp("Item4");	 	age.disable();	 	var patWard = Ext.getCmp("Item1");	 	patWard.disable();	 	var bedCode = Ext.getCmp("Item2");	 	bedCode.disable();	 	var admdate = Ext.getCmp("Item7");	 	admdate.disable();	 	var admtime = Ext.getCmp("Item8");	 	admtime.disable();		}function butGetScore(){	var GetScore=document.getElementById('GetScore'); 	var FOURLIST = Ext.getCmp("FOURLIST"); 	var aa=FOURLIST.value		if (GetScore) {		var ret=cspRunServerMethod(GetScore.value,"DHCNURANHUI21",EpisodeID+"^"+FOURLIST.value);		//alert(ret)	 	if (ret!="")    {  	 	var tt=ret.split('^');	 	var GJScore = Ext.getCmp("Item30");	 	GJScore.setValue(tt[0]);	 	var CSScore = Ext.getCmp("Item31");	 	CSScore.setValue(tt[1]);    var HDScore = Ext.getCmp("Item32");    HDScore.setValue(tt[2]);    var NLScore = Ext.getCmp("Item33");    NLScore.setValue(tt[3]);     var YYScore = Ext.getCmp("Item34");    YYScore.setValue(tt[4]);    var MCScore = Ext.getCmp("Item35");    MCScore.setValue(tt[5]);    var BurdenScore = Ext.getCmp("Item29");    BurdenScore.setValue(tt[6]);	var s1=0;	var s2=0;	var s3=0;	var s4=0;	var s5=0;	var s6=0;	//var s7=0;	if(tt[0]!=="") s1=parseInt(tt[0]);	if(tt[1]!=="") s2=parseInt(tt[1]);	if(tt[2]!=="") s3=parseInt(tt[2]);	if(tt[3]!=="") s4=parseInt(tt[3]);	if(tt[4]!=="") s5=parseInt(tt[4]);	if(tt[5]!=="") s6=parseInt(tt[5]);	//if(tt[6]!=="") s7=parseInt(tt[6]);	var sum=s1+s2+s3+s4+s5+s6;	var sumbj=Ext.getCmp("Item29");	sumbj.setValue(sum);    }    else    {    	alert("请先选择正确的评估时间，如果没有可选择时间，请填写四评单!");    }    	}} function scoreAdd(obj){ 	 var scorehj=0;	 var tmp=obj.getValue();		 if (isNaN(tmp))	  {			alert("评分请录入数字!"); 			obj.setValue("");			return;	  }	 if ((parseInt(tmp)>4)||(parseInt(tmp)<=0)||(tmp.indexOf('.')>-1))	 	 {			alert("评分数值必须小于等于4大于0并且不含小数!"); 			obj.setValue("");			return;	 }	 var sc1=Ext.getCmp("Item30").getValue();	 var sc2=Ext.getCmp("Item31").getValue();	 var sc3=Ext.getCmp("Item32").getValue();	 var sc4=Ext.getCmp("Item33").getValue();	 var sc5=Ext.getCmp("Item34").getValue();	 var sc6=Ext.getCmp("Item35").getValue();	 if(sc1=="") sc1=0;	 if(sc2=="") sc2=0;	 if(sc3=="") sc3=0;	 if(sc4=="") sc4=0;	 if(sc5=="") sc5=0;	 if(sc6=="") sc6=0;	 switch (obj.getName()) 	 {      case 'Item30':            scorehj=parseInt(tmp)+parseInt(sc2)+parseInt(sc3)+parseInt(sc4)+parseInt(sc5)+parseInt(sc6);           break;     case 'Item31':           scorehj=parseInt(tmp)+parseInt(sc1)+parseInt(sc3)+parseInt(sc4)+parseInt(sc5)+parseInt(sc6);           break;           case 'Item32':           scorehj=parseInt(tmp)+parseInt(sc1)+parseInt(sc2)+parseInt(sc4)+parseInt(sc5)+parseInt(sc6);           break;           case 'Item33':               scorehj=parseInt(tmp)+parseInt(sc1)+parseInt(sc2)+parseInt(sc3)+parseInt(sc5)+parseInt(sc6);           break;        case 'Item34':               scorehj=parseInt(tmp)+parseInt(sc1)+parseInt(sc2)+parseInt(sc3)+parseInt(sc4)+parseInt(sc6);           break;       case 'Item35':            scorehj=parseInt(tmp)+parseInt(sc1)+parseInt(sc2)+parseInt(sc3)+parseInt(sc4)+parseInt(sc5);   }   var amtsum = Ext.getCmp("Item29"); 	 //tmp=parseInt(tmp)+parseInt(amtsum.getValue())	 	 amtsum.setValue(scorehj);} function scoreSum(obj){   var scorearry=new Array();    var sum=0;   var r=obj.record;    var temp=r.get("Item44");   sum=sum+parseInt(temp);   temp=null;   temp=r.get("Item45");    if(temp==null){temp=0};      //alert(parseInt(temp));   sum=sum+parseInt(temp);    //alert(sum);     temp=null;   temp=r.get("Item46");    if(temp==null){temp=0};   sum=sum+parseInt(temp);    temp=null;   temp=r.get("Item47");    if(temp==null){temp=0};   sum=sum+parseInt(temp);    temp=null;   temp=r.get("Item48");   if(temp==null){temp=0};    sum=sum+parseInt(temp);    temp=null;   temp=r.get("Item49");    if(temp==null){temp=0};   sum=sum+parseInt(temp);    //alert(sum);      var mygrid = Ext.getCmp('mygrid');    var selModel = mygrid.getSelectionModel();    var rowIndex = mygrid.store.indexOf(mygrid.getSelectionModel().getSelected());      mygrid.store.getAt(rowIndex).set(mygrid.getColumnModel().getDataIndex(8),sum);} function scoreSum1(obj){   var scorearry=new Array();    var sum=0;   var r=obj.record;    var temp=r.get("Item44");     if(temp!=undefined)   {      scorearry=temp.split("(");      scorearry=scorearry[1].split("分)");       sum=sum+parseInt(scorearry[0]);    }    temp=null;   temp=r.get("Item45");   if(temp!=undefined)   {    scorearry=temp.split("(");     scorearry=scorearry[1].split("分)");   sum=sum+parseInt(scorearry[0]);    }    temp=null;   temp=r.get("Item46");   if(temp!=undefined)   {    scorearry=temp.split("(");     scorearry=scorearry[1].split("分)");   sum=sum+parseInt(scorearry[0]);    }      temp=null;   temp=r.get("Item47");   if(temp!=undefined)   {   scorearry=temp.split("(");   scorearry=scorearry[1].split("分)");   sum=sum+parseInt(scorearry[0]);    }    temp=null;   temp=r.get("Item48");    if(temp!=undefined)   {   scorearry=temp.split("(");   scorearry=scorearry[1].split("分)");   sum=sum+parseInt(scorearry[0]);    }    temp=null;   temp=r.get("Item49");   if(temp!=undefined)   {    scorearry=temp.split("(");   scorearry=scorearry[1].split("分)");   sum=sum+parseInt(scorearry[0]);    }    var mygrid = Ext.getCmp('mygrid');    var selModel = mygrid.getSelectionModel();    var rowIndex = mygrid.store.indexOf(mygrid.getSelectionModel().getSelected());   mygrid.store.getAt(rowIndex).set(mygrid.getColumnModel().getDataIndex(8),sum);}function printNurRec(){			var GetPrnSet=document.getElementById('GetPrnSet');			var GetHead=document.getElementById('GetPatInfo');				var ret=cspRunServerMethod(GetHead.value,EpisodeID);			var hh=ret.split("^");				var getid=document.getElementById('GetId');        	var id=cspRunServerMethod(getid.value,EmrCode,EpisodeID);			//debugger;				var a=cspRunServerMethod(GetPrnSet.value,"DHCNURANHUI9",EpisodeID); 	//page, caredattim, prnpos, adm,Typ,user			if (a=="") return;			var GetLableRec=document.getElementById('GetLableRec');			var LabHead=cspRunServerMethod(GetLableRec.value,"DHCNURANHUI9^"+session['LOGON.CTLOCID']);			var tm=a.split("^");			var stdate="" 	//tm[2];			var stim="" 	//tm[3];			var edate="" 	//tm[4];			var etim="" 	//tm[5];			//PrintComm.RHeadCaption=hh[1];			//PrintComm.LHeadCaption=hh[0];			//PrintComm.RFootCaption="第";			//PrintComm.LFootCaption="页";			//PrintComm.LFootCaption=hh[2];			PrintComm.TitleStr=ret;			PrintComm.SetPreView("1");			PrintComm.PrnLoc=session['LOGON.CTLOCID'];			var aa=tm[1].split("&");			//PrintComm.stPage=aa[0];			//if (aa.length>1) 	PrintComm.stRow=aa[1];			PrintComm.stPage=0;			PrintComm.stRow=0;			PrintComm.previewPrint="1"; 	//是否弹出设置界面			//PrintComm.stprintpos=tm[0];			PrintComm.stprintpos=0;			//alert(PrintComm.Pages);			PrintComm.SetConnectStr(CacheDB);	PrintComm.WebUrl=webIP+"/dthealth/web/DWR.DoctorRound.cls";	//PrintComm.WebUrl=WebIp+"/trakcarelive/trak/web/DWR.DoctorRound.cls";			PrintComm.ItmName = "DHCNurPrnMouldANHUI9"; 	//338155!2010-07-13!0:00!!			//debugger;			var parr=EpisodeID;			PrintComm.ID = "";			PrintComm.MultID = "";			var mth1="Nur.DHCMoudData:getVal&parr:"+id+"!";			PrintComm.MthArr=mth1;			//PrintComm.MthArr="web.DHCConsult:getConsultInfo&id:"+myid;			if(LabHead!="")PrintComm.LabHead=LabHead;			PrintComm.SetParrm(parr); 	// ="EpisodeId" ; 	//"p1:0^p2:"			PrintComm.PrintOut();			var SavePrnSet=document.getElementById('SavePrnSet');			//debugger;			var CareDateTim=PrintComm.CareDateTim;			if (CareDateTim=="") return ;			var pages=PrintComm.pages;   			var stRow=PrintComm.stRow;			//debugger;			var stprintpos=PrintComm.stPrintPos;			//alert(pages+","+CareDateTim+","+stprintpos+","+EpisodeID+","+"DHCNURANHUI15"+","+session['LOGON.USERID']+","+PrintComm.PrnFlag);			//PrnFlag==1说明是打印预览			if (PrintComm.PrnFlag==1) return;			//如果原记录保存打印到第8页则当打印第8页之前页时不保存打印记录			if (pages<aa[0]) return;			//var a=cspRunServerMethod(SavePrnSet.value,pages,CareDateTim,stprintpos,EpisodeID,"DHCNURANHUI15",session['LOGON.USERID']);	//page, caredattim, prnpos, adm,Typ,user			//find();}function butPrintFn(){	        	var Item9=Ext.getCmp("Item9");	var Item9=formatDate(Item9.getValue());	//alert(Item9);	if(Item9=="")	{		alert("请先填写出院时间再打印！");		return;		}	printNurRec();	        	return;			}  /*function butPrintFn(){			PrintComm.RHeadCaption='dddd';			PrintComm.LHeadCaption="3333333";			//PrintComm.RFootCaption="第";			//PrintComm.LFootCaption="页";			//PrintComm.LFootCaption="88";			//alert(PrintComm.Pages);			PrintComm.SetConnectStr(CacheDB);			PrintComm.ItmName = "DHCNurPrnMouldANHUI9";			//debugger;			//var parr="@"+EpisodeID+"@DHCNURHYD_Assessment@DHCNURHYD_DisSummary";			var parr="@"+EpisodeID+"@DHCNURANHUI9"; 			parr=parr+"|web.DHCMGtestpge:DHCNurComplexPrn&parr$"+EpisodeID;   					PrintComm.MthArr="web.DHCNurMouldDataComm:GetPrnValComm&parr:"+parr;			//alert(parr);				//PrintComm.LabHead=LabHead;						//PrintComm.SetParrm(parr);			PrintComm.PrintOut();} */   function gethead(){	var GetHead=document.getElementById('GetHead');	var ret=cspRunServerMethod(GetHead.value,EpisodeID);	var hh=ret.split("^");	return hh[0]+"  "+hh[1];	//debugger;}function additm(){   var Plant = Ext.data.Record.create([	{name:'CareDate'},	{name:'CareTime'},	{name:'Item44'},	{name:'Item45'},	{name:'Item46'},	{name:'Item47'},	{name:'Item48'},	{name:'Item49'},	{name:'CaseMeasure'},	{name:'Item50'},	{name:'Item41'},	{name:'Item11'}, 	{name:'User'},	{name:'rw'},	{name:'par'}      ]);  var count = grid.store.getCount();   var r = new Plant({CareDate:new Date(),CareTime:new Date().dateFormat('H:i')});   grid.store.commitChanges();   grid.store.insert(count,r); 	return;} function getDHCURMemo(){	var DHCMemovalue=Ext.getCmp("DHCMemo").getRawValue();  var mygrid = Ext.getCmp('mygrid');  var selModel = mygrid.getSelectionModel();  var rowIndex = mygrid.store.indexOf(mygrid.getSelectionModel().getSelected());  mygrid.store.getAt(rowIndex).set(mygrid.getColumnModel().getDataIndex(14),DHCMemovalue);	//frm.close();}function Measure(){	 var objRow=grid.getSelectionModel().getSelections();	 if (objRow.length == 0) { alert("请先选择一条记录!"); return; }	myId = "";	var arr = new Array();	// 录入界面	var a = cspRunServerMethod(pdata1, "", "DHCNURMemo2", EpisodeID, "");	//alert(a);	arr = eval(a);	var window = new Ext.Window({				title : '备注',				x:200,				width : 300,				height : 250,				autoScroll : true,				layout : 'absolute',				items : arr,				buttons : [{							text : '确定',							handler : function() {								getDHCURMemo(window);								//Save(window);								window.close();							}						}, {							text : '取消',							handler : function() {								window.close();							}						}]			});    window.show();	var mark=objRow[0].get("Item50");	var markobj=Ext.getCmp("DHCMemo");	if(markobj)	{		if((mark!=="")&&(mark!==null))			markobj.setValue(mark);	} }var rightClick = new Ext.menu.Menu(  { 	   id : 'rightClickCont',     items : [ {                id:'rMenu2',                text : '备注',                handler:Measure            },            {                id:'rMenu1',                text : '作废',                handler:CancelRecord            }       ]    });function rightClickFn(client, rowIndex, e)  {          e.preventDefault();          grid=client;		  CurrRowIndex=rowIndex;          rightClick.showAt(e.getXY());            }function CancelRecord(){	var objCancelRecord=document.getElementById('CancelRecord');	var objRow=grid.getSelectionModel().getSelections();	if (objRow.length == 0) { alert("请先选择一条压疮记录!"); return; }	else	{		var flag=confirm("你确定要作废此条压疮记录吗?");		if(flag)		{		var par=objRow[0].get("par");		var rw=objRow[0].get("rw");		//alert(par+","+rw+","+session['LOGON.USERID']+","+session['LOGON.GROUPDESC']);		if (objCancelRecord) {				var a = cspRunServerMethod(objCancelRecord.value, par, rw, session['LOGON.USERID'], session['LOGON.GROUPDESC']);				if (a!=0){					alert(a);					return;				}else{					find();				}			}	    }        	}}function DBC2SBC(str)   {	var result = '';	if ((str)&&(str.length)) {		for (i = 0; i < str.length; i++) {			code = str.charCodeAt(i);			if (code >= 65281 && code <= 65373) {				result += String.fromCharCode(str.charCodeAt(i) - 65248);			}			else {				if (code == 12288) {					result += String.fromCharCode(str.charCodeAt(i) - 12288 + 32);				}				else {					result += str.charAt(i);				}			}		}	}	else{		result=str;	}  	return result;   }  function AllSave() {	var grid=Ext.getCmp('mygrid');	var store = grid.store;	var rowCount = store.getCount(); //记录数	if(rowCount==0)	{		alert("没有记录，不能保存！");		return;	}	//alert(rowCount);		var cm = grid.getColumnModel();	var colCount = cm.getColumnCount(); 	var list = [];	var rowObj = grid.getSelectionModel().getSelections();	//var rowObj=grid1.getSelectionModel().last ;	var len = rowObj.length;	//for (var r = 0;r < len; r++) 	//{			//list.push(rowObj[r].data);	//}	  //var rwIndex=grid1.getSelectionModel().last;    //alert(store.getCount()); 	for (var i = 0; i < store.getCount(); i++) {		list.push(store.getAt(i).data);	//	//	debugger;	} var RecSave=document.getElementById('RecSave');    for (var i = 0; i < list.length; i++)    {   	var obj=list[i];   	var str="";    var CareDate="";     var CareTime="";     for (var p in obj)     {     	 var aa = formatDate(obj[p]);     	 if (p=="CareDate") CareDate=aa;     	 if (p=='CareTime') CareTime=obj[p];       if (p=="") continue;        if (aa == "") 			{					str = str + p + "|" + DBC2SBC(obj[p]) + '^';			}else			{			  	str = str + p + "|" + aa + '^';				}       }   //alert(str);        var PatInfo=document.getElementById('PatInfo');   //alert(str);    if (PatInfo)   {     var ret=cspRunServerMethod(PatInfo.value,EpisodeID);      var tt=ret.split('^');     var tmparry=tt[7].split('|');      var patWard = Ext.getCmp("Item1");          if(tmparry[1]!=patWard.getValue())       {        var CheckAvoidPressureUlcers=document.getElementById('CheckAvoidPressureUlcers');  //检查不可避免压疮是否重复上报        var Checkret=cspRunServerMethod(CheckAvoidPressureUlcers.value,EmrCode,EpisodeID);        //if (Checkret == "1") { Ext.Msg.alert('提示', patWard.getValue()+"已上报并评估该患者不可避免压疮，如需继续评估请选行保存,发生填写否,允许保存,填写是不允许保存!"); return; }       }               }         var a=cspRunServerMethod(RecSave.value,EpisodeID,str,session['LOGON.USERID'],"DHCNURANHUI9",session['LOGON.GROUPDESC']);	 //alert("保存成功");		if (a!="0")	{				alert(a);				return;	}      }     alert("保存成功!");     //alert("保存成功");	      find() }   function gridsave() {
	var store = grid.store;	var rowCount = store.getCount(); //记录数	if(rowCount==0)	{		alert("没有记录，不能保存！");		return;	}	var cm = grid.getColumnModel();	var colCount = cm.getColumnCount(); 	var yacsflag="0"; 	var sftxycfsflag="0";		 	var list = [];	var rowObj = grid.getSelectionModel().getSelections();	var len = rowObj.length;	for (var r = 0;r < len; r++) 	{		list.push(rowObj[r].data);	}		var grid1=Ext.getCmp('mygrid');  var rwIndex=grid1.getSelectionModel().last;   var RecSave=document.getElementById('RecSave');    for (var i = 0; i < list.length; i++)    {   	var obj=list[i];       var str="";    var CareDate="";     var CareTime="";     for (var p in obj)     {     	 var aa = formatDate(obj[p]);     	 if (p=="CareDate") CareDate=aa;     	 if (p=='CareTime') CareTime=obj[p];       if (p=="") continue;       //alert(p);      //alert(DBC2SBC(obj[p]));            if(p=="Item36")      {       sftxycfsflag="1";              //alert(obj[p]);       if(DBC2SBC(obj[p])=="是")       {         	yacsflag ="1";                }        }           if (aa == "") 			{					str = str + p + "|" + DBC2SBC(obj[p]) + '^';			}else			{			  	str = str + p + "|" + aa + '^';				}       }

      }     var PatInfo=document.getElementById('PatInfo');   if (PatInfo)   {     var ret=cspRunServerMethod(PatInfo.value,EpisodeID);      var tt=ret.split('^');     var tmparry=tt[7].split('|');      var patWard = Ext.getCmp("Item1");      if(tmparry[1]!=patWard.getValue())       {        var CheckAvoidPressureUlcers=document.getElementById('CheckAvoidPressureUlcers');  //检查不可避免压疮是否重复上报        var Checkret=cspRunServerMethod(CheckAvoidPressureUlcers.value,EmrCode,EpisodeID);        //alert(yacsflag);                if ((Checkret == "1")&&(yacsflag=="1")) { alert(patWard.getValue()+"已上报该患者不可避免压疮不可重复上报!"); return; }       }               }         if(sftxycfsflag=="0")  { alert("评估前请填写是否不可避免发生压疮!"); return; }    var a=cspRunServerMethod(RecSave.value,EpisodeID,str,session['LOGON.USERID'],"DHCNURANHUI9",session['LOGON.GROUPDESC']);	 alert("保存成功!"); 	 //alert("保存成功");		if (a!="0")	{				alert(a);				return;	}	find();  
}
   function find(){	//var link="dhcnurtempature.csp?EpisodeID="+EpisodeID;   /// window.open (link,'体温单','height=1,width=1,top=0,left=0,toolbar=no,menubar=no,scrollbars=no, resizable=no,location=no, status=no')    // window.close();  // alert(parent.frames.length);    MeasureRel = new Hashtable();    REC = new Array();	var adm = EpisodeID;	var GetQueryData = document.getElementById('GetQueryData');	var mygrid = Ext.getCmp("mygrid");	var StDate = Ext.getCmp("Item53");  //取上报日期   if(StDate.value=="")   {     	alert("必须填写上报日期,Braden压疮风险动态评分表才能正常显示,请填写上报日期!"); return;    }  var now=new Date();	var nowMonth=now.getMonth()+1;	var nowMDate=now.getDate();	if ((((now.getDate()).toString()).length)==1)  //修改日期日头格式	{	 		var nowMDate="0"+(now.getDate()).toString();	}	if ((((now.getMonth()+1).toString()).length)==1)  //修改日期月份格式	{	 		var nowMonth="0"+(now.getMonth()+1).toString();	}	var Enddate=now.getFullYear()+"-"+nowMonth+"-"+nowMDate;  var parr = adm + "^" +StDate.value + "^" + "00:00"+ "^" + Enddate + "^" + "23:59" + "^"+"DHCNURANHUI9" + "^" + "";	//alert(parr);	//var parr = adm + "^" + StDate.value + "^" + StTime.value + "^" + Enddate.value + "^" + EndTime.value + "^"+"DHCNURANHUI9" + "^" + IfCancelRec;	// debugger;	var a = cspRunServerMethod(GetQueryData.value, "web.DHCNurRecComm:GetCareRecComm", "parr$" + parr, "AddRec");	//alert(REC)	mygrid.store.loadData(REC);}function AddRec(str){	//var a=new Object(eval(str));	var obj = eval('(' + str + ')');	obj.CareDate=getDate(obj.CareDate);	//obj.PregHPregDate=getDate(obj.PregHPregDate);	REC.push(obj);	//debugger;}  function setVal2(itm,val){	  if (val=="") return ;	  var tt=val.split('!');		//alert(tt);	 	var cm=Ext.getCmp(itm);		person=new Array();		addperson(tt[1],tt[0]);		cm.store.loadData(person);		cm.setValue(tt[0]); 		 }  function FOURLISTcmbkey(field, e){	if (e.getKey() ==Ext.EventObject.ENTER)	{		var pp=field.lastQuery;		//alert(pp);				getFourlistdata(pp,field);	}}var FOURLISTArray=new Array();function getFourlistdata(p,cmb){	var GetFourList =document.getElementById('GetFourList');	//debugger; 	//alert(EpisodeID);    var ret=cspRunServerMethod(GetFourList.value,EpisodeID);	//alert("ret="+ret);		if (ret!="")	{		var aa=ret.split('^');		for (i=0;i<aa.length;i++)		{			if (aa[i]=="" ) continue;			var it=aa[i].split('|');			addFourList(it[1],it[0]);		}		//debugger;		cmb.store.loadData(FOURLISTArray);	}}function addFourList(a,b){	FOURLISTArray.push(	{		desc:a,		id:b	}	);}   function cmbkey(field, e){	if (e.getKey() ==Ext.EventObject.ENTER)	{		var pp=field.lastQuery;		getlistdata(pp,field);	//	alert(ret);	}}var person=new Array();function getlistdata(p,cmb){	var GetPerson =document.getElementById('GetPerson');	//debugger;    var ret=cspRunServerMethod(GetPerson.value,p);	if (ret!="")	{		var aa=ret.split('^');		for (i=0;i<aa.length;i++)		{			if (aa[i]=="" ) continue;			var it=aa[i].split('|');			addperson(it[1],it[0]);		}		//debugger;		cmb.store.loadData(person);	}}function addperson(a,b){	person.push(	{		desc:a,		id:b	}	);}function Save(){     var PatInfo=document.getElementById('PatInfo');	if (PatInfo) 	{		var ret1=cspRunServerMethod(PatInfo.value,EpisodeID); 		var tt1=ret1.split('^'); 		var tmparry1=tt1[7].split('|'); 		var patWard = Ext.getCmp("Item1");		if(tmparry1[1]!=patWard.getValue())    {       var CheckPressureUlcers=document.getElementById('CheckPressureUlcers');  //检查院外压疮带入是否重复上报       var Checkret=cspRunServerMethod(CheckPressureUlcers.value,EmrCode,EpisodeID);        if (Checkret == "1") { alert(patWard.getValue()+"已上报该患者院外压疮带入不可重复上报!"); return; }     }  }   ret="";  checkret="";  comboret="";  var SaveRec=document.getElementById('Save');  var gform=Ext.getCmp("gform");  var getid=document.getElementById("GetId");  var id=cspRunServerMethod(getid.value,EmrCode,EpisodeID);  gform.items.each(eachItem1, this);    ret+"&"+checkret+"&"+comboret;  var FOURLIST="";  var FOURLISTobj=Ext.getCmp("FOURLIST");  if(FOURLISTobj)  {	  FOURLIST=FOURLISTobj.getValue();  }  ret=ret+"^Item100|"+FOURLIST+"!"+FOURLISTobj.getRawValue(); 	//var Item29 = Ext.getCmp("Item29");  	//alert(Item29.value);    //alert(id);     if (id==""){  var Id=cspRunServerMethod(SaveRec.value,"^EmrUser|"+session['LOGON.USERID']+"^EmrCode|"+EmrCode+"^"+ret+"^DetLocDr|"+session['LOGON.CTLOCID']+"^EpisodeId|"+EpisodeID+"&"+checkret+"&"+comboret,"");  alert("已保存!");   return;}  else  {    var Id=cspRunServerMethod(SaveRec.value,"^EmrUser|"+session['LOGON.USERID']+"^EmrCode|"+EmrCode+"^"+ret+"^DetLocDr|"+session['LOGON.CTLOCID']+"^EpisodeId|"+EpisodeID+"&"+checkret+"&"+comboret,id);    if (Id!=="")		{     alert("已保存!");     return;    }    else    {    	alert("保存失败!");      return;	   }        }   parent.window.initMainTree();}   function setvalue(){	var ha = new Hashtable();  var getid=document.getElementById('GetId');  var id=cspRunServerMethod(getid.value,EmrCode,EpisodeID);  if (id != "")   {   	//NurRecId=id;   	var getVal = document.getElementById('getVal');   	var ret = cspRunServerMethod(getVal.value, id);    var tm = ret.split('^');		sethashvalue(ha, tm);  } 	else 	{				getPatInfo();				return;	}  	// debugger;         	 var gform=Ext.getCmp("gform");   gform.items.each(eachItem, this);  	 //  alert(a);	for (var i=0 ; i<ht.keys().length;i++)//for...in statement get all of Array's index	{		var key = ht.keys()[i]; 		//restr += ht.items(key) + " " + ht.parent[key] + "<br/>";		if (key.indexOf("_") == -1) 		{			//alert(key);			var flag=ifflag(key );			if(key=="FOURLIST")			{				var flaglist=ifLISTflag("FOURLIST")				var FOURLISTobj=Ext.getCmp("FOURLIST");				if(flaglist==true)				{					if (ha.contains(key)) setVal2("FOURLIST" ,ha.items("Item100"));				}			}		  if (flag==true)			{				if (ha.contains(key)) setVal2(key ,ha.items(key));				//debugger;				continue;			}			 			var flag=ifLISTflag(key );			//alert(flag);
						if (flag==true)			{				if (ha.contains(key)) setVal2(key ,ha.items("Item100"));				//debugger;				continue;			}			var itm = Ext.getCmp(key);			if (ha.contains(key)) 			itm.setValue(getval(ha.items(key)));				    }else{			var aa=key.split('_'); 
			if(ha.contains(aa[0]))			{			  setcheckvalue(key,ha.items(aa[0]));			}		}    }    find(); 
}function getval(itm){	var tm=itm.split('!');	return tm[0];}function ifflag(itm){	var tm=ITypItm.split('|');	var flag=false;	for (var i=0;i<tm.length;i++)	{		if (itm==tm[i])		{			flag=true;		}	}	return flag ;} function ifLISTflag(itm){	var tm=ILISTTypItm.split('|');	var flag=false;	for (var i=0;i<tm.length;i++)	{		if (itm==tm[i])		{			flag=true;		}	}	return flag ;}function getPatInfo(){	var PatInfo=document.getElementById('PatInfo');	if (PatInfo) {		var ret=cspRunServerMethod(PatInfo.value,EpisodeID);	 	//alert(ret)	 	var tt=ret.split('^');	 	var patName = Ext.getCmp("Item3");	 	patName.setValue(getValueByCode(tt[4]));	 	var sex = Ext.getCmp("Item42");	 	sex.setValue(getValueByCode(tt[3]));	 	var  regno= Ext.getCmp("Item6");	 	regno.setValue(getValueByCode(tt[9]));	 	var age = Ext.getCmp("Item4");	 	age.setValue(getValueByCode(tt[6]));	 	var patWard = Ext.getCmp("Item1");	 	patWard.setValue(getValueByCode(tt[7]));	 	var bedCode = Ext.getCmp("Item2");	 	bedCode.setValue(getValueByCode(tt[5]));	 	var diag = Ext.getCmp("Item13");	 	diag.setValue(getValueByCode(tt[8]));	 	var admdate = Ext.getCmp("Item7");	 	admdate.setValue(getValueByCode(tt[14]));	 	var admtime = Ext.getCmp("Item8");	 	admtime.setValue(getValueByCode(tt[15]));		var dischdate = Ext.getCmp("Item9");	 	dischdate.setValue(getValueByCode(tt[16]));	 	var dischtime = Ext.getCmp("Item10");	 	dischtime.setValue(getValueByCode(tt[17]));	 	var myDate=new Date();	 	var Month=myDate.getMonth()+1;	 	var MDate=myDate.getDate();	 	if ((((myDate.getDate()).toString()).length)==1)  //修改日期日头格式	 	{	 		var MDate="0"+(myDate.getDate()).toString();	 	}	 	if ((((myDate.getMonth()+1).toString()).length)==1)  //修改日期月份格式	 	{	 		var Month="0"+(myDate.getMonth()+1).toString();	 	}	 	var nowDate=myDate.getYear()+"-"+Month+"-"+MDate;	 	var ReportDate = Ext.getCmp("Item53");  //上报日期	 	ReportDate.setValue(new Date());	 	var WriteDate = Ext.getCmp("Item52");   //填报日期	 	WriteDate.setValue(new Date());	 	var hh=myDate.getHours();	 	var mm=myDate.getMinutes();	 	var Time=hh+":"+mm	 	//alert(Time);	 		 	var ReportTime = Ext.getCmp("Item12");	  ReportTime.setValue(Time);	}}function getValueByCode(tempStr){	var retStr=tempStr;	var strArr = tempStr.split("|");	if (strArr.length>1) 	{		retStr=strArr[1];	}	return retStr;}