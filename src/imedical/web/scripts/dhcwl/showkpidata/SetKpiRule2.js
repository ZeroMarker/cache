(function(){	Ext.ns("dhcwl.mkpi.showkpidata");})();dhcwl.mkpi.showkpidata.SetKpiRule2=function(){	var preUrl="dhcwl/kpi/";	var parentWin;    //var sm=new Ext.grid.RowSelectionModel({singleSelect:true});	var inputRule="";	var storeType="proxy";	objRoot=new Object();	objRoot.child=[];	objRoot.split=",";	var treeDeep="";	var selectedKpiIds=[];	var selectedKpiCodes=[];	var kpiFlCombo=new Ext.form.ComboBox({		width : 130,		editable:false,		xtype : 'combo',		mode : 'remote',		triggerAction : 'all',		emptyText:'请选择指标分类',		fieldLabel : '类型',		name : 'kpiFlCombo',		displayField : 'kpiFlName',		valueField : 'kpiFlCode',		store : new Ext.data.Store({			proxy:new Ext.data.HttpProxy({url:'dhcwl/kpi/kpiservice.csp?action=getKpiflCombo'}),			reader:new Ext.data.ArrayReader({},[{name:'kpiFlCode'},{name:'kpiFlName'}])		}),		tpl:'<tpl for=".">' +   			'<div class="x-combo-list-item" style="height:18px;">' +   			'{kpiFlName}' +   			'</div>'+   			'</tpl>',			listeners :{			'select':function(combox){				kpiFlCombo.setValue(combox.getRawValue());			}		}	});		var sectionCombo=new Ext.form.ComboBox({		width : 130,		editable:false,		xtype : 'combo',		mode : 'remote',		triggerAction : 'all',		emptyText:'请选择指标区间',		fieldLabel : '区间',		name : 'sectionCombo',		displayField : 'secName',		valueField : 'secCode',		store : new Ext.data.Store({			proxy:new Ext.data.HttpProxy({url:'dhcwl/kpi/kpiservice.csp?action=getSectionCombo'}),			//reader:new Ext.data.ArrayReader({},[{name:'secCode'},{name:'secName'}])			reader:new Ext.data.ArrayReader({},[{name:'secCode'},{name:'secName'}])		}),		tpl:'<tpl for=".">' +   			'<div class="x-combo-list-item" style="height:18px;">' +   			'{secName}' +   			'</div>'+   			'</tpl>',					listeners :{			'select':function(combox){				sectionCombo.setValue(combox.getRawValue());			}		}	});		var getValueTypeCombo=new Ext.form.ComboBox({		width : 130,		editable:false,		xtype : 'combo',		mode : 'local',		triggerAction : 'all',		fieldLabel : '取值方式',		value:'',		name : 'getValueTypeCombo',		displayField : 'isGlobal',		valueField : 'isGlobalV',		tpl:'<tpl for=".">' +   			'<div class="x-combo-list-item" style="height:18px;">' +   			'{isGlobal}' +   			'</div>'+   			'</tpl>',					store : new Ext.data.JsonStore({			fields : ['isGlobal', 'isGlobalV'],			data : [{				isGlobal : '',				isGlobalV : ''			},{				isGlobal : '普通指标',				isGlobalV : '1'			}, {				isGlobal : '计算指标',				isGlobalV : '2'			}]}),		listeners :{			/*			'select':function(combox){				globalFlagCombo.setValue(combox.getValue());			}			*/		}	});			var globalFlagCombo=new Ext.form.ComboBox({ 		displayField : 'isGlobal',		valueField : 'isGlobalV',                       typeAhead: true,		mode : 'local',         	    //forceSelection: true,		triggerAction : 'all', 	                //emptyText:'Select a state...',        selectOnFocus:true,		width : 130,		value:'',		name : 'globalFlagCombo',				editable:false,		fieldLabel : 'global',		tpl:'<tpl for=".">' +   			'<div class="x-combo-list-item" style="height:18px;">' +   			'{isGlobal}' +   			'</div>'+   			'</tpl>',				store : new Ext.data.JsonStore({			fields : ['isGlobal', 'isGlobalV'],			data : [{				isGlobal : '',				isGlobalV : ''			},{				isGlobal : '否',				isGlobalV : 'N'			}, {				isGlobal : '是',				isGlobalV : 'Y'			}]}),		listeners :{			'select':function(combox){				globalFlagCombo.setValue(combox.getValue());			}		}	});	//modify by wk ~2017-03-16~公司UI标准修改	/*var kpiForm=new Ext.FormPanel({    	height: 145,        frame: true,        autoScroll:true,        labelAlign: 'left',        bodyStyle:'padding:5px',        style: {            "margin-right": Ext.isIE6 ? (Ext.isStrict ? "-10px" : "-13px") : "0"         },        defaultConfig:{width:130},        layout: 'table',        layoutConfig: {columns:10},        items:[{        	html: 'ID:'        },{        	editable:false,            xtype:'textfield',            name: 'id1',            id:'id1',            anchor:'95%'        },{            html: '编码：'        },{            name: 'kpiCode1',            id:'kpiCode1',            xtype:'textfield',            anchor:'95%'        },{            html: '指标名称：'        },{            name: 'kpiName1',            id:'kpiName1',            xtype:'textfield',            anchor:'95%'        },{            html: '指标描述：'        },{            name: 'kpiDesc1',            id:'kpiDesc1',            xtype:'textfield',            anchor:'95%'        },{            html:'执行代码：'        },{            name:'kpiExcode1',            id:'kpiExcode1',            xtype:'textfield',            width:300,            flex:1        },{            html:'是否使用global：'        },globalFlagCombo,{            html: '创建者：'        },{            name: 'createUser1',            id:'createUser1',            xtype:'textfield',            flex:1        }, {            html: '创建/更新日期：'        },{            xtype:'datefield',            format :'Y-m-d',            name: 'updateDate1',            id:'updateDate1',            width:130,            flex:1        },{            html: '数据节点：'        },{        	xtype:'textfield',            name: 'dataNode1',            id: 'dataNode1'         },{            html: '维度：'         },{            name:'dimType1',           	id:'dimType1',            xtype:'textfield'        },{            html: '类型：'        },kpiFlCombo,{            html: '指标区间：'        },sectionCombo,{            html: '备注：'        },{        	xtype:'textfield',        	name: 'nodeMark1',        	id: 'nodeMark1',        	flex:1,        	width:100	         },{html: '取值方式：'},         	getValueTypeCombo         ],*/	var kpiForm=new Ext.FormPanel({    	frame : true,		height : 163,		labelAlign : 'right',		bodyStyle:'padding:5px',		labelWidth : 90,		style : {			"margin-right" : Ext.isIE6? (Ext.isStrict ? "-10px" : "-13px"): "0"		},items : [{			layout : 'column',			items : [{ 				columnWidth : .18,				layout : 'form',				defaultType : 'textfield',				defaults : {					width : 95				},				items : [{							fieldLabel : 'ID',							name: 'id1',				            id:'id1',				            editable:false						}, globalFlagCombo,kpiFlCombo]			}, {				columnWidth : .18,				labelWidth : 50,				layout : 'form',				defaults : {					width : 135				},				items : [{							fieldLabel : '编码',							xtype : 'textfield',							name: 'kpiCode1',				            id:'kpiCode1'						}, {							fieldLabel : '创建人',							xtype : 'textfield',							name: 'createUser1',				            id:'createUser1'						},sectionCombo]			}, {				columnWidth : .18,				layout : 'form',				labelWidth : 70,				defaults : {					width : 115				},				items : [{							xtype : 'textfield',							fieldLabel : '指标名称',							name: 'kpiName1',				            id:'kpiName1'						}, {							xtype : 'datefield',							name: 'updateDate1',				            id:'updateDate1',							fieldLabel : '更新日期'						},{							fieldLabel : '备注',							xtype:'textfield',				        	name: 'nodeMark1',				        	id: 'nodeMark1'						}]			}, {				columnWidth : .18,				layout : 'form',				labelWidth : 70,				defaults : {					width : 115				},				items : [{					xtype:'textfield',					fieldLabel : '指标描述',					name: 'kpiDesc1',		            id:'kpiDesc1'				},{					xtype:'textfield',					fieldLabel:'数据节点',		            name: 'dataNode1',		            id: 'dataNode1'				},getValueTypeCombo]			},{				columnWidth : .26,				labelWidth : 65,				layout : 'form',				defaults : {					width : 205				},				items : [{					xtype:'textfield',					fieldLabel : '执行代码',					name:'kpiExcode1',		            id:'kpiExcode1'				},{		            fieldLabel : '维度',		            name:'dimType1',		           	id:'dimType1',		            xtype:'textfield'		        }]			}]		}],        tbar: new Ext.Toolbar([{        	//text   : '查  找',        	text: '<span style="line-Height:1">查  找</span>',        	icon: '../images/uiimages/search.png',        	cls:'align:right',            handler: function() {            	var id=Ext.get('id1').getValue();                var kpiName=Ext.get('kpiName1').getValue();                var kpiDesc=Ext.get('kpiDesc1').getValue();                var dimType=Ext.get('dimType1').getValue();                var section=sectionCombo.getRawValue();                var category=kpiFlCombo.getRawValue();                var kpiCode=Ext.get('kpiCode1').getValue();                var kpiExcode=Ext.get('kpiExcode1').getValue();                var createUser=Ext.get('createUser1').getValue();                var updateDate=Ext.get('updateDate1').getValue();                var nodeMark=Ext.get('nodeMark1').getValue();                var dataNode=Ext.get('dataNode1').getValue();                //var section=Ext.get('section').getValue();                var globalFlag=globalFlagCombo.getValue();                if(!globalFlag) globalFlag='';                else if(globalFlag=='否'||globalFlag=='N') globalFlag='N';                else if(globalFlag=='是'||globalFlag=='Y') globalFlag='Y';                else globalFlag='';                var getValueType=getValueTypeCombo.getValue();                if (getValueType=="普通指标") getValueType=1;                 if (getValueType=="计算指标") getValueType=2;                 //if (getValueType=="") getValueType=1;                paraValues='kpiId='+id+'&dimType='+dimType+'&category='+category+'&kpiCode='+kpiCode+'&kpiExcode='+kpiExcode;                paraValues+='&createUser='+createUser+'&updateDate='+updateDate+'&nodeMark='+nodeMark;  				paraValues+='&kpiName='+kpiName+'&kpiDesc='+kpiDesc+'&section='+section+'&dataNode='+dataNode+'&globalFlag='+globalFlag+'&getValueType='+getValueType;  				storeKpi.proxy.setUrl(encodeURI("dhcwl/kpi/getkpidata.csp?action=mulSearch&"+paraValues+"&onePage=1"));                //alert(paraValues);  				storeKpi.load();  				kpiListPanel.show();           }        },'-',{//text   : '清  空',        	text: '<span style="line-Height:1">清  空</span>',        	icon: '../images/uiimages/clearscreen.png',        	cls:'align:right',            handler: function() {            	//this.clearForm();            	//return;            	var form=kpiForm.getForm();    			form.setValues({id1:'',kpiName1:'',kpiDesc1:'',kpiDimCombo:'',kpiFlCombo:'',sectionCombo:'',globalFlagCombo:'',kpiCode1:'',kpiExcode1:'',createUser1:'',updateDate1:'',nodeMark1:'',dataNode1:'',dimType1:'',getValueTypeCombo:''});        	}        },'-',{        	//text   : '清空选取列表',        	text: '<span style="line-Height:1">清空选取列表</span>',        	icon: '../images/uiimages/clearscreen.png',        	handler:function(){        		var j=0,len=selectedKpiIds.length;        		var kpiCode="";				for(var i=storeKpi.getCount()-1;i>-1;i--){					for(j=len-1;j>-1;j--){						if(selectedKpiIds[j]==storeKpi.getAt(i).get("id")){							sm.deselectRow(i);						}					}				}				len=selectedKpiIds.length;				for(var i=0;i<len;i++){					//if(selectedKpiIds[i]==kpiId){					/*for(var j=i;j<len;j++){						selectedKpiIds[j]=selectedKpiIds[j+1];						selectedKpiCodes[j]=selectedKpiCodes[j+1];							//selectKpiObj[rec.get("kpiCode")]=rec.get("kpiName");					}					selectedKpiIds.length=len-1;					selectedKpiCodes.length=len-1;*/					//break;					//}					kpiCode=selectedKpiCodes[i];					delChildObjByCode(objRoot,kpiCode);					var startNode=tree.getRootNode();					var kpiNode=startNode.findChild("code",kpiCode);					kpiNode.remove();					refreshCurRulerValue(objRoot);				}				selectedKpiIds=[];				selectedKpiCodes=[];        	}        }])	});		    var sm=new Ext.grid.CheckboxSelectionModel({		listeners :{			'rowselect': function(sm, row, rec) {				var rd1=rec;   //sm.getSelected();        		var kpiId=rec.get("id");        		var kpiCode=rec.get("kpiCode");        		var kpiName=rec.get("kpiName");        		var kpiDesc=rec.get("kpiDesc");        		var kpiExcode=rec.get("kpiExcode");        		var createUser=rec.get("createUser");        		var updateDate=rec.get("updateDate");        		var dataNode=rec.get("dataNode");        		var dimType=rec.get("dimType");        		var nodeMark=rec.get("nodeMark");        		var form=kpiForm.getForm();    			form.setValues({id1:kpiId,kpiName1:kpiName,kpiDesc1:kpiDesc,kpiCode1:kpiCode,kpiExcode1:kpiExcode,createUser1:createUser,updateDate1:updateDate,nodeMark1:nodeMark,dataNode1:dataNode,dimType1:dimType});    			addSelectedKpiId(kpiId,kpiCode);        		sectionCombo.setValue(rd1.get('section'));         		kpiFlCombo.setValue(rd1.get('category'));        		globalFlagCombo.setValue(rd1.get('MKPIGlobalFlag'));        		getValueTypeCombo.setValue(rd1.get('getValueType'));        		var kpiCode=rec.get("kpiCode");        		        		var rd=rec;   //sm.getSelected();        						rd.attributes=new Object();				rd.attributes.code=rd.get('kpiCode'); 								if (seachChildObjByCode(objRoot,rd.get('kpiCode'))==""){					updateTree(rd.get('kpiCode'));         			         			//3、更新当前取数规则					objKpi=new Object();					objKpi.split=":";					objKpi.child=[];					objKpi.data=rd;        		}            },            'rowdeselect':function(sm, row, rec){            	var kpiCode=rec.get("kpiCode");            	var kpiId=rec.get("id"),len=selectedKpiIds.length;				for(var i=0;i<len;i++){					if(selectedKpiIds[i]==kpiId){						for(var j=i;j<len;j++){							selectedKpiIds[j]=selectedKpiIds[j+1];							selectedKpiCodes[j]=selectedKpiCodes[j+1];							//selectKpiObj[rec.get("kpiCode")]=rec.get("kpiName");						}						selectedKpiIds.length=len-1;						selectedKpiCodes.length=len-1;						break;					}				}            	delChildObjByCode(objRoot,kpiCode);            	//var NO=rec.get("NO");            	//delChildObjByCode(objRoot,NO);				//2、删除树节点				var startNode=tree.getRootNode();				var kpiNode=startNode.findChild("code",kpiCode);				kpiNode.remove();				//3、更新当前取数规则				refreshCurRulerValue(objRoot);			}		}	});		var columnModelKpi = new Ext.grid.ColumnModel([		sm,		{header:'ID',dataIndex:'id',sortable:true, width: 30, sortable: true,menuDisabled : true        },{header:'编码',dataIndex:'kpiCode', width: 100, sortable: true ,menuDisabled : true        },{header:'指标名称',dataIndex:'kpiName', width: 160, sortable: true ,menuDisabled : true        },{header:'指标描述',dataIndex:'kpiDesc', width: 160, sortable: true ,menuDisabled : true        },{header:'执行代码',dataIndex:'kpiExcode', width: 180, sortable: true,menuDisabled : true        },{header:'是否使用global',dataIndex:'MKPIGlobalFlag', width: 80, sortable: true,menuDisabled : true        },{header:'创建者',dataIndex:'createUser', width: 80, sortable: true,menuDisabled : true        },{header:'创建/更新日期',dataIndex:'updateDate', width: 88, sortable: true ,menuDisabled : true        },{header:'数据节点',dataIndex:'dataNode', width: 80, sortable: true ,menuDisabled : true        },{header:'维度',dataIndex:'dimType',resizable:'true',width:88, sortable: true,menuDisabled : true        },{header:'类型',dataIndex:'category',resizable:'true',width:88, sortable: true,menuDisabled : true        },{header:'区间',dataIndex:'section',resizable:'true',width:88, sortable: true,menuDisabled : true        },{header:'备注',dataIndex:'nodeMark',resizable:'true',width:88        },{header:'取值方式',dataIndex:'getValueType',resizable:'true',width:88, sortable: true,menuDisabled : true	//4.2加入        }    ]);    var storeKpi = new Ext.data.Store({        proxy: new Ext.data.HttpProxy({url:'dhcwl/kpi/getkpidata.csp?action=mulSearch'}), //&date='+dhcwl.mkpi.Util.nowDateTime()}),        reader: new Ext.data.JsonReader({            totalProperty: 'totalNum',            root: 'root',        	fields:[            	{name: 'id'},            	{name: 'kpiCode'},            	{name: 'kpiName'},            	{name: 'kpiDesc'},            	{name: 'kpiExcode'},            	{name: 'MKPIGlobalFlag'},            	{name: 'createUser'},            	{name: 'updateDate'},            	{name: 'dataNode'},            	{name: 'dimType'},            	{name: 'category'},            	{name: 'section'},            	{name: 'nodeMark'},            	{name: 'getValueType'}       		]    	}),    	listeners :{    		'load' : function( th, records,options ) {    			for(var i=storeKpi.getCount()-1;i>-1;i--){					kpiCode=storeKpi.getAt(i).get("kpiCode");					if (seachChildObjByCode(objRoot,kpiCode)!=""){						sm.selectRow(i,true,false);					}				}    			for(i=0;i<=records.length-1;i++){    				var valueType=records[i].get("getValueType");    				if (valueType==2) {    					records[i].set("getValueType","计算指标");    				}else if (valueType==1) {    					records[i].set("getValueType","普通指标");    				}    			}    		}    	}    	    });    var kpiRecorde= Ext.data.Record.create([        {name: 'id', type: 'int'},        {name: 'kpiCode', type: 'string'},        {name: 'kpiName', type: 'string'},        {name: 'kpiDesc', type: 'string'},        {name: 'kpiExcode',type: 'string'},        {name: 'MKPIGlobalFlag',type: 'string'},        {name: 'createUser', type: 'string'},        {name: 'updateDate', type: 'string'},        {name: 'dataNode', type: 'string'},        {name: 'dimType', type: 'string'},        {name: 'category', type: 'string'},        {name: 'section', type: 'string'},        {name: 'nodeMark', type: 'string'},        {name: 'getValueType', type: 'string'}	]);		var choicedSearcheCond="",searcheValue="";    var kpiListPanel = new Ext.grid.GridPanel({    	title:'指标',        id:"kpiListPanel",        width:380,        height:330,        enableColumnResize :true,        store: storeKpi,        sm:sm,        cm: columnModelKpi,        autoScroll: true,        //autoExpandColumn:'kpiCode',        bbar:new Ext.PagingToolbar({            pageSize: 20,            store: storeKpi,            displayInfo: true,            displayMsg: '第{0}条到{1}条记录,共{2}条',            emptyMsg: "没有记录",            listeners :{				'change':function(pt,page){					for(var i=storeKpi.getCount()-1;i>-1;i--){						kpiCode=storeKpi.getAt(i).get("kpiCode");						if (seachChildObjByCode(objRoot,kpiCode)!=""){							sm.selectRow(i,true,false);						}					}				}	        	            }        }),        listeners:{        	        }    });		    	    var tree = new Ext.ux.tree.TreeGrid({		id:"cfgTreePanel",		enableSort : false,		autoScroll : true,		//animate : true,		containerScroll : true,		lines :true,        columns:[{            header: '描述',            width: 250,            dataIndex: 'text'        },{            header: '编码',            width: 150,            dataIndex: 'code'        }],				loader: new Ext.tree.TreeLoader(),        tbar: new Ext.Toolbar({		    layout: 'hbox',		    items: ['当前规则：',		    		{		            flex:1,		            xtype: 'textfield',		            name: 'field1',		            id:'tfCurRuleValue'		        },"-",{		        	//text: '配置取数规则',		        	text: '<span style="line-Height:1">配置取数规则</span>',		        	icon: '../images/uiimages/config.png',		        	handler:function(){		        		mainKpiWin.show(this);		        		kpiListPanel.show();		        		storeKpi.load();		        	}		        }]       	        })				});    		var root = new Ext.tree.TreeNode( {		code:"root",		className:"",	 	parentNO:'',	 	NO:'root',	    iconCls:'task-folder',		text : '取数规则树',		draggable : false,	    	    expanded: true			//checked :false		  });		tree.setRootNode(root);        		tree.on('checkchange',function(node, checked){                if(checked){                    addCurRuleValue(node);                    refreshCurRulerValue(objRoot);                }else{                    delCurRuleValue(node);                    refreshCurRulerValue(objRoot);                }           });					        var centerPanel = new Ext.Panel({            region: 'center',            margins:'3 3 3 0',            layout:'fit',            items:tree        });                // Panel for the west        var westPanel = new Ext.Panel({            region: 'center',            split: true,            width: 330,            //collapsible: true,            margins:'3 0 3 3',            cmargins:'3 3 3 3',            layout:'fit',			items:kpiListPanel        });	//	定义指标选取窗口        var mainWin = new Ext.Window({            title: '维度选择',            modal:true,            closable:true,            width:600,            height:500,            //border:false,            plain:true,            layout: 'border',            buttonAlign:'center',            items: [centerPanel],	        buttons: [	        	{	            //text:'保存',	            text: '<span style="line-Height:1">保存</span>',	            icon: '../images/uiimages/filesave.png',	            handler:OnConfirm	        },	        {	            //text: '退出',	            text: '<span style="line-Height:1">退出</span>',	            icon: '../images/uiimages/cancel.png',	            handler: OnCancel	        }],	        listeners:{				'close':function(){					mainKpiWin.close();					mainKpiWin.destroy();					mainWin.destroy();			}		}                    });                var mainKpiWin = new Ext.Window({            title: '维度选择',            modal:true,            closable:true,            closeAction: "hide",            width:1100,            height:500,            //border:false,            plain:true,            layout: 'border',            buttonAlign:'center',            items: [{            	region: 'north',                height: 148,                //autoScroll:true,                items:kpiForm            },{region: 'center',                split: true,                width: 852,                margins:'3 0 3 3',                cmargins:'3 3 3 3',                layout:'fit',    			items:kpiListPanel}],	        buttons: [	        {	            //text: '退出',	            text: '<span style="line-Height:1">退出</span>',	            icon: '../images/uiimages/cancel.png',	            handler: function(){	            	mainKpiWin.hide();	            }	        }]                    });	function OnConfirm(){    	if (parentWin.setKpiRule) {    		//Ext.MessageBox.prompt("为这次的取数规则起个名字吧，方便再次使用。","名字：",SetRuleName);    		var ruleName="";    		var kpiRule=Ext.getCmp('tfCurRuleValue').getValue();    		if (parentWin.setKpiRule) {    			parentWin.setKpiRule(ruleName,kpiRule);    		}				        		mainWin.close();    	}else{	 	    var kpiRule=Ext.getCmp('tfCurRuleValue').getValue();		    if (parentWin.SetDatasetKpiRule) {			    parentWin.SetDatasetKpiRule("",kpiRule);			    mainWin.close();		    }   		    	}	}	this.mainKpiWinShow=function(){		mainKpiWin.show(this);	}		/*function SetRuleName(btn, text){		var ruleName="";	    if (btn == 'ok'){	        ruleName=text;	    }	    var kpiRule=Ext.getCmp('tfCurRuleValue').getValue();	    if (parentWin.setKpiRule) {		    parentWin.setKpiRule(ruleName,kpiRule);	    }				    		mainWin.close();	}*/		function OnCancel(){	     mainWin.close();		}		mainWin.on('afterrender',function( th ){		if (dhcwl.mkpi.Util.trimLeft(inputRule)!="") {			updateTree(inputRule);		}	})	                //向树控件添加一个节点。节点的编码为kpiCodes	function updateTree(kpiCodes){		var url=encodeURI('dhcwl/kpi/dimservice.csp?action=GetKpiDimAndPro&treeDeep='+treeDeep);		dhcwl.mkpi.Util.ajaxExc(url,			{				kpiCodes:kpiCodes			},			function(jsonData){				if(jsonData.success==true && jsonData.tip=="ok"){						var treeDatas=jsonData.data; 					var len=treeDatas.length;					var startNode=tree.getRootNode();					var childNode;					for (var i=0;i<=len-1;i++) {						className=treeDatas[i].className;						//var childNode;							var checkedFlag=false;						if (treeDatas[i].className!="DHCWL.MKPI.MKPI") {							if(treeDatas[i].checked=="true") checkedFlag=true;							childNode = new Ext.tree.TreeNode( {								code:treeDatas[i].code,								className:treeDatas[i].className,							 	parentNO:treeDatas[i].parentNO,							 	NO:treeDatas[i].NO,							    iconCls:'task-folder',								text :treeDatas[i].text,								draggable : false,	 							    expanded: false,							    checked:checkedFlag							  });							}else{							childNode = new Ext.tree.TreeNode( {							code:treeDatas[i].code,							className:treeDatas[i].className,						 	parentNO:treeDatas[i].parentNO,						 	NO:treeDatas[i].NO,						    iconCls:'task-folder',							text :treeDatas[i].text,							draggable : false,	 						    expanded: false						  });														}						var pNode=searchNodeByPNO(startNode,treeDatas[i].parentNO);						if (pNode.length>0) {							pNode[0].appendChild(childNode);							if (checkedFlag) {								childNode.ui.toggleCheck(true);  								childNode.attributes.checked = true; 							}						}												//维护数据结构							if(treeDatas[i].className=="DHCWL.MKPI.MKPI") {								var objNode=new Object();								objNode.data=childNode;																objNode.split=":";								objNode.child=[];								objRoot.child.push(objNode);							}else if(treeDatas[i].className=="DHCWL.MKPI.MKPIDimensions" && checkedFlag) {								var objNode=new Object();								objNode.data=childNode;																addCurRuleValue(childNode)							}else if(treeDatas[i].className=="DHCWL.MKPI.Section" && checkedFlag) {								var objNode=new Object();								objNode.data=childNode;																			addCurRuleValue(childNode)													}else if(treeDatas[i].className=="DHCWL.MKPI.DimProperty" && checkedFlag) {								var objNode=new Object();								objNode.data=childNode;																			addCurRuleValue(childNode)												}else if(treeDatas[i].className=="DHCWL.MKPI.SectionProperty" && checkedFlag){								var objNode=new Object();								objNode.data=childNode;																			addCurRuleValue(childNode)													}																	}   				}else{					}			refreshCurRulerValue(objRoot);			mainWin.body.unmask(); 		},this);					mainWin.body.mask("数据加载中，请稍等");  	}		function searchNodeByPNO(startNode,PNO) {	    var r = [];	    var f = function(){	    	var falsecnt=0;	    	var attrib=this.attributes;		    	if (attrib.NO==PNO) {				falsecnt=1	    	}	        		 	        		        if(falsecnt==1){	            r.push(this);	        }	    };	    startNode.cascade(f);	    return r;	}		function addCurRuleValue(node){		var dimNode="";		var kpiNode="";		var proNode="";		if (node.attributes.className=='DHCWL.MKPI.DimProperty' || node.attributes.className=='DHCWL.MKPI.SectionProperty') {			dimNode=node.parentNode;			kpiNode=dimNode.parentNode;			proNode=node;		}		if (node.attributes.className=='DHCWL.MKPI.MKPIDimensions' || node.attributes.className=='DHCWL.MKPI.Section') {			kpiNode=node.parentNode;			dimNode=node;		}				//通过KPI树节点找到KPI对象		//var objKpi=getKpiObj(kpiNode);		//var objKpi=seachChildObjByCode(objRoot,kpiNode.attributes.code);		var objKpi=seachChildObjByNO(objRoot,kpiNode.attributes.NO);		if (objKpi!="") {			//在KPI对象里面找这个维度节点是否存在。			//objDim=seachChildObjByCode(objKpi,dimNode.attributes.code);			objDim=seachChildObjByNO(objKpi,dimNode.attributes.NO);			//如果维度对象不存在，添加维度对象。			if (objDim==0) {				objDim=new Object();				objDim.split="^";				objDim.data=dimNode;				objDim.child=[];				objKpi.child.push(objDim);										}			//当前勾选的是属性树节点，添加属性对象			if (proNode!=""){				objPro=new Object();				objPro.split=".";				objPro.data=proNode;				objDim.child.push(objPro);										}		}	}		function delCurRuleValue(node){		var dimNode="";		var kpiNode="";		var proNode="";		if (node.attributes.className=='DHCWL.MKPI.MKPIDimensions' || node.attributes.className=='DHCWL.MKPI.Section') {			kpiNode=node.parentNode;			dimNode=node;						//检查该属性下是否有维度节点被勾选			var hasChkChild=dimNode.findChild('checked',true);					if (hasChkChild) return;		}				if (node.attributes.className=='DHCWL.MKPI.DimProperty' || node.attributes.className=='DHCWL.MKPI.SectionProperty') {			dimNode=node.parentNode;			kpiNode=dimNode.parentNode;			proNode=node;		}				//通过KPI树节点找到KPI对象		var objKpi=seachChildObjByNO(objRoot,kpiNode.attributes.NO);		if (objKpi!="") {			//当前勾选的是属性树节点，添加属性对象			if (proNode!=""){				//在KPI对象里面找这个维度节点是否存在。				objDim=seachChildObjByNO(objKpi,dimNode.attributes.NO);				delChildObjByNO(objDim,proNode.attributes.NO);								if (dimNode.attributes.checked==false) {	//如果维度节点未勾选，并且维度的子节点没勾选，就删除这个维度节点					var hasChkChild=dimNode.findChild('checked',true);							if (hasChkChild) return;					delChildObjByNO(objKpi,dimNode.attributes.NO);				}			}else{				delChildObjByNO(objKpi,dimNode.attributes.NO);			}		}	}			function getKpiObj(kpiNode){		var ret=0;			var kpiDatas=objRoot.child;		for(var kpiLen=kpiDatas.length-1;kpiLen>-1;kpiLen--){			if(kpiDatas[kpiLen].data.code==kpiNode.attributes.code){				ret=kpiDatas[kpiLen];				break;			}		}		return ret ;	}			function seachChildObjByCode(objParent,code){		var  find=0;		var ret="";		var datas=objParent.child;		if (datas) {			for(var i=0;i<=datas.length-1;i++){				var objData=datas[i].data;				if (code==objData.attributes.code) {					find=1;					ret=datas[i];					break;				}			}		}		return ret;	}		function seachChildObjByNO(objParent,NO){		var  find=0;		var ret="";		var datas=objParent.child;		if (datas) {			for(var i=0;i<=datas.length-1;i++){				var objData=datas[i].data;				if (NO==objData.attributes.NO) {					find=1;					ret=datas[i];					break;				}			}		}		return ret;	}		function delChildObjByCode(objParent,code){		var  find=0;		var ret="";		var datas=objParent.child;		var newChild=new Array();		if (datas) {			for(var i=0;i<=datas.length-1;i++){				if (code!=datas[i].data.attributes.code) {					newChild.push(datas[i]);				}			}		}		objParent.child=newChild;	}			 function addSelectedKpiId(id,code){	    	if(!id||id=="") return;			for(var i=selectedKpiIds.length-1;i>-1;i--){				if(selectedKpiIds[i]==id)					return;			}			selectedKpiIds.push(id);			selectedKpiCodes.push(code);	    }		function delChildObjByNO(objParent,NO){		var  find=0;		var ret="";		var datas=objParent.child;		var newChild=new Array();		if (datas) {			for(var i=0;i<=datas.length-1;i++){				if (NO!=datas[i].data.attributes.NO) {					newChild.push(datas[i]);				}			}		}		objParent.child=newChild;	}		function refreshCurRulerValue(objRoot) {		var ruleValue="";		var kpiDatas=objRoot.child;		var kpiSplit=objRoot.split;		for(var kpiLen=0;kpiLen<=kpiDatas.length-1;kpiLen++){			var objKpi=kpiDatas[kpiLen].data;						var kpiCode=objKpi.attributes.code;						var dimDatas=kpiDatas[kpiLen].child;			var kpiV="";			if (dimDatas && dimDatas.length>0) {				var dimValues="";				for(var dimLen=0;dimLen<=dimDatas.length-1;dimLen++){					var dimV="";					var objDim=dimDatas[dimLen].data;					var dimCode=objDim.attributes.code;							if (objDim.attributes.className=="DHCWL.MKPI.Section") dimCode="$"+dimCode;					var proDatas=dimDatas[dimLen].child;					if(proDatas && proDatas.length){						for(var proLen=0;proLen<=proDatas.length-1;proLen++){							var objPro=proDatas[proLen].data;							var proV=objPro.attributes.code;							var proV=dimCode+proDatas[proLen].split+proV;							if (dimV!="") dimV=dimV+dimDatas[dimLen].split;							dimV=dimV+proV;						}											}else{						dimV=dimCode;					}					if (dimValues!="") dimValues=dimValues+dimDatas[dimLen].split;					dimValues=dimValues+dimV;				}				if (dimValues) kpiV=kpiCode+kpiDatas[kpiLen].split+dimValues;				else kpiV=kpiCode;							}else{				kpiV=kpiCode;			}			if (ruleValue!="") ruleValue=ruleValue+objRoot.split;			ruleValue=ruleValue+kpiV;		}		Ext.getCmp('tfCurRuleValue').setValue(ruleValue);			}			this.show=function(){		mainWin.show(this);	}		this.hideToolbar=function(){				var bbar=kpiListPanel.getBottomToolbar(); 		if(bbar) bbar.hide();		var tbar=kpiListPanel.getTopToolbar(); 				if(tbar) tbar.hide();	}		this.setSelectedKpiArr=function(arr){		this.inputRuleAry=arr;	}		this.setSelectedKpiCode=function(inRuleValue){		inputRule=inRuleValue;	}			this.setParentWin=function(win){		parentWin=win;	}		}