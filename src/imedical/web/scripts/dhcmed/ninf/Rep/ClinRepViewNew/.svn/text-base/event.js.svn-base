function InitClinRepToAdmEvent(obj){
	obj.LoadEvent = function(args)
	{
		obj.CurrTypeIndex = -1;
		obj.btnRepType_OnClick(-1);
  	};
	
	//报告类型单击事件
	obj.btnRepType_OnClick = function(aTypeIndex)
	{
		obj.CurrTypeIndex = aTypeIndex;
		obj.LoadReportData(aTypeIndex);
		
		var TDIndex = aTypeIndex*1+1;
		for (var tmpIndex = 0; tmpIndex <= obj.RepTypeList.length; tmpIndex++){
			if (tmpIndex == TDIndex){
				var objTD = document.getElementById("tdRepType" + tmpIndex);
				if (objTD) objTD.style.backgroundColor="#4499EE";
			} else {
				var objTD = document.getElementById("tdRepType" + tmpIndex);
				if (objTD) objTD.style.backgroundColor="#4C4C4C";
			}
		}
		
		setTimeout('objScreen.ViewReportData(' + aTypeIndex + ')',500);
	}
	
	//显示报告信息
	obj.ViewReportData = function(aTypeIndex)
	{
		if (aTypeIndex == -1) {
			obj.RepXTemplate.overwrite("RepXTemplateDIV", obj.RepTypeList);
		} else {
			//obj.RepXTemplate.overwrite("RepXTemplateDIV", [obj.RepTypeList[aTypeIndex]]);
			obj.RepXTemplate.overwrite("RepXTemplateDIV", obj.RepTypeList[aTypeIndex]);
		}
		//设置基本信息X轴滚动条位置
		setTimeout('objScreen.setBaseInfoScrollLeft("divInfCtlResult")',500);
	}
	
	//加载报告数据
	obj.LoadReportData = function(aTypeIndex)
	{
		for (var indRepType = 0; indRepType < obj.RepTypeList.length; indRepType++) {
			if ((aTypeIndex != -1)&&(aTypeIndex != indRepType)) continue;
			
			var objRepType = obj.RepTypeList[indRepType];
			if ((objRepType.TypeCate == 'INF')&&(objRepType.TypeCode == '3')) {
				obj.LoadINF3Data(indRepType,'ErrXTemplateDIV');
			}
			
		}
	}
	
	//加载医院感染管理第三版程序
	obj.LoadINF3Data = function(indType)
	{
		obj.RepTypeList[indType].ReportList.length = 0;
		obj.RepTypeList[indType].ReportCount = 0;
		Ext.Ajax.request({
			url : ExtToolSetting.RunQueryPageURL,
			method : "POST",
			params  : {
				ClassName : 'DHCMed.NINFService.Rep.InfReport',
				QueryName : 'QryReportByAdm',
				Arg1 : EpisodeID,
				Arg2 : '',
				ArgCnt : 2
			},
			success: function(response, opts) {
				var objData = Ext.decode(response.responseText);
				
				var objRepType = obj.RepTypeList[indType];
				var objItem = null;
				for(var i = 0; i < objData.total; i ++)
				{
					objItem = objData.record[i];
					if (!objItem) continue;
					
					var ind = objRepType.ReportList.length;
					objRepType.ReportList[ind] = objItem;
					objRepType.ReportCount++;
				}
				obj.RepTypeList[indType] = objRepType;
			},
			failure: function(response, opts) {
				var objTargetElement = document.getElementById(errDiv);
				if (objTargetElement) {
					objTargetElement.innerHTML = response.responseText;
				}
			}
		});
		
		obj.RepTypeList[indType].InfCasesList = new Array();
		obj.RepTypeList[indType].InfCasesCount = 0;
		Ext.Ajax.request({
			url : ExtToolSetting.RunQueryPageURL,
			method : "POST",
			params  : {
				ClassName : 'DHCMed.NINFService.BC.CasesSrv',
				QueryName : 'QryHandleDtl',
				Arg1 : SubjectCode,
				Arg2 : EpisodeID,
				ArgCnt : 2
			},
			success: function(response, opts) {
				var objData = Ext.decode(response.responseText);
				
				var objRepType = obj.RepTypeList[indType];
				var objItem = null;
				for(var i = 0; i < objData.total; i ++)
				{
					objItem = objData.record[i];
					if (!objItem) continue;
					
					var ind = objRepType.InfCasesList.length;
					objRepType.InfCasesList[ind] = objItem;
					objRepType.InfCasesCount++;
				}
				obj.RepTypeList[indType] = objRepType;
			},
			failure: function(response, opts) {
				var objTargetElement = document.getElementById(errDiv);
				if (objTargetElement) {
					objTargetElement.innerHTML = response.responseText;
				}
			}
		});
		
		return;	//add by zf 2014-09-02
		var strDateList = ExtTool.RunServerMethod("DHCMed.NINFService.BC.CasesXSrv", "GetCtlDateList", SubjectCode, EpisodeID);
		if (!strDateList) return;
		var arrDateList = strDateList.split(',');
		obj.RepTypeList[indType].CtlDateList = arrDateList;
		obj.RepTypeList[indType].CtlDateListI = new Array();
		obj.RepTypeList[indType].CtlRstList = new Array();
		obj.RepTypeList[indType].CtlRstListI = new Array();
		for (var indDate = 0; indDate < arrDateList.length; indDate++) {
			var tmpDate = arrDateList[indDate];
			obj.RepTypeList[indType].CtlDateListI[tmpDate] = indDate;
		}
		Ext.Ajax.request({
			url : ExtToolSetting.RunQueryPageURL,
			method : "POST",
			params  : {
				ClassName : 'DHCMed.NINFService.BC.CasesXSrv',
				QueryName : 'QryCtlResult',
				Arg1 : SubjectCode,
				Arg2 : EpisodeID,
				ArgCnt : 2
			},
			success: function(response, opts) {
				var objData = Ext.decode(response.responseText);
				
				var objInfCtlRst = obj.RepTypeList[indType];
				var objItem = null;
				for(var i = 0; i < objData.total; i ++)
				{
					objItem = objData.record[i];
					if (!objItem) continue;
					if (typeof(objInfCtlRst.CtlDateListI[objItem.OccurDate]) == 'undefined') continue;
					
					var ItemCat = objItem.ItemCatID;
					var ItemSubCat = objItem.SubCatID;
					var indexItemCat = ItemCat + '-' + ItemSubCat;
					
					if (typeof(objInfCtlRst.CtlRstListI[indexItemCat]) != 'undefined') {
						var ind = objInfCtlRst.CtlRstListI[indexItemCat];
						var objSubCat = objInfCtlRst.CtlRstList[ind];
						if (typeof(objSubCat.ItemDateList[objItem.OccurDate]) != 'undefined') {
						} else {
							objSubCat.ItemDateList[objItem.OccurDate] = {
								ItemDate : objItem.OccurDate,
								ItemList : new Array
							}
						}
					} else {
						var objSubCat = {
							ItemCatID : objItem.ItemCatID,
							ItemCat : objItem.ItemCatDesc,
							ItemSubCatID : objItem.SubCatID,
							ItemSubCat : objItem.SubCatDesc,
							ItemDateList : new Array()
						}
						objSubCat.ItemDateList[objItem.OccurDate] = {
							ItemDate : objItem.OccurDate,
							ItemList : new Array
						}
						var ind = objInfCtlRst.CtlRstList.length;
						objInfCtlRst.CtlRstListI[indexItemCat] = ind;
						objInfCtlRst.CtlRstList[ind] = objSubCat;
					}
					var ind = objSubCat.ItemDateList[objItem.OccurDate].ItemList.length;
					objSubCat.ItemDateList[objItem.OccurDate].ItemList[ind] = objItem;
					var ind = objInfCtlRst.CtlRstListI[indexItemCat];
					objSubCat.CtlDateList = new Array();
					objSubCat.CtlDateList = objInfCtlRst.CtlDateList;
					objInfCtlRst.CtlRstList[ind] = objSubCat;
				}
				obj.RepTypeList[indType] = objInfCtlRst;
			},
			failure: function(response, opts) {
				var objTargetElement = document.getElementById(errDiv);
				if (objTargetElement) {
					objTargetElement.innerHTML = response.responseText;
				}
			}
		});
	}
	
	obj.setBaseInfoScrollLeft = function(aCmpId)
	{
		var XTable = document.getElementById(aCmpId + '-x-table');
		var Table = document.getElementById(aCmpId + '-table');
		var XScroll = document.getElementById(aCmpId + '-x-scroll');
		var Scroll = document.getElementById(aCmpId + '-scroll');
		if ((!XTable)||(!Table)||(!XScroll)||(!Scroll)) return;
		
		XTable.style.width = ((Table.width + 20)/100) + "px";
		XScroll.scrollLeft = XScroll.scrollWidth;
		Scroll.scrollLeft = Scroll.scrollWidth;
		
		XScroll.onscroll = function (e) {
			Scroll.scrollLeft = XScroll.scrollLeft;
		}
	}
		
	obj.OpenReportWinByCom = function(aTypeCate,aTypeCode,aRowID){
		var t=new Date();
		t=t.getTime();
		if ((aTypeCate == 'INF')&&(aTypeCode  == '3')){
			var lnk="dhcmed.ninf.rep.infreport.csp?1=1&ReportID="+aRowID+"&EpisodeID="+EpisodeID+"&AdminPower="+obj.AdminPower + "&t=" + t;
			obj.viewReportWin('win' + aTypeCate + aTypeCode + 'Report',lnk);
		}
	}
	
	obj.OpenReportWinByTp = function(aTypeCate,aTypeCode,aRepType){
		var t=new Date();
		t=t.getTime();
		if ((aTypeCate == 'INF')&&(aTypeCode  == '3')){
			var lnk="dhcmed.ninf.rep.infreport.csp?1=1&ReportType=" + aRepType + "&EpisodeID=" + EpisodeID + "&TransLoc=" + "" + "&AdminPower=" + "&t=" + t;
			obj.viewReportWin('win' + aTypeCate + aTypeCode + 'Report',lnk);
		}
	}
	
	//疑似病例筛查 摘要信息
	obj.ViewInfBaseInfo = function(aEpisodeID)
	{
		var objDisplayWin = new InitPatientDtl(aEpisodeID, SubjectCode);
		objDisplayWin.WinPatientDtl.show();
	}
	
	//疑似病例筛查 处置动作
	obj.btnHandle_onClick = function(aEpisodeID, aOperation)
	{
		var Operation = ExtTool.RunServerMethod("DHCMed.NINFService.BC.CommonSrv", "GetHandleGradeByCode", aOperation);
		if (!Operation) return;
		
		//检查处置操作与当前状态是否符合
		var flg = ExtTool.RunServerMethod("DHCMed.NINFService.BC.CasesSrv", "CheckCasesHandle", "HB", SubjectCode, aEpisodeID, aOperation);
		if (parseInt(flg) < 1) {
			var arrError = flg.split('^');
			if (arrError[0] == '-1') {
				ExtTool.alert('错误提示',arrError[1]);
			} else if (arrError[0] == '-999') {
				ExtTool.alert('错误提示',arrError[1]);
			} else {
				ExtTool.alert('错误提示','Error:' + flg);
			}
			return;
		}
		
		if (aOperation == '5') {
			//疑似病例处置(感染结束)
			var flg = ExtTool.RunServerMethod("DHCMed.NINFService.BC.CasesSrv", "CloseCasesHandle", "HB", SubjectCode, aEpisodeID, Operation, session['LOGON.CTLOCID'], session['LOGON.USERID']);
			if (parseInt(flg) > 0) {
				//重新加载当前患者疑似病例筛查数据
				ExtTool.alert('提示','【' + Operation + '】操作成功!');
				obj.WindowRefresh_Handler();
			} else if (parseInt(flg)== 0){
				ExtTool.alert('错误提示',"无处置记录或本次感染已结束!");
			} else {
				ExtTool.alert('错误提示','【' + Operation + '】操作错误!Error=' + flg);
			}
		} else {
			ExtTool.prompt("提示", "请输入处置意见!", function(btn, txt) {
				if (btn == 'ok') {
					//处置意见取值
					var Opinion = txt;
					if (((aOperation == '1')||(aOperation == '2')||(aOperation == '3'))&&(Opinion == '')) {
						ExtTool.alert('提示','【' + Operation + '】操作需要填写"处置意见",请完成后再提交!');
						return;
					}
					
					var flg = ExtTool.RunServerMethod("DHCMed.NINFService.BC.CasesSrv", "ProcCasesHandle", "HB", SubjectCode, aEpisodeID, "", aOperation, Opinion, session['LOGON.CTLOCID'], session['LOGON.USERID'],0);
					if (parseInt(flg) > 0) {
						//重新加载当前患者疑似病例筛查数据
						if (aOperation == '3') {
							ExtTool.alert('提示','【' + Operation + '】操作成功,请及时上报医院感染报告,确诊未报卡以漏报处理!');
						} else {
							ExtTool.alert('提示','【' + Operation + '】操作成功!');
						}
						obj.WindowRefresh_Handler();
					} else {
						ExtTool.alert('错误提示','【' + Operation + '】操作错误!Error=' + flg);
					}
				}
			});
		}
	}
	
	obj.tabCancelHandle_onDblClick = function(aHandleType,aHandleID)
	{
		if (aHandleType != 'HB') {
			ExtTool.alert('错误提示','仅能撤消自己的处置记录');
			return;
		}
		//取消处置记录
		var flg = ExtTool.RunServerMethod("DHCMed.NINFService.BC.CasesSrv", "CancelCasesHandle", 'HB', aHandleID, session['LOGON.CTLOCID'], session['LOGON.USERID']);
		if (parseInt(flg) > 0) {
			//重新加载当前患者疑似病例筛查数据
			var EpisodeID = flg;
			//obj.LoadAdmCasesX(EpisodeID);
		} else {
			var tmpRet=flg.split('^');
			if (tmpRet[0] == '-999') {
				ExtTool.alert('错误提示','取消处置记录失败!Error:' + tmpRet[1]);
			} else if (tmpRet[0] == '-1') {
				ExtTool.alert('错误提示',tmpRet[1]);
			} else {
				ExtTool.alert('错误提示','取消处置记录失败!Error=' + flg);
			}
		}
		//刷新
		obj.WindowRefresh_Handler();
	}
	
	obj.viewReportWin = function(winid,url){
		if (ExtWinOpen == 1) {
			/* CS程序需要用到这种方式，无法弹出页面 */
			var win_report = new Ext.Window({
				id : winid,
				width : (window.screen.availWidth - 200),
				height : (window.screen.availHeight - 50),
				modal : true,
				plain : true,
				html : '<iframe id="' + winid + '" width=100% height=100% frameborder=0 scrolling=auto src="' + url + '"></iframe>'
			});
			win_report.show();
		} else {
			var sFeatures = "dialogWidth=" + window.screen.availWidth + "px;dialogHeight=" + window.screen.availHeight + "px;resizable=no;"
			window.showModalDialog(url,"",sFeatures);
			obj.btnRepType_OnClick(obj.CurrTypeIndex);
			//var oWin = window.open(url,'',"height=" + (window.screen.availHeight - 50) + ",width=" + (window.screen.availWidth - 200) + ",top=0,left=100,resizable=no");
		}
	}
	
	obj.WindowRefresh_Handler = function()
	{
		obj.btnRepType_OnClick(obj.CurrTypeIndex);
	}
}
