function InitwinEditInfEndDate(ReportID){	var obj = new Object();  var objReport = ExtTool.RunServerMethod("DHCMed.NINF.Rep.InfReport", "GetObjById", ReportID);  var objAdm = ExtTool.RunServerMethod("DHCMed.Base.PatientAdm", "GetObjById", objReport.EpisodeID);	var objConn = new Ext.data.Connection({url : ExtToolSetting.RunQueryPageURL});	objConn.on('requestcomplete',				function(conn, response, Options){				if(response.responseText.indexOf('<b>CSP Error</b>')>-1)					ExtTool.alert('Error', response.responseText, Ext.MessageBox.ERROR);				}			);	obj.gridInfPosStoreProxy = new Ext.data.HttpProxy(objConn);	obj.gridInfPosStore = new Ext.data.Store({		proxy: obj.gridInfPosStoreProxy,		reader: new Ext.data.JsonReader({			root: 'record',			totalProperty: 'total',			idProperty: 'SubID'		}, 		[			{name: 'checked', mapping : 'checked'}			,{name: 'RepID', mapping: 'RepID'}			,{name: 'SubID', mapping: 'SubID'}			,{name: 'InfPosID', mapping: 'InfPosID'}			,{name: 'InfPosDesc', mapping: 'InfPosDesc'}			,{name: 'InfDiagnosDesc', mapping: 'InfDiagnosDesc'}			,{name: 'InfDate', mapping: 'InfDate'}			,{name: 'InfDiagnosID', mapping: 'InfDiagnosID'}			,{name: 'InfPosOprValues', mapping: 'InfPosOprValues'}			,{name: 'InfPosOprDescs', mapping: 'InfPosOprDescs'}			,{name: 'DataSource', mapping: 'DataSource'}			,{name: 'InfEndDate', mapping: 'InfEndDate'}			,{name: 'InfEndResultID', mapping: 'InfEndResultID'}			,{name: 'InfEndResultDesc', mapping: 'InfEndResultDesc'}		])	});	var objConn = new Ext.data.Connection({url : ExtToolSetting.RunQueryPageURL});	objConn.on('requestcomplete',				function(conn, response, Options){				if(response.responseText.indexOf('<b>CSP Error</b>')>-1)					ExtTool.alert('Error', response.responseText, Ext.MessageBox.ERROR);				}			);	obj.cboInfResultStoreProxy = new Ext.data.HttpProxy(objConn);	obj.cboInfResultStore = new Ext.data.Store({		proxy: obj.cboInfResultStoreProxy,		reader: new Ext.data.JsonReader({			root: 'record',			totalProperty: 'total',			idProperty: 'myid'		}, 		[			{name: 'checked', mapping : 'checked'}			,{name: 'myid', mapping: 'myid'}			,{name: 'Code', mapping: 'Code'}			,{name: 'Description', mapping: 'Description'}			,{name: 'Type', mapping: 'Type'}			,{name: 'Active', mapping: 'Active'}			,{name: 'HispsDescs', mapping: 'HispsDescs'}			,{name: 'DateFrom', mapping: 'DateFrom'}			,{name: 'DateTo', mapping: 'DateTo'}			,{name: 'HospDr', mapping: 'HospDr'}		])	});	obj.cboInfResult = new Ext.form.ComboBox({		store : obj.cboInfResultStore		,minChars : 1		,displayField : 'Description'		,fieldLabel : '感染转归'		,valueField : 'myid'		,editable : false		,triggerAction : 'all'	});			obj.cboInfResultStoreProxy.on('beforeload', function(objProxy, param){			param.ClassName = 'DHCMed.SSService.DictionarySrv';			param.QueryName = 'QrySSDictionary';			param.Arg1 = 'NINFInfEndResult';			param.ArgCnt = 1;	});			obj.cboInfResultStore.load({});			obj.dtInfEndDate = new Ext.form.DateField({format : 'Y-m-d'});				obj.gridInfPosCheckCol = new Ext.grid.CheckColumn({header:'', dataIndex: 'checked', width: 50 });	obj.gridInfPos = new Ext.grid.EditorGridPanel({		store : obj.gridInfPosStore		,buttonAlign : 'center'		,columns: [			new Ext.grid.RowNumberer()			,{header: '感染部位', width: 100, dataIndex: 'InfPosDesc', sortable: true}			,{header: '感染诊断', width: 100, dataIndex: 'InfDiagnosDesc', sortable: true}			,{header: '感染日期', width: 100, dataIndex: 'InfDate', sortable: true}			,{header: '感染截止日期', width: 100, dataIndex: 'InfEndDate', sortable: true ,format : "Y-m-d", editor : obj.dtInfEndDate} 			,{header: '感染转归', width: 100, dataIndex: 'InfEndResultDesc', sortable: true , editor : obj.cboInfResult} 		]});	obj.btnSave = new Ext.Button({		text : '保存'});	obj.btnCancel = new Ext.Button({		text : '取消'});	obj.winEditInfEndDate = new Ext.Window({		height : 200		,buttonAlign : 'center'		,width : 600		,title : '修改感染结束日期'		,layout : 'fit'		,modal : true		,items:[			obj.gridInfPos		]	,	buttons:[			obj.btnSave			,obj.btnCancel		]	});	obj.gridInfPosStoreProxy.on('beforeload', function(objProxy, param){			param.ClassName = 'DHCMed.NINFService.Rep.InfReportInfPos';			param.QueryName = 'QrySubRec';			param.Arg1 = ReportID;			param.Arg2 = '';			param.ArgCnt = 2;	});	obj.gridInfPosStore.load({});			    	obj.btnSave_click = function()	{		var objData = null;		var RowID = "";		var EndDate = "";		var EndResultID = "";		var strError = "";		for(var i = 0; i < obj.gridInfPosStore.getCount(); i ++)		{			objData = obj.gridInfPosStore.getAt(i);			strError = "";			if((objData.get("InfResultID") == "")&&(objData.get("InfEndDate") != ""))			{				strError += "第" + (i + 1) + "行数据，请选择医院感染转归结果！";			}			if((objData.get("InfEndDate") == "")&&(objData.get("InfResultID") != ""))			{				strError += "第" + (i + 1) + "行数据，请选择医院感染转归日期！";			}						if(strError != "")			{				ExtTool.alert("提示", strError, Ext.MessageBox.INFO);				return;			}			RowID = objData.get("RepID") + "||" + objData.get("SubID");			EndDate = objData.get("InfEndDate");			EndResultID = objData.get("InfEndResultID");			ExtTool.RunServerMethod("DHCMed.NINFService.Rep.InfReportInfPos", "SaveInfEndResult", RowID, EndDate, EndResultID);		}		obj.gridInfPosStore.load({});		ExtTool.alert("提示", "医院感染截止日期修改成功！", Ext.MessageBox.INFO);	};		obj.btnCancel_click = function()	{		obj.winEditInfEndDate.close();	};		obj.gridInfPos_beforeedit = function(objEvent)	{		//var colModal = obj.gridInfPos.getColumnModel() ;		//var objEditor = colModal.getCellEditor(objEvent.column, objEvent.row);		obj.dtInfEndDate.setMinValue(Date.parseDate(objEvent.record.get("InfDate"), "Y-m-d"));		obj.dtInfEndDate.setMaxValue(new Date());		}			obj.gridInfPos_validateedit = function(objEvent)	{		var objDataPos = objEvent.record;		if(objEvent.column == 4)		{			if(objEvent.value == '')			{				objEvent.value = "";			}			else			{			//var newDate = new Date(objEvent.value).format("Y-m-d");				objEvent.value = new Date(objEvent.value).format("Y-m-d");			}		}		if(objEvent.column == 5)		{						if(obj.cboInfResult.getValue() != "")			{				var Index = obj.cboInfResultStore.find("myid", obj.cboInfResult.getValue());				var objData = obj.cboInfResultStore.getAt(Index);				var strCode = objData.get("Code");				if((objAdm.DisDate == "") && ((strCode == '3') || (strCode == '4')))				{					ExtTool.alert("提示", "【恶化】，【携带】选项只能在患者出院后才能选择！", Ext.MessageBox.INFO);					objEvent.cancel = true;					return;				}				objEvent.value = obj.cboInfResult.getRawValue();				objDataPos.set("InfEndResultID", obj.cboInfResult.getValue());			}			else			{				objEvent.cancel = true;			}		}										//objData.set("InfEndDate", );		//objData.commit();	};      	//事件处理代码	obj.btnSave.on("click", obj.btnSave_click, obj);	obj.btnCancel.on("click", obj.btnCancel_click, obj);	obj.gridInfPos.on("validateedit", obj.gridInfPos_validateedit);	obj.gridInfPos.on("beforeedit", obj.gridInfPos_beforeedit);  return obj;}window.ShowInfEndDateWindow = function(ReportID){	var obj = new InitwinEditInfEndDate(ReportID);	obj.winEditInfEndDate.show();}