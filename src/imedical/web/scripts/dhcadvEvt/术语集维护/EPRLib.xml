<?xml version="1.0"?>
<doc>
<assembly>
<name>
EPRLib
</name>
</assembly>
<members>
<member name="P:dhcc.epr.eprlib.design.metadatadesign.MITextDescProperty.MITextDesc">
	<summary>
 E单元元数据属性
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MITextDescProperty.cbxKBPart_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 知识库部分下拉框改变事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MITextDescProperty.btnAddKBNode_Click(System.Object,System.EventArgs)">
	<summary>
 给E单元绑定独立知识库
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MITextDescProperty.chkBindDefaultKB_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 E单元是否根据疾病自动绑定默认知识库
 </summary>
	<remarks>让E单元自己决定是否与病种关联默认知识库，之前是由参数决定</remarks>
</member><member name="P:My.Resources.Resources.ResourceManager">
	<summary>
  返回此类使用的缓存 ResourceManager 实例。
</summary>
</member><member name="P:My.Resources.Resources.Culture">
	<summary>
  为使用此强类型资源类的所有资源查找
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member><member name="T:My.Resources.Resources">
	<summary>
  强类型资源类，用于查找本地化字符串等。
</summary>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_EpisodeID">
	<summary>
 就诊号
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_MRDiagnos">
	<summary>
 诊断数据
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_EpsoideList">
	<summary>
 就诊信息类实例
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_BindMIDictionary">
	<summary>
 字典相关
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_DictionaryForm">
	<summary>
 字典窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_DiagnosTypeID">
	<summary>
 诊断类型
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_PresentDiagnosTypeID">
	<summary>
 目前诊断
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_UserID">
	<summary>
 当前用户
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.dsType">
	<summary>
 类型集（诊断状态、转归属性）
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.DTEvaluation">
	<summary>
 转归属性表
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.DTEffect">
	<summary>
 诊断状态表
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.DTDiagnosType">
	<summary>
 诊断类型表
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_PatientID">
	<summary>
 就诊病人
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_Level">
	<summary>
 级别
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_StyleRadio">
	<summary>
 默认当前引用方式
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.StyleScheme">
	<summary>
 引用格式
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_ButtionList">
	<summary>
 存储datagridview中按钮信息
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.bEditMode">
	<summary>
 设置一个开关，表示编辑状态
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.m_CurrentDiagnosQuoteTable">
	<summary>
 当前引用类型诊断列表
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.MDiagnosTypeID">
	<summary>
 诊断类型
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.DiagnosDicForm_Load(System.Object,System.EventArgs)">
	<summary>
 LoadAll数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.InitButtionList">
	<summary>
 将datagridview按钮加入List
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.LoadDiagnos">
	<summary>
 加载记录、诊断类型
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.LoadDiagnosAllData(System.String)">
	<summary>
 查询数据并按类型加载诊断数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.SetCurrentDiagnos">
	<summary>
 复制上次诊断
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.InitDic">
	<summary>
 转归、状态、诊断类型加载
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.SetComBox(System.Windows.Forms.ComboBox,System.Data.DataTable)">
	<summary>
 初始化combobox
 </summary>
	<param name="cmb">combobox名称</param>
	<param name="dt">数据源</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.SetCbEvaluationIndex">
	<summary>
 设置诊断类型默认值
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.dgvMRDiagnos_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 级别操作
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.DiagnosSave">
	<summary>
 保存级别调序、 复制为当前诊断
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.btAdd_Click(System.Object,System.EventArgs)">
	<summary>
 保存新增或修改数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.UpdataOrInsert(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 修改或插入数据
 </summary>
	<param name="EpsodeID">就诊号</param>
	<param name="MrID">就诊ID</param>
	<param name="SubID">就诊子ID</param>
	<param name="TypeID">类型ID</param>
	<param name="IcdID">诊断ID</param>
	<param name="IcdName">诊断名称</param>
	<param name="Evaluation">转归属性</param>
	<param name="Effect">类型属性</param>
	<param name="UserID">用户ID</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.ClearControls">
	<summary>
 保存好清除数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.dgvMRDiagnos_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 双击修改数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.DiagnosMove(System.Windows.Forms.DataGridView,System.Boolean)">
	<summary>
 就诊记录移动
 </summary>
	<param name="dgvTemp">就诊列表</param>
	<param name="Flag">移动方向,true 向上,false 向下</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.GetRowData(System.Windows.Forms.DataGridView,System.Int32)">
	<summary>
 从datagridview 或得 datatblerow
 </summary>
	<param name="dgvTemp">当前的datagridview</param>
	<param name="index">选择行值</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.tbICD_TextChanged(System.Object,System.EventArgs)">
	<summary>
 逐字录入检索
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.lbICDS_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 选择诊断记录
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.tbICD_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 诊断集合获得焦点,并选中第一条
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.lbICDS_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 选中回车就隐藏诊断集合
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.lbICDS_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 鼠标选择,隐藏诊断集合
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.QueryEpisodeList">
	<summary>
  初始就诊列表
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.ytcDiagnos_TabChanged(System.Object,System.EventArgs)">
	<summary>
 当切换tab时加载就诊列表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.dgBOLISData_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选择就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.rbRowModle_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 行模式
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.rbLevelModle_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 层级模式
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.btSaveQuote_Click(System.Object,System.EventArgs)">
	<summary>
 保存并引用+保存为目前诊断
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.QuoteData">
	<summary>
 引用
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.CheckComboxValue(System.Windows.Forms.ComboBox)">
	<summary>
 combox校验
 </summary>
	<param name="cm"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.LoadModal">
	<summary>
 加载tal页签
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.ListBox_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 tab列表双击事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.LoadHistoryData">
	<summary>
 加载历史诊断
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.dgvHistory_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 引用历史记录
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.dgvHistory_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 查看重复记录
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.SetListDiagnosType">
	<summary>
 诊断类型
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.lbDiagnosType_Click(System.Object,System.EventArgs)">
	<summary>
 选择类型
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.btOK_Click(System.Object,System.EventArgs)">
	<summary>
 引用
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.ckbCheck_Click(System.Object,System.EventArgs)">
	<summary>
 全选
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DiagnosDicForm.tcCheckReport_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 初始化引用列表，默认选择第一个类型
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PExportTreeView.GetAllUnitsInfo(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 获取模板单元的全部信息，并生成导出文件
 </summary>
	<param name="argCategoryinfo">完整目录路径</param>
	<param name="argTemplateName">模板名称</param>
	<param name="argTemplateID">模板ID</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-6-4	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PExportTreeView.GetUnitsInfo(System.String,System.String,System.String,System.Windows.Forms.TreeNode@)">
 -----------------------------------------------------------------------------
 <summary>
 递归调用本方法，获取单元树中的所有单元信息
 </summary>
	<param name="argCategoryinfo">完整目录路径</param>
	<param name="argTemplateName">模板名称，用于生成单元信息</param>
	<param name="argTemplateID">模板ID，用于生成单元信息</param>
	<param name="argNode">需要获取下级单元信息的单元节点</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-6-4	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PExportTreeView.GenerateTxtFile(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 生成文本文件
 </summary>
	<param name="argFilePath">文本文件路径和名称</param>
	<param name="argContent">文本文件内容</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-6-4	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.DictionaryController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:SystemServiceData.SystemInfo.#ctor">
	<remarks/>
</member><member name="E:SystemServiceData.SystemInfo.GetDateTimeCompleted">
	<remarks/>
</member><member name="E:SystemServiceData.SystemInfo.SysDateCompleted">
	<remarks/>
</member><member name="E:SystemServiceData.SystemInfo.SysTimeCompleted">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.GetDateTime">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.GetDateTimeAsync">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.GetDateTimeAsync(System.Object)">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.SysDate(System.DateTime@,System.Boolean@)">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.SysDateAsync">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.SysDateAsync(System.Object)">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.SysTime(System.DateTime@,System.Boolean@)">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.SysTimeAsync">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.SysTimeAsync(System.Object)">
	<remarks/>
</member><member name="M:SystemServiceData.SystemInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:SystemServiceData.SystemInfo">
	<remarks/>
</member><member name="T:SystemServiceData.GetDateTimeCompletedEventHandler">
	<remarks/>
</member><member name="P:SystemServiceData.GetDateTimeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:SystemServiceData.GetDateTimeCompletedEventArgs">
	<remarks/>
</member><member name="T:SystemServiceData.SysDateCompletedEventHandler">
	<remarks/>
</member><member name="P:SystemServiceData.SysDateCompletedEventArgs.SysDateResult">
	<remarks/>
</member><member name="P:SystemServiceData.SysDateCompletedEventArgs.SysDateResultSpecified">
	<remarks/>
</member><member name="T:SystemServiceData.SysDateCompletedEventArgs">
	<remarks/>
</member><member name="T:SystemServiceData.SysTimeCompletedEventHandler">
	<remarks/>
</member><member name="P:SystemServiceData.SysTimeCompletedEventArgs.SysTimeResult">
	<remarks/>
</member><member name="P:SystemServiceData.SysTimeCompletedEventArgs.SysTimeResultSpecified">
	<remarks/>
</member><member name="T:SystemServiceData.SysTimeCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.GetFilter(ImageTreeData.EImageTreeDataSet.GetByImageLibIDDataTable,System.String,System.String,System.String)">
	<summary>
 获取知识库目录节点显示条件
 </summary>
	<param name="dt">目录树DataTable</param>
	<param name="parentNodeID">父节点ID</param>
	<param name="ctLocID">科室ID</param>
	<param name="userID">用户ID</param>
	<returns>目录节点显示条件</returns>
	<remarks>显示条件</remarks>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.IsPersonalTreeNode(System.String)">
	<summary>
 是否个人图库目录节点
 </summary>
	<param name="userID">与图库目录对应的UserID</param>
	<returns>是否个人图库目录节点</returns>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.GetNodeID(System.Windows.Forms.TreeNode)">
	<summary>
 获取指定TreeNode的ID
 </summary>
	<param name="node">指定TreeNode</param>
	<returns>指定TreeNode的ID</returns>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.GetNodeType(System.Windows.Forms.TreeNode)">
	<summary>
 获取指定TreeNode的类型
 </summary>
	<param name="node">指定TreeNode</param>
	<returns>指定TreeNode的类型</returns>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.SetCurrentNodeInfo(System.Windows.Forms.TreeNode)">
	<summary>
 设置当前选中的节点信息
 </summary>
	<param name="curTreeNode">当前选中的节点</param>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.SetImageTreeMenu(System.String)">
	<summary>
 设置右键菜单
 </summary>
	<param name="strNodeType">节点类型</param>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.SetMaintainImageTreeMenu(System.String)">
	<summary>
 设置维护端右键菜单
 </summary>
	<param name="strNodeType">节点类型</param>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.CreateImageTree(System.String,System.String)">
	<summary>
 创建ImageTree
 </summary>
	<param name="userID">用户ID</param>
	<param name="userName">用户名</param>
	<returns>新建KBTree实体对象</returns>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.GetImageTreeName(System.String)">
	<summary>
 获取新建图库目录的默认名称
 </summary>
	<param name="userName">用户姓名</param>
	<returns>目录的默认名称</returns>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.CreateImageTreeTag(System.String)">
	<summary>
 生成图库目录Tag
 </summary>
	<param name="imageTreeID">知识库目录ID</param>
	<returns>图库目录Tag</returns>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.ImageLibTree.IsRealClientMode(System.Boolean,System.String)">
	<summary>
 是否真实的客户端模式？
 在设计端“界面显示”中，客户端模式参数“isClientMode”为真值，
 但此时相关环境变量可能为空，整体并不是一个真实的客户端模式
 </summary>
	<param name="isClientMode">客户端模式参数</param>
	<param name="envVariable">环境变量，如UserID、CTLocID等</param>
	<returns>是否为真实的客户端模式</returns>
</member><member name="M:dhcc.epr.eprlib.design.printlink.BaseUnitTree.InitTreeViewS(System.String)">
	<summary>
 初始化树数据
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.printlink.BaseUnitTree.InitTreeViewNodes">
	<summary>
 初始化资源管理器节点
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.printlink.BaseUnitTree.initResourcePageNodes(System.Windows.Forms.TreeNode)">
	<summary>
 初始化指定父节点下的某一页节点 BY yejian
 </summary>
	<param name="parentNode">选定节点</param>
	<returns>返回是否成功</returns>
</member><member name="M:dhcc.epr.eprlib.design.printlink.BaseUnitTree.getMetaData(System.Data.DataRow)">
	<summary>
 获取该节点Json字符串
 </summary>
</member><member name="M:dhcc.epr.eprlib.formula.CFormula.IsItemVType">
	<summary>
 是否为控制单元对应InstanceItem对象的公式。
 如：切换G单元的正常值和异常值
 </summary>
	<returns>true 或 false</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.formula.CFormula.IsControlVType">
	<summary>
 是否为控制单元对应界面控件"属性"的公式。
 如：对应界面控件的是否可见、是否可以编辑
 </summary>
	<returns>true 或 false</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.formula.CFormula.IsItemVTypeResultValid(System.String)">
	<summary>
 控制单元对应InstanceItem对象的公式计算结果是否有效
 </summary>
	<param name="strResult">计算结果字符串</param>
	<returns>true 或 false</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.formula.CFormula.IsAuditResultOK(System.String)">
	<summary>
 审核公式结果是否正常
 </summary>
	<param name="auditResult">审核结果字符串</param>
	<returns>true 或 false</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.formula.CFormula.IsTipResultOK(System.String)">
	<summary>
 提示公式结果是否为真
 </summary>
	<param name="tipResult">提示公式结果</param>
	<returns>true 或 false</returns>
	<remarks></remarks>
</member><member name="P:CommonFuncs.clientIP">
 -----------------------------------------------------------------------------
 <summary>
 获取客户端IP，做为类属性，已取过不再取
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-1-22	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:CommonFuncs.GetClientIP">
 -----------------------------------------------------------------------------
 <summary>
 取得客户端IP地址做为病历操作日志的一部分保存
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[user]	2008-4-29	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:CommonFuncs">
 -----------------------------------------------------------------------------
 Project	 : EPRLib
 Class	 : CommonFuncs
 
 -----------------------------------------------------------------------------
 <summary>
 公用函数，代替由于不能修改继承关系用父类实现的部分功能
 </summary>
	<remarks>
	</remarks>
	<history>
 	[gaojb]	2009-1-21	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.PacsDicForm_Load(System.Object,System.EventArgs)">
	<summary>
 加载窗体
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.QueryEpisodeList">
	<summary>
 查就诊列表2011-07-12 Add by Candyxu
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.tcCheckReport_TabChanged(System.Object,System.EventArgs)">
	<summary>
 切换tab加载就诊列表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.dgBOLISData_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选择就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.dgvResult_SelectionChanged(System.Object,System.EventArgs)">
	<summary>
 主表选中改变事件 by yejian 2012-8-10
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.dgvDes_CellPainting(System.Object,System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
	<summary>
 设置CHECKBOX位置 by yejian 2012-8-10
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.ResetHeaderCheckBoxLocation(System.Int32,System.Int32,System.Drawing.Rectangle)">
	<summary>
 设置CHECKBOX位置 by yejian 2012-8-10
 </summary>
	<param name="ColumnIndex"></param>
	<param name="RowIndex"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.dgvSetCheckBox(dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.RISRefSchemeInfo)">
	<summary>
 初始设置checkbox by yejian 2012-8-10
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.btnQuery_Click(System.Object,System.EventArgs)">
	<summary>
 按查询方式查询
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.QueryDictionary(System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 查询
 </summary>
	<param name="ID">就诊ID或病人ID,当为就诊ID时Flag为1</param>
	<param name="DateSt">开始时间</param>
	<param name="DateEnd">结束时间</param>
	<param name="Flag">1为当前就诊，否则为全部就诊</param>
	<param name="StartPage">开始页</param>
	<param name="EndPage">结束页</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.BindResultSet(System.Data.DataSet)">
	<summary>
 绑定样式
 </summary>
	<param name="curDataSet"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.btnPrev_Click(System.Object,System.EventArgs)">
	<summary>
 前一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.btnNext_Click(System.Object,System.EventArgs)">
	<summary>
 后一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.rbPresentOrder_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 按当前就诊查
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.rbDate_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 按日期查
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.rbAllOrder_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 按所用就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.nudPageCount_ValueChanged(System.Object,System.EventArgs)">
	<summary>
 页面显示条数改变
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.RefreshState">
	<summary>
 重置状态
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.PacsDicForm.ChangeDictionaryText">
	<summary>
 引用方法
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MonoChoiceForm.AdjustFormWidth">
 -----------------------------------------------------------------------------
 <summary>
 根据单选listbox中的内容调整选项窗口的大小，但还不能超出屏幕宽度
 </summary>
	<remarks>
	</remarks>
	<history>
 	[gaojianbo]	2010-3-2	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:dhcc.epr.eprlib.presentation.textedit.MulitCopy.OpenFlag">
	<summary>
 判断是否连续拷贝
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.MulitCopy.CopyString">
	<summary>
 拷贝内容
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.textedit.MulitCopy.CopysList">
	<summary>
 储存器
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MulitCopy.MulitCopy_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
	<summary>
 关闭窗体
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MulitCopy.lbClipBoard_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 右键选择
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MulitCopy.tsmiPast_Click(System.Object,System.EventArgs)">
	<summary>
 粘贴
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MulitCopy.tsmiDele_Click(System.Object,System.EventArgs)">
	<summary>
 删除
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MulitCopy.btClear_Click(System.Object,System.EventArgs)">
	<summary>
 清空剪贴板
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MulitCopy.btCopyall_Click(System.Object,System.EventArgs)">
	<summary>
 全部粘贴
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MultiChoiceController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.#ctor">
	<remarks/>
</member><member name="E:BOGloassaryTest.BOGloassaryTestInfo.GetInstanceIDByTInterIDCompleted">
	<remarks/>
</member><member name="E:BOGloassaryTest.BOGloassaryTestInfo.GetNewStdDataByGlossaryCompleted">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.GetInstanceIDByTInterID(System.String,System.String,System.String@)">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.GetInstanceIDByTInterIDAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.GetInstanceIDByTInterIDAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.GetNewStdDataByGlossary(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.GetNewStdDataByGlossaryAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.GetNewStdDataByGlossaryAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOGloassaryTest.BOGloassaryTestInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOGloassaryTest.BOGloassaryTestInfo">
	<remarks/>
</member><member name="P:BOGloassaryTest.PairOfGetNewStdDataByGlossaryResultKeyString.GetNewStdDataByGlossaryResultKey">
	<remarks/>
</member><member name="P:BOGloassaryTest.PairOfGetNewStdDataByGlossaryResultKeyString.Value">
	<remarks/>
</member><member name="T:BOGloassaryTest.PairOfGetNewStdDataByGlossaryResultKeyString">
	<remarks/>
</member><member name="T:BOGloassaryTest.GetInstanceIDByTInterIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGloassaryTest.GetInstanceIDByTInterIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:BOGloassaryTest.GetInstanceIDByTInterIDCompletedEventArgs.Aversion">
	<remarks/>
</member><member name="T:BOGloassaryTest.GetInstanceIDByTInterIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGloassaryTest.GetNewStdDataByGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGloassaryTest.GetNewStdDataByGlossaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGloassaryTest.GetNewStdDataByGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.#ctor">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.CreateTemplateStructureCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.DeleteTemplateStructureCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.GetAllCateCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.GetSectionByParentIDCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.GetSectionByTemplateCodeCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.GetStructPIDByTemplateIDCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.GetmetaTemplateByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.SavemetaTemplateByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.SelectDocumentDataCompleted">
	<remarks/>
</member><member name="E:BOTemplateStructure.TemplateStructInfo.UpdateTemplateStructureCompleted">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.CreateTemplateStructure(BOTemplateStructure.ETemplateStructure)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.CreateTemplateStructureAsync(BOTemplateStructure.ETemplateStructure)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.CreateTemplateStructureAsync(BOTemplateStructure.ETemplateStructure,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.DeleteTemplateStructure(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.DeleteTemplateStructureAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.DeleteTemplateStructureAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetAllCate">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetAllCateAsync">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetAllCateAsync(System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetSectionByParentID(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetSectionByParentIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetSectionByParentIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetSectionByTemplateCode(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetSectionByTemplateCodeAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetSectionByTemplateCodeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetStructPIDByTemplateID(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetStructPIDByTemplateIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetStructPIDByTemplateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetmetaTemplateByID(System.Byte[]@,System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetmetaTemplateByIDAsync(System.Byte[],System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.GetmetaTemplateByIDAsync(System.Byte[],System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.SavemetaTemplateByID(System.Byte[],System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.SavemetaTemplateByIDAsync(System.Byte[],System.String)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.SavemetaTemplateByIDAsync(System.Byte[],System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.SelectDocumentData">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.SelectDocumentDataAsync">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.SelectDocumentDataAsync(System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.UpdateTemplateStructure(BOTemplateStructure.ETemplateStructure)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.UpdateTemplateStructureAsync(BOTemplateStructure.ETemplateStructure)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.UpdateTemplateStructureAsync(BOTemplateStructure.ETemplateStructure,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateStructure.TemplateStructInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOTemplateStructure.TemplateStructInfo">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.ID">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.StructType">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.Description">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.Code">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.Name">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.ParentID">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.IsFixedSection">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.ResChildCount">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.ResChildCountSpecified">
	<remarks/>
</member><member name="P:BOTemplateStructure.ETemplateStructure.MetaTemplate">
	<remarks/>
</member><member name="T:BOTemplateStructure.ETemplateStructure">
	<remarks/>
</member><member name="T:BOTemplateStructure.CreateTemplateStructureCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.CreateTemplateStructureCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.CreateTemplateStructureCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.DeleteTemplateStructureCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.DeleteTemplateStructureCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.DeleteTemplateStructureCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetAllCateCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.GetAllCateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetAllCateCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetSectionByParentIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.GetSectionByParentIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetSectionByParentIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetSectionByTemplateCodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.GetSectionByTemplateCodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetSectionByTemplateCodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetStructPIDByTemplateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.GetStructPIDByTemplateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetStructPIDByTemplateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetmetaTemplateByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.GetmetaTemplateByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:BOTemplateStructure.GetmetaTemplateByIDCompletedEventArgs.AOutRecords">
	<remarks/>
</member><member name="T:BOTemplateStructure.GetmetaTemplateByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.SavemetaTemplateByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.SavemetaTemplateByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.SavemetaTemplateByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.SelectDocumentDataCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.SelectDocumentDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.SelectDocumentDataCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateStructure.UpdateTemplateStructureCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateStructure.UpdateTemplateStructureCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateStructure.UpdateTemplateStructureCompletedEventArgs">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.#ctor">
	<remarks/>
</member><member name="E:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.DeleteCompleted">
	<remarks/>
</member><member name="E:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.InsertCompleted">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.Delete(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.DeleteAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.DeleteAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.Insert(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.InsertAsync(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.InsertAsync(System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:KBNodeDiagnosRule.KBNodeDiagnosRuleInfo">
	<remarks/>
</member><member name="T:KBNodeDiagnosRule.DeleteCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeDiagnosRule.DeleteCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeDiagnosRule.DeleteCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeDiagnosRule.InsertCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeDiagnosRule.InsertCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeDiagnosRule.InsertCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.SetGroupDataValues">
	<summary>
 获取并赋值
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.getUpOrganDetailsSeqArgs(System.Int32)">
	<summary>
 获取更新排序的字符串:下移intChangeNum：1，上移intChangeNum：-1
 </summary>
	<returns></returns>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.SetCurRowValue">
	<summary>
 选中当前行时，赋值处理
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.CheckNullValue">
	<summary>
 检查判断值不能为空情况
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.dgvPropertyData_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选中项事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.dgvPropertyData_SelectionChanged(System.Object,System.EventArgs)">
	<summary>
 选中行事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.btnAdd_Click(System.Object,System.EventArgs)">
	<summary>
 添加
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.btnUpdata_Click(System.Object,System.EventArgs)">
	<summary>
 更新 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.btnDel_Click(System.Object,System.EventArgs)">
	<summary>
 删除
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.btnOrgDetailsUp_Click(System.Object,System.EventArgs)">
	<summary>
 上移
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.ClassPropertyConfig.btnOrgDetailsDown_Click(System.Object,System.EventArgs)">
	<summary>
 下移
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarytest.GlosssaryTestConfig.GetInstanceIDByTInterID(System.String,System.String,System.String@)">
	<summary>
 获取并赋值
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.Init">
 -----------------------------------------------------------------------------
 <summary>
 初始化
 </summary>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-1	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.OnClear(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 清空字典内容
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-1	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.SetRevContent(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 设置留痕内容，
 若字典显示描述，则留痕描述；若字典显示代码，则留痕代码；
 若字典代码描述都显示，则留痕代码和描述，并使用字典的分隔符分开
 </summary>
	<param name="orginalContent">原有字典内容</param>
	<param name="newContent">修改后的新字典内容</param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-6-26	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.AddRevTip(dhcc.epr.eprlib.instancedata.RevisionHistory)">
 -----------------------------------------------------------------------------
 <summary>
 添加留痕提示标签
 </summary>
	<param name="revHis">留痕历史</param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-6-26	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.TipLabel_MouseEnter(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 鼠标移上，显示留痕标签内容
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-6-26	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.TipLabel_MouseLeave(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 鼠标离开，隐藏留痕标签内容
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-6-26	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.GetQueryInputCondition">
	<summary>
 获取字典代码列或描述列中输入的查询条件
 </summary>
	<returns>输入的查询条件字符串</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.GetQueryPredefinedCondition(System.String)">
	<summary>
 获取标准字典预定义的查询条件，并使用真实环境变量及相关单元值替换其中的占位符
 </summary>
	<param name="stdDicCode">标准字典代码</param>
	<returns>预定义的查询条件字符串</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.GetRealValue(System.String)">
	<summary>
 将预定义的查询条件占位符使用真实值替换：
 (1）{}中的值使用全局环境变量替换
 (2）[]中的值使用相应界面模板单元值替换
 </summary>
	<param name="stdCondValue">预定义的查询条件</param>
	<returns>预定义查询条件的当前真实值</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCDictionary.GetItemValue(System.String)">
	<summary>
 使用相应界面模板单元值替换预定义查询条件中的占位符
 </summary>
	<param name="item">预定义的查询条件</param>
	<returns>预定义查询条件的当前真实值</returns>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.presentation.PPanel.RefreshBindKBTreeHandler">
	<summary>
 刷新知识库节点树委托
 </summary>
	<param name="eCode">E单元代码</param>
	<param name="kbBaseID">知识库ID</param>
	<param name="kbPartNo">知识库部分</param>
</member><member name="P:dhcc.epr.eprlib.presentation.PPanel.InstanceData">
	<summary>
 模板实例数据
 </summary>
	<remarks>在EPRBase反序列化模板的InitialTemplate方法中赋初值</remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PPanel.InstanceStatus">
	<summary>
 实例数据状态属性
 </summary>
	<remarks>在EPRBase反序列化模板的InitialTemplate方法中赋初值</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.ReplaceTextDesc(dhcc.epr.eprlib.instancedata.NISegment,dhcc.epr.eprlib.instancedata.NISegment,dhcc.epr.eprlib.instancedata.NISegment,System.String,System.Int32)">
	<summary>
 根据知识库内容替换E单元
 </summary>
	<param name="s1">知识库第一部分</param>
	<param name="s2">知识库第二部分</param>
	<param name="s3">知识库第三部分</param>
	<param name="eCode">E单元代码</param>
	<param name="kbPartNo">E单元绑定的知识库部分</param>
	<remarks>如果是独立知识库，则根据eCode得到当前使用的E单元</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.AddTextDesc(dhcc.epr.eprlib.instancedata.NISegment,dhcc.epr.eprlib.instancedata.NISegment,dhcc.epr.eprlib.instancedata.NISegment,System.String,System.Int32)">
	<summary>
 向E单元中插入知识库内容
 </summary>
	<param name="s1">知识库第一部分</param>
	<param name="s2">知识库第二部分</param>
	<param name="s3">知识库第三部分</param>
	<param name="eCode">E单元代码</param>
	<param name="kbPartNo">单元绑定的知识库部分</param>
	<remarks>如果是独立知识库，则根据eCode得到当前使用的E单元</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.RefreshFontSize(dhcc.epr.eprlib.instancedata.NISegment,System.Single)">
	<summary>
 刷新字体大小,防止添加的知识库的G单元字体大小不同
 </summary>
	<param name="segment">知识库片段</param>
	<param name="size">字体大小</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.PPanelDeserialize(System.String)">
	<summary>
 反序列化面板
 </summary>
	<param name="xmlText">XML文本字符串</param>
	<remarks>多线程反序列化界面模板控件</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.BindInstance(Microsoft.VisualBasic.Collection)">
	<summary>
 采用多线程后，以多态形式重写该方法
 </summary>
	<param name="controlsCollection">反序列化得到的控件集合</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.XMLDeserialize(System.Xml.XmlReader)">
	<summary>
 反序列化
 </summary>
	<remarks>修改成多线程后，本方法在写病历时不再被调用，但在维护模板时，在预览时有效</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.GetDefaultDesignKB(dhcc.epr.eprlib.instancedata.NITextDesc)">
	<summary>
 获取设计时E单元中包含的知识库G单元，以及KBNodeID和KBPartNo
 </summary>
	<param name="curNITextDesc">E单元实例数据</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.SetPCTextEditDefaultDB(dhcc.epr.eprlib.presentation.textedit.PCTextEdit,System.Int32,System.Int32)">
	<summary>
 设置E单元默认知识库
 </summary>
	<param name="curPCTextEdit">E单元控件对象</param>
	<param name="kbBaseID">知识库RowID</param>
	<param name="kbPartNo">知识库部分</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.SetPCTextEditDefaultKBDetail(dhcc.epr.eprlib.presentation.textedit.PCTextEdit,System.Int32,System.Int32,System.String)">
	<summary>
 给指定的E单元设置默认知识库
 </summary>
	<param name="curPCTextEdit">指定E单元对象</param>
	<param name="kbBaseID">知识库RowID</param>
	<param name="kbPartNo">知识库片段</param>
	<param name="episodeID">患者就诊指针</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.BindInstance">
	<summary>
 给模板上所有单元控件绑定实例数据
 </summary>
	<remarks>修改成多线程后，本方法不再被调用</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.CompileCompute">
	<summary>
 编译模板公式
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.PCTextEdit_GetFocus(System.String,System.String,System.Int32)">
	<summary>
 E单元获取焦点事件
 </summary>
	<param name="eCode">E单元代码</param>
	<param name="kbBaseID">知识库ID</param>
	<param name="kbPartNo">知识库部分</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.PCStringEdit_GetFocus(System.String,System.String,System.String)">
	<summary>
 s 单元获取焦点事件
 </summary>
	<param name="sCode">s单元代码</param>
	<param name="kbBaseID">知识库ID</param>
	<param name="kbPartNo">知识库部分</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PPanel.ControlMouseDown(System.Object,System.EventArgs)">
	<summary>
 界面模板单元控件MouserDown事件处理。
 完成鼠标单击Y单元弹出标注工具，鼠标单击其他单元关闭标注工具功能
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.NumberController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:BindQueryData.BindQueryService.#ctor">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.AddFieldCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.AddParameterCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.AddQueryCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.DelFieldByIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.DelParameterByIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.DelQueryByIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.GetFieldByIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.GetParameterByIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.GetQueryByIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.SelectAllQueryCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.SelectDistinctParameterCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.SelectFieldByQIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.SelectParameterByQIDCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.UpdateFieldCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.UpdateParameterCompleted">
	<remarks/>
</member><member name="E:BindQueryData.BindQueryService.UpdateQueryCompleted">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddField(BindQueryData.EBindField)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddFieldAsync(BindQueryData.EBindField)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddFieldAsync(BindQueryData.EBindField,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddParameter(BindQueryData.EBindParameter)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddParameterAsync(BindQueryData.EBindParameter)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddParameterAsync(BindQueryData.EBindParameter,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddQuery(BindQueryData.EBindQuery)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddQueryAsync(BindQueryData.EBindQuery)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.AddQueryAsync(BindQueryData.EBindQuery,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelFieldByID(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelFieldByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelFieldByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelParameterByID(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelParameterByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelParameterByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelQueryByID(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelQueryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.DelQueryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetFieldByID(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetFieldByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetFieldByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetParameterByID(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetParameterByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetParameterByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetQueryByID(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetQueryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.GetQueryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectAllQuery">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectAllQueryAsync">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectAllQueryAsync(System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectDistinctParameter">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectDistinctParameterAsync">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectDistinctParameterAsync(System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectFieldByQID(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectFieldByQIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectFieldByQIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectParameterByQID(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectParameterByQIDAsync(System.String)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.SelectParameterByQIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateField(BindQueryData.EBindField)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateFieldAsync(BindQueryData.EBindField)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateFieldAsync(BindQueryData.EBindField,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateParameter(BindQueryData.EBindParameter)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateParameterAsync(BindQueryData.EBindParameter)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateParameterAsync(BindQueryData.EBindParameter,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateQuery(BindQueryData.EBindQuery)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateQueryAsync(BindQueryData.EBindQuery)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.UpdateQueryAsync(BindQueryData.EBindQuery,System.Object)">
	<remarks/>
</member><member name="M:BindQueryData.BindQueryService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BindQueryData.BindQueryService">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.Description">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.FieldName">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.FieldType">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.ID">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.Name">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.QueryID">
	<remarks/>
</member><member name="P:BindQueryData.EBindField.DicID">
	<remarks/>
</member><member name="T:BindQueryData.EBindField">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.ClassName">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.Description">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.ID">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.Name">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.QueryName">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.SingleResult">
	<remarks/>
</member><member name="P:BindQueryData.EBindQuery.Mark">
	<remarks/>
</member><member name="T:BindQueryData.EBindQuery">
	<remarks/>
</member><member name="P:BindQueryData.EBindParameter.Description">
	<remarks/>
</member><member name="P:BindQueryData.EBindParameter.ID">
	<remarks/>
</member><member name="P:BindQueryData.EBindParameter.Name">
	<remarks/>
</member><member name="P:BindQueryData.EBindParameter.ParameterName">
	<remarks/>
</member><member name="P:BindQueryData.EBindParameter.ParameterType">
	<remarks/>
</member><member name="P:BindQueryData.EBindParameter.QueryID">
	<remarks/>
</member><member name="T:BindQueryData.EBindParameter">
	<remarks/>
</member><member name="T:BindQueryData.EBindQueryDataset.SelectAllQueryDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BindQueryData.EBindQueryDataset.SelectAllQueryRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BindQueryData.EBindQueryDataset.SelectAllQueryRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BindQueryData.EBindQueryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BindQueryData.EDataBindDisDataSet.SelectDistinctParameterDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BindQueryData.EDataBindDisDataSet.SelectDistinctParameterRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BindQueryData.EDataBindDisDataSet.SelectDistinctParameterRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BindQueryData.EDataBindDisDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BindQueryData.EBindFieldDataset.SelectFieldByQIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BindQueryData.EBindFieldDataset.SelectFieldByQIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BindQueryData.EBindFieldDataset.SelectFieldByQIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BindQueryData.EBindFieldDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BindQueryData.EBindParameterDataset.SelectParameterByQueryIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BindQueryData.EBindParameterDataset.SelectParameterByQueryIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BindQueryData.EBindParameterDataset.SelectParameterByQueryIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BindQueryData.EBindParameterDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BindQueryData.AddFieldCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.AddFieldCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.AddFieldCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.AddParameterCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.AddParameterCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.AddParameterCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.AddQueryCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.AddQueryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.AddQueryCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.DelFieldByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.DelFieldByIDCompletedEventArgs.DelFieldByIDResult">
	<remarks/>
</member><member name="P:BindQueryData.DelFieldByIDCompletedEventArgs.DelFieldByIDResultSpecified">
	<remarks/>
</member><member name="T:BindQueryData.DelFieldByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.DelParameterByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.DelParameterByIDCompletedEventArgs.DelParameterByIDResult">
	<remarks/>
</member><member name="P:BindQueryData.DelParameterByIDCompletedEventArgs.DelParameterByIDResultSpecified">
	<remarks/>
</member><member name="T:BindQueryData.DelParameterByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.DelQueryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.DelQueryByIDCompletedEventArgs.DelQueryByIDResult">
	<remarks/>
</member><member name="P:BindQueryData.DelQueryByIDCompletedEventArgs.DelQueryByIDResultSpecified">
	<remarks/>
</member><member name="T:BindQueryData.DelQueryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.GetFieldByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.GetFieldByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.GetFieldByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.GetParameterByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.GetParameterByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.GetParameterByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.GetQueryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.GetQueryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.GetQueryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.SelectAllQueryCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.SelectAllQueryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.SelectAllQueryCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.SelectDistinctParameterCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.SelectDistinctParameterCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.SelectDistinctParameterCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.SelectFieldByQIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.SelectFieldByQIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.SelectFieldByQIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.SelectParameterByQIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.SelectParameterByQIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.SelectParameterByQIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.UpdateFieldCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.UpdateFieldCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.UpdateFieldCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.UpdateParameterCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.UpdateParameterCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.UpdateParameterCompletedEventArgs">
	<remarks/>
</member><member name="T:BindQueryData.UpdateQueryCompletedEventHandler">
	<remarks/>
</member><member name="P:BindQueryData.UpdateQueryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BindQueryData.UpdateQueryCompletedEventArgs">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.#ctor">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.CreateClassPropertyCompleted">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.DeletClassPropertyByIDCompleted">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.GetMaxSeqCompleted">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectAllClassPropertyCompleted">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectClassPropertyIDCompleted">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateClassPropertyCompleted">
	<remarks/>
</member><member name="E:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateSequencesCompleted">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.CreateClassProperty(BOGlossaryClassProperty.EGlossaryClassProperty)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.CreateClassPropertyAsync(BOGlossaryClassProperty.EGlossaryClassProperty)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.CreateClassPropertyAsync(BOGlossaryClassProperty.EGlossaryClassProperty,System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.DeletClassPropertyByID(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.DeletClassPropertyByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.DeletClassPropertyByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.GetMaxSeq(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.GetMaxSeqAsync(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.GetMaxSeqAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectAllClassProperty">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectAllClassPropertyAsync">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectAllClassPropertyAsync(System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectClassPropertyID(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectClassPropertyIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.SelectClassPropertyIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateClassProperty(BOGlossaryClassProperty.EGlossaryClassProperty)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateClassPropertyAsync(BOGlossaryClassProperty.EGlossaryClassProperty)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateClassPropertyAsync(BOGlossaryClassProperty.EGlossaryClassProperty,System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateSequences(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateSequencesAsync(System.String)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.UpdateSequencesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOGlossaryClassProperty.GlossaryClassPropertyInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.GlossaryClassPropertyInfo">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.ID">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.ClassName">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.PropertyName">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.Propertys">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.ValueType">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.Type">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.EGlossaryClassProperty.Sequence">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.EGlossaryClassProperty">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.CreateClassPropertyCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.CreateClassPropertyCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.CreateClassPropertyCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.DeletClassPropertyByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.DeletClassPropertyByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.DeletClassPropertyByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.GetMaxSeqCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.GetMaxSeqCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.GetMaxSeqCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.SelectAllClassPropertyCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.SelectAllClassPropertyCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.SelectAllClassPropertyCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.SelectClassPropertyIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.SelectClassPropertyIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.SelectClassPropertyIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.UpdateClassPropertyCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.UpdateClassPropertyCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.UpdateClassPropertyCompletedEventArgs">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.UpdateSequencesCompletedEventHandler">
	<remarks/>
</member><member name="P:BOGlossaryClassProperty.UpdateSequencesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOGlossaryClassProperty.UpdateSequencesCompletedEventArgs">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.#ctor">
	<remarks/>
</member><member name="E:ImageCategoryData.ImageCategoryInfo.CreateImageCategoryCompleted">
	<remarks/>
</member><member name="E:ImageCategoryData.ImageCategoryInfo.DeleteImageCategoryCompleted">
	<remarks/>
</member><member name="E:ImageCategoryData.ImageCategoryInfo.GetAllImageCategoriesCompleted">
	<remarks/>
</member><member name="E:ImageCategoryData.ImageCategoryInfo.UpdateImageCategoryCompleted">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.CreateImageCategory(ImageCategoryData.EImageCategory)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.CreateImageCategoryAsync(ImageCategoryData.EImageCategory)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.CreateImageCategoryAsync(ImageCategoryData.EImageCategory,System.Object)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.DeleteImageCategory(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.DeleteImageCategoryAsync(System.String)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.DeleteImageCategoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.GetAllImageCategories">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.GetAllImageCategoriesAsync">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.GetAllImageCategoriesAsync(System.Object)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.UpdateImageCategory(ImageCategoryData.EImageCategory,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.UpdateImageCategoryAsync(ImageCategoryData.EImageCategory)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.UpdateImageCategoryAsync(ImageCategoryData.EImageCategory,System.Object)">
	<remarks/>
</member><member name="M:ImageCategoryData.ImageCategoryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:ImageCategoryData.ImageCategoryInfo">
	<remarks/>
</member><member name="P:ImageCategoryData.EImageCategory.ID">
	<remarks/>
</member><member name="P:ImageCategoryData.EImageCategory.Name">
	<remarks/>
</member><member name="P:ImageCategoryData.EImageCategory.Description">
	<remarks/>
</member><member name="P:ImageCategoryData.EImageCategory.ParentID">
	<remarks/>
</member><member name="T:ImageCategoryData.EImageCategory">
	<remarks/>
</member><member name="T:ImageCategoryData.EImageCategoryDataset.GetAllImageCategoriesDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ImageCategoryData.EImageCategoryDataset.GetAllImageCategoriesRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ImageCategoryData.EImageCategoryDataset.GetAllImageCategoriesRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ImageCategoryData.EImageCategoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ImageCategoryData.CreateImageCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageCategoryData.CreateImageCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageCategoryData.CreateImageCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageCategoryData.DeleteImageCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageCategoryData.DeleteImageCategoryCompletedEventArgs.DeleteImageCategoryResult">
	<remarks/>
</member><member name="P:ImageCategoryData.DeleteImageCategoryCompletedEventArgs.DeleteImageCategoryResultSpecified">
	<remarks/>
</member><member name="T:ImageCategoryData.DeleteImageCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageCategoryData.GetAllImageCategoriesCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageCategoryData.GetAllImageCategoriesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageCategoryData.GetAllImageCategoriesCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageCategoryData.UpdateImageCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageCategoryData.UpdateImageCategoryCompletedEventArgs.UpdateImageCategoryResult">
	<remarks/>
</member><member name="P:ImageCategoryData.UpdateImageCategoryCompletedEventArgs.UpdateImageCategoryResultSpecified">
	<remarks/>
</member><member name="T:ImageCategoryData.UpdateImageCategoryCompletedEventArgs">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.#ctor">
	<remarks/>
</member><member name="E:ImagePosData.ImagePositionInfo.CreateImagePositionCompleted">
	<remarks/>
</member><member name="E:ImagePosData.ImagePositionInfo.DeleteImagePositionCompleted">
	<remarks/>
</member><member name="E:ImagePosData.ImagePositionInfo.GetALLImagePositionCompleted">
	<remarks/>
</member><member name="E:ImagePosData.ImagePositionInfo.GetImagePositionByCodeCompleted">
	<remarks/>
</member><member name="E:ImagePosData.ImagePositionInfo.GetImagePositionByIDCompleted">
	<remarks/>
</member><member name="E:ImagePosData.ImagePositionInfo.UpdateImagePositionCompleted">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.CreateImagePosition(ImagePosData.EImagePosition)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.CreateImagePositionAsync(ImagePosData.EImagePosition)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.CreateImagePositionAsync(ImagePosData.EImagePosition,System.Object)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.DeleteImagePosition(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.DeleteImagePositionAsync(System.String)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.DeleteImagePositionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetALLImagePosition">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetALLImagePositionAsync">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetALLImagePositionAsync(System.Object)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetImagePositionByCode(System.String)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetImagePositionByCodeAsync(System.String)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetImagePositionByCodeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetImagePositionByID(System.String)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetImagePositionByIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.GetImagePositionByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.UpdateImagePosition(ImagePosData.EImagePosition,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.UpdateImagePositionAsync(ImagePosData.EImagePosition)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.UpdateImagePositionAsync(ImagePosData.EImagePosition,System.Object)">
	<remarks/>
</member><member name="M:ImagePosData.ImagePositionInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:ImagePosData.ImagePositionInfo">
	<remarks/>
</member><member name="P:ImagePosData.EImagePosition.Code">
	<remarks/>
</member><member name="P:ImagePosData.EImagePosition.Name">
	<remarks/>
</member><member name="P:ImagePosData.EImagePosition.ID">
	<remarks/>
</member><member name="P:ImagePosData.EImagePosition.Description">
	<remarks/>
</member><member name="P:ImagePosData.EImagePosition.Data">
	<remarks/>
</member><member name="T:ImagePosData.EImagePosition">
	<remarks/>
</member><member name="T:ImagePosData.EImagePositionDataset.SelectAllDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ImagePosData.EImagePositionDataset.SelectAllRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ImagePosData.EImagePositionDataset.SelectAllRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ImagePosData.EImagePositionDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ImagePosData.CreateImagePositionCompletedEventHandler">
	<remarks/>
</member><member name="P:ImagePosData.CreateImagePositionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImagePosData.CreateImagePositionCompletedEventArgs">
	<remarks/>
</member><member name="T:ImagePosData.DeleteImagePositionCompletedEventHandler">
	<remarks/>
</member><member name="P:ImagePosData.DeleteImagePositionCompletedEventArgs.DeleteImagePositionResult">
	<remarks/>
</member><member name="P:ImagePosData.DeleteImagePositionCompletedEventArgs.DeleteImagePositionResultSpecified">
	<remarks/>
</member><member name="T:ImagePosData.DeleteImagePositionCompletedEventArgs">
	<remarks/>
</member><member name="T:ImagePosData.GetALLImagePositionCompletedEventHandler">
	<remarks/>
</member><member name="P:ImagePosData.GetALLImagePositionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImagePosData.GetALLImagePositionCompletedEventArgs">
	<remarks/>
</member><member name="T:ImagePosData.GetImagePositionByCodeCompletedEventHandler">
	<remarks/>
</member><member name="P:ImagePosData.GetImagePositionByCodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImagePosData.GetImagePositionByCodeCompletedEventArgs">
	<remarks/>
</member><member name="T:ImagePosData.GetImagePositionByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImagePosData.GetImagePositionByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImagePosData.GetImagePositionByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImagePosData.UpdateImagePositionCompletedEventHandler">
	<remarks/>
</member><member name="P:ImagePosData.UpdateImagePositionCompletedEventArgs.UpdateImagePositionResult">
	<remarks/>
</member><member name="P:ImagePosData.UpdateImagePositionCompletedEventArgs.UpdateImagePositionResultSpecified">
	<remarks/>
</member><member name="T:ImagePosData.UpdateImagePositionCompletedEventArgs">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.#ctor">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.CreateKBNodeCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.DeleteKBNodeCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.GetDefaultKBNodeByLocDiagnosIDCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.SelectKBNodeByIDCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.SelectKBNodeByKBTreeIDCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.SelectKBNodeByNameCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.SelectKBNodeInUseByIDCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.SwapSequenceCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.UpdateKBNodeCompleted">
	<remarks/>
</member><member name="E:KBNodeData.KBNodeInfo.testCreateKBNodeCompleted">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.CreateKBNode(KBNodeData.EKBNode)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.CreateKBNodeAsync(KBNodeData.EKBNode)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.CreateKBNodeAsync(KBNodeData.EKBNode,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.DeleteKBNode(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.DeleteKBNodeAsync(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.DeleteKBNodeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.GetDefaultKBNodeByLocDiagnosID(System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.GetDefaultKBNodeByLocDiagnosIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.GetDefaultKBNodeByLocDiagnosIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByID(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByKBTreeID(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByKBTreeIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByKBTreeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByName(System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByNameAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeByNameAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeInUseByID(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeInUseByIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SelectKBNodeInUseByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SwapSequence(System.String,System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SwapSequenceAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.SwapSequenceAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.UpdateKBNode(KBNodeData.EKBNode,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.UpdateKBNodeAsync(KBNodeData.EKBNode)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.UpdateKBNodeAsync(KBNodeData.EKBNode,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.testCreateKBNode(KBNodeData.EKBNode)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.testCreateKBNodeAsync(KBNodeData.EKBNode)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.testCreateKBNodeAsync(KBNodeData.EKBNode,System.Object)">
	<remarks/>
</member><member name="M:KBNodeData.KBNodeInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:KBNodeData.KBNodeInfo">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.Description">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.ID">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.KBTreeID">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.KnowledgeBaseID">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.Name">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.S1InstanceData">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.S1MetaData">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.S2InstanceData">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.S2MetaData">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.S3InstanceData">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.S3MetaData">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.Sequence">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.IsCommon">
	<remarks/>
</member><member name="P:KBNodeData.EKBNode.IsInUse">
	<remarks/>
</member><member name="T:KBNodeData.EKBNode">
	<remarks/>
</member><member name="T:KBNodeData.EKBNodeDataset.SELECTBYPARENTIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBNodeData.EKBNodeDataset.SELECTBYPARENTIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBNodeData.EKBNodeDataset.SELECTBYPARENTIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBNodeData.EKBNodeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBNodeData.EKBNodeSelectByNameDataset.SELECTBYNAMEDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBNodeData.EKBNodeSelectByNameDataset.SELECTBYNAMERow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBNodeData.EKBNodeSelectByNameDataset.SELECTBYNAMERowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBNodeData.EKBNodeSelectByNameDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBNodeData.EKBNodeInUseDataset.SELECTInUseBYPARENTIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBNodeData.EKBNodeInUseDataset.SELECTInUseBYPARENTIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBNodeData.EKBNodeInUseDataset.SELECTInUseBYPARENTIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBNodeData.EKBNodeInUseDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBNodeData.CreateKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.CreateKBNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.CreateKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.DeleteKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.DeleteKBNodeCompletedEventArgs.DeleteKBNodeResult">
	<remarks/>
</member><member name="P:KBNodeData.DeleteKBNodeCompletedEventArgs.DeleteKBNodeResultSpecified">
	<remarks/>
</member><member name="T:KBNodeData.DeleteKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.GetDefaultKBNodeByLocDiagnosIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.GetDefaultKBNodeByLocDiagnosIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.GetDefaultKBNodeByLocDiagnosIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.SelectKBNodeByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeByKBTreeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.SelectKBNodeByKBTreeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeByKBTreeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeByNameCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.SelectKBNodeByNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeByNameCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeInUseByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.SelectKBNodeInUseByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.SelectKBNodeInUseByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.SwapSequenceCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.SwapSequenceCompletedEventArgs.SwapSequenceResult">
	<remarks/>
</member><member name="P:KBNodeData.SwapSequenceCompletedEventArgs.SwapSequenceResultSpecified">
	<remarks/>
</member><member name="T:KBNodeData.SwapSequenceCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.UpdateKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.UpdateKBNodeCompletedEventArgs.UpdateKBNodeResult">
	<remarks/>
</member><member name="P:KBNodeData.UpdateKBNodeCompletedEventArgs.UpdateKBNodeResultSpecified">
	<remarks/>
</member><member name="T:KBNodeData.UpdateKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBNodeData.testCreateKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBNodeData.testCreateKBNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBNodeData.testCreateKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="M:OrderData.OrderDataService.#ctor">
	<remarks/>
</member><member name="E:OrderData.OrderDataService.SelectOrderListCompleted">
	<remarks/>
</member><member name="M:OrderData.OrderDataService.SelectOrderList(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:OrderData.OrderDataService.SelectOrderListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:OrderData.OrderDataService.SelectOrderListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:OrderData.OrderDataService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:OrderData.OrderDataService">
	<remarks/>
</member><member name="T:OrderData.OrderListByDataSet.GetOrdByAdmDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:OrderData.OrderListByDataSet.GetOrdByAdmRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:OrderData.OrderListByDataSet.GetOrdByAdmRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:OrderData.OrderListByDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:OrderData.SelectOrderListCompletedEventHandler">
	<remarks/>
</member><member name="P:OrderData.SelectOrderListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:OrderData.SelectOrderListCompletedEventArgs">
	<remarks/>
</member><member name="M:UnitData.UnitService.#ctor">
	<remarks/>
</member><member name="E:UnitData.UnitService.CreateUnitCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.CreateUnitTypeCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.DeleteUnitCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.DeleteUnitTypeCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.GetAllUnitTypeCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.GetUnitsCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.GetUnitsByCodeCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.UpdateUnitCompleted">
	<remarks/>
</member><member name="E:UnitData.UnitService.UpdateUnitTypeCompleted">
	<remarks/>
</member><member name="M:UnitData.UnitService.CreateUnit(UnitData.EUnit)">
	<remarks/>
</member><member name="M:UnitData.UnitService.CreateUnitAsync(UnitData.EUnit)">
	<remarks/>
</member><member name="M:UnitData.UnitService.CreateUnitAsync(UnitData.EUnit,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.CreateUnitType(UnitData.EUnitType)">
	<remarks/>
</member><member name="M:UnitData.UnitService.CreateUnitTypeAsync(UnitData.EUnitType)">
	<remarks/>
</member><member name="M:UnitData.UnitService.CreateUnitTypeAsync(UnitData.EUnitType,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.DeleteUnit(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:UnitData.UnitService.DeleteUnitAsync(System.String)">
	<remarks/>
</member><member name="M:UnitData.UnitService.DeleteUnitAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.DeleteUnitType(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:UnitData.UnitService.DeleteUnitTypeAsync(System.String)">
	<remarks/>
</member><member name="M:UnitData.UnitService.DeleteUnitTypeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetAllUnitType">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetAllUnitTypeAsync">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetAllUnitTypeAsync(System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetUnits">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetUnitsAsync">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetUnitsAsync(System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetUnitsByCode(System.String)">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetUnitsByCodeAsync(System.String)">
	<remarks/>
</member><member name="M:UnitData.UnitService.GetUnitsByCodeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.UpdateUnit(UnitData.EUnit)">
	<remarks/>
</member><member name="M:UnitData.UnitService.UpdateUnitAsync(UnitData.EUnit)">
	<remarks/>
</member><member name="M:UnitData.UnitService.UpdateUnitAsync(UnitData.EUnit,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.UpdateUnitType(UnitData.EUnitType)">
	<remarks/>
</member><member name="M:UnitData.UnitService.UpdateUnitTypeAsync(UnitData.EUnitType)">
	<remarks/>
</member><member name="M:UnitData.UnitService.UpdateUnitTypeAsync(UnitData.EUnitType,System.Object)">
	<remarks/>
</member><member name="M:UnitData.UnitService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:UnitData.UnitService">
	<remarks/>
</member><member name="P:UnitData.EUnit.CHSMeasurementName">
	<remarks/>
</member><member name="P:UnitData.EUnit.Code">
	<remarks/>
</member><member name="P:UnitData.EUnit.Coefficient">
	<remarks/>
</member><member name="P:UnitData.EUnit.Conversion">
	<remarks/>
</member><member name="P:UnitData.EUnit.DefaultUnit">
	<remarks/>
</member><member name="P:UnitData.EUnit.ENGMeasurementName">
	<remarks/>
</member><member name="P:UnitData.EUnit.ID">
	<remarks/>
</member><member name="P:UnitData.EUnit.Symbol">
	<remarks/>
</member><member name="T:UnitData.EUnit">
	<remarks/>
</member><member name="P:UnitData.EUnitType.CHSName">
	<remarks/>
</member><member name="P:UnitData.EUnitType.Code">
	<remarks/>
</member><member name="P:UnitData.EUnitType.ENGName">
	<remarks/>
</member><member name="P:UnitData.EUnitType.ID">
	<remarks/>
</member><member name="T:UnitData.EUnitType">
	<remarks/>
</member><member name="T:UnitData.EUnitTypeDataset.SelectAllTypeDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:UnitData.EUnitTypeDataset.SelectAllTypeRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:UnitData.EUnitTypeDataset.SelectAllTypeRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:UnitData.EUnitTypeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:UnitData.EUnitDataset.SELECTALLUNITDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:UnitData.EUnitDataset.SELECTALLUNITRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:UnitData.EUnitDataset.SELECTALLUNITRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:UnitData.EUnitDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:UnitData.EUnitByCodeDataset.SELECTALLUNITByCodeDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:UnitData.EUnitByCodeDataset.SELECTALLUNITByCodeRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:UnitData.EUnitByCodeDataset.SELECTALLUNITByCodeRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:UnitData.EUnitByCodeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:UnitData.CreateUnitCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.CreateUnitCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.CreateUnitCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.CreateUnitTypeCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.CreateUnitTypeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.CreateUnitTypeCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.DeleteUnitCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.DeleteUnitCompletedEventArgs.DeleteUnitResult">
	<remarks/>
</member><member name="P:UnitData.DeleteUnitCompletedEventArgs.DeleteUnitResultSpecified">
	<remarks/>
</member><member name="T:UnitData.DeleteUnitCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.DeleteUnitTypeCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.DeleteUnitTypeCompletedEventArgs.DeleteUnitTypeResult">
	<remarks/>
</member><member name="P:UnitData.DeleteUnitTypeCompletedEventArgs.DeleteUnitTypeResultSpecified">
	<remarks/>
</member><member name="T:UnitData.DeleteUnitTypeCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.GetAllUnitTypeCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.GetAllUnitTypeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.GetAllUnitTypeCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.GetUnitsCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.GetUnitsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.GetUnitsCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.GetUnitsByCodeCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.GetUnitsByCodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.GetUnitsByCodeCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.UpdateUnitCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.UpdateUnitCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.UpdateUnitCompletedEventArgs">
	<remarks/>
</member><member name="T:UnitData.UpdateUnitTypeCompletedEventHandler">
	<remarks/>
</member><member name="P:UnitData.UpdateUnitTypeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:UnitData.UpdateUnitTypeCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.common.DateTimeHelper.GetShortDateOfToday">
	<summary>
 获取当前日期，格式为：2000-12-01
 </summary>
	<returns>当前日期</returns>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.common.DateTimeHelper">
	<summary>
 日期时间工具类
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.annotate.AnnoToolForm.BatchAddAnnotation">
	<summary>
 批量添加标注
 </summary>
	<returns>是否添加了标注</returns>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.OrdersDicForm.QueryEpisodeList">
	<summary>
 加载就诊列表
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.OrdersDicForm.ChangeDictionaryText(System.Windows.Forms.DataGridView@,System.String@)">
 按格式组合显示引用医嘱

</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.OrdersDicForm.tcOrdersQuote_TabChanged(System.Object,System.EventArgs)">
	<summary>
 切换tab加载就诊列表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.OrdersDicForm.dgBOLISData_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选择就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.OrdersDicForm.SelectDefaultTab">
	<summary>
 选中默认显示Tab
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.Controller.NullText">
 -----------------------------------------------------------------------------
 <summary>
 增加一个空单元显示文本的只读属性，默认是大括号中间是单元名称，多数单元都是这样的
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.Controller.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 所有需要刷新的Controller都要进行选中文本的指定，即下面的代码，故将此处理放在父类中
 （自由文本、E单元、G单元单独处理）
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.Controller.DrawSimple(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 控制简单单元（L单元、S单元、N单元）的文字颜色
 填写内容前是(48, 114, 0)，填写内容后是(0, 165, 132)，无论是否选中，颜色不变
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.Controller.DrawSelection(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 控制需要进行选择操作的单元（P单元、D单元、I单元、M单元、O单元、Q单元、IconAnnoController）的文字颜色
  填写内容前是(0, 102, 255)，填写内容后是(0, 0, 255)，无论是否选中，颜色不变
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.Controller.DrawBackColor(dhcc.epr.eprlib.presentation.textedit.PCTextEdit,System.Int32,System.Int32,System.Drawing.Color)">
 -----------------------------------------------------------------------------
 <summary>
 绘制结构化单元的背景色
 </summary>
	<param name="objTextEdit">整个复杂文本对象</param>
	<param name="startPosition">操作单元的文本位置</param>
	<param name="textLength">操作单元的文本长度</param>
	<param name="backColor">背景色</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-21	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.Controller.DrawForeColor(dhcc.epr.eprlib.presentation.textedit.PCTextEdit,System.Int32,System.Int32,System.Drawing.Color)">
 -----------------------------------------------------------------------------
 <summary>
 绘制结构化单元的前景色
 </summary>
	<param name="objTextEdit">整个复杂文本对象</param>
	<param name="startPosition">操作单元的文本位置</param>
	<param name="textLength">操作单元的文本长度</param>
	<param name="foreColor">前景色</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-21	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:DataElementData.DataElementInfo.#ctor">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.CheckEntifierCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.CreateDataElementCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.DeleteGlossaryCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.SelectAllGlossaryByCategoryIDCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.SelectCountbyCategoryIDCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.SelectDevIDByEntifierCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.SelectGlossaryByIdCompleted">
	<remarks/>
</member><member name="E:DataElementData.DataElementInfo.UpdateGlossaryCompleted">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CheckEntifier(System.String,System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CheckEntifierAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CheckEntifierAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CreateDataElement(DataElementData.EDataElement)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CreateDataElementAsync(DataElementData.EDataElement)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CreateDataElementAsync(DataElementData.EDataElement,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.DeleteGlossary(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.DeleteGlossaryAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.DeleteGlossaryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectAllGlossaryByCategoryID(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectAllGlossaryByCategoryIDAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectAllGlossaryByCategoryIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectCountbyCategoryID(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectCountbyCategoryIDAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectCountbyCategoryIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectDevIDByEntifier(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectDevIDByEntifierAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectDevIDByEntifierAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectGlossaryById(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectGlossaryByIdAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.SelectGlossaryByIdAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.UpdateGlossary(DataElementData.EDataElement)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.UpdateGlossaryAsync(DataElementData.EDataElement)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.UpdateGlossaryAsync(DataElementData.EDataElement,System.Object)">
	<remarks/>
</member><member name="M:DataElementData.DataElementInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:DataElementData.DataElementInfo">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.ID">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.CategoryID">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.CreateDate">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.CreateDateSpecified">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.CreateTime">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.CreateTimeSpecified">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.LastModifyDate">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.LastModifyDateSpecified">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.LastModifyTime">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.LastModifyTimeSpecified">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.Entifier">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.Name">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.Versions">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.RegOrgan">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.Environment">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.Definition">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.ClassModle">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.DataType">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.Format">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.DEVID">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.ResOrgan">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.State">
	<remarks/>
</member><member name="P:DataElementData.EDataElement.PutInOrgan">
	<remarks/>
</member><member name="T:DataElementData.EDataElement">
	<remarks/>
</member><member name="T:DataElementData.EDataElementDataset.SelectAllByCategoryIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:DataElementData.EDataElementDataset.SelectAllByCategoryIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:DataElementData.EDataElementDataset.SelectAllByCategoryIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:DataElementData.EDataElementDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:DataElementData.CheckEntifierCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.CheckEntifierCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.CheckEntifierCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.CreateDataElementCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.CreateDataElementCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.CreateDataElementCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.DeleteGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.DeleteGlossaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.DeleteGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.SelectAllGlossaryByCategoryIDCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.SelectAllGlossaryByCategoryIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.SelectAllGlossaryByCategoryIDCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.SelectCountbyCategoryIDCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.SelectCountbyCategoryIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.SelectCountbyCategoryIDCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.SelectDevIDByEntifierCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.SelectDevIDByEntifierCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.SelectDevIDByEntifierCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.SelectGlossaryByIdCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.SelectGlossaryByIdCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.SelectGlossaryByIdCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementData.UpdateGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementData.UpdateGlossaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementData.UpdateGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.#ctor">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.CheckInternalIDCompleted">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.CreateGlossaryCompleted">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.DeleteGlossaryCompleted">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.GetSubGlossariesByParentIDCompleted">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.SelectAllGlossaryByCategoryIDCompleted">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.SelectGlossaryByIdCompleted">
	<remarks/>
</member><member name="E:GlossaryData.GlossaryInfo.UpdateGlossaryCompleted">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CheckInternalID(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CheckInternalIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CheckInternalIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CreateGlossary(GlossaryData.EGlossary)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CreateGlossaryAsync(GlossaryData.EGlossary)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CreateGlossaryAsync(GlossaryData.EGlossary,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.DeleteGlossary(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.DeleteGlossaryAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.DeleteGlossaryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.GetSubGlossariesByParentID(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.GetSubGlossariesByParentIDAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.GetSubGlossariesByParentIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.SelectAllGlossaryByCategoryID(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.SelectAllGlossaryByCategoryIDAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.SelectAllGlossaryByCategoryIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.SelectGlossaryById(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.SelectGlossaryByIdAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.SelectGlossaryByIdAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.UpdateGlossary(GlossaryData.EGlossary,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.UpdateGlossaryAsync(GlossaryData.EGlossary)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.UpdateGlossaryAsync(GlossaryData.EGlossary,System.Object)">
	<remarks/>
</member><member name="M:GlossaryData.GlossaryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:GlossaryData.GlossaryInfo">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.ID">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.Name">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.Description">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.GUID">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.GlossaryCategoryID">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.MetaItemData">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.BindItemData">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.CreateDate">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.CreateDateSpecified">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.CreateTime">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.CreateTimeSpecified">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.LastModifyDate">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.LastModifyDateSpecified">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.LastModifyTime">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.LastModifyTimeSpecified">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.GlossaryType">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.ParentID">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.ChildCount">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.ChildCountSpecified">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.InternalID">
	<remarks/>
</member><member name="P:GlossaryData.EGlossary.MetaID">
	<remarks/>
</member><member name="T:GlossaryData.EGlossary">
	<remarks/>
</member><member name="T:GlossaryData.EGlossarySubDataset.GetSubGlossariesByParentIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryData.EGlossarySubDataset.GetSubGlossariesByParentIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryData.EGlossarySubDataset.GetSubGlossariesByParentIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryData.EGlossarySubDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryData.EGlossaryDataset.SelectAllByCategoryIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryData.EGlossaryDataset.SelectAllByCategoryIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryData.EGlossaryDataset.SelectAllByCategoryIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryData.EGlossaryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryData.CheckInternalIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.CheckInternalIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryData.CheckInternalIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryData.CreateGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.CreateGlossaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryData.CreateGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryData.DeleteGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.DeleteGlossaryCompletedEventArgs.DeleteGlossaryResult">
	<remarks/>
</member><member name="P:GlossaryData.DeleteGlossaryCompletedEventArgs.DeleteGlossaryResultSpecified">
	<remarks/>
</member><member name="T:GlossaryData.DeleteGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryData.GetSubGlossariesByParentIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.GetSubGlossariesByParentIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryData.GetSubGlossariesByParentIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryData.SelectAllGlossaryByCategoryIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.SelectAllGlossaryByCategoryIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryData.SelectAllGlossaryByCategoryIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryData.SelectGlossaryByIdCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.SelectGlossaryByIdCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryData.SelectGlossaryByIdCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryData.UpdateGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryData.UpdateGlossaryCompletedEventArgs.UpdateGlossaryResult">
	<remarks/>
</member><member name="P:GlossaryData.UpdateGlossaryCompletedEventArgs.UpdateGlossaryResultSpecified">
	<remarks/>
</member><member name="T:GlossaryData.UpdateGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="M:HISData.HISDataService.#ctor">
	<remarks/>
</member><member name="E:HISData.HISDataService.GetEpisodeListByPIDCompleted">
	<remarks/>
</member><member name="M:HISData.HISDataService.GetEpisodeListByPID(System.String)">
	<remarks/>
</member><member name="M:HISData.HISDataService.GetEpisodeListByPIDAsync(System.String)">
	<remarks/>
</member><member name="M:HISData.HISDataService.GetEpisodeListByPIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:HISData.HISDataService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:HISData.HISDataService">
	<remarks/>
</member><member name="T:HISData.EEpisodeListByPIdDataset.GetEpisodeListByPIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:HISData.EEpisodeListByPIdDataset.GetEpisodeListByPIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:HISData.EEpisodeListByPIdDataset.GetEpisodeListByPIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:HISData.EEpisodeListByPIdDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:HISData.GetEpisodeListByPIDCompletedEventHandler">
	<remarks/>
</member><member name="P:HISData.GetEpisodeListByPIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:HISData.GetEpisodeListByPIDCompletedEventArgs">
	<remarks/>
</member><member name="M:MedRecordData.MedRecordDataService.#ctor">
	<remarks/>
</member><member name="E:MedRecordData.MedRecordDataService.SelectMedRecordListCompleted">
	<remarks/>
</member><member name="M:MedRecordData.MedRecordDataService.SelectMedRecordList(System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MedRecordData.MedRecordDataService.SelectMedRecordListAsync(System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MedRecordData.MedRecordDataService.SelectMedRecordListAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MedRecordData.MedRecordDataService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:MedRecordData.MedRecordDataService">
	<remarks/>
</member><member name="T:MedRecordData.EMedRecordListDataSet.GetMedRecordListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MedRecordData.EMedRecordListDataSet.GetMedRecordListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MedRecordData.EMedRecordListDataSet.GetMedRecordListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MedRecordData.EMedRecordListDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MedRecordData.SelectMedRecordListCompletedEventHandler">
	<remarks/>
</member><member name="P:MedRecordData.SelectMedRecordListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MedRecordData.SelectMedRecordListCompletedEventArgs">
	<remarks/>
</member><member name="P:dhcc.epr.eprlib.design.metadatadesign.DCMetaData.BindKB">
	<summary>
 模板元数据是否绑定知识库
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.DCMetaData.GetBidingSimpleDataType(System.String)">
	<summary>
 获取元数据项的简单数据类型
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元类型</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.DCMetaData.GetBindingName(System.Windows.Forms.TreeNode,System.Int32,System.String)">
	<summary>
 由节点Tag取得节点Name, 并加上模板目录信息和显示数据类型名称
 </summary>
	<param name="node">节点</param>
	<param name="nodeType">节点类型</param>
	<returns>绑定的单元名称</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.DCMetaData.BuildItemCode(System.Windows.Forms.TreeNode)">
	<summary>
 由节点Tag取得单元代码
 </summary>
	<param name="node">节点Tag信息</param>
	<returns>单元代码</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.StdDicForm.BackspaceKeyDown">
 -----------------------------------------------------------------------------
 <summary>
 退格键修改查询信息的委托方法
 </summary>
	<remarks>
	</remarks>
	<history>
 	[user]	2008-11-5	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.StdDicForm.OnClosed(System.EventArgs)">
	<summary>
 字典框关闭时，清空临时数据
 </summary>
	<param name="e">事件数据参数</param>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.StdDicForm.GetQueryDataset(System.String)">
	<summary>
 add by Candy 20111110 在临时table中检索信息，避免频繁调用数据库
 </summary>
	<param name="strQuery">查询条件</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MultiChoiceForm.InitButton">
	<summary>
 初始化按钮信息
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MultiChoiceForm.AdjustFormWidth">
 -----------------------------------------------------------------------------
 <summary>
 根据多选listbox中的内容调整选项窗口的大小，但还不能超出屏幕宽度
 </summary>
	<remarks>
	</remarks>
	<history>
 	[gaojianbo]	2010-3-2	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MultiChoiceForm.chkDeciduous_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 显示乳牙非乳牙
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MultiChoiceForm.SetBtVisible(System.Boolean)">
	<summary>
 按钮显示不显示，用于恒牙，乳牙切换
 </summary>
	<param name="bValue">true or false</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MultiChoiceForm.GetTeecthPosition(System.Object,System.EventArgs)">
	<summary>
 获得牙位图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.PositionController.NullText">
 -----------------------------------------------------------------------------
 <summary>
 空单元默认显示“{无效的位置名称}”
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PositionController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用父类方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.#ctor">
	<remarks/>
</member><member name="E:BOEPRKbConfigInfo.KbConfigInfo.GetAllLocCompleted">
	<remarks/>
</member><member name="E:BOEPRKbConfigInfo.KbConfigInfo.GetBindLocByIDCompleted">
	<remarks/>
</member><member name="E:BOEPRKbConfigInfo.KbConfigInfo.GetKBTreeByLocCompleted">
	<remarks/>
</member><member name="E:BOEPRKbConfigInfo.KbConfigInfo.SaveBindLocCompleted">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetAllLoc">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetAllLocAsync">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetAllLocAsync(System.Object)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetBindLocByID(System.String)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetBindLocByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetBindLocByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetKBTreeByLoc(System.String)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetKBTreeByLocAsync(System.String)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.GetKBTreeByLocAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.SaveBindLoc(System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.SaveBindLocAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.SaveBindLocAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRKbConfigInfo.KbConfigInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.KbConfigInfo">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.GetAllLocCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRKbConfigInfo.GetAllLocCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.GetAllLocCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.GetBindLocByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRKbConfigInfo.GetBindLocByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.GetBindLocByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.GetKBTreeByLocCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRKbConfigInfo.GetKBTreeByLocCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.GetKBTreeByLocCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.SaveBindLocCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRKbConfigInfo.SaveBindLocCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRKbConfigInfo.SaveBindLocCompletedEventArgs">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.#ctor">
	<remarks/>
</member><member name="E:BOKBCategory.KBCategory.CreateKBCategoryCompleted">
	<remarks/>
</member><member name="E:BOKBCategory.KBCategory.DeleteKBCategoryCompleted">
	<remarks/>
</member><member name="E:BOKBCategory.KBCategory.SelectAllKBCategoryCompleted">
	<remarks/>
</member><member name="E:BOKBCategory.KBCategory.SelectKBCategoryByIDCompleted">
	<remarks/>
</member><member name="E:BOKBCategory.KBCategory.UpdateKBCategoryCompleted">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.CreateKBCategory(BOKBCategory.EKBCategory)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.CreateKBCategoryAsync(BOKBCategory.EKBCategory)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.CreateKBCategoryAsync(BOKBCategory.EKBCategory,System.Object)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.DeleteKBCategory(System.String)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.DeleteKBCategoryAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.DeleteKBCategoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.SelectAllKBCategory">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.SelectAllKBCategoryAsync">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.SelectAllKBCategoryAsync(System.Object)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.SelectKBCategoryByID(System.String)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.SelectKBCategoryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.SelectKBCategoryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.UpdateKBCategory(BOKBCategory.EKBCategory)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.UpdateKBCategoryAsync(BOKBCategory.EKBCategory)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.UpdateKBCategoryAsync(BOKBCategory.EKBCategory,System.Object)">
	<remarks/>
</member><member name="M:BOKBCategory.KBCategory.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOKBCategory.KBCategory">
	<remarks/>
</member><member name="P:BOKBCategory.EKBCategory.Description">
	<remarks/>
</member><member name="P:BOKBCategory.EKBCategory.ID">
	<remarks/>
</member><member name="P:BOKBCategory.EKBCategory.Name">
	<remarks/>
</member><member name="P:BOKBCategory.EKBCategory.ParentID">
	<remarks/>
</member><member name="P:BOKBCategory.EKBCategory.ResChildCount">
	<remarks/>
</member><member name="P:BOKBCategory.EKBCategory.ResChildCountSpecified">
	<remarks/>
</member><member name="T:BOKBCategory.EKBCategory">
	<remarks/>
</member><member name="T:BOKBCategory.EKBCategoryDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKBCategory.EKBCategoryDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKBCategory.EKBCategoryDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKBCategory.EKBCategoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKBCategory.CreateKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBCategory.CreateKBCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBCategory.CreateKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBCategory.DeleteKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBCategory.DeleteKBCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBCategory.DeleteKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBCategory.SelectAllKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBCategory.SelectAllKBCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBCategory.SelectAllKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBCategory.SelectKBCategoryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBCategory.SelectKBCategoryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBCategory.SelectKBCategoryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBCategory.UpdateKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBCategory.UpdateKBCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBCategory.UpdateKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.#ctor">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.CreateStdDictionaryCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.DeleteStdDictionaryCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.DeleteStdQueryTempGlobalCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.GetStdDicListCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.GetStdDicOrListCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.GetStdDicPageCountCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.GetStdDicitonaryByIDCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.SelectALLStdDicCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.SelectConditionByStdCodeCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.SelectStdDicByRuleTypeTagCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.SwapSequenceCompleted">
	<remarks/>
</member><member name="E:BOStdDictionary.StdDictionaryService.UpdateStdDictionaryCompleted">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.CreateStdDictionary(BOStdDictionary.EStdDictionary)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.CreateStdDictionaryAsync(BOStdDictionary.EStdDictionary)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.CreateStdDictionaryAsync(BOStdDictionary.EStdDictionary,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.DeleteStdDictionary(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.DeleteStdDictionaryAsync(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.DeleteStdDictionaryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.DeleteStdQueryTempGlobal(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.DeleteStdQueryTempGlobalAsync(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.DeleteStdQueryTempGlobalAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicList(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicListAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicListAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicOrList(System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.String,System.String@,System.String@,System.String,System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicOrListAsync(System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicOrListAsync(System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicPageCount(System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicPageCountAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicPageCountAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicitonaryByID(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicitonaryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.GetStdDicitonaryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectALLStdDic">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectALLStdDicAsync">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectALLStdDicAsync(System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectConditionByStdCode(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectConditionByStdCodeAsync(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectConditionByStdCodeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectStdDicByRuleTypeTag(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectStdDicByRuleTypeTagAsync(System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SelectStdDicByRuleTypeTagAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SwapSequence(System.String,System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SwapSequenceAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.SwapSequenceAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.UpdateStdDictionary(BOStdDictionary.EStdDictionary)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.UpdateStdDictionaryAsync(BOStdDictionary.EStdDictionary)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.UpdateStdDictionaryAsync(BOStdDictionary.EStdDictionary,System.Object)">
	<remarks/>
</member><member name="M:BOStdDictionary.StdDictionaryService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOStdDictionary.StdDictionaryService">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.Code">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.Description">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.DicAliasCol">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.DicCodeCol">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.DicDescCol">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.ID">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.Name">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.TableName">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.IsRuleType">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.RuleTypeTag">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.Condition">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.ConditionCode">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.IsDiagnosRuleType">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.Sequence">
	<remarks/>
</member><member name="P:BOStdDictionary.EStdDictionary.SequenceSpecified">
	<remarks/>
</member><member name="T:BOStdDictionary.EStdDictionary">
	<remarks/>
</member><member name="T:BOStdDictionary.EStdDicOrListDataset.GetStdDicOrListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOStdDictionary.EStdDicOrListDataset.GetStdDicOrListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOStdDictionary.EStdDicOrListDataset.GetStdDicOrListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOStdDictionary.EStdDicOrListDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOStdDictionary.EStdDictionaryDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOStdDictionary.EStdDictionaryDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOStdDictionary.EStdDictionaryDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOStdDictionary.EStdDictionaryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOStdDictionary.CreateStdDictionaryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.CreateStdDictionaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.CreateStdDictionaryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.DeleteStdDictionaryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.DeleteStdDictionaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.DeleteStdDictionaryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.DeleteStdQueryTempGlobalCompletedEventHandler">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicListCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.GetStdDicListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicListCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicOrListCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.GetStdDicOrListCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:BOStdDictionary.GetStdDicOrListCompletedEventArgs.AResultCount">
	<remarks/>
</member><member name="P:BOStdDictionary.GetStdDicOrListCompletedEventArgs.SessionId">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicOrListCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicPageCountCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.GetStdDicPageCountCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicPageCountCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicitonaryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.GetStdDicitonaryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.GetStdDicitonaryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.SelectALLStdDicCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.SelectALLStdDicCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.SelectALLStdDicCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.SelectConditionByStdCodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.SelectConditionByStdCodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.SelectConditionByStdCodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.SelectStdDicByRuleTypeTagCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.SelectStdDicByRuleTypeTagCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.SelectStdDicByRuleTypeTagCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.SwapSequenceCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.SwapSequenceCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.SwapSequenceCompletedEventArgs">
	<remarks/>
</member><member name="T:BOStdDictionary.UpdateStdDictionaryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOStdDictionary.UpdateStdDictionaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOStdDictionary.UpdateStdDictionaryCompletedEventArgs">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.#ctor">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.CreateStdDictionaryCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.DeleteStdDictionaryCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.DeleteStdQueryTempGlobalCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.GetStdDicListCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.GetStdDicOrListCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.GetStdDicPageCountCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.GetStdDicitonaryByIDCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.SelectALLStdDicCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.SelectStdDicByRuleTypeTagCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.UpdateStdDictionaryCompleted">
	<remarks/>
</member><member name="E:DictionaryData.StdDictionaryService.icdtestCompleted">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.CreateStdDictionary(DictionaryData.EStdDictionary)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.CreateStdDictionaryAsync(DictionaryData.EStdDictionary)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.CreateStdDictionaryAsync(DictionaryData.EStdDictionary,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.DeleteStdDictionary(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.DeleteStdDictionaryAsync(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.DeleteStdDictionaryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.DeleteStdQueryTempGlobal(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.DeleteStdQueryTempGlobalAsync(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.DeleteStdQueryTempGlobalAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicList(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicListAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicListAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicOrList(System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.String,System.String@,System.String@)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicOrListAsync(System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicOrListAsync(System.String,System.String,System.Int64,System.Boolean,System.Int64,System.Boolean,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicPageCount(System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicPageCountAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicPageCountAsync(System.String,System.String,System.String,System.String,System.Int64,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicitonaryByID(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicitonaryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.GetStdDicitonaryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.SelectALLStdDic">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.SelectALLStdDicAsync">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.SelectALLStdDicAsync(System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.SelectStdDicByRuleTypeTag(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.SelectStdDicByRuleTypeTagAsync(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.SelectStdDicByRuleTypeTagAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.UpdateStdDictionary(DictionaryData.EStdDictionary)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.UpdateStdDictionaryAsync(DictionaryData.EStdDictionary)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.UpdateStdDictionaryAsync(DictionaryData.EStdDictionary,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.icdtest(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.icdtestAsync(System.String)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.icdtestAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DictionaryData.StdDictionaryService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:DictionaryData.StdDictionaryService">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.Code">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.Description">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.DicAliasCol">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.DicCodeCol">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.DicDescCol">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.ID">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.Name">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.TableName">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.IsRuleType">
	<remarks/>
</member><member name="P:DictionaryData.EStdDictionary.RuleTypeTag">
	<remarks/>
</member><member name="T:DictionaryData.EStdDictionary">
	<remarks/>
</member><member name="T:DictionaryData.EStdDicOrListDataset.GetStdDicOrListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:DictionaryData.EStdDicOrListDataset.GetStdDicOrListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:DictionaryData.EStdDicOrListDataset.GetStdDicOrListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:DictionaryData.EStdDicOrListDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:DictionaryData.EStdDictionaryDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:DictionaryData.EStdDictionaryDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:DictionaryData.EStdDictionaryDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:DictionaryData.EStdDictionaryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:DictionaryData.CreateStdDictionaryCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.CreateStdDictionaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.CreateStdDictionaryCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.DeleteStdDictionaryCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.DeleteStdDictionaryCompletedEventArgs.DeleteStdDictionaryResult">
	<remarks/>
</member><member name="P:DictionaryData.DeleteStdDictionaryCompletedEventArgs.DeleteStdDictionaryResultSpecified">
	<remarks/>
</member><member name="T:DictionaryData.DeleteStdDictionaryCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.DeleteStdQueryTempGlobalCompletedEventHandler">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicListCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.GetStdDicListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicListCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicOrListCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.GetStdDicOrListCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:DictionaryData.GetStdDicOrListCompletedEventArgs.AResultCount">
	<remarks/>
</member><member name="P:DictionaryData.GetStdDicOrListCompletedEventArgs.SessionId">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicOrListCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicPageCountCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.GetStdDicPageCountCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicPageCountCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicitonaryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.GetStdDicitonaryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.GetStdDicitonaryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.SelectALLStdDicCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.SelectALLStdDicCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.SelectALLStdDicCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.SelectStdDicByRuleTypeTagCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.SelectStdDicByRuleTypeTagCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.SelectStdDicByRuleTypeTagCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.UpdateStdDictionaryCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.UpdateStdDictionaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.UpdateStdDictionaryCompletedEventArgs">
	<remarks/>
</member><member name="T:DictionaryData.icdtestCompletedEventHandler">
	<remarks/>
</member><member name="P:DictionaryData.icdtestCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DictionaryData.icdtestCompletedEventArgs">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.#ctor">
	<remarks/>
</member><member name="E:GlossaryItemData.GlossaryItemInfo.DelItemByGlossaryIDCompleted">
	<remarks/>
</member><member name="E:GlossaryItemData.GlossaryItemInfo.GetGlossaryItemsCompleted">
	<remarks/>
</member><member name="E:GlossaryItemData.GlossaryItemInfo.GetGlossaryKBItemsCompleted">
	<remarks/>
</member><member name="E:GlossaryItemData.GlossaryItemInfo.GetTermsCompleted">
	<remarks/>
</member><member name="E:GlossaryItemData.GlossaryItemInfo.SaveUnitGlossaryCompleted">
	<remarks/>
</member><member name="E:GlossaryItemData.GlossaryItemInfo.UpdateGlossaryItemsCompleted">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.DelItemByGlossaryID(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.DelItemByGlossaryIDAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.DelItemByGlossaryIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetGlossaryItems(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetGlossaryItemsAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetGlossaryItemsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetGlossaryKBItems(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetGlossaryKBItemsAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetGlossaryKBItemsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetTerms(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetTermsAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.GetTermsAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.SaveUnitGlossary(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.SaveUnitGlossaryAsync(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.SaveUnitGlossaryAsync(System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.UpdateGlossaryItems(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.UpdateGlossaryItemsAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.UpdateGlossaryItemsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemData.GlossaryItemInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:GlossaryItemData.GlossaryItemInfo">
	<remarks/>
</member><member name="T:GlossaryItemData.EGlossaryItemDataset.GetItemsByIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryItemData.EGlossaryItemDataset.GetItemsByIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryItemData.EGlossaryItemDataset.GetItemsByIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryItemData.EGlossaryItemDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryItemData.EGlossaryKBItemDataset.GetKBItemsByIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryItemData.EGlossaryKBItemDataset.GetKBItemsByIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryItemData.EGlossaryKBItemDataset.GetKBItemsByIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryItemData.EGlossaryKBItemDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryItemData.UnitGlossaryDataSet.SelectByItemCodeDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryItemData.UnitGlossaryDataSet.SelectByItemCodeRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryItemData.UnitGlossaryDataSet.SelectByItemCodeRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryItemData.UnitGlossaryDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryItemData.DelItemByGlossaryIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemData.DelItemByGlossaryIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemData.DelItemByGlossaryIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemData.GetGlossaryItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemData.GetGlossaryItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemData.GetGlossaryItemsCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemData.GetGlossaryKBItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemData.GetGlossaryKBItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemData.GetGlossaryKBItemsCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemData.GetTermsCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemData.GetTermsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemData.GetTermsCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemData.SaveUnitGlossaryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemData.SaveUnitGlossaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemData.SaveUnitGlossaryCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemData.UpdateGlossaryItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemData.UpdateGlossaryItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemData.UpdateGlossaryItemsCompletedEventArgs">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.#ctor">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.CheckExistCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.CreateGlossaryItemMapCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.DeleteGlossaryItemMapCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryCodeDECVMIDCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryItemIDCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.SelectGlossaryItemMapByIdCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.UpdateGlossaryItemMapCompleted">
	<remarks/>
</member><member name="E:GlossaryItemMapData.GlossaryItemMapInfo.textCompleted">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CheckExist(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CheckExistAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CheckExistAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CreateGlossaryItemMap(GlossaryItemMapData.EGlossaryItemMap)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CreateGlossaryItemMapAsync(GlossaryItemMapData.EGlossaryItemMap)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CreateGlossaryItemMapAsync(GlossaryItemMapData.EGlossaryItemMap,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.DeleteGlossaryItemMap(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.DeleteGlossaryItemMapAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.DeleteGlossaryItemMapAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryCodeDECVMID(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryCodeDECVMIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryCodeDECVMIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryItemID(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryItemIDAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectByGlossaryItemIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectGlossaryItemMapById(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectGlossaryItemMapByIdAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.SelectGlossaryItemMapByIdAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.UpdateGlossaryItemMap(GlossaryItemMapData.EGlossaryItemMap)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.UpdateGlossaryItemMapAsync(GlossaryItemMapData.EGlossaryItemMap)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.UpdateGlossaryItemMapAsync(GlossaryItemMapData.EGlossaryItemMap,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.text(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.textAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.textAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryItemMapData.GlossaryItemMapInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:GlossaryItemMapData.GlossaryItemMapInfo">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.ID">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.GlossaryItemID">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.TempID">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.TempDes">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.DEVID">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.DEVDes">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.DECVMID">
	<remarks/>
</member><member name="P:GlossaryItemMapData.EGlossaryItemMap.CodeSystem">
	<remarks/>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMap">
	<remarks/>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapByCodeDataset.SelectByGlossaryCodeDECVMIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapByCodeDataset.SelectByGlossaryCodeDECVMIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapByCodeDataset.SelectByGlossaryCodeDECVMIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapByCodeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapDataset.SelectByGlossaryItemIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapDataset.SelectByGlossaryItemIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapDataset.SelectByGlossaryItemIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryItemMapData.EGlossaryItemMapDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryItemMapData.CheckExistCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.CheckExistCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.CheckExistCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.CreateGlossaryItemMapCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.CreateGlossaryItemMapCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.CreateGlossaryItemMapCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.DeleteGlossaryItemMapCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.DeleteGlossaryItemMapCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.DeleteGlossaryItemMapCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.SelectByGlossaryCodeDECVMIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.SelectByGlossaryCodeDECVMIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.SelectByGlossaryCodeDECVMIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.SelectByGlossaryItemIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.SelectByGlossaryItemIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.SelectByGlossaryItemIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.SelectGlossaryItemMapByIdCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.SelectGlossaryItemMapByIdCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.SelectGlossaryItemMapByIdCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.UpdateGlossaryItemMapCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.UpdateGlossaryItemMapCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.UpdateGlossaryItemMapCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryItemMapData.textCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryItemMapData.textCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryItemMapData.textCompletedEventArgs">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.#ctor">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.DeleteDiagnosCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetAllHistoryDataCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypeDatasetCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypesDatasetCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetHistoryDataCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetICDDXDataCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetMRDiagnosDatasetCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsDetailCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.PresentDiagnosCopyedCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.SaveAsPresentDiagnosCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.SaveDiagnosCompleted">
	<remarks/>
</member><member name="E:MRDiagnosData.MRDiagnosDataInfo.UpdateOrInsertMrDiagnosCompleted">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.DeleteDiagnos(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.DeleteDiagnosAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.DeleteDiagnosAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetAllHistoryData(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetAllHistoryDataAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetAllHistoryDataAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypeDataset">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypeDatasetAsync">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypeDatasetAsync(System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypesDataset">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypesDatasetAsync">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetDiagnosTypesDatasetAsync(System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetHistoryData(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetHistoryDataAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetHistoryDataAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetICDDXData(System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetICDDXDataAsync(System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetICDDXDataAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetMRDiagnosDataset(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetMRDiagnosDatasetAsync(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetMRDiagnosDatasetAsync(System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetModleTabs(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsDetail(System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsDetailAsync(System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.GetModleTabsDetailAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.PresentDiagnosCopyed(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.PresentDiagnosCopyedAsync(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.PresentDiagnosCopyedAsync(System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.SaveAsPresentDiagnos(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.SaveAsPresentDiagnosAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.SaveAsPresentDiagnosAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.SaveDiagnos(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.SaveDiagnosAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.SaveDiagnosAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.UpdateOrInsertMrDiagnos(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.UpdateOrInsertMrDiagnosAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.UpdateOrInsertMrDiagnosAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MRDiagnosData.MRDiagnosDataInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:MRDiagnosData.MRDiagnosDataInfo">
	<remarks/>
</member><member name="T:MRDiagnosData.EMRDiagnosAllHistoryDataset.HisMRDiagRepDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosAllHistoryDataset.HisMRDiagRepRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosAllHistoryDataset.HisMRDiagRepRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosAllHistoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosTypeDataset.SelectDiagnosTypeDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosTypeDataset.SelectDiagnosTypeRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosTypeDataset.SelectDiagnosTypeRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosTypeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosStatuesTypeDataset.SelectDiagnosTypesDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosStatuesTypeDataset.SelectDiagnosTypesRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosStatuesTypeDataset.SelectDiagnosTypesRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosStatuesTypeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosHistoryDataset.GetHistoryMRDiagnoseDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosHistoryDataset.GetHistoryMRDiagnoseRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosHistoryDataset.GetHistoryMRDiagnoseRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosHistoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosICDDataset.GetICDDXDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosICDDataset.GetICDDXRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosICDDataset.GetICDDXRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosICDDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosDataSet.GetMRDiagnosListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosDataSet.GetMRDiagnosListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosDataSet.GetMRDiagnosListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDataset.FindDiagoseTabDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDataset.FindDiagoseTabRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDataset.FindDiagoseTabRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDetailDataset.FindDiagoseTabDetailDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDetailDataset.FindDiagoseTabDetailRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDetailDataset.FindDiagoseTabDetailRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MRDiagnosData.EMRDiagnosModleDetailDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MRDiagnosData.DeleteDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.DeleteDiagnosCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.DeleteDiagnosCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetAllHistoryDataCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetAllHistoryDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetAllHistoryDataCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetDiagnosTypeDatasetCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetDiagnosTypeDatasetCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetDiagnosTypeDatasetCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetDiagnosTypesDatasetCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetDiagnosTypesDatasetCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetDiagnosTypesDatasetCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetHistoryDataCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetHistoryDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetHistoryDataCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetICDDXDataCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetICDDXDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetICDDXDataCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetMRDiagnosDatasetCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetMRDiagnosDatasetCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetMRDiagnosDatasetCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetModleTabsCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetModleTabsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetModleTabsCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.GetModleTabsDetailCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.GetModleTabsDetailCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.GetModleTabsDetailCompletedEventArgs">
	<remarks/>
</member><member name="T:MRDiagnosData.PresentDiagnosCopyedCompletedEventHandler">
	<remarks/>
</member><member name="T:MRDiagnosData.SaveAsPresentDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="T:MRDiagnosData.SaveDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="T:MRDiagnosData.UpdateOrInsertMrDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="P:MRDiagnosData.UpdateOrInsertMrDiagnosCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MRDiagnosData.UpdateOrInsertMrDiagnosCompletedEventArgs">
	<remarks/>
</member><member name="M:TPrivRuleType.TemplatePrivBORuleType.#ctor">
	<remarks/>
</member><member name="E:TPrivRuleType.TemplatePrivBORuleType.GetRuleTypeDetailsCompleted">
	<remarks/>
</member><member name="M:TPrivRuleType.TemplatePrivBORuleType.GetRuleTypeDetails(System.String)">
	<remarks/>
</member><member name="M:TPrivRuleType.TemplatePrivBORuleType.GetRuleTypeDetailsAsync(System.String)">
	<remarks/>
</member><member name="M:TPrivRuleType.TemplatePrivBORuleType.GetRuleTypeDetailsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:TPrivRuleType.TemplatePrivBORuleType.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:TPrivRuleType.TemplatePrivBORuleType">
	<remarks/>
</member><member name="T:TPrivRuleType.GetRuleTypeDetailsCompletedEventHandler">
	<remarks/>
</member><member name="P:TPrivRuleType.GetRuleTypeDetailsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:TPrivRuleType.GetRuleTypeDetailsCompletedEventArgs">
	<remarks/>
</member><member name="T:dhcc.epr.eprlib.design.glossarydesign.GlossaryUnitTree.AfterSelectEventHandler">
	<summary>
 行选中改变事件
 </summary>
	<param name="sender"></param>
	<param name="strMetaData"></param>
	<param name="strNodeTag"></param>
	<remarks></remarks>
</member><member name="E:dhcc.epr.eprlib.design.glossarydesign.GlossaryUnitTree.OnAfterSelect">
	<summary>
 行选中触发事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryUnitTree.GlossaryUnitTree_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
	<summary>
 选中事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.metadata.MITable.HorizontalAlignment">
 -----------------------------------------------------------------------------
 <summary>
 表格单元文本水平对齐方式
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-8	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:BOKnowledgeBase.KnowledgeBase.#ctor">
	<remarks/>
</member><member name="E:BOKnowledgeBase.KnowledgeBase.CreateKnowledgeBaseCompleted">
	<remarks/>
</member><member name="E:BOKnowledgeBase.KnowledgeBase.DeleteKnowledgeBaseCompleted">
	<remarks/>
</member><member name="E:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseBYPARENTIDCompleted">
	<remarks/>
</member><member name="E:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseByIDCompleted">
	<remarks/>
</member><member name="E:BOKnowledgeBase.KnowledgeBase.UpdateKnowledgeBaseCompleted">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.CreateKnowledgeBase(BOKnowledgeBase.EKnowledgeBase)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.CreateKnowledgeBaseAsync(BOKnowledgeBase.EKnowledgeBase)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.CreateKnowledgeBaseAsync(BOKnowledgeBase.EKnowledgeBase,System.Object)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.DeleteKnowledgeBase(System.String)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.DeleteKnowledgeBaseAsync(System.String)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.DeleteKnowledgeBaseAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseBYPARENTID(System.String)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseBYPARENTIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseBYPARENTIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseByID(System.String)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.SelectKnowledgeBaseByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.UpdateKnowledgeBase(BOKnowledgeBase.EKnowledgeBase)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.UpdateKnowledgeBaseAsync(BOKnowledgeBase.EKnowledgeBase)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.UpdateKnowledgeBaseAsync(BOKnowledgeBase.EKnowledgeBase,System.Object)">
	<remarks/>
</member><member name="M:BOKnowledgeBase.KnowledgeBase.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOKnowledgeBase.KnowledgeBase">
	<remarks/>
</member><member name="P:BOKnowledgeBase.EKnowledgeBase.Description">
	<remarks/>
</member><member name="P:BOKnowledgeBase.EKnowledgeBase.ID">
	<remarks/>
</member><member name="P:BOKnowledgeBase.EKnowledgeBase.KBCategoryID">
	<remarks/>
</member><member name="P:BOKnowledgeBase.EKnowledgeBase.Name">
	<remarks/>
</member><member name="T:BOKnowledgeBase.EKnowledgeBase">
	<remarks/>
</member><member name="T:BOKnowledgeBase.EKnowledgeBaseDataset.SELECTBYCATEIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKnowledgeBase.EKnowledgeBaseDataset.SELECTBYCATEIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKnowledgeBase.EKnowledgeBaseDataset.SELECTBYCATEIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKnowledgeBase.EKnowledgeBaseDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKnowledgeBase.CreateKnowledgeBaseCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKnowledgeBase.CreateKnowledgeBaseCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKnowledgeBase.CreateKnowledgeBaseCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKnowledgeBase.DeleteKnowledgeBaseCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKnowledgeBase.DeleteKnowledgeBaseCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKnowledgeBase.DeleteKnowledgeBaseCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKnowledgeBase.SelectKnowledgeBaseBYPARENTIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKnowledgeBase.SelectKnowledgeBaseBYPARENTIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKnowledgeBase.SelectKnowledgeBaseBYPARENTIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKnowledgeBase.SelectKnowledgeBaseByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKnowledgeBase.SelectKnowledgeBaseByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKnowledgeBase.SelectKnowledgeBaseByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKnowledgeBase.UpdateKnowledgeBaseCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKnowledgeBase.UpdateKnowledgeBaseCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKnowledgeBase.UpdateKnowledgeBaseCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MMetaDataProperty.cbxBindKB_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 是否绑定知识库单选框改变事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MMetaDataProperty.btnKB_Click(System.Object,System.EventArgs)">
	<summary>
 添加界面模板对知识库的绑定
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MMetaDataProperty.btnRemove_Click(System.Object,System.EventArgs)">
	<summary>
 移除界面模板对知识库的绑定
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.ImageLibForm.InitCategoryNodes(ImageCategoryData.EImageCategoryDataset.GetAllImageCategoriesDataTable,System.Windows.Forms.TreeNode,System.String)">
	<summary>
 初始化视图目录节点
 </summary>
	<param name="dt"></param>
	<param name="parentNode"></param>
	<param name="parentID"></param>
	<remarks></remarks>
</member><member name="T:DgvItem">
	<summary>
    datagridview行对象对象
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PKBPanel.Init">
	<summary>
 知识库面板初始化
 </summary>
	<remarks>只发生在前端运行时</remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PKBPanel.ECODE">
	<summary>
 E单元代码
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PKBPanel.KBPartNo">
	<summary>
 知识库部分
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PKBPanel.KBID">
	<summary>
 知识库ID
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PKBPanel.KBEditable">
	<summary>
 知识库可编辑属性
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PKBPanel.GetNISegment(KBNodeData.EKBNode,System.Int32)">
	<summary>
 根据知识库部分从知识库实例对象中获取反序列化的片段
 </summary>
	<param name="eKbNode">知识库实例对象</param>
	<param name="kbPartNo">知识库部分</param>
	<returns>对应的序列化片段</returns>
	<remarks>如果不存在返回Nothing</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PKBPanel.GetCurrentSegment(System.String,System.String)">
	<summary>
 根据元数据和实例数据获取反序列化片段
 </summary>
	<param name="curMetaData">元数据字符串</param>
	<param name="curInstanceData">实例数据字符串</param>
	<returns>序列化片段</returns>
	<remarks>如果不存在返回Nothing</remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.IconAnnoController.NullText">
 -----------------------------------------------------------------------------
 <summary>
 空单元默认显示“{无效的自定义图释名称}”
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.IconAnnoController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用父类方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.SimpleController.OnCursorMove(System.Int32,System.Int32)">
此处原有处理均转移到子类里面自行处理

</member><member name="M:AdmImageItemData.AdmImageItemInfo.#ctor">
	<remarks/>
</member><member name="E:AdmImageItemData.AdmImageItemInfo.CreateCompleted">
	<remarks/>
</member><member name="E:AdmImageItemData.AdmImageItemInfo.DeleteCompleted">
	<remarks/>
</member><member name="E:AdmImageItemData.AdmImageItemInfo.GetByEpisodeIDCompleted">
	<remarks/>
</member><member name="E:AdmImageItemData.AdmImageItemInfo.GetEntityCompleted">
	<remarks/>
</member><member name="E:AdmImageItemData.AdmImageItemInfo.UpdateCompleted">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.Create(AdmImageItemData.EAdmImageItem)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.CreateAsync(AdmImageItemData.EAdmImageItem)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.CreateAsync(AdmImageItemData.EAdmImageItem,System.Object)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.Delete(System.String)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.DeleteAsync(System.String)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.DeleteAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.GetByEpisodeID(System.String)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.GetByEpisodeIDAsync(System.String)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.GetByEpisodeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.GetEntity(System.String)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.GetEntityAsync(System.String)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.GetEntityAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.Update(AdmImageItemData.EAdmImageItem)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.UpdateAsync(AdmImageItemData.EAdmImageItem)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.UpdateAsync(AdmImageItemData.EAdmImageItem,System.Object)">
	<remarks/>
</member><member name="M:AdmImageItemData.AdmImageItemInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:AdmImageItemData.AdmImageItemInfo">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.ID">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.EpisodeID">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.Name">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.Description">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.CreateDate">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.CreateDateSpecified">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.CreateTime">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.CreateTimeSpecified">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.ImageData">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.HotSpotData">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.IconData">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.Status">
	<remarks/>
</member><member name="P:AdmImageItemData.EAdmImageItem.IsPublish">
	<remarks/>
</member><member name="T:AdmImageItemData.EAdmImageItem">
	<remarks/>
</member><member name="T:AdmImageItemData.EAdmImageItemDataSet.GetByEpisodeIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:AdmImageItemData.EAdmImageItemDataSet.GetByEpisodeIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:AdmImageItemData.EAdmImageItemDataSet.GetByEpisodeIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:AdmImageItemData.EAdmImageItemDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:AdmImageItemData.CreateCompletedEventHandler">
	<remarks/>
</member><member name="P:AdmImageItemData.CreateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:AdmImageItemData.CreateCompletedEventArgs">
	<remarks/>
</member><member name="T:AdmImageItemData.DeleteCompletedEventHandler">
	<remarks/>
</member><member name="P:AdmImageItemData.DeleteCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:AdmImageItemData.DeleteCompletedEventArgs">
	<remarks/>
</member><member name="T:AdmImageItemData.GetByEpisodeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:AdmImageItemData.GetByEpisodeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:AdmImageItemData.GetByEpisodeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:AdmImageItemData.GetEntityCompletedEventHandler">
	<remarks/>
</member><member name="P:AdmImageItemData.GetEntityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:AdmImageItemData.GetEntityCompletedEventArgs">
	<remarks/>
</member><member name="T:AdmImageItemData.UpdateCompletedEventHandler">
	<remarks/>
</member><member name="P:AdmImageItemData.UpdateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:AdmImageItemData.UpdateCompletedEventArgs">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.#ctor">
	<remarks/>
</member><member name="E:BOTemplateCategory.TemplateCategoryInfo.CreateTemplateCategoryCompleted">
	<remarks/>
</member><member name="E:BOTemplateCategory.TemplateCategoryInfo.DeleteTemplateCategoryCompleted">
	<remarks/>
</member><member name="E:BOTemplateCategory.TemplateCategoryInfo.SelectAllTemplateCategoryCompleted">
	<remarks/>
</member><member name="E:BOTemplateCategory.TemplateCategoryInfo.SelectTemplateCategoryByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplateCategory.TemplateCategoryInfo.UpdateTemplateCategoryCompleted">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.CreateTemplateCategory(BOTemplateCategory.ETemplateCategory)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.CreateTemplateCategoryAsync(BOTemplateCategory.ETemplateCategory)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.CreateTemplateCategoryAsync(BOTemplateCategory.ETemplateCategory,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.DeleteTemplateCategory(System.String)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.DeleteTemplateCategoryAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.DeleteTemplateCategoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.SelectAllTemplateCategory">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.SelectAllTemplateCategoryAsync">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.SelectAllTemplateCategoryAsync(System.Object)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.SelectTemplateCategoryByID(System.String)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.SelectTemplateCategoryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.SelectTemplateCategoryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.UpdateTemplateCategory(BOTemplateCategory.ETemplateCategory)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.UpdateTemplateCategoryAsync(BOTemplateCategory.ETemplateCategory)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.UpdateTemplateCategoryAsync(BOTemplateCategory.ETemplateCategory,System.Object)">
	<remarks/>
</member><member name="M:BOTemplateCategory.TemplateCategoryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOTemplateCategory.TemplateCategoryInfo">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.PropertyCode">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.PropertyName">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.Description">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.ID">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.Name">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.ParentID">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.ResChildCount">
	<remarks/>
</member><member name="P:BOTemplateCategory.ETemplateCategory.ResChildCountSpecified">
	<remarks/>
</member><member name="T:BOTemplateCategory.ETemplateCategory">
	<remarks/>
</member><member name="T:BOTemplateCategory.ETemplateCategoryDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOTemplateCategory.ETemplateCategoryDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOTemplateCategory.ETemplateCategoryDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOTemplateCategory.ETemplateCategoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOTemplateCategory.CreateTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateCategory.CreateTemplateCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateCategory.CreateTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateCategory.DeleteTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateCategory.DeleteTemplateCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateCategory.DeleteTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateCategory.SelectAllTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateCategory.SelectAllTemplateCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateCategory.SelectAllTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateCategory.SelectTemplateCategoryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateCategory.SelectTemplateCategoryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateCategory.SelectTemplateCategoryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplateCategory.UpdateTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplateCategory.UpdateTemplateCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplateCategory.UpdateTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.#ctor">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.CreateCraftVersionCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.CreateTemplateCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.DelTemplateCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.DeleteCraftVersionCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetMetadataByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetMetadataByTemIDVerIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetMetadataByTemplateIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetMetadataByTemplateIDByBinaryCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetPresentationDataByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetTemplateAllCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetTemplateAllForSltCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetTemplateByGUIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetTemplateByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetTemplateVersionAllCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetTemplateWithGroupAllCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetVersionByIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GetVersionByTemplateIDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.GuidMap2IDCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.IDMap2GuidCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.IsTemplateVersionSavedCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.PublishVersionCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.TestUpdateVersionCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.TestVersionCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.UpdateCraftVersionCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.UpdateTemVSummaryCompleted">
	<remarks/>
</member><member name="E:BOTemplate.TemplateInfo.UpdateTemplateCompleted">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CreateCraftVersion(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CreateCraftVersionAsync(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CreateCraftVersionAsync(BOTemplate.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CreateTemplate(BOTemplate.ETemplate)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CreateTemplateAsync(BOTemplate.ETemplate)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CreateTemplateAsync(BOTemplate.ETemplate,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.DelTemplate(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.DelTemplateAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.DelTemplateAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.DeleteCraftVersion(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.DeleteCraftVersionAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.DeleteCraftVersionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemIDVerID(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemIDVerIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemIDVerIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemplateID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemplateIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemplateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemplateIDByBinary(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemplateIDByBinaryAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetMetadataByTemplateIDByBinaryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetPresentationDataByID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetPresentationDataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetPresentationDataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateAll(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateAllAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateAllAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateAllForSlt(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateAllForSltAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateAllForSltAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateByGUID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateByGUIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateByGUIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateByID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateVersionAll(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateVersionAllAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateVersionAllAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateWithGroupAll(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateWithGroupAllAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetTemplateWithGroupAllAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetVersionByID(System.String,System.Boolean,System.Boolean)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetVersionByIDAsync(System.String,System.Boolean,System.Boolean)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetVersionByIDAsync(System.String,System.Boolean,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetVersionByTemplateID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetVersionByTemplateIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GetVersionByTemplateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GuidMap2ID(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GuidMap2IDAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.GuidMap2IDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.IDMap2Guid(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.IDMap2GuidAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.IDMap2GuidAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.IsTemplateVersionSaved(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.IsTemplateVersionSavedAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.IsTemplateVersionSavedAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.PublishVersion(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.PublishVersionAsync(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.PublishVersionAsync(BOTemplate.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.TestUpdateVersion(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.TestUpdateVersionAsync(System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.TestUpdateVersionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.TestVersion(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.TestVersionAsync(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.TestVersionAsync(BOTemplate.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateCraftVersion(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateCraftVersionAsync(BOTemplate.ETemplateVersion)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateCraftVersionAsync(BOTemplate.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateTemVSummary(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateTemVSummaryAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateTemVSummaryAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateTemplate(BOTemplate.ETemplate)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateTemplateAsync(BOTemplate.ETemplate)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.UpdateTemplateAsync(BOTemplate.ETemplate,System.Object)">
	<remarks/>
</member><member name="M:BOTemplate.TemplateInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOTemplate.TemplateInfo">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.Author">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.CreateDate">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.CreateDateSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.CreateTime">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.ID">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.LastSaveDate">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.LastSaveDateSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.LastSaveTime">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.MetaData">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.PresentationData">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.GridData">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.ScriptData">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.MediasData">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.PublicationDate">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.PublicationDateSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.PublicationTime">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.Status">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.StatusSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.TemplateID">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.VersionNumber">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.VersionNumberSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplateVersion.TemplateSummary">
	<remarks/>
</member><member name="T:BOTemplate.ETemplateVersion">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.DocumentType">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.ChartItemType">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.TemplateProperty">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.Description">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.GUID">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.ID">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.LastVersion">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.LastVersionSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.Name">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.PublishVersion">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.PublishVersionSpecified">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.TemplateCategoryID">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.Code">
	<remarks/>
</member><member name="P:BOTemplate.ETemplate.DisplayName">
	<remarks/>
</member><member name="T:BOTemplate.ETemplate">
	<remarks/>
</member><member name="T:BOTemplate.ETemplateDataset.SELECTALLByCategoryIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOTemplate.ETemplateDataset.SELECTALLByCategoryIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOTemplate.ETemplateDataset.SELECTALLByCategoryIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOTemplate.ETemplateDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOTemplate.ETempForSltDataset.SelectForSltByCIdDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOTemplate.ETempForSltDataset.SelectForSltByCIdRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOTemplate.ETempForSltDataset.SelectForSltByCIdRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOTemplate.ETempForSltDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOTemplate.ETemplateVersionDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOTemplate.ETemplateVersionDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOTemplate.ETemplateVersionDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOTemplate.ETemplateVersionDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOTemplate.CreateCraftVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.CreateCraftVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.CreateCraftVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.CreateTemplateCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.CreateTemplateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.CreateTemplateCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.DelTemplateCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.DelTemplateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.DelTemplateCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.DeleteCraftVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.DeleteCraftVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.DeleteCraftVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetMetadataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByTemIDVerIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetMetadataByTemIDVerIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByTemIDVerIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByTemplateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetMetadataByTemplateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByTemplateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByTemplateIDByBinaryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetMetadataByTemplateIDByBinaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetMetadataByTemplateIDByBinaryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetPresentationDataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetPresentationDataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetPresentationDataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateAllCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetTemplateAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateAllCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateAllForSltCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetTemplateAllForSltCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateAllForSltCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateByGUIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetTemplateByGUIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateByGUIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetTemplateByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateVersionAllCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetTemplateVersionAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateVersionAllCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateWithGroupAllCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetTemplateWithGroupAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetTemplateWithGroupAllCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetVersionByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetVersionByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetVersionByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GetVersionByTemplateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GetVersionByTemplateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GetVersionByTemplateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.GuidMap2IDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.GuidMap2IDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.GuidMap2IDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.IDMap2GuidCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.IDMap2GuidCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.IDMap2GuidCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.IsTemplateVersionSavedCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.IsTemplateVersionSavedCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.IsTemplateVersionSavedCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.PublishVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.PublishVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.PublishVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.TestUpdateVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.TestUpdateVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.TestUpdateVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.TestVersionCompletedEventHandler">
	<remarks/>
</member><member name="T:BOTemplate.UpdateCraftVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.UpdateCraftVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.UpdateCraftVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.UpdateTemVSummaryCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.UpdateTemVSummaryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.UpdateTemVSummaryCompletedEventArgs">
	<remarks/>
</member><member name="T:BOTemplate.UpdateTemplateCompletedEventHandler">
	<remarks/>
</member><member name="P:BOTemplate.UpdateTemplateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOTemplate.UpdateTemplateCompletedEventArgs">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.#ctor">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.AddInstanceLogCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.AddLogCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.ChangeStatusCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.CheckFinalStatusCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.CheckHappenDateTimeValidCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.ClearLogCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetAllLogsCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetCurrentStatusCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetDataByIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetDataByInstanceIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetDescDataByIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetFinalLogCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetGroupDataByIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetGroupItemListCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetInstanceDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetKBDiagnosIDByEpisodeIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetMultipleDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetNormalDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetNormalDataOldCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetParentGroupListCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetRefInstanceIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.GetTemplateIDByIDCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.ImportInstanceDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.InitAfterMultiOperCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.InitAfterSingleOperCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.ReplaceGroupDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.ReplaceTemplateDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.SaveDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.SaveMultipleDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.TestSaveMultipleDataCompleted">
	<remarks/>
</member><member name="E:InstanceDataInfo.InstanceDataInfo.UpdateEPRLogsCompleted">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.AddInstanceLog(System.String,InstanceDataInfo.EMixInstanceLog)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.AddInstanceLogAsync(System.String,InstanceDataInfo.EMixInstanceLog)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.AddInstanceLogAsync(System.String,InstanceDataInfo.EMixInstanceLog,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.AddLog(System.String,InstanceDataInfo.EInstanceLog)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.AddLogAsync(System.String,InstanceDataInfo.EInstanceLog)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.AddLogAsync(System.String,InstanceDataInfo.EInstanceLog,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ChangeStatus(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ChangeStatusAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ChangeStatusAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CheckFinalStatus(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CheckFinalStatusAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CheckFinalStatusAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CheckHappenDateTimeValid(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CheckHappenDateTimeValidAsync(System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CheckHappenDateTimeValidAsync(System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ClearLog(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ClearLogAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ClearLogAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetAllLogs(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetAllLogsAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetAllLogsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetCurrentStatus(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetCurrentStatusAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetCurrentStatusAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetData(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataByID(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataByInstanceID(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataByInstanceIDAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDataByInstanceIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDescDataByID(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDescDataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetDescDataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetFinalLog(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetFinalLogAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetFinalLogAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetGroupDataByID(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetGroupDataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetGroupDataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetGroupItemList(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetGroupItemListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetGroupItemListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetInstanceData(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetInstanceDataAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetInstanceDataAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetKBDiagnosIDByEpisodeID(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetKBDiagnosIDByEpisodeIDAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetKBDiagnosIDByEpisodeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetMultipleData(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetMultipleDataAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetMultipleDataAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetNormalData(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetNormalDataAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetNormalDataAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetNormalDataOld(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetNormalDataOldAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetNormalDataOldAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetParentGroupList(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetParentGroupListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetParentGroupListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetRefInstanceID(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetRefInstanceIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetRefInstanceIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetTemplateIDByID(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetTemplateIDByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.GetTemplateIDByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ImportInstanceData(InstanceDataInfo.EInstanceData)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ImportInstanceDataAsync(InstanceDataInfo.EInstanceData)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ImportInstanceDataAsync(InstanceDataInfo.EInstanceData,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.InitAfterMultiOper(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.InitAfterMultiOperAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.InitAfterMultiOperAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.InitAfterSingleOper(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.InitAfterSingleOperAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.InitAfterSingleOperAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ReplaceGroupData(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ReplaceGroupDataAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ReplaceGroupDataAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ReplaceTemplateData(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ReplaceTemplateDataAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.ReplaceTemplateDataAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.SaveData(InstanceDataInfo.EInstanceData,InstanceDataInfo.EMixInstanceLog@,System.String@)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.SaveDataAsync(InstanceDataInfo.EInstanceData,InstanceDataInfo.EMixInstanceLog,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.SaveDataAsync(InstanceDataInfo.EInstanceData,InstanceDataInfo.EMixInstanceLog,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.SaveMultipleData(InstanceDataInfo.EInstanceData,InstanceDataInfo.EMixInstanceLog@,System.String@)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.SaveMultipleDataAsync(InstanceDataInfo.EInstanceData,InstanceDataInfo.EMixInstanceLog,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.SaveMultipleDataAsync(InstanceDataInfo.EInstanceData,InstanceDataInfo.EMixInstanceLog,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.TestSaveMultipleData(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.TestSaveMultipleDataAsync(System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.TestSaveMultipleDataAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.UpdateEPRLogs(System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.UpdateEPRLogsAsync(System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.UpdateEPRLogsAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InstanceDataInfo.InstanceDataInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:InstanceDataInfo.InstanceDataInfo">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.ID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.Action">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.OperateDate">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.FinalStatus">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.InitStatus">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.OperateTime">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.OperateUserID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.OperateMachineIP">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.RealOperateUserID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.OperateUserName">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.IsNewFramework">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.EpisodeID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.PrintTemplateDocID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.TemplateDocID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EMixInstanceLog.StateInfo">
	<remarks/>
</member><member name="T:InstanceDataInfo.EMixInstanceLog">
	<remarks/>
</member><member name="P:InstanceDataInfo.ReStreamData.StreamData">
	<remarks/>
</member><member name="T:InstanceDataInfo.ReStreamData">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CategoryID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CategoryType">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ChartItemID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ChartItemType">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CreateDate">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CreateDateSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CreateTime">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CreateTimeSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.CreateUser">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.EpisodeID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.GroupItemID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.GroupItemName">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.HappenDate">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.HappenDateSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.HappenTime">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.HappenTimeSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.InstanceData">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ListNo">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.MetaData">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ModifyDate">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ModifyDateSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ModifyTime">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ModifyTimeSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.ModifyUser">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.PatientID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.PresentationData">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.Status">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.TemplateID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.TemplateVersion">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.TemplateVersionSpecified">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.TheECRecord">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.Title">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceData.Remark">
	<remarks/>
</member><member name="T:InstanceDataInfo.EInstanceData">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.Action">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.OperateDate">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.FinalStatus">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.InitStatus">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.OperateTime">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.OperateUserID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.OperateMachineIP">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.RealOperateUserID">
	<remarks/>
</member><member name="P:InstanceDataInfo.EInstanceLog.OperateUserName">
	<remarks/>
</member><member name="T:InstanceDataInfo.EInstanceLog">
	<remarks/>
</member><member name="T:InstanceDataInfo.EInsGroupNewDataSet.SELECTGroupListNewDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:InstanceDataInfo.EInsGroupNewDataSet.SELECTGroupListNewRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:InstanceDataInfo.EInsGroupNewDataSet.SELECTGroupListNewRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:InstanceDataInfo.EInsGroupNewDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:InstanceDataInfo.AddInstanceLogCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.AddInstanceLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.AddInstanceLogCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.AddLogCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.AddLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.AddLogCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.ChangeStatusCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.ChangeStatusCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.ChangeStatusCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.CheckFinalStatusCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.CheckFinalStatusCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.CheckFinalStatusCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.CheckHappenDateTimeValidCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.CheckHappenDateTimeValidCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.CheckHappenDateTimeValidCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.ClearLogCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.ClearLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.ClearLogCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetAllLogsCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetAllLogsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetAllLogsCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetCurrentStatusCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetCurrentStatusCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetCurrentStatusCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetDataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDataByInstanceIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetDataByInstanceIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDataByInstanceIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDescDataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetDescDataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetDescDataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetFinalLogCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetFinalLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetFinalLogCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetGroupDataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetGroupDataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetGroupDataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetGroupItemListCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetGroupItemListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetGroupItemListCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetInstanceDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetInstanceDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetInstanceDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetKBDiagnosIDByEpisodeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetKBDiagnosIDByEpisodeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetKBDiagnosIDByEpisodeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetMultipleDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetMultipleDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetMultipleDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetNormalDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetNormalDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetNormalDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetNormalDataOldCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetNormalDataOldCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetNormalDataOldCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetParentGroupListCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetParentGroupListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetParentGroupListCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetRefInstanceIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetRefInstanceIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetRefInstanceIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetTemplateIDByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.GetTemplateIDByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.GetTemplateIDByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.ImportInstanceDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.ImportInstanceDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.ImportInstanceDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.InitAfterMultiOperCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.InitAfterMultiOperCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.InitAfterMultiOperCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.InitAfterSingleOperCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.InitAfterSingleOperCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.InitAfterSingleOperCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.ReplaceGroupDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.ReplaceGroupDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.ReplaceGroupDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.ReplaceTemplateDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.ReplaceTemplateDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.ReplaceTemplateDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.SaveDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.SaveDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:InstanceDataInfo.SaveDataCompletedEventArgs.AEMixInstanceLog">
	<remarks/>
</member><member name="P:InstanceDataInfo.SaveDataCompletedEventArgs.AErrorMessage">
	<remarks/>
</member><member name="T:InstanceDataInfo.SaveDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.SaveMultipleDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.SaveMultipleDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="P:InstanceDataInfo.SaveMultipleDataCompletedEventArgs.AEMixInstanceLog">
	<remarks/>
</member><member name="P:InstanceDataInfo.SaveMultipleDataCompletedEventArgs.AErrorMessage">
	<remarks/>
</member><member name="T:InstanceDataInfo.SaveMultipleDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.TestSaveMultipleDataCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.TestSaveMultipleDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.TestSaveMultipleDataCompletedEventArgs">
	<remarks/>
</member><member name="T:InstanceDataInfo.UpdateEPRLogsCompletedEventHandler">
	<remarks/>
</member><member name="P:InstanceDataInfo.UpdateEPRLogsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InstanceDataInfo.UpdateEPRLogsCompletedEventArgs">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.#ctor">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.GetPACSItemListCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectPACSArcCateListCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectPACSArcItemListCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectPACSItemIndicatorsCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectPACSItemListByACRDRCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectPACSItemListByDateCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectPACSRptByACRDRCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectReportByOeordIDCompleted">
	<remarks/>
</member><member name="E:PACSData.PACSDataInfo.SelectRptStructureCompleted">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.GetPACSItemList(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.GetPACSItemListAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.GetPACSItemListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSArcCateList">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSArcCateListAsync">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSArcCateListAsync(System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSArcItemList(System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSArcItemListAsync(System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSArcItemListAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemIndicators(System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemIndicatorsAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemIndicatorsAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemListByACRDR(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemListByACRDRAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemListByACRDRAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemListByDate(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemListByDateAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSItemListByDateAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSRptByACRDR(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSRptByACRDRAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectPACSRptByACRDRAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectReportByOeordID(System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectReportByOeordIDAsync(System.String)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectReportByOeordIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectRptStructure">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectRptStructureAsync">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.SelectRptStructureAsync(System.Object)">
	<remarks/>
</member><member name="M:PACSData.PACSDataInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:PACSData.PACSDataInfo">
	<remarks/>
</member><member name="T:PACSData.EPACSListDataset.GetPACSListItemsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSListDataset.GetPACSListItemsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSListDataset.GetPACSListItemsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSListDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSArcCateListDataSet.SelectPACSArcCateListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSArcCateListDataSet.SelectPACSArcCateListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSArcCateListDataSet.SelectPACSArcCateListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSArcCateListDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSArcItemListDataSet.SelectPACSArcItemListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSArcItemListDataSet.SelectPACSArcItemListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSArcItemListDataSet.SelectPACSArcItemListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSArcItemListDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSItemIndicatorsDataSet.SelectPACSItemIndicatorsDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSItemIndicatorsDataSet.SelectPACSItemIndicatorsRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSItemIndicatorsDataSet.SelectPACSItemIndicatorsRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSItemIndicatorsDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSOEordIDByARCDRDataSet.SelPACSItemListByARCDRDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSOEordIDByARCDRDataSet.SelPACSItemListByARCDRRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSOEordIDByARCDRDataSet.SelPACSItemListByARCDRRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSOEordIDByARCDRDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSInterFaceDataSet.SelectPACSItemListByDateDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSInterFaceDataSet.SelectPACSItemListByDateRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSInterFaceDataSet.SelectPACSItemListByDateRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSInterFaceDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSRptByARCDRDataSet.SelPACSRptByARCDRDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSRptByARCDRDataSet.SelPACSRptByARCDRRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSRptByARCDRDataSet.SelPACSRptByARCDRRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSRptByARCDRDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSRptByOEordIDDataSet.SelectReportByOeordIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSRptByOEordIDDataSet.SelectReportByOeordIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSRptByOEordIDDataSet.SelectReportByOeordIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSRptByOEordIDDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.EPACSRptStructureDataSet.SelectRptStructureDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:PACSData.EPACSRptStructureDataSet.SelectRptStructureRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:PACSData.EPACSRptStructureDataSet.SelectRptStructureRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:PACSData.EPACSRptStructureDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:PACSData.GetPACSItemListCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.GetPACSItemListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.GetPACSItemListCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectPACSArcCateListCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectPACSArcCateListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectPACSArcCateListCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectPACSArcItemListCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectPACSArcItemListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectPACSArcItemListCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectPACSItemIndicatorsCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectPACSItemIndicatorsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectPACSItemIndicatorsCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectPACSItemListByACRDRCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectPACSItemListByACRDRCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectPACSItemListByACRDRCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectPACSItemListByDateCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectPACSItemListByDateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectPACSItemListByDateCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectPACSRptByACRDRCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectPACSRptByACRDRCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectPACSRptByACRDRCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectReportByOeordIDCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectReportByOeordIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectReportByOeordIDCompletedEventArgs">
	<remarks/>
</member><member name="T:PACSData.SelectRptStructureCompletedEventHandler">
	<remarks/>
</member><member name="P:PACSData.SelectRptStructureCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:PACSData.SelectRptStructureCompletedEventArgs">
	<remarks/>
</member><member name="T:dhcc.epr.eprlib.design.dataelementdesign.DataElementList.SelectionChangedEventHandler">
	<summary>
 行选中改变事件
 </summary>
	<param name="sender"></param>
	<param name="strRelation"></param>
	<remarks></remarks>
</member><member name="E:dhcc.epr.eprlib.design.dataelementdesign.DataElementList.OnSelectionChanged">
	<summary>
 行选中触发事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.dataelementdesign.DCDataElement.DCDataElement_Load(System.Object,System.EventArgs)">
	<summary>
 登陆事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.dataelementdesign.DCDataElement.dgvDataElement_SelectionChanged(System.Object,System.String)">
	<summary>
 数据元选中行改变事件
 </summary>
	<param name="sender"></param>
	<param name="strRelation"></param>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.tvUnitDoubleClick">
	<summary>
 定义事件委托
 </summary>
</member><member name="E:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.OntvUnitDoubleClick">
	<summary>
 设计控件选中信息发生变化时触发事件
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.dgvGroupTem_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选中项事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.dgvGroupTem_SelectionChanged(System.Object,System.EventArgs)">
	<summary>
 选中行事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.cmbSchemeTypeT_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 编码过滤
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.cmbTemFilter_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 模板ID过滤
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.btnAdd_Click(System.Object,System.EventArgs)">
	<summary>
 添加
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.btnUpdata_Click(System.Object,System.EventArgs)">
	<summary>
 更新 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.btnDel_Click(System.Object,System.EventArgs)">
	<summary>
 删除
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.SetGroupDataValues">
	<summary>
 获取并赋值
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.GetGroupItemValues">
	<summary>
 获取章节组数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.SetGroupCodes">
	<summary>
 获取章节组数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.CheckNodeExisted(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
	<summary>
 判断指定节点是否已存在
 </summary>
	<param name="parNode">父节点</param>
	<param name="itemNode">项目子节点</param>
	<returns>存在返回真，否则为假</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.GetBidingSimpleDataType(System.String)">
	<summary>
 获取元数据项的简单数据类型
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元类型</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.GetDefaultValueType(System.String)">
	<summary>
 获取单元默认取值类型
 </summary>
	<param name="itemCode">单元代码</param>
	<returns>默认取值类型（V、C、VC、CV）</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.GetBindingName(System.Windows.Forms.TreeNode,System.Int32)">
	<summary>
 由节点Tag取得节点Name, 并加上模板目录信息和显示数据类型名称
 </summary>
	<param name="node">节点</param>
	<param name="nodeType">节点类型</param>
	<returns>绑定的单元名称</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.BuildItemCode(System.String,System.String)">
	<summary>
 由节点Tag取得单元代码
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元代码</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.InitTepList(dhcc.epr.eprlib.metadata.MMetaItem,dhcc.epr.eprlib.metadata.MMetaItem,System.String)">
	<summary>
 解析XML，获取模版数据
 </summary>
	<param name="curMetaItem"></param>
	<param name="parentMetaItem"></param>
	<param name="strNodeTag"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.SetCurRowValue">
	<summary>
 选中当前行时，赋值处理
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.CheckNullValue">
	<summary>
 检查判断值不能为空情况
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.getUpOrganDetailsSeqArgs(System.Int32)">
	<summary>
 获取更新排序的字符串:下移intChangeNum：1，上移intChangeNum：-1
 </summary>
	<returns></returns>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.btnOrgDetailsUp_Click(System.Object,System.EventArgs)">
	<summary>
 上移
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GroupTemConfig.btnOrgDetailsDown_Click(System.Object,System.EventArgs)">
	<summary>
 下移
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCDateTime.initDate(System.DateTime)">
	<summary>
 默认为服务器系统时间
 </summary>
	<param name="sysDate"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCDateTime.FormateTimeValue(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 根据日期时间单元的时间格式取相应的时间值
 </summary>
	<param name="valDate"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-3	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.PCDateTime.SetRevContent(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 设置留痕内容
 </summary>
	<param name="orginalContent">原有内容</param>
	<param name="newContent">修改后的新内容</param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-3	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:dhcc.epr.eprlib.presentation.PInterface.SetEPRListTitleHandler">
	<summary>
 给历次病程记录设置默认标题委托
 </summary>
	<param name="title">选中的知识库节点名称</param>
	<remarks>在PKBPanel中对知识库进行添加或替换操作时触发</remarks>
</member><member name="E:dhcc.epr.eprlib.presentation.PInterface.OnKBNodeUpdate">
	<summary>
 设置历次病程记录默认标题自定义事件
 </summary>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.presentation.PInterface.RefreshBindKBTreeHandler">
	<summary>
 根据指定的E单元刷新知识库节点树
 </summary>
	<param name="code">指定的E单元代码</param>
	<remarks>在PCTextEdit中获取焦点时触发</remarks>
</member><member name="E:dhcc.epr.eprlib.presentation.PInterface.OnRefreshBindKBTree">
	<summary>
 刷新指定的E单元知识库节点树自定义事件
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.m_OrdersDicFrom">
	<summary>
 医嘱窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.m_PacsDicForm">
	<summary>
 检查窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.m_LisDicForm">
	<summary>
 检验窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.m_DiagnosDicForm">
	<summary>
 诊断窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.m_VitalsignsDicForm">
	<summary>
 生命体征窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.m_MedRecordDicForm">
	<summary>
 病历信息引用窗体
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.PEunit">
	<summary>
 当前选中的G\E单元（要加入插入内容的单元）
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.diagnosTypeID">
	<summary>
 诊断类型
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.PInterface.TabScheme">
	<summary>
 tab的格式
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PInterface.MetaData">
	<summary>
 界面模板元数据属性
 </summary>
	<remarks>如果带知识库，则刷新知识库节点树</remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PInterface.InstanceData">
	<summary>
 界面模板实例数据
 </summary>
	<remarks>将得到的实例数据传递给PMsg的PPanel，用于反序列化界面模板单元控件</remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PInterface.StrPresentation">
	<summary>
 界面模板展现数据
 </summary>
	<remarks>将得到的展现数据传递给PMsg的PPanel，用于反序列化界面模板单元控件</remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.PInterface.KBSupport">
	<summary>
 是否支持知识库只读属性
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.BindInstance">
	<summary>
 绑定实例数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.ProcessEPRListTitle(System.String)">
	<summary>
 当_KBSupport为真时，触发PKBPanel上的知识库更新事件(添加、替换和双击)
 </summary>
	<param name="title">知识库标题</param>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.RefreshBindKBTree(System.String,System.String,System.Int32)">
	<summary>
 当_KBSupport为真时，触发PMsg中的PPanel上的E单元获取失去焦点后知识库刷新事件(添加、替换和双击)
 </summary>
	<param name="code">关联的E单元Code</param>
	<param name="kbBaseID">绑定的KBCode，实际为kbBaseID</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.ClearBindKBTree">
	<summary>
 清空树节点
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.AddContent_Click">
	<summary>
 添加数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.KBTree_DoubleClick">
	<summary>
 双击添加数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.ReplaceContent_Click">
	<summary>
 替换数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.ytcTool_TabChanged(System.Object,System.EventArgs)">
	<summary>
 切换面板加载资源
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.GetWidth">
	<summary>
 设置tab签所在panel宽度
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.GetPCTextEdit(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
	<summary>
 获得当前选中G\E资源
 </summary>
	<param name="EUnit"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.SetDataValue(System.String)">
	<summary>
 插入资源数据
 </summary>
	<param name="StringValue"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.SetDiagnosPresentTypeData">
	<summary>
 诊断当前诊断类型数据加载
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.GetImageList">
	<summary>
 加截tab签图标
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.GetTabeControl(System.String[])">
	<summary>
 加载tab签
 </summary>
	<param name="strTabName"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.GetTabContract">
	<summary>
 收缩
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PInterface.pbTabContract_Click(System.Object,System.EventArgs)">
	<summary>
 收缩按钮
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ImageTreeData.ImageTreeInfo.#ctor">
	<remarks/>
</member><member name="E:ImageTreeData.ImageTreeInfo.CreateCompleted">
	<remarks/>
</member><member name="E:ImageTreeData.ImageTreeInfo.GetByImageLibIDCompleted">
	<remarks/>
</member><member name="E:ImageTreeData.ImageTreeInfo.GetEntityCompleted">
	<remarks/>
</member><member name="E:ImageTreeData.ImageTreeInfo.SwapSequenceCompleted">
	<remarks/>
</member><member name="E:ImageTreeData.ImageTreeInfo.UpdateCompleted">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.Create(ImageTreeData.EImageTree)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.CreateAsync(ImageTreeData.EImageTree)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.CreateAsync(ImageTreeData.EImageTree,System.Object)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.GetByImageLibID(System.String)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.GetByImageLibIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.GetByImageLibIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.GetEntity(System.String)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.GetEntityAsync(System.String)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.GetEntityAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.SwapSequence(System.String,System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.SwapSequenceAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.SwapSequenceAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.Update(ImageTreeData.EImageTree)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.UpdateAsync(ImageTreeData.EImageTree)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.UpdateAsync(ImageTreeData.EImageTree,System.Object)">
	<remarks/>
</member><member name="M:ImageTreeData.ImageTreeInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:ImageTreeData.ImageTreeInfo">
	<remarks/>
</member><member name="P:ImageTreeData.EImageTree.ID">
	<remarks/>
</member><member name="P:ImageTreeData.EImageTree.Name">
	<remarks/>
</member><member name="P:ImageTreeData.EImageTree.Description">
	<remarks/>
</member><member name="P:ImageTreeData.EImageTree.ImageLibID">
	<remarks/>
</member><member name="P:ImageTreeData.EImageTree.ParentID">
	<remarks/>
</member><member name="P:ImageTreeData.EImageTree.UserID">
	<remarks/>
</member><member name="T:ImageTreeData.EImageTree">
	<remarks/>
</member><member name="T:ImageTreeData.EImageTreeDataSet.GetByImageLibIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ImageTreeData.EImageTreeDataSet.GetByImageLibIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ImageTreeData.EImageTreeDataSet.GetByImageLibIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ImageTreeData.EImageTreeDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ImageTreeData.CreateCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageTreeData.CreateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageTreeData.CreateCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageTreeData.GetByImageLibIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageTreeData.GetByImageLibIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageTreeData.GetByImageLibIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageTreeData.GetEntityCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageTreeData.GetEntityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageTreeData.GetEntityCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageTreeData.SwapSequenceCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageTreeData.SwapSequenceCompletedEventArgs.SwapSequenceResult">
	<remarks/>
</member><member name="P:ImageTreeData.SwapSequenceCompletedEventArgs.SwapSequenceResultSpecified">
	<remarks/>
</member><member name="T:ImageTreeData.SwapSequenceCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageTreeData.UpdateCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageTreeData.UpdateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageTreeData.UpdateCompletedEventArgs">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.#ctor">
	<remarks/>
</member><member name="E:KBDiagnos.KBDiagnos.AddKBDiagnosCompleted">
	<remarks/>
</member><member name="E:KBDiagnos.KBDiagnos.DelKBDiagnosCompleted">
	<remarks/>
</member><member name="E:KBDiagnos.KBDiagnos.GetAllDiagnosCompleted">
	<remarks/>
</member><member name="E:KBDiagnos.KBDiagnos.GetDiagnosByCtLocIDCompleted">
	<remarks/>
</member><member name="E:KBDiagnos.KBDiagnos.GetDiagnosByIDCompleted">
	<remarks/>
</member><member name="E:KBDiagnos.KBDiagnos.ModKBDiagnosCompleted">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.AddKBDiagnos(KBDiagnos.EKBDiagnos)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.AddKBDiagnosAsync(KBDiagnos.EKBDiagnos)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.AddKBDiagnosAsync(KBDiagnos.EKBDiagnos,System.Object)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.DelKBDiagnos(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.DelKBDiagnosAsync(System.String)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.DelKBDiagnosAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetAllDiagnos">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetAllDiagnosAsync">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetAllDiagnosAsync(System.Object)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetDiagnosByCtLocID(System.String)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetDiagnosByCtLocIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetDiagnosByCtLocIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetDiagnosByID(System.String)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetDiagnosByIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.GetDiagnosByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.ModKBDiagnos(KBDiagnos.EKBDiagnos,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.ModKBDiagnosAsync(KBDiagnos.EKBDiagnos)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.ModKBDiagnosAsync(KBDiagnos.EKBDiagnos,System.Object)">
	<remarks/>
</member><member name="M:KBDiagnos.KBDiagnos.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:KBDiagnos.KBDiagnos">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.ID">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.Name">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.Description">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.Diagnos">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.CTLocID">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.UserID">
	<remarks/>
</member><member name="P:KBDiagnos.EKBDiagnos.CreateDate">
	<remarks/>
</member><member name="T:KBDiagnos.EKBDiagnos">
	<remarks/>
</member><member name="T:KBDiagnos.EKBDiagnosByCtLocID.GetDiagnosByCtLocIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBDiagnos.EKBDiagnosByCtLocID.GetDiagnosByCtLocIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBDiagnos.EKBDiagnosByCtLocID.GetDiagnosByCtLocIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBDiagnos.EKBDiagnosByCtLocID">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBDiagnos.AddKBDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="P:KBDiagnos.AddKBDiagnosCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBDiagnos.AddKBDiagnosCompletedEventArgs">
	<remarks/>
</member><member name="T:KBDiagnos.DelKBDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="P:KBDiagnos.DelKBDiagnosCompletedEventArgs.DelKBDiagnosResult">
	<remarks/>
</member><member name="P:KBDiagnos.DelKBDiagnosCompletedEventArgs.DelKBDiagnosResultSpecified">
	<remarks/>
</member><member name="T:KBDiagnos.DelKBDiagnosCompletedEventArgs">
	<remarks/>
</member><member name="T:KBDiagnos.GetAllDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="P:KBDiagnos.GetAllDiagnosCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBDiagnos.GetAllDiagnosCompletedEventArgs">
	<remarks/>
</member><member name="T:KBDiagnos.GetDiagnosByCtLocIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBDiagnos.GetDiagnosByCtLocIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBDiagnos.GetDiagnosByCtLocIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBDiagnos.GetDiagnosByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBDiagnos.GetDiagnosByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBDiagnos.GetDiagnosByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBDiagnos.ModKBDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="P:KBDiagnos.ModKBDiagnosCompletedEventArgs.ModKBDiagnosResult">
	<remarks/>
</member><member name="P:KBDiagnos.ModKBDiagnosCompletedEventArgs.ModKBDiagnosResultSpecified">
	<remarks/>
</member><member name="T:KBDiagnos.ModKBDiagnosCompletedEventArgs">
	<remarks/>
</member><member name="M:VitalsignsData.VitalsignsDataService.#ctor">
	<remarks/>
</member><member name="E:VitalsignsData.VitalsignsDataService.SelectVitalsignsListCompleted">
	<remarks/>
</member><member name="M:VitalsignsData.VitalsignsDataService.SelectVitalsignsList(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:VitalsignsData.VitalsignsDataService.SelectVitalsignsListAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:VitalsignsData.VitalsignsDataService.SelectVitalsignsListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:VitalsignsData.VitalsignsDataService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:VitalsignsData.VitalsignsDataService">
	<remarks/>
</member><member name="T:VitalsignsData.EVitalsignslistDataset.GetVitalsignsDataDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:VitalsignsData.EVitalsignslistDataset.GetVitalsignsDataRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:VitalsignsData.EVitalsignslistDataset.GetVitalsignsDataRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:VitalsignsData.EVitalsignslistDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:VitalsignsData.SelectVitalsignsListCompletedEventHandler">
	<remarks/>
</member><member name="P:VitalsignsData.SelectVitalsignsListCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:VitalsignsData.SelectVitalsignsListCompletedEventArgs">
	<remarks/>
</member><member name="F:dhcc.epr.eprlib.design.interfacedesign.DesignPanel.StructMove.m_ctrl">
	<summary>
 控件
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.interfacedesign.DesignPanel.StructMove.m_move">
	<summary>
 移动属性 0 x,1y
 </summary>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.design.interfacedesign.UndoMode">
	<summary>
 操作类型
 </summary>
	<remarks></remarks>
</member><member name="M:BOKBTree.KBTreeInfo.#ctor">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.CreateKBTreeCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.DeleteKBTreeCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.DeleteTreeNodeCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.SelectALLKBTreeCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.SelectKBTreeBYIDCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.SelectKBTreeBYPARENTIDCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.SwapSequenceCompleted">
	<remarks/>
</member><member name="E:BOKBTree.KBTreeInfo.UpdateKBTreeCompleted">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.CreateKBTree(BOKBTree.EKBTree)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.CreateKBTreeAsync(BOKBTree.EKBTree)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.CreateKBTreeAsync(BOKBTree.EKBTree,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.DeleteKBTree(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.DeleteKBTreeAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.DeleteKBTreeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.DeleteTreeNode(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.DeleteTreeNodeAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.DeleteTreeNodeAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectALLKBTree(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectALLKBTreeAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectALLKBTreeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectKBTreeBYID(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectKBTreeBYIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectKBTreeBYIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectKBTreeBYPARENTID(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectKBTreeBYPARENTIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SelectKBTreeBYPARENTIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SwapSequence(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SwapSequenceAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.SwapSequenceAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.UpdateKBTree(BOKBTree.EKBTree)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.UpdateKBTreeAsync(BOKBTree.EKBTree)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.UpdateKBTreeAsync(BOKBTree.EKBTree,System.Object)">
	<remarks/>
</member><member name="M:BOKBTree.KBTreeInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOKBTree.KBTreeInfo">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.Description">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.ID">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.KnowledgeBaseID">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.Name">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.ParentID">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.Sequence">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.SequenceSpecified">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.ResChildCount">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.ResChildCountSpecified">
	<remarks/>
</member><member name="P:BOKBTree.EKBTree.PersonalKBUserID">
	<remarks/>
</member><member name="T:BOKBTree.EKBTree">
	<remarks/>
</member><member name="T:BOKBTree.EKBTreeAllDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKBTree.EKBTreeAllDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKBTree.EKBTreeAllDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKBTree.EKBTreeAllDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKBTree.EKBTreeDataset.SELECTBYPARANTIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKBTree.EKBTreeDataset.SELECTBYPARANTIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKBTree.EKBTreeDataset.SELECTBYPARANTIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKBTree.EKBTreeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKBTree.CreateKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.CreateKBTreeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.CreateKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.DeleteKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.DeleteKBTreeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.DeleteKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.DeleteTreeNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.DeleteTreeNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.DeleteTreeNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.SelectALLKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.SelectALLKBTreeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.SelectALLKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.SelectKBTreeBYIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.SelectKBTreeBYIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.SelectKBTreeBYIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.SelectKBTreeBYPARENTIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.SelectKBTreeBYPARENTIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.SelectKBTreeBYPARENTIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.SwapSequenceCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.SwapSequenceCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.SwapSequenceCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBTree.UpdateKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBTree.UpdateKBTreeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBTree.UpdateKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.dataelementdesign.DataElementValueList.SetDataSource(System.Data.DataTable)">
	<summary>
 对值域代码赋值
 </summary>
	<param name="m_dt"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.annotate.PCImageAnnotate.AutoAnnotationCreated(System.Object)">
	<summary>
 AnnoPictureBox创建标注后，同步NewAnnotation状态，
 以使得鼠标在标注时显示正确的Cursors.Cross形状
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.annotate.PCImageAnnotate.AddNewAnnotationWithoutRaiseEvent(dhcc.epr.eprlib.presentation.annotate.CustomIconAnnotation)">
	<summary>
 添加标注但不触发VChaged事件，批量标注时使用此方法，
 批量标注完后使用RaiseVChangedEvent()触发VChanged事件，提高性能
 </summary>
	<param name="customAnnotation"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.annotate.PCImageAnnotate.RaiseVChangedEvent">
	<summary>
 触发VChanged事件，批量标注时调用此方法，提高性能
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.IndexOrderName">
 {New DataColumn("选择", typeString), New DataColumn("就诊时间", typeString), New DataColumn("就诊科室", typeString), New DataColumn("医嘱名称", typeString), New DataColumn("标本号", typeString), New DataColumn("标本类型", typeString), New DataColumn("送检日期", typeString), New DataColumn("送检时间", typeString), New DataColumn("医嘱RowID", typeString)})

</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.IndexItemFlag">
 {New DataColumn("选择", typeString), New DataColumn("异常提示", typeString), New DataColumn("描述", typeString), New DataColumn("缩写", typeString), New DataColumn("结果", typeString), New DataColumn("单位", typeString), New DataColumn("范围值", typeString), New DataColumn("医嘱RowId", typeString)}

</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.QueryEpisodeList">
	<summary>
 加载就诊列表 Add 20110712 by Candyxu
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.btnQuery_Click(System.Object,System.EventArgs)">
	<summary>
 查询
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.QueryDictionary(System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 查询LIS数据
 </summary>
	<param name="Id">EpsoidID or PatientID</param>
	<param name="StDate">开始时间</param>
	<param name="EdDate">结束时间</param>
	<param name="StPage">开始页</param>
	<param name="EdPage">结束页</param>
	<param name="Falg">1代表查询当前就诊，否则查询全部就诊</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.nudPageRow_ValueChanged(System.Object,System.EventArgs)">
	<summary>
 更改页数
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.IsDateValid">
	<summary>
 检查时间格式判断
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.SetFlagHL(System.String)">
	<summary>
 判断是否选中是异常add by Candyxu
 </summary>
	<param name="flag"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.BindResultSet(System.Data.DataSet)">
	<summary>
 医嘱列表样式
 </summary>
	<param name="curDataSet"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.btnNextPage_Click(System.Object,System.EventArgs)">
	<summary>
 下一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.btnPrePage_Click(System.Object,System.EventArgs)">
	<summary>
 上一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.rbByDate_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 按日期查询
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.rbByOrder_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 按当前就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.rbAllOrder_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 按所有就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.TctrlsResult_TabChanged(System.Object,System.EventArgs)">
	<summary>
 切换tab加载就诊列表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.dgBOLISData_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选择就诊列表中数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.RefreshState">
	<summary>
 重置状态
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.LISDicForm.btnOK_Click(System.Object,System.EventArgs)">
	<summary>
 绑定引用数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:LISData.LISDataInfo.#ctor">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.GetLISDATAListItemsCompleted">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.GetLISItemListByCountCompleted">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.GetLISItemListByDateCompleted">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.GetReportByOeordIDCompleted">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.SelectLISItemByCateIDCompleted">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.SelectLISItemCategoryCompleted">
	<remarks/>
</member><member name="E:LISData.LISDataInfo.SelectLISItemIndicatorsCompleted">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISDATAListItems(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISDATAListItemsAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISDATAListItemsAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISItemListByCount(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISItemListByCountAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISItemListByCountAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISItemListByDate(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISItemListByDateAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetLISItemListByDateAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetReportByOeordID(System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetReportByOeordIDAsync(System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.GetReportByOeordIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemByCateID(System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemByCateIDAsync(System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemByCateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemCategory">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemCategoryAsync">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemCategoryAsync(System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemIndicators(System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemIndicatorsAsync(System.String)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.SelectLISItemIndicatorsAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:LISData.LISDataInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:LISData.LISDataInfo">
	<remarks/>
</member><member name="T:LISData.ELISDataListDataSet.GetListDataListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:LISData.ELISDataListDataSet.GetListDataListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:LISData.ELISDataListDataSet.GetListDataListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:LISData.ELISDataListDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:LISData.ELISItemListByCountDataset.SelectLISItemListByCountDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:LISData.ELISItemListByCountDataset.SelectLISItemListByCountRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:LISData.ELISItemListByCountDataset.SelectLISItemListByCountRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:LISData.ELISItemListByCountDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:LISData.ELISItemListByDateDataSet.SelectLISItemListByDateDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:LISData.ELISItemListByDateDataSet.SelectLISItemListByDateRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:LISData.ELISItemListByDateDataSet.SelectLISItemListByDateRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:LISData.ELISItemListByDateDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:LISData.ELISReportByOeordIDDataSet.SelReportByOeordIDListDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:LISData.ELISReportByOeordIDDataSet.SelReportByOeordIDListRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:LISData.ELISReportByOeordIDDataSet.SelReportByOeordIDListRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:LISData.ELISReportByOeordIDDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:LISData.GetLISDATAListItemsCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.GetLISDATAListItemsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.GetLISDATAListItemsCompletedEventArgs">
	<remarks/>
</member><member name="T:LISData.GetLISItemListByCountCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.GetLISItemListByCountCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.GetLISItemListByCountCompletedEventArgs">
	<remarks/>
</member><member name="T:LISData.GetLISItemListByDateCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.GetLISItemListByDateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.GetLISItemListByDateCompletedEventArgs">
	<remarks/>
</member><member name="T:LISData.GetReportByOeordIDCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.GetReportByOeordIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.GetReportByOeordIDCompletedEventArgs">
	<remarks/>
</member><member name="T:LISData.SelectLISItemByCateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.SelectLISItemByCateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.SelectLISItemByCateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:LISData.SelectLISItemCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.SelectLISItemCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.SelectLISItemCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:LISData.SelectLISItemIndicatorsCompletedEventHandler">
	<remarks/>
</member><member name="P:LISData.SelectLISItemIndicatorsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:LISData.SelectLISItemIndicatorsCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MITableProperty.cbxHAlignment_SelectedIndexChanged(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 设置表格单元文本水平对齐方式
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-8	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.formula.CFunction.GetFunction">
 -----------------------------------------------------------------------------
 <summary>
 取得函数的名字，供检查参数出错时提示使用
 </summary>
	<returns>函数名称</returns>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.formula.CFunction.SetParameters(System.Collections.ArrayList)">
 -----------------------------------------------------------------------------
 <summary>
 设置函数执行需要的参数
 </summary>
	<param name="alValues">参数ArrayList</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.formula.CFunction.CreateInstance(System.Collections.ArrayList)">
 -----------------------------------------------------------------------------
 <summary>
 创建函数实例
 </summary>
	<param name="alValues">参数ArrayList</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.formula.CFunction.CheckParms(System.Collections.ArrayList,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 检查函数参数数量是否正确（参数数量固定）
 </summary>
	<param name="alValues">参数ArrayList</param>
	<param name="iRequiredValueCount">参数数量</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.formula.CFunction.CheckParms(System.Collections.ArrayList,System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 检查函数参数数量是否正确（参数数量在指定范围内）
 </summary>
	<param name="alValues">参数ArrayList</param>
	<param name="iMinReq">最少参数个数</param>
	<param name="iMaxReq">最多参数个数</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:dhcc.epr.eprlib.formula.CFunction">
 -----------------------------------------------------------------------------
 Project	 : EPRLib
 Class	 : epr.eprlib.formula.CFunction
 
 -----------------------------------------------------------------------------
 <summary>
 所有函数的父类
 </summary>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.formula.CCheckDuplicate.SetParameters(System.Collections.ArrayList)">
 -----------------------------------------------------------------------------
 <summary>
 设置参数，最少2个，最多50个（最多的数值可调，先限定在50）
 </summary>
	<param name="alValues"></param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:dhcc.epr.eprlib.formula.CCheckDuplicate">
 -----------------------------------------------------------------------------
 Project	 : EPRLib
 Class	 : epr.eprlib.formula.CCheckDuplicate
 
 -----------------------------------------------------------------------------
 <summary>
 检查是否有内容相同的单元（用于不允许用户在多个单元中录入相同的内容）
 </summary>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.DateTimeController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.StringController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.#ctor">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.DeleteCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.GetDataByTreeIDCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.GetDiagnosByNodeIDCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosByIDCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosWithRulesCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.InsertNodeCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.SaveBindDiagnosCompleted">
	<remarks/>
</member><member name="E:BOEPRDiagnosConfig.DiagnosConfig.SaveKBNodeDiagnosCompleted">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.Delete(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.DeleteAsync(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.DeleteAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetDataByTreeID(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetDataByTreeIDAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetDataByTreeIDAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetDiagnosByNodeID(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetDiagnosByNodeIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetDiagnosByNodeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosByID(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosWithRules(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosWithRulesAsync(System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.GetKBNodeDiagnosWithRulesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.InsertNode(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.InsertNodeAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.InsertNodeAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.SaveBindDiagnos(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.SaveBindDiagnosAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.SaveBindDiagnosAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.SaveKBNodeDiagnos(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.SaveKBNodeDiagnosAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.SaveKBNodeDiagnosAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOEPRDiagnosConfig.DiagnosConfig.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.DiagnosConfig">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.EKBDiagnosConfigDataSet.QueryDateByTreeIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOEPRDiagnosConfig.EKBDiagnosConfigDataSet.QueryDateByTreeIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOEPRDiagnosConfig.EKBDiagnosConfigDataSet.QueryDateByTreeIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOEPRDiagnosConfig.EKBDiagnosConfigDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.ID">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.KBNodeID">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.KBNodeIDSpecified">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.KBTreeID">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.KBTreeIDSpecified">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.KBDiagnosID">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.KBDiagnosIDSpecified">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.ActiveFlag">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.EKBNodeDiagnos.ActiveFlagSpecified">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.EKBNodeDiagnos">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.DeleteCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.DeleteCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.DeleteCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetDataByTreeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.GetDataByTreeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetDataByTreeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetDiagnosByNodeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.GetDiagnosByNodeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetDiagnosByNodeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetKBNodeDiagnosByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.GetKBNodeDiagnosByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetKBNodeDiagnosByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetKBNodeDiagnosWithRulesCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.GetKBNodeDiagnosWithRulesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.GetKBNodeDiagnosWithRulesCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.InsertNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOEPRDiagnosConfig.InsertNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.InsertNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.SaveBindDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="T:BOEPRDiagnosConfig.SaveKBNodeDiagnosCompletedEventHandler">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.#ctor">
	<remarks/>
</member><member name="E:ImageLibData.ImageLibInfo.CreateImageLibCompleted">
	<remarks/>
</member><member name="E:ImageLibData.ImageLibInfo.DeleteImageLibCompleted">
	<remarks/>
</member><member name="E:ImageLibData.ImageLibInfo.GetImageLibByIDCompleted">
	<remarks/>
</member><member name="E:ImageLibData.ImageLibInfo.GetImageLibsByCateIDCompleted">
	<remarks/>
</member><member name="E:ImageLibData.ImageLibInfo.GetPatientNameByEpisodeIDCompleted">
	<remarks/>
</member><member name="E:ImageLibData.ImageLibInfo.UpdateImageLibCompleted">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.CreateImageLib(ImageLibData.EImageLib)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.CreateImageLibAsync(ImageLibData.EImageLib)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.CreateImageLibAsync(ImageLibData.EImageLib,System.Object)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.DeleteImageLib(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.DeleteImageLibAsync(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.DeleteImageLibAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetImageLibByID(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetImageLibByIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetImageLibByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetImageLibsByCateID(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetImageLibsByCateIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetImageLibsByCateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetPatientNameByEpisodeID(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetPatientNameByEpisodeIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.GetPatientNameByEpisodeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.UpdateImageLib(ImageLibData.EImageLib)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.UpdateImageLibAsync(ImageLibData.EImageLib)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.UpdateImageLibAsync(ImageLibData.EImageLib,System.Object)">
	<remarks/>
</member><member name="M:ImageLibData.ImageLibInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:ImageLibData.ImageLibInfo">
	<remarks/>
</member><member name="P:ImageLibData.EImageLib.ID">
	<remarks/>
</member><member name="P:ImageLibData.EImageLib.Name">
	<remarks/>
</member><member name="P:ImageLibData.EImageLib.Description">
	<remarks/>
</member><member name="P:ImageLibData.EImageLib.CategoryID">
	<remarks/>
</member><member name="P:ImageLibData.EImageLib.Sequence">
	<remarks/>
</member><member name="T:ImageLibData.EImageLib">
	<remarks/>
</member><member name="T:ImageLibData.EImageLibDataset.GetImageLibsByCateIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ImageLibData.EImageLibDataset.GetImageLibsByCateIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ImageLibData.EImageLibDataset.GetImageLibsByCateIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ImageLibData.EImageLibDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ImageLibData.CreateImageLibCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageLibData.CreateImageLibCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageLibData.CreateImageLibCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageLibData.DeleteImageLibCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageLibData.DeleteImageLibCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageLibData.DeleteImageLibCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageLibData.GetImageLibByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageLibData.GetImageLibByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageLibData.GetImageLibByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageLibData.GetImageLibsByCateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageLibData.GetImageLibsByCateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageLibData.GetImageLibsByCateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageLibData.GetPatientNameByEpisodeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageLibData.GetPatientNameByEpisodeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageLibData.GetPatientNameByEpisodeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageLibData.UpdateImageLibCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageLibData.UpdateImageLibCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageLibData.UpdateImageLibCompletedEventArgs">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.#ctor">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.CreateCraftVersionCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.CreateTemplateCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.DelTemplateCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.DeleteCraftVersionCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetInitialDataByIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetInitialDataByTemplateIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetMetadataByIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetMetadataByTemplateIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetPresentationDataByIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetTemplateAllCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetTemplateAllForSltCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetTemplateByGUIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetTemplateByIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetTemplateVersionAllCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetTemplateWithGroupAllCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetVersionByIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GetVersionByTemplateIDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.GuidMap2IDCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.IDMap2GuidCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.PublishVersionCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.TestUpdateVersionCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.UpdateCraftVersionCompleted">
	<remarks/>
</member><member name="E:InterfaceTemplateData.TemplateInfo.UpdateTemplateCompleted">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CreateCraftVersion(InterfaceTemplateData.ETemplateVersion)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CreateCraftVersionAsync(InterfaceTemplateData.ETemplateVersion)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CreateCraftVersionAsync(InterfaceTemplateData.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CreateTemplate(InterfaceTemplateData.ETemplate)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CreateTemplateAsync(InterfaceTemplateData.ETemplate)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CreateTemplateAsync(InterfaceTemplateData.ETemplate,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.DelTemplate(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.DelTemplateAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.DelTemplateAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.DeleteCraftVersion(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.DeleteCraftVersionAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.DeleteCraftVersionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetInitialDataByID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetInitialDataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetInitialDataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetInitialDataByTemplateID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetInitialDataByTemplateIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetInitialDataByTemplateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetMetadataByID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetMetadataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetMetadataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetMetadataByTemplateID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetMetadataByTemplateIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetMetadataByTemplateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetPresentationDataByID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetPresentationDataByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetPresentationDataByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateAll(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateAllAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateAllAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateAllForSlt(System.String,System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateAllForSltAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateAllForSltAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateByGUID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateByGUIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateByGUIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateByID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateByIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateVersionAll(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateVersionAllAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateVersionAllAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateWithGroupAll(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateWithGroupAllAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetTemplateWithGroupAllAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetVersionByID(System.String,System.Boolean,System.Boolean)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetVersionByIDAsync(System.String,System.Boolean,System.Boolean)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetVersionByIDAsync(System.String,System.Boolean,System.Boolean,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetVersionByTemplateID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetVersionByTemplateIDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GetVersionByTemplateIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GuidMap2ID(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GuidMap2IDAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.GuidMap2IDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.IDMap2Guid(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.IDMap2GuidAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.IDMap2GuidAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.PublishVersion(InterfaceTemplateData.ETemplateVersion)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.PublishVersionAsync(InterfaceTemplateData.ETemplateVersion)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.PublishVersionAsync(InterfaceTemplateData.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.TestUpdateVersion(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.TestUpdateVersionAsync(System.String)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.TestUpdateVersionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.UpdateCraftVersion(InterfaceTemplateData.ETemplateVersion)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.UpdateCraftVersionAsync(InterfaceTemplateData.ETemplateVersion)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.UpdateCraftVersionAsync(InterfaceTemplateData.ETemplateVersion,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.UpdateTemplate(InterfaceTemplateData.ETemplate,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.UpdateTemplateAsync(InterfaceTemplateData.ETemplate)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.UpdateTemplateAsync(InterfaceTemplateData.ETemplate,System.Object)">
	<remarks/>
</member><member name="M:InterfaceTemplateData.TemplateInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:InterfaceTemplateData.TemplateInfo">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.Author">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.CreateDate">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.CreateDateSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.CreateTime">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.CreateTimeSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.ID">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.InitialData">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.LastSaveDate">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.LastSaveDateSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.LastSaveTime">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.LastSaveTimeSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.MetaData">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.PresentationData">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.PublicationDate">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.PublicationDateSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.PublicationTime">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.PublicationTimeSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.Status">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.StatusSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.TemplateID">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.VersionNumber">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplateVersion.VersionNumberSpecified">
	<remarks/>
</member><member name="T:InterfaceTemplateData.ETemplateVersion">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.BindPrintName">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.BindPrintTemplateID">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.ChartItemType">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.Description">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.GUID">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.ID">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.LastVersion">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.LastVersionSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.Name">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.PublishVersion">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.PublishVersionSpecified">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.TemplateCategoryID">
	<remarks/>
</member><member name="P:InterfaceTemplateData.ETemplate.TemplateProperty">
	<remarks/>
</member><member name="T:InterfaceTemplateData.ETemplate">
	<remarks/>
</member><member name="T:InterfaceTemplateData.ETemplateDataset.SELECTALLByCategoryIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateDataset.SELECTALLByCategoryIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateDataset.SELECTALLByCategoryIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:InterfaceTemplateData.ETempForSltDataset.SelectForSltByCIdDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:InterfaceTemplateData.ETempForSltDataset.SelectForSltByCIdRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:InterfaceTemplateData.ETempForSltDataset.SelectForSltByCIdRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:InterfaceTemplateData.ETempForSltDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateVersionDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateVersionDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateVersionDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:InterfaceTemplateData.ETemplateVersionDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:InterfaceTemplateData.CreateCraftVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.CreateCraftVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.CreateCraftVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.CreateTemplateCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.CreateTemplateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.CreateTemplateCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.DelTemplateCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.DelTemplateCompletedEventArgs.DelTemplateResult">
	<remarks/>
</member><member name="P:InterfaceTemplateData.DelTemplateCompletedEventArgs.DelTemplateResultSpecified">
	<remarks/>
</member><member name="T:InterfaceTemplateData.DelTemplateCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.DeleteCraftVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.DeleteCraftVersionCompletedEventArgs.DeleteCraftVersionResult">
	<remarks/>
</member><member name="P:InterfaceTemplateData.DeleteCraftVersionCompletedEventArgs.DeleteCraftVersionResultSpecified">
	<remarks/>
</member><member name="T:InterfaceTemplateData.DeleteCraftVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetInitialDataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetInitialDataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetInitialDataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetInitialDataByTemplateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetInitialDataByTemplateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetInitialDataByTemplateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetMetadataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetMetadataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetMetadataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetMetadataByTemplateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetMetadataByTemplateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetMetadataByTemplateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetPresentationDataByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetPresentationDataByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetPresentationDataByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateAllCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetTemplateAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateAllCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateAllForSltCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetTemplateAllForSltCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateAllForSltCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateByGUIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetTemplateByGUIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateByGUIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetTemplateByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateVersionAllCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetTemplateVersionAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateVersionAllCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateWithGroupAllCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetTemplateWithGroupAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetTemplateWithGroupAllCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetVersionByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetVersionByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetVersionByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetVersionByTemplateIDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GetVersionByTemplateIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GetVersionByTemplateIDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GuidMap2IDCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.GuidMap2IDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.GuidMap2IDCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.IDMap2GuidCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.IDMap2GuidCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.IDMap2GuidCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.PublishVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.PublishVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.PublishVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.TestUpdateVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.TestUpdateVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.TestUpdateVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.UpdateCraftVersionCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.UpdateCraftVersionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:InterfaceTemplateData.UpdateCraftVersionCompletedEventArgs">
	<remarks/>
</member><member name="T:InterfaceTemplateData.UpdateTemplateCompletedEventHandler">
	<remarks/>
</member><member name="P:InterfaceTemplateData.UpdateTemplateCompletedEventArgs.UpdateTemplateResult">
	<remarks/>
</member><member name="P:InterfaceTemplateData.UpdateTemplateCompletedEventArgs.UpdateTemplateResultSpecified">
	<remarks/>
</member><member name="T:InterfaceTemplateData.UpdateTemplateCompletedEventArgs">
	<remarks/>
</member><member name="T:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.tvUnitDoubleClick">
	<summary>
 定义事件委托
 </summary>
</member><member name="E:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.OntvUnitDoubleClick">
	<summary>
 设计控件选中信息发生变化时触发事件
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.TabCtl_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 tab改变事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.RefreshKBUnitTree">
	<summary>
 刷新知识库单元节点树
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.RefreshKBUnitTreeCase">
	<summary>
 刷新知识库单元节点树
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.InitCbxValueTypeList(System.Windows.Forms.TreeNode)">
	<summary>
 初始化元数据项的显示数据类型标记列表
 </summary>
	<param name="node">选定的单元节点</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.SetDefaultValueType(System.String)">
	<summary>
 设置取值类型默认值
 </summary>
	<param name="valueType">默认选定值</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.InitKBPartComboBox">
	<summary>
 初始化知识库部分下拉框
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.CheckNodeExisted(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
	<summary>
 判断指定节点是否已存在
 </summary>
	<param name="parNode">父节点</param>
	<param name="itemNode">项目子节点</param>
	<returns>存在返回真，否则为假</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.GetBidingSimpleDataType(System.String)">
	<summary>
 获取元数据项的简单数据类型
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元类型</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.GetDefaultValueType(System.String)">
	<summary>
 获取单元默认取值类型
 </summary>
	<param name="itemCode">单元代码</param>
	<returns>默认取值类型（V、C、VC、CV）</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.GetBindingName(System.Windows.Forms.TreeNode,System.Int32)">
	<summary>
 由节点Tag取得节点Name, 并加上模板目录信息和显示数据类型名称
 </summary>
	<param name="node">节点</param>
	<param name="nodeType">节点类型</param>
	<returns>绑定的单元名称</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.BuildItemCode(System.String,System.String)">
	<summary>
 由节点Tag取得单元代码
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元代码</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.GlossaryTemTrl.InitTepList(dhcc.epr.eprlib.metadata.MMetaItem,dhcc.epr.eprlib.metadata.MMetaItem,System.String)">
	<summary>
 解析XML，获取模版数据
 </summary>
	<param name="curMetaItem"></param>
	<param name="parentMetaItem"></param>
	<param name="strNodeTag"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKB.KBTree_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
	<summary>
 节点选中事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKB.GetKBTreeCTLog(System.Windows.Forms.TreeNode)">
	<summary>
 获取知识库节点关联科室
 </summary>
	<param name="tmpNode">当前选中知识库节点</param>
	<returns>关联科室字符串，多个以“^”分隔</returns>
	<remarks>递归调用直到类型为目录的知识库节点</remarks>
</member><member name="M:dhcc.epr.eprlib.design.metadatadesign.MIDateTimeProperty.cbxTimeFormate_SelectedIndexChanged(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 选择日期格式
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<history>
 	[HouJ]	2009-7-3	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.metadata.MIFigure.GetDataByXMLDeserialize(System.Xml.XmlReader,System.String)">
	<summary>
 根据标签得到反序列化数据
 </summary>
	<param name="reader"></param>
	<param name="tagName">标签名称</param>
	<returns>反序列化成功返回True，并给相应标签内容赋值</returns>
	<remarks>
    反序列化由原来的顺序读取改成循环读取的方式，同时考虑到存在继承的因素，重构反序列化的方法。
    重构后将原方法拆分成循环遍历标签（XMLDeserialize）与具体处理标签（GetDataByXMLDeserialize）两个Function，继承时需重载具体处理标签的方法。
    注：1、重载后的GetDataByXMLDeserialize的写法参照MISimple 类的写法；
        2、子类与所有父类之间不允许存在相同的标签名称，否则反序列化将造成数据混乱；
 </remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.PacsDicForm_Load(System.Object,System.EventArgs)">
	<summary>
 加载窗体
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.QueryEpisodeList">
	<summary>
 查就诊列表2011-07-12 Add by Candyxu
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.tcCheckReport_TabChanged(System.Object,System.EventArgs)">
	<summary>
 切换tab加载就诊列表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.dgBOLISData_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选择就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.btnQuery_Click(System.Object,System.EventArgs)">
	<summary>
 按查询方式查询
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.QueryDictionary(System.String,System.String,System.String,System.String,System.String)">
 查询

</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.BindResultSet(System.Data.DataSet)">
	<summary>
 绑定样式
 </summary>
	<param name="curDataSet"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.btnPrev_Click(System.Object,System.EventArgs)">
	<summary>
 前一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.btnNext_Click(System.Object,System.EventArgs)">
	<summary>
 后一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.nudPageCount_ValueChanged(System.Object,System.EventArgs)">
	<summary>
 页面显示条数改变
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.RefreshState">
	<summary>
 重置状态
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.btnOk_Click(System.Object,System.EventArgs)">
	<summary>
 引用数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.VitalsignsDicForm.ChangeDictionaryText">
	<summary>
 引用方法
 </summary>
	<remarks></remarks>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.#ctor">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.CheckEntifierCompleted">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.CreateDataElementValuesCompleted">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.DeleteDataElementValuesCompleted">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.SelectAllValuesByDECVMIDCompleted">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.SelectDataElementValuesByIdCompleted">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.UpdateDataElementValuesCompleted">
	<remarks/>
</member><member name="E:DataElementValuesData.DataElementValuesInfo.textCompleted">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CheckEntifier(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CheckEntifierAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CheckEntifierAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CreateDataElementValues(DataElementValuesData.EDataElementValues)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CreateDataElementValuesAsync(DataElementValuesData.EDataElementValues)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CreateDataElementValuesAsync(DataElementValuesData.EDataElementValues,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.DeleteDataElementValues(System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.DeleteDataElementValuesAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.DeleteDataElementValuesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.SelectAllValuesByDECVMID(System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.SelectAllValuesByDECVMIDAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.SelectAllValuesByDECVMIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.SelectDataElementValuesById(System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.SelectDataElementValuesByIdAsync(System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.SelectDataElementValuesByIdAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.UpdateDataElementValues(DataElementValuesData.EDataElementValues)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.UpdateDataElementValuesAsync(DataElementValuesData.EDataElementValues)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.UpdateDataElementValuesAsync(DataElementValuesData.EDataElementValues,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.text(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.textAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.textAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:DataElementValuesData.DataElementValuesInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:DataElementValuesData.DataElementValuesInfo">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.ID">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.CreateDate">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.CreateDateSpecified">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.CreateTime">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.CreateTimeSpecified">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.LastModifyDate">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.LastModifyDateSpecified">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.LastModifyTime">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.LastModifyTimeSpecified">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.DEVID">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.Meaning">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.Description">
	<remarks/>
</member><member name="P:DataElementValuesData.EDataElementValues.DECVMID">
	<remarks/>
</member><member name="T:DataElementValuesData.EDataElementValues">
	<remarks/>
</member><member name="T:DataElementValuesData.EDataElementValuesDataset.SelectAllByDECVMIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:DataElementValuesData.EDataElementValuesDataset.SelectAllByDECVMIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:DataElementValuesData.EDataElementValuesDataset.SelectAllByDECVMIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:DataElementValuesData.EDataElementValuesDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:DataElementValuesData.CheckEntifierCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.CheckEntifierCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.CheckEntifierCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementValuesData.CreateDataElementValuesCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.CreateDataElementValuesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.CreateDataElementValuesCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementValuesData.DeleteDataElementValuesCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.DeleteDataElementValuesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.DeleteDataElementValuesCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementValuesData.SelectAllValuesByDECVMIDCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.SelectAllValuesByDECVMIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.SelectAllValuesByDECVMIDCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementValuesData.SelectDataElementValuesByIdCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.SelectDataElementValuesByIdCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.SelectDataElementValuesByIdCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementValuesData.UpdateDataElementValuesCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.UpdateDataElementValuesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.UpdateDataElementValuesCompletedEventArgs">
	<remarks/>
</member><member name="T:DataElementValuesData.textCompletedEventHandler">
	<remarks/>
</member><member name="P:DataElementValuesData.textCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:DataElementValuesData.textCompletedEventArgs">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.#ctor">
	<remarks/>
</member><member name="E:GlossaryCategoryData.GlossaryCategoryInfo.CheckInternalIDCompleted">
	<remarks/>
</member><member name="E:GlossaryCategoryData.GlossaryCategoryInfo.CreateGlossaryCategoryCompleted">
	<remarks/>
</member><member name="E:GlossaryCategoryData.GlossaryCategoryInfo.DeleteGlossaryCategoryCompleted">
	<remarks/>
</member><member name="E:GlossaryCategoryData.GlossaryCategoryInfo.SelectAllGlossaryCategoryCompleted">
	<remarks/>
</member><member name="E:GlossaryCategoryData.GlossaryCategoryInfo.SelectGlossaryCategoryByIDCompleted">
	<remarks/>
</member><member name="E:GlossaryCategoryData.GlossaryCategoryInfo.UpdateGlossaryCategoryCompleted">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CheckInternalID(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CheckInternalIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CheckInternalIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CreateGlossaryCategory(GlossaryCategoryData.EGlossaryCategory)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CreateGlossaryCategoryAsync(GlossaryCategoryData.EGlossaryCategory)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CreateGlossaryCategoryAsync(GlossaryCategoryData.EGlossaryCategory,System.Object)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.DeleteGlossaryCategory(System.String)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.DeleteGlossaryCategoryAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.DeleteGlossaryCategoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.SelectAllGlossaryCategory">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.SelectAllGlossaryCategoryAsync">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.SelectAllGlossaryCategoryAsync(System.Object)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.SelectGlossaryCategoryByID(System.String)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.SelectGlossaryCategoryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.SelectGlossaryCategoryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.UpdateGlossaryCategory(GlossaryCategoryData.EGlossaryCategory)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.UpdateGlossaryCategoryAsync(GlossaryCategoryData.EGlossaryCategory)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.UpdateGlossaryCategoryAsync(GlossaryCategoryData.EGlossaryCategory,System.Object)">
	<remarks/>
</member><member name="M:GlossaryCategoryData.GlossaryCategoryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:GlossaryCategoryData.GlossaryCategoryInfo">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.ID">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.Name">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.Description">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.ParentID">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.ResChildCount">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.ResChildCountSpecified">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.InternalID">
	<remarks/>
</member><member name="P:GlossaryCategoryData.EGlossaryCategory.TemplateCategroyID">
	<remarks/>
</member><member name="T:GlossaryCategoryData.EGlossaryCategory">
	<remarks/>
</member><member name="T:GlossaryCategoryData.EGlossaryCategoryDataset.SelectAllDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:GlossaryCategoryData.EGlossaryCategoryDataset.SelectAllRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:GlossaryCategoryData.EGlossaryCategoryDataset.SelectAllRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:GlossaryCategoryData.EGlossaryCategoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:GlossaryCategoryData.CheckInternalIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryCategoryData.CheckInternalIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryCategoryData.CheckInternalIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryCategoryData.CreateGlossaryCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryCategoryData.CreateGlossaryCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryCategoryData.CreateGlossaryCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryCategoryData.DeleteGlossaryCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryCategoryData.DeleteGlossaryCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryCategoryData.DeleteGlossaryCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryCategoryData.SelectAllGlossaryCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryCategoryData.SelectAllGlossaryCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryCategoryData.SelectAllGlossaryCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryCategoryData.SelectGlossaryCategoryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryCategoryData.SelectGlossaryCategoryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryCategoryData.SelectGlossaryCategoryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:GlossaryCategoryData.UpdateGlossaryCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:GlossaryCategoryData.UpdateGlossaryCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GlossaryCategoryData.UpdateGlossaryCategoryCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.AddRow(System.Int32)">
	<summary>
 添加行
 </summary>
	<param name="addRowIndex">要添加的行索引位置</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.GetBindTree">
	<summary>
获得当前单元绑定的知识库
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.AddText(System.Object)">
	<summary>
 追加
 </summary>
	<param name="strValue"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.InsertText(System.String)">
	<summary>
 插入
 </summary>
	<param name="strValue"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.ReplaceText(System.String)">
	<summary>
 替换
 </summary>
	<param name="strValue"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.IsDictionaryButton(System.Int32,System.Int32)">
	<summary>
 是否为 (1)类型非Header(2)类型为TextBox 的Cell
 </summary>
	<param name="rowIndex">Cell的行索引</param>
	<param name="colIndex">Cell的列索引</param>
	<returns>true或false</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.IsTextBoxCell(System.Int32,System.Int32)">
	<summary>
 是否为 (1)类型非Header(2)类型为TextBox 的Cell
 </summary>
	<param name="rowIndex">Cell的行索引</param>
	<param name="colIndex">Cell的列索引</param>
	<returns>true或false</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.table.PCTable.ReSelect(System.Int32)">
	<summary>
 重置光标在selectStart位置
 </summary>
	<param name="selectStart">指定的光标位置</param>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.SelectionBackColor">
 -----------------------------------------------------------------------------
 <summary>
 设置选中文本的背景色，已不用
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.SelectionForeColor">
 -----------------------------------------------------------------------------
 <summary>
 设置选中文本的前景色
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[gaojb]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.Init">
	<summary>
 E单元控件初始化,在构造函数中执行
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.InitContextMenu">
	<summary>
 “惰性”初始化右键菜单，在右键菜单事件触发时执行，优化性能
 </summary>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.GetFocusHandler">
	<summary>
 E单元获取焦点事件自定义委托
 </summary>
	<param name="eCode">E单元代码</param>
	<param name="kbBaseID">知识库ID</param>
	<param name="kbPartNo">知识库部分</param>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.Controller">
	<summary>
 获得增加、插入数据接口 add by Candyxu 20120614
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.BindInstanceItem">
	<summary>
 绑定实例数据项
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.InsertItem(dhcc.epr.eprlib.instancedata.NInstanceItem)">
	<summary>
 插入实例数据项
 </summary>
	<param name="Value">实例数据项</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.AddItem(dhcc.epr.eprlib.instancedata.NInstanceItem)">
	<summary>
 添加实例数据项
 </summary>
	<param name="Value">实例数据项</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.ReplaceItem(dhcc.epr.eprlib.instancedata.NInstanceItem)">
	<summary>
 替换实例输入项
 </summary>
	<param name="Value">实例数据项</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.NewRevice(System.String,System.String,System.String)">
	<summary>
 留痕结构初始化
 </summary>
	<param name="user">操作人</param>
	<param name="rvdate">操作日期</param>
	<param name="rvtime">操作时间</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.ReDraw">
	<summary>
 重绘
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.ReBuildRevRevisionHistory">
	<summary>
 重新生成留痕历史信息
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.RefreshRevisionHistory">
	<summary>
 实时刷新E单元的留痕
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.DisableAutoScroll">
	<summary>
 是否禁用自动滚动条属性
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.DoInsert">
	<summary>
 通过Insert功能键做正常值/异常值切换
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.PCTextEdit_GetFocus(System.Object,System.EventArgs)">
	<summary>
 获取焦点事件，需要刷新关联知识库
 </summary>
	<remarks>将事件通过PPanel上传至PKBPanel</remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.ShowContextMenu(System.Drawing.Point)">
	<summary>
 初始化当前情况下应该显示的右键菜单项
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.doCopys">
	<summary>
 多次粘贴
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.PastAct(System.String)">
	<summary>
 粘贴动作
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.OnShowRevHis(System.Object,System.EventArgs)">
	<summary>
 显示留痕历史信息
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.PCTextEdit.HasIllegalChar(System.String)">
	<summary>
 检验指定字符串中是否包含特殊字符
 </summary>
	<param name="str">指定字符串</param>
	<returns>布尔类型</returns>
	<remarks></remarks>
</member><member name="M:BOKBNode.KBNodeInfo.#ctor">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.CreateKBNodeCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.DeleteKBNodeCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.GetDefaultKBNodeByLocDiagnosIDCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.GetXMLRecordCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.SelectKBNodeByIDCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.SelectKBNodeByKBTreeIDCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.SelectKBNodeByNameCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.SelectKBNodeInUseByIDCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.SwapSequenceCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.UpdateKBNodeCompleted">
	<remarks/>
</member><member name="E:BOKBNode.KBNodeInfo.testCreateKBNodeCompleted">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.CreateKBNode(BOKBNode.EKBNode)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.CreateKBNodeAsync(BOKBNode.EKBNode)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.CreateKBNodeAsync(BOKBNode.EKBNode,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.DeleteKBNode(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.DeleteKBNodeAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.DeleteKBNodeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.GetDefaultKBNodeByLocDiagnosID(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.GetDefaultKBNodeByLocDiagnosIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.GetDefaultKBNodeByLocDiagnosIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.GetXMLRecord">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.GetXMLRecordAsync">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.GetXMLRecordAsync(System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByID(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByKBTreeID(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByKBTreeIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByKBTreeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByName(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByNameAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeByNameAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeInUseByID(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeInUseByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SelectKBNodeInUseByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SwapSequence(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SwapSequenceAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.SwapSequenceAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.UpdateKBNode(BOKBNode.EKBNode)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.UpdateKBNodeAsync(BOKBNode.EKBNode)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.UpdateKBNodeAsync(BOKBNode.EKBNode,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.testCreateKBNode(BOKBNode.EKBNode)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.testCreateKBNodeAsync(BOKBNode.EKBNode)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.testCreateKBNodeAsync(BOKBNode.EKBNode,System.Object)">
	<remarks/>
</member><member name="M:BOKBNode.KBNodeInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOKBNode.KBNodeInfo">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.Description">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.ID">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.KBTreeID">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.KnowledgeBaseID">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.Name">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.PresentationData">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.MetaData">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.ScriptData">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.Sequence">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.IsCommon">
	<remarks/>
</member><member name="P:BOKBNode.EKBNode.IsInUse">
	<remarks/>
</member><member name="T:BOKBNode.EKBNode">
	<remarks/>
</member><member name="T:BOKBNode.EKBNodeDataset.SELECTBYPARENTIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKBNode.EKBNodeDataset.SELECTBYPARENTIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKBNode.EKBNodeDataset.SELECTBYPARENTIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKBNode.EKBNodeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKBNode.EKBNodeSelectByNameDataset.SELECTBYNAMEDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKBNode.EKBNodeSelectByNameDataset.SELECTBYNAMERow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKBNode.EKBNodeSelectByNameDataset.SELECTBYNAMERowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKBNode.EKBNodeSelectByNameDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKBNode.EKBNodeInUseDataset.SELECTInUseBYPARENTIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOKBNode.EKBNodeInUseDataset.SELECTInUseBYPARENTIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOKBNode.EKBNodeInUseDataset.SELECTInUseBYPARENTIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOKBNode.EKBNodeInUseDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOKBNode.CreateKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.CreateKBNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.CreateKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.DeleteKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.DeleteKBNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.DeleteKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.GetDefaultKBNodeByLocDiagnosIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.GetDefaultKBNodeByLocDiagnosIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.GetDefaultKBNodeByLocDiagnosIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.GetXMLRecordCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.GetXMLRecordCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.GetXMLRecordCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.SelectKBNodeByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeByKBTreeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.SelectKBNodeByKBTreeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeByKBTreeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeByNameCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.SelectKBNodeByNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeByNameCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeInUseByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.SelectKBNodeInUseByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.SelectKBNodeInUseByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.SwapSequenceCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.SwapSequenceCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.SwapSequenceCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.UpdateKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.UpdateKBNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.UpdateKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:BOKBNode.testCreateKBNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:BOKBNode.testCreateKBNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOKBNode.testCreateKBNodeCompletedEventArgs">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.#ctor">
	<remarks/>
</member><member name="E:ITCategoryData.TemplateCategoryInfo.CreateTemplateCategoryCompleted">
	<remarks/>
</member><member name="E:ITCategoryData.TemplateCategoryInfo.DeleteTemplateCategoryCompleted">
	<remarks/>
</member><member name="E:ITCategoryData.TemplateCategoryInfo.SelectAllTemplateCategoryCompleted">
	<remarks/>
</member><member name="E:ITCategoryData.TemplateCategoryInfo.SelectTemplateCategoryByIDCompleted">
	<remarks/>
</member><member name="E:ITCategoryData.TemplateCategoryInfo.UpdateTemplateCategoryCompleted">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.CreateTemplateCategory(ITCategoryData.ETemplateCategory)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.CreateTemplateCategoryAsync(ITCategoryData.ETemplateCategory)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.CreateTemplateCategoryAsync(ITCategoryData.ETemplateCategory,System.Object)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.DeleteTemplateCategory(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.DeleteTemplateCategoryAsync(System.String)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.DeleteTemplateCategoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.SelectAllTemplateCategory">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.SelectAllTemplateCategoryAsync">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.SelectAllTemplateCategoryAsync(System.Object)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.SelectTemplateCategoryByID(System.String)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.SelectTemplateCategoryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.SelectTemplateCategoryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.UpdateTemplateCategory(ITCategoryData.ETemplateCategory,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.UpdateTemplateCategoryAsync(ITCategoryData.ETemplateCategory)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.UpdateTemplateCategoryAsync(ITCategoryData.ETemplateCategory,System.Object)">
	<remarks/>
</member><member name="M:ITCategoryData.TemplateCategoryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:ITCategoryData.TemplateCategoryInfo">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.CategoryProperty">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.CategoryType">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.Description">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.ID">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.Name">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.ParentID">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.ResChildCount">
	<remarks/>
</member><member name="P:ITCategoryData.ETemplateCategory.ResChildCountSpecified">
	<remarks/>
</member><member name="T:ITCategoryData.ETemplateCategory">
	<remarks/>
</member><member name="T:ITCategoryData.ETemplateCategoryDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ITCategoryData.ETemplateCategoryDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ITCategoryData.ETemplateCategoryDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ITCategoryData.ETemplateCategoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ITCategoryData.CreateTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ITCategoryData.CreateTemplateCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ITCategoryData.CreateTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:ITCategoryData.DeleteTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ITCategoryData.DeleteTemplateCategoryCompletedEventArgs.DeleteTemplateCategoryResult">
	<remarks/>
</member><member name="P:ITCategoryData.DeleteTemplateCategoryCompletedEventArgs.DeleteTemplateCategoryResultSpecified">
	<remarks/>
</member><member name="T:ITCategoryData.DeleteTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:ITCategoryData.SelectAllTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ITCategoryData.SelectAllTemplateCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ITCategoryData.SelectAllTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:ITCategoryData.SelectTemplateCategoryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ITCategoryData.SelectTemplateCategoryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ITCategoryData.SelectTemplateCategoryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ITCategoryData.UpdateTemplateCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:ITCategoryData.UpdateTemplateCategoryCompletedEventArgs.UpdateTemplateCategoryResult">
	<remarks/>
</member><member name="P:ITCategoryData.UpdateTemplateCategoryCompletedEventArgs.UpdateTemplateCategoryResultSpecified">
	<remarks/>
</member><member name="T:ITCategoryData.UpdateTemplateCategoryCompletedEventArgs">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.#ctor">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.CreateKBTreeCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.DeleteKBTreeCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.DeleteTreeNodeCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.SelectALLKBTreeCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.SelectKBTreeBYIDCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.SelectKBTreeBYPARENTIDCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.SwapSequenceCompleted">
	<remarks/>
</member><member name="E:KBTreeData.KBTreeInfo.UpdateKBTreeCompleted">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.CreateKBTree(KBTreeData.EKBTree)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.CreateKBTreeAsync(KBTreeData.EKBTree)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.CreateKBTreeAsync(KBTreeData.EKBTree,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.DeleteKBTree(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.DeleteKBTreeAsync(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.DeleteKBTreeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.DeleteTreeNode(System.String,System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.DeleteTreeNodeAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.DeleteTreeNodeAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectALLKBTree(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectALLKBTreeAsync(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectALLKBTreeAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectKBTreeBYID(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectKBTreeBYIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectKBTreeBYIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectKBTreeBYPARENTID(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectKBTreeBYPARENTIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SelectKBTreeBYPARENTIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SwapSequence(System.String,System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SwapSequenceAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.SwapSequenceAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.UpdateKBTree(KBTreeData.EKBTree,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.UpdateKBTreeAsync(KBTreeData.EKBTree)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.UpdateKBTreeAsync(KBTreeData.EKBTree,System.Object)">
	<remarks/>
</member><member name="M:KBTreeData.KBTreeInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:KBTreeData.KBTreeInfo">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.Description">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.ID">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.KnowledgeBaseID">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.Name">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.ParentID">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.Sequence">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.SequenceSpecified">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.ResChildCount">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.ResChildCountSpecified">
	<remarks/>
</member><member name="P:KBTreeData.EKBTree.PersonalKBUserID">
	<remarks/>
</member><member name="T:KBTreeData.EKBTree">
	<remarks/>
</member><member name="T:KBTreeData.EKBTreeAllDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBTreeData.EKBTreeAllDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBTreeData.EKBTreeAllDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBTreeData.EKBTreeAllDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBTreeData.EKBTreeDataset.SELECTBYPARANTIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBTreeData.EKBTreeDataset.SELECTBYPARANTIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBTreeData.EKBTreeDataset.SELECTBYPARANTIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBTreeData.EKBTreeDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBTreeData.CreateKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.CreateKBTreeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBTreeData.CreateKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.DeleteKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.DeleteKBTreeCompletedEventArgs.DeleteKBTreeResult">
	<remarks/>
</member><member name="P:KBTreeData.DeleteKBTreeCompletedEventArgs.DeleteKBTreeResultSpecified">
	<remarks/>
</member><member name="T:KBTreeData.DeleteKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.DeleteTreeNodeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.DeleteTreeNodeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBTreeData.DeleteTreeNodeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.SelectALLKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.SelectALLKBTreeCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBTreeData.SelectALLKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.SelectKBTreeBYIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.SelectKBTreeBYIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBTreeData.SelectKBTreeBYIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.SelectKBTreeBYPARENTIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.SelectKBTreeBYPARENTIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBTreeData.SelectKBTreeBYPARENTIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.SwapSequenceCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.SwapSequenceCompletedEventArgs.SwapSequenceResult">
	<remarks/>
</member><member name="P:KBTreeData.SwapSequenceCompletedEventArgs.SwapSequenceResultSpecified">
	<remarks/>
</member><member name="T:KBTreeData.SwapSequenceCompletedEventArgs">
	<remarks/>
</member><member name="T:KBTreeData.UpdateKBTreeCompletedEventHandler">
	<remarks/>
</member><member name="P:KBTreeData.UpdateKBTreeCompletedEventArgs.UpdateKBTreeResult">
	<remarks/>
</member><member name="P:KBTreeData.UpdateKBTreeCompletedEventArgs.UpdateKBTreeResultSpecified">
	<remarks/>
</member><member name="T:KBTreeData.UpdateKBTreeCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.AdmLibTree.GetNodeID(System.Windows.Forms.TreeNode)">
	<summary>
 获取指定TreeNode的ID
 </summary>
	<param name="node">指定TreeNode</param>
	<returns>指定TreeNode的ID</returns>
</member><member name="T:dhcc.epr.eprlib.formula.CConstVarialbe">
 -----------------------------------------------------------------------------
 Project	 : EPRLib
 Class	 : epr.eprlib.formula.CConstVarialbe
 
 -----------------------------------------------------------------------------
 <summary>
 常量类
 </summary>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-5-22	Add Comments
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DictionaryConditionUtil.GetQueryInputCondition(System.String,System.String,dhcc.epr.eprlib.metadata.MIDictionary)">
	<summary>
 获取字典代码列或描述列中输入的查询条件
 </summary>
	<returns>输入的查询条件字符串</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DictionaryConditionUtil.GetQueryPredefinedCondition(dhcc.epr.eprlib.metadata.MIDictionary,dhcc.epr.eprlib.instancedata.NInstanceData)">
	<summary>
 获取标准字典预定义的查询条件，并使用真实环境变量及相关单元值替换其中的占位符
 </summary>
	<param name="bindMIDictionary">标准字典元数据</param>
	<returns>预定义的查询条件字符串</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DictionaryConditionUtil.GetRealValue(System.String,dhcc.epr.eprlib.metadata.MIDictionary,dhcc.epr.eprlib.instancedata.NInstanceData)">
	<summary>
 将预定义的查询条件占位符使用真实值替换：
 (1）{}中的值使用全局环境变量替换
 (2）[]中的值使用相应界面模板单元值替换
 </summary>
	<param name="stdCondValue">预定义的查询条件</param>
	<returns>预定义查询条件的当前真实值</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.DictionaryConditionUtil.GetItemValue(System.String,dhcc.epr.eprlib.metadata.MIDictionary,dhcc.epr.eprlib.instancedata.NInstanceData)">
	<summary>
 使用相应界面模板单元值替换预定义查询条件中的占位符
 </summary>
	<param name="item">预定义的查询条件</param>
	<returns>预定义查询条件的当前真实值</returns>
	<remarks></remarks>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.#ctor">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.CreateItemGroupCompleted">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.DeleteItemGroupByIDCompleted">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.GetMaxSeqCompleted">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectAllItemGroupCompleted">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectGroupByTemIDCompleted">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateItemGroupCompleted">
	<remarks/>
</member><member name="E:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateSequencesCompleted">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.CreateItemGroup(B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.CreateItemGroupAsync(B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.CreateItemGroupAsync(B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup,System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.DeleteItemGroupByID(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.DeleteItemGroupByIDAsync(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.DeleteItemGroupByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.GetMaxSeq(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.GetMaxSeqAsync(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.GetMaxSeqAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectAllItemGroup">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectAllItemGroupAsync">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectAllItemGroupAsync(System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectGroupByTemID(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectGroupByTemIDAsync(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.SelectGroupByTemIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateItemGroup(B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateItemGroupAsync(B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateItemGroupAsync(B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup,System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateSequences(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateSequencesAsync(System.String)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.UpdateSequencesAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.GlossaryTemItemGroupInfo">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.ID">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.TemplateID">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.TemplateName">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.Value">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.Name">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.Sequence">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.GroupCode">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup.Type">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroup">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroupDataset.SelectAllItemGroupDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroupDataset.SelectAllItemGroupRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroupDataset.SelectAllItemGroupRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:B0GlossaryTemplateItemGroup.EGlossaryTemplateItemGroupDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:B0GlossaryTemplateItemGroup.CreateItemGroupCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.CreateItemGroupCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.CreateItemGroupCompletedEventArgs">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.DeleteItemGroupByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.DeleteItemGroupByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.DeleteItemGroupByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.GetMaxSeqCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.GetMaxSeqCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.GetMaxSeqCompletedEventArgs">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.SelectAllItemGroupCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.SelectAllItemGroupCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.SelectAllItemGroupCompletedEventArgs">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.SelectGroupByTemIDCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.SelectGroupByTemIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.SelectGroupByTemIDCompletedEventArgs">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.UpdateItemGroupCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.UpdateItemGroupCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.UpdateItemGroupCompletedEventArgs">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.UpdateSequencesCompletedEventHandler">
	<remarks/>
</member><member name="P:B0GlossaryTemplateItemGroup.UpdateSequencesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:B0GlossaryTemplateItemGroup.UpdateSequencesCompletedEventArgs">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.#ctor">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.CreateCommonEleVCompleted">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.DeleteCommonEleVByIDCompleted">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCODESCompleted">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCategoryIDCompleted">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.SelectComnonEByIDCompleted">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.UpdateCommonEleVCompleted">
	<remarks/>
</member><member name="E:BOCommonEleValues.CommonEleValuesInfo.selectMaxRowIDCompleted">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.CreateCommonEleV(BOCommonEleValues.ECommonEleValues)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.CreateCommonEleVAsync(BOCommonEleValues.ECommonEleValues)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.CreateCommonEleVAsync(BOCommonEleValues.ECommonEleValues,System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.DeleteCommonEleVByID(System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.DeleteCommonEleVByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.DeleteCommonEleVByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCODES(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCODESAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCODESAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCategoryID(System.String,System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCategoryIDAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SELECTALLBYCategoryIDAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SelectComnonEByID(System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SelectComnonEByIDAsync(System.String)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.SelectComnonEByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.UpdateCommonEleV(BOCommonEleValues.ECommonEleValues)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.UpdateCommonEleVAsync(BOCommonEleValues.ECommonEleValues)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.UpdateCommonEleVAsync(BOCommonEleValues.ECommonEleValues,System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.selectMaxRowID">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.selectMaxRowIDAsync">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.selectMaxRowIDAsync(System.Object)">
	<remarks/>
</member><member name="M:BOCommonEleValues.CommonEleValuesInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:BOCommonEleValues.CommonEleValuesInfo">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ID">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ElemType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.Code">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.DisplayName">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.Description">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.BindType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.BindCode">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.Synch">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.AllowNull">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ValidateMsg">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.RegExp">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.MaxLength">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ConfidentialityCode">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ReadOnly">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.TabIndex">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.FixedStructs">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.Visible">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.DynamicField">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.IncludeDate">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.IncludeTime">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.DateFormat">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.TimeFormat">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.MinVal">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.MaxVal">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.HasMinVal">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.HasMaxVal">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.IncludeMin">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.IncludeMax">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.DecimalPlace">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.WrapChoice">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.Choices">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.DictionaryType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.CodeSystem">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.CodeSystemName">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.CustDicClassName">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.DisplayType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.Separator">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.FirstColType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.SecondColType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ThirdColType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.AllowCodeNull">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.AllowValueNull">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.AssociateItem">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.AllowEdit">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.LinkCode">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.LinkDisplayType">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.LinkMethod">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.SignatureLevel">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.ShowUnChecked">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.UncheckedPrefix">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.CheckedPrefix">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.OneByOneLink">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.TemplateCode">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.TemplateName">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.SectionCode">
	<remarks/>
</member><member name="P:BOCommonEleValues.ECommonEleValues.SectionName">
	<remarks/>
</member><member name="T:BOCommonEleValues.ECommonEleValues">
	<remarks/>
</member><member name="T:BOCommonEleValues.ECommonEleValuesByCodeDataSet.SELECTALLBYCODESDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesByCodeDataSet.SELECTALLBYCODESRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesByCodeDataSet.SELECTALLBYCODESRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesByCodeDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesDataSet.SELECTALLBYCategoryIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesDataSet.SELECTALLBYCategoryIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesDataSet.SELECTALLBYCategoryIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:BOCommonEleValues.ECommonEleValuesDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:BOCommonEleValues.CreateCommonEleVCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.CreateCommonEleVCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.CreateCommonEleVCompletedEventArgs">
	<remarks/>
</member><member name="T:BOCommonEleValues.DeleteCommonEleVByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.DeleteCommonEleVByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.DeleteCommonEleVByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOCommonEleValues.SELECTALLBYCODESCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.SELECTALLBYCODESCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.SELECTALLBYCODESCompletedEventArgs">
	<remarks/>
</member><member name="T:BOCommonEleValues.SELECTALLBYCategoryIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.SELECTALLBYCategoryIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.SELECTALLBYCategoryIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOCommonEleValues.SelectComnonEByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.SelectComnonEByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.SelectComnonEByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:BOCommonEleValues.UpdateCommonEleVCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.UpdateCommonEleVCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.UpdateCommonEleVCompletedEventArgs">
	<remarks/>
</member><member name="T:BOCommonEleValues.selectMaxRowIDCompletedEventHandler">
	<remarks/>
</member><member name="P:BOCommonEleValues.selectMaxRowIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:BOCommonEleValues.selectMaxRowIDCompletedEventArgs">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.#ctor">
	<remarks/>
</member><member name="E:CustomDictoryData.CustomDictoryInfo.GetAllDiagnosTypeByTitleCompleted">
	<remarks/>
</member><member name="E:CustomDictoryData.CustomDictoryInfo.GetTeethPestionCompleted">
	<remarks/>
</member><member name="E:CustomDictoryData.CustomDictoryInfo.GetTitleBYTidCompleted">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetAllDiagnosTypeByTitle">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetAllDiagnosTypeByTitleAsync">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetAllDiagnosTypeByTitleAsync(System.Object)">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetTeethPestion">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetTeethPestionAsync">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetTeethPestionAsync(System.Object)">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetTitleBYTid(System.String)">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetTitleBYTidAsync(System.String)">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.GetTitleBYTidAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:CustomDictoryData.CustomDictoryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:CustomDictoryData.CustomDictoryInfo">
	<remarks/>
</member><member name="T:CustomDictoryData.EDiagnosTypeByTitle.GetDiagnosTypeByTitleDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:CustomDictoryData.EDiagnosTypeByTitle.GetDiagnosTypeByTitleRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:CustomDictoryData.EDiagnosTypeByTitle.GetDiagnosTypeByTitleRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:CustomDictoryData.EDiagnosTypeByTitle">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:CustomDictoryData.ETeethPestion.GetTeethInformationDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:CustomDictoryData.ETeethPestion.GetTeethInformationRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:CustomDictoryData.ETeethPestion.GetTeethInformationRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:CustomDictoryData.ETeethPestion">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:CustomDictoryData.GetAllDiagnosTypeByTitleCompletedEventHandler">
	<remarks/>
</member><member name="P:CustomDictoryData.GetAllDiagnosTypeByTitleCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:CustomDictoryData.GetAllDiagnosTypeByTitleCompletedEventArgs">
	<remarks/>
</member><member name="T:CustomDictoryData.GetTeethPestionCompletedEventHandler">
	<remarks/>
</member><member name="P:CustomDictoryData.GetTeethPestionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:CustomDictoryData.GetTeethPestionCompletedEventArgs">
	<remarks/>
</member><member name="T:CustomDictoryData.GetTitleBYTidCompletedEventHandler">
	<remarks/>
</member><member name="P:CustomDictoryData.GetTitleBYTidCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:CustomDictoryData.GetTitleBYTidCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.instancedata.NISegment.SwitchToNormalValue">
	<summary>
 切换到正常值。
 执行条件：1）支持异常值。2）当前值为异常值
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.instancedata.NISegment.SwitchToAbNormalValue">
	<summary>
 切换到异常值
 执行条件：1）支持异常值。2）当前值为正常值
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.instancedata.NISegment.ReplaceVBCRLF(System.String)">
	<summary>
 转换绑定数据中的回车换行符
 方案如下: 一个回车加一个换行   转换为     回车
           所有单独的换行       转换为     回车
           所有蛋蛋的回车       不做转换
 原因如下:
  (1)要兼容绑定过来的数据，在绑定数据中，一个回车加一个换行表示新起一行，其它单独的回车或换行都表示新起一行，
   需要做相应的转换
  (2)同时Cache数据库在存储换行符时有问题，换行符后连接一个空格时，换行符在Cache数据库中会丢失,
     最后还要将第(1)步处理剩余的换行符再替换为回车符，这时的回车符就代表了真正的换行。
  (3)其它的考虑：上面替换后的文本(回车符代表换行)再次被复制时，复制出来的文本内容会发生一点变化(换行会自动变为换行符或回车符+换行符)
     这个是windows系统完成的，正式基于这个特性，才使得上面的方案可行。否则，被上面方案(1)(2)步骤处理过的文本再次被复制时，换行就会丢失。
 </summary>
	<param name="inStr">输入字符串</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PMsg.SetDGMsgCaption(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 设置DGMsg的Caption文本，用于显示发现的错误数量，每次改正错误后都相应变化
 </summary>
	<param name="parErrCount"></param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-9-4	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:dhcc.epr.eprlib.presentation.textedit.MonoChoiceController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:GateWayDataInfo.DataGatewayInfo.#ctor">
	<remarks/>
</member><member name="E:GateWayDataInfo.DataGatewayInfo.DBInterFaceCompleted">
	<remarks/>
</member><member name="E:GateWayDataInfo.DataGatewayInfo.DBInterFaceByStreamCompleted">
	<remarks/>
</member><member name="E:GateWayDataInfo.DataGatewayInfo.GetDataByQueryNameCompleted">
	<remarks/>
</member><member name="E:GateWayDataInfo.DataGatewayInfo.GetParameterStringCompleted">
	<remarks/>
</member><member name="E:GateWayDataInfo.DataGatewayInfo.TestQueryCompleted">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.DBInterFace(System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.DBInterFaceAsync(System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.DBInterFaceAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.DBInterFaceByStream(System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.DBInterFaceByStreamAsync(System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.DBInterFaceByStreamAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.GetDataByQueryName(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.GetDataByQueryNameAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.GetDataByQueryNameAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.GetParameterString(System.String,System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.GetParameterStringAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.GetParameterStringAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.TestQuery">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.TestQueryAsync">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.TestQueryAsync(System.Object)">
	<remarks/>
</member><member name="M:GateWayDataInfo.DataGatewayInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:GateWayDataInfo.DataGatewayInfo">
	<remarks/>
</member><member name="P:GateWayDataInfo.ReStreamData.StreamData">
	<remarks/>
</member><member name="T:GateWayDataInfo.ReStreamData">
	<remarks/>
</member><member name="T:GateWayDataInfo.DBInterFaceCompletedEventHandler">
	<remarks/>
</member><member name="P:GateWayDataInfo.DBInterFaceCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GateWayDataInfo.DBInterFaceCompletedEventArgs">
	<remarks/>
</member><member name="T:GateWayDataInfo.DBInterFaceByStreamCompletedEventHandler">
	<remarks/>
</member><member name="P:GateWayDataInfo.DBInterFaceByStreamCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GateWayDataInfo.DBInterFaceByStreamCompletedEventArgs">
	<remarks/>
</member><member name="T:GateWayDataInfo.GetDataByQueryNameCompletedEventHandler">
	<remarks/>
</member><member name="P:GateWayDataInfo.GetDataByQueryNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GateWayDataInfo.GetDataByQueryNameCompletedEventArgs">
	<remarks/>
</member><member name="T:GateWayDataInfo.GetParameterStringCompletedEventHandler">
	<remarks/>
</member><member name="P:GateWayDataInfo.GetParameterStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GateWayDataInfo.GetParameterStringCompletedEventArgs">
	<remarks/>
</member><member name="T:GateWayDataInfo.TestQueryCompletedEventHandler">
	<remarks/>
</member><member name="P:GateWayDataInfo.TestQueryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:GateWayDataInfo.TestQueryCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.TabCtl_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 tab改变事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.miDelItem_Click(System.Object,System.EventArgs)">
	<summary>
 删除术语单元树中被选中的元数据项 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.btnSave_Click(System.Object,System.EventArgs)">
	<summary>
 保存术语
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.tvGlossaryUnits_AfterSelect(System.Object,System.String,System.String,System.String)">
	<summary>
 数据元选中行改变事件
 </summary>
	<param name="sender"></param>
	<param name="strMetaData"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.btnAdd_Click(System.Object,System.EventArgs)">
	<summary>
 增加或更新映射关系
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.btnMaps_Click(System.Object,System.EventArgs)">
	<summary>
 批量增加或更新映射关系
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.btnDel_Click(System.Object,System.EventArgs)">
	<summary>
 删除映射关系
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.RefreshKBUnitTree">
	<summary>
 刷新知识库单元节点树
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.RefreshKBUnitTreeCase">
	<summary>
 刷新知识库单元节点树
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.InitCbxValueTypeList(System.Windows.Forms.TreeNode)">
	<summary>
 初始化元数据项的显示数据类型标记列表
 </summary>
	<param name="node">选定的单元节点</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.SetDefaultValueType(System.String)">
	<summary>
 设置取值类型默认值
 </summary>
	<param name="valueType">默认选定值</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.InitKBPartComboBox">
	<summary>
 初始化知识库部分下拉框
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.CheckNodeExisted(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
	<summary>
 判断指定节点是否已存在
 </summary>
	<param name="parNode">父节点</param>
	<param name="itemNode">项目子节点</param>
	<returns>存在返回真，否则为假</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.GetBidingSimpleDataType(System.String)">
	<summary>
 获取元数据项的简单数据类型
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元类型</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.GetDefaultValueType(System.String)">
	<summary>
 获取单元默认取值类型
 </summary>
	<param name="itemCode">单元代码</param>
	<returns>默认取值类型（V、C、VC、CV）</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.GetBindingName(System.Windows.Forms.TreeNode,System.Int32)">
	<summary>
 由节点Tag取得节点Name, 并加上模板目录信息和显示数据类型名称
 </summary>
	<param name="node">节点</param>
	<param name="nodeType">节点类型</param>
	<returns>绑定的单元名称</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.BuildItemCode(System.String,System.String)">
	<summary>
 由节点Tag取得单元代码
 </summary>
	<param name="nodeTag">节点Tag信息</param>
	<returns>单元代码</returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DCGlossary.InitTepList(dhcc.epr.eprlib.metadata.MMetaItem,dhcc.epr.eprlib.metadata.MMetaItem,System.String)">
	<summary>
 解析XML，获取模版数据
 </summary>
	<param name="curMetaItem"></param>
	<param name="parentMetaItem"></param>
	<param name="strNodeTag"></param>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.design.imagelibdesign.DCImageLib.ClientMode">
	<summary>
 是否客户端模式（IE）
 </summary>
	<remarks></remarks>
</member><member name="P:dhcc.epr.eprlib.design.imagelibdesign.DCImageLib.SelectedImageTreeType">
	<summary>
 当前选中的图库类型
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.DCImageWizard.btnPrevious_Click(System.Object,System.EventArgs)">
	<summary>
 上一步
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.DCImageWizard.btnNext_Click(System.Object,System.EventArgs)">
	<summary>
 下一步
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.DCImageWizard.btnPublish_Click(System.Object,System.EventArgs)">
	<summary>
 发布
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.imagelibdesign.UCAnnoPictureBox.AutoAnnotationCreated(System.Boolean)">
	<summary>
 AnnoPictureBox创建标注后，同步NewAnnotation状态，
 以使得鼠标在标注时显示正确的Cursors.Cross形状
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.KBTree.dsKBNode">
	<summary>
 查到的节点
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.KBTree.FindText">
	<summary>
 查找的条件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.GetFilter(KBTreeData.EKBTreeAllDataset.SELECTALLDataTable,System.String,System.String,System.String)">
	<summary>
 获取知识库目录节点显示条件
 </summary>
	<param name="dt">目录树DataTable</param>
	<param name="parentNodeID">父节点ID</param>
	<param name="ctLocID">科室ID</param>
	<param name="userID">用户ID</param>
	<returns>目录节点显示条件</returns>
	<remarks>显示条件</remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.IsPersonalTreeNode(System.String)">
	<summary>
 是否个人知识库目录节点
 </summary>
	<param name="kbTreeUserID">与知识库目录对应的UserID</param>
	<returns>是否个人知识库目录节点</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.GetNodeId(System.Windows.Forms.TreeNode)">
	<summary>
 获取指定TreeNode的ID
 </summary>
	<param name="node">指定TreeNode</param>
	<returns>指定TreeNode的ID</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.GetNodeType(System.Windows.Forms.TreeNode)">
	<summary>
 获取指定TreeNode的类型
 </summary>
	<param name="node">指定TreeNode</param>
	<returns>指定TreeNode的类型</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.NodeMove(System.Windows.Forms.TreeNode,System.String)">
	<summary>
 树节点移动
 </summary>
	<param name="SeleNode">当前要移动的节点</param>
	<param name="Direction">移动的方向“up 上移，down 下移”</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.SwapSequence(System.String@,System.String@)">
	<summary>
 修改KBNode
 </summary>
	<param name="PreId"></param>
	<param name="SelectId"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.SwapFordSequence(System.String@,System.String@)">
	<summary>
 修改KBTree
 </summary>
	<param name="PreId"></param>
	<param name="SelectId"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.SetCurrentNodeInfo(System.Windows.Forms.TreeNode)">
	<summary>
 设置当前选中的节点信息
 </summary>
	<param name="curTreeNode">当前选中的节点</param>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.FindNode(System.String)">
	<summary>
 查找节点
 </summary>
	<param name="NodeName">查找条件</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.FindChildNode(System.Windows.Forms.TreeNode,System.String)">
	<summary>
 查找树节点
 </summary>
	<param name="tnParent">树节点</param>
	<param name="NodeName">TreeID</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.ExpandNodes(System.Windows.Forms.TreeNode)">
	<summary>
 展开节点
 </summary>
	<param name="TempNode">树节点</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.SelectAndExpand(System.Windows.Forms.TreeNode,System.String)">
	<summary>
 选择并展开节点
 </summary>
	<param name="TempNode"></param>
	<param name="NodeID"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.SetKBTreeMenu(System.Windows.Forms.TreeNode)">
	<summary>
 设置右键菜单
 </summary>
	<param name="tempNode">节点</param>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.SetMaintainKBTreeMenu(System.Windows.Forms.TreeNode)">
	<summary>
 设置维护端右键菜单  IsHaveFolder(CurrentNode) = TREE_NODE_TYPE
 </summary>
	<param name="tempNode">当前节点</param>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.IsHaveFolder(System.Windows.Forms.TreeNode)">
	<summary>
 判断节点下是否有目录 add by Candyxu
 </summary>
	<param name="PNode">当前节点</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.AddDeleteToMenu">
	<summary>
 加载删除按钮
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.CreateKBTree(System.String,System.String)">
	<summary>
 创建KBTree
 </summary>
	<param name="userID">用户ID</param>
	<param name="userName">用户名</param>
	<returns>新建KBTree实体对象</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.GetKBTreeName(System.String)">
	<summary>
 获取新建知识库目录的默认名称
 </summary>
	<param name="userName">用户姓名</param>
	<returns>目录的默认名称</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.GetKBTreeUserID(System.String)">
	<summary>
 获取新建知识库目录
 </summary>
	<param name="userID">用户ID</param>
	<returns>新建知识库目录的用户ID</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.CreateKBTreeTag(System.String)">
	<summary>
 生成知识库目录Tag
 </summary>
	<param name="kbTreeID">知识库目录ID</param>
	<returns>知识库目录Tag</returns>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBTree.IsRealClientMode(System.Boolean,System.String)">
	<summary>
 是否真实的客户端模式？
 在设计端“界面显示”中，客户端模式参数“isClientMode”为真值，
 但此时相关环境变量可能为空，整体并不是一个真实的客户端模式
 </summary>
	<param name="isClientMode">客户端模式参数</param>
	<param name="envVariable">环境变量，如UserID、CTLocID等</param>
	<returns>是否为真实的客户端模式</returns>
</member><member name="F:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.checkedhashTable">
	<summary>
 用于存储主子都选中的数据
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.PacsDicForm_Load(System.Object,System.EventArgs)">
	<summary>
 加载窗体
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.QueryEpisodeList">
	<summary>
 查就诊列表2011-07-12 Add by Candyxu
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.tcCheckReport_TabChanged(System.Object,System.EventArgs)">
	<summary>
 切换tab加载就诊列表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.dgBOLISData_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选择就诊
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.btnQuery_Click(System.Object,System.EventArgs)">
	<summary>
 按查询方式查询
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.QueryDictionary(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 查询
 </summary>
	<param name="ID">EpisodeID</param>
	<param name="DateSt">开始时间</param>
	<param name="DateEnd">结束时间</param>
	<param name="StartPage">开始页</param>
	<param name="EndPage">结束页</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.BindResultSet(System.Data.DataSet)">
	<summary>
 绑定样式
 </summary>
	<param name="curDataSet"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.btnPrev_Click(System.Object,System.EventArgs)">
	<summary>
 前一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.btnNext_Click(System.Object,System.EventArgs)">
	<summary>
 后一页
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.nudPageCount_ValueChanged(System.Object,System.EventArgs)">
	<summary>
 页面显示条数改变
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.RefreshState">
	<summary>
 重置状态
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.dgvResult_SelectionChanged(System.Object,System.EventArgs)">
	<summary>
 主表选中改变事件 by yejian 2012-8-10
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.btnOk_Click(System.Object,System.EventArgs)">
	<summary>
 引用数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.dictionary.MedRecordDicForm.ChangeDictionaryText">
	<summary>
 引用方法
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.LinkController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用父类方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:ImageItemData.ImageItemInfo.#ctor">
	<remarks/>
</member><member name="E:ImageItemData.ImageItemInfo.CheckImageItemPublishedCompleted">
	<remarks/>
</member><member name="E:ImageItemData.ImageItemInfo.CreateCompleted">
	<remarks/>
</member><member name="E:ImageItemData.ImageItemInfo.DeleteByIDCompleted">
	<remarks/>
</member><member name="E:ImageItemData.ImageItemInfo.GetByImageTreeIDCompleted">
	<remarks/>
</member><member name="E:ImageItemData.ImageItemInfo.GetEntityCompleted">
	<remarks/>
</member><member name="E:ImageItemData.ImageItemInfo.UpdateCompleted">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.CheckImageItemPublished(System.String,System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.CheckImageItemPublishedAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.CheckImageItemPublishedAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.Create(ImageItemData.EImageItem)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.CreateAsync(ImageItemData.EImageItem)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.CreateAsync(ImageItemData.EImageItem,System.Object)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.DeleteByID(System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.DeleteByIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.DeleteByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.GetByImageTreeID(System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.GetByImageTreeIDAsync(System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.GetByImageTreeIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.GetEntity(System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.GetEntityAsync(System.String)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.GetEntityAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.Update(ImageItemData.EImageItem)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.UpdateAsync(ImageItemData.EImageItem)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.UpdateAsync(ImageItemData.EImageItem,System.Object)">
	<remarks/>
</member><member name="M:ImageItemData.ImageItemInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:ImageItemData.ImageItemInfo">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.ID">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.Name">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.Description">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.ImageLibID">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.ImageLibIDSpecified">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.ImageTreeID">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.ImageTreeIDSpecified">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.ImageData">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.HotSpotData">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.IconData">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.Status">
	<remarks/>
</member><member name="P:ImageItemData.EImageItem.IsPublish">
	<remarks/>
</member><member name="T:ImageItemData.EImageItem">
	<remarks/>
</member><member name="T:ImageItemData.EImageItemDataSet.GetByImageTreeIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:ImageItemData.EImageItemDataSet.GetByImageTreeIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:ImageItemData.EImageItemDataSet.GetByImageTreeIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:ImageItemData.EImageItemDataSet">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:ImageItemData.CheckImageItemPublishedCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageItemData.CheckImageItemPublishedCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageItemData.CheckImageItemPublishedCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageItemData.CreateCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageItemData.CreateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageItemData.CreateCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageItemData.DeleteByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageItemData.DeleteByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageItemData.DeleteByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageItemData.GetByImageTreeIDCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageItemData.GetByImageTreeIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageItemData.GetByImageTreeIDCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageItemData.GetEntityCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageItemData.GetEntityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageItemData.GetEntityCompletedEventArgs">
	<remarks/>
</member><member name="T:ImageItemData.UpdateCompletedEventHandler">
	<remarks/>
</member><member name="P:ImageItemData.UpdateCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:ImageItemData.UpdateCompletedEventArgs">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.#ctor">
	<remarks/>
</member><member name="E:KnowledgeBaseData.KnowledgeBaseInfo.CreateKnowledgeBaseCompleted">
	<remarks/>
</member><member name="E:KnowledgeBaseData.KnowledgeBaseInfo.DeleteKnowledgeBaseCompleted">
	<remarks/>
</member><member name="E:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseBYPARENTIDCompleted">
	<remarks/>
</member><member name="E:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseByIDCompleted">
	<remarks/>
</member><member name="E:KnowledgeBaseData.KnowledgeBaseInfo.UpdateKnowledgeBaseCompleted">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.CreateKnowledgeBase(KnowledgeBaseData.EKnowledgeBase)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.CreateKnowledgeBaseAsync(KnowledgeBaseData.EKnowledgeBase)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.CreateKnowledgeBaseAsync(KnowledgeBaseData.EKnowledgeBase,System.Object)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.DeleteKnowledgeBase(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.DeleteKnowledgeBaseAsync(System.String)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.DeleteKnowledgeBaseAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseBYPARENTID(System.String)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseBYPARENTIDAsync(System.String)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseBYPARENTIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseByID(System.String)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseByIDAsync(System.String)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.SelectKnowledgeBaseByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.UpdateKnowledgeBase(KnowledgeBaseData.EKnowledgeBase,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.UpdateKnowledgeBaseAsync(KnowledgeBaseData.EKnowledgeBase)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.UpdateKnowledgeBaseAsync(KnowledgeBaseData.EKnowledgeBase,System.Object)">
	<remarks/>
</member><member name="M:KnowledgeBaseData.KnowledgeBaseInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:KnowledgeBaseData.KnowledgeBaseInfo">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.Description">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.ID">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.KBCategoryID">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.Name">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.S1Name">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.S2Name">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.S3Name">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.SegmentNumber">
	<remarks/>
</member><member name="P:KnowledgeBaseData.EKnowledgeBase.SegmentNumberSpecified">
	<remarks/>
</member><member name="T:KnowledgeBaseData.EKnowledgeBase">
	<remarks/>
</member><member name="T:KnowledgeBaseData.EKnowledgeBaseDataset.SELECTBYCATEIDDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KnowledgeBaseData.EKnowledgeBaseDataset.SELECTBYCATEIDRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KnowledgeBaseData.EKnowledgeBaseDataset.SELECTBYCATEIDRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KnowledgeBaseData.EKnowledgeBaseDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KnowledgeBaseData.CreateKnowledgeBaseCompletedEventHandler">
	<remarks/>
</member><member name="P:KnowledgeBaseData.CreateKnowledgeBaseCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KnowledgeBaseData.CreateKnowledgeBaseCompletedEventArgs">
	<remarks/>
</member><member name="T:KnowledgeBaseData.DeleteKnowledgeBaseCompletedEventHandler">
	<remarks/>
</member><member name="P:KnowledgeBaseData.DeleteKnowledgeBaseCompletedEventArgs.DeleteKnowledgeBaseResult">
	<remarks/>
</member><member name="P:KnowledgeBaseData.DeleteKnowledgeBaseCompletedEventArgs.DeleteKnowledgeBaseResultSpecified">
	<remarks/>
</member><member name="T:KnowledgeBaseData.DeleteKnowledgeBaseCompletedEventArgs">
	<remarks/>
</member><member name="T:KnowledgeBaseData.SelectKnowledgeBaseBYPARENTIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KnowledgeBaseData.SelectKnowledgeBaseBYPARENTIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KnowledgeBaseData.SelectKnowledgeBaseBYPARENTIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KnowledgeBaseData.SelectKnowledgeBaseByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KnowledgeBaseData.SelectKnowledgeBaseByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KnowledgeBaseData.SelectKnowledgeBaseByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KnowledgeBaseData.UpdateKnowledgeBaseCompletedEventHandler">
	<remarks/>
</member><member name="P:KnowledgeBaseData.UpdateKnowledgeBaseCompletedEventArgs.UpdateKnowledgeBaseResult">
	<remarks/>
</member><member name="P:KnowledgeBaseData.UpdateKnowledgeBaseCompletedEventArgs.UpdateKnowledgeBaseResultSpecified">
	<remarks/>
</member><member name="T:KnowledgeBaseData.UpdateKnowledgeBaseCompletedEventArgs">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.#ctor">
	<remarks/>
</member><member name="E:SysOptionData.SysOptionInfo.CreateSysOptionCompleted">
	<remarks/>
</member><member name="E:SysOptionData.SysOptionInfo.DeleteSysOptionCompleted">
	<remarks/>
</member><member name="E:SysOptionData.SysOptionInfo.GetValueByNameCompleted">
	<remarks/>
</member><member name="E:SysOptionData.SysOptionInfo.SelectAllSysOptionCompleted">
	<remarks/>
</member><member name="E:SysOptionData.SysOptionInfo.UpdateSysOptionCompleted">
	<remarks/>
</member><member name="E:SysOptionData.SysOptionInfo.UpdateSysOptionValueCompleted">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.CreateSysOption(SysOptionData.ESysOption)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.CreateSysOptionAsync(SysOptionData.ESysOption)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.CreateSysOptionAsync(SysOptionData.ESysOption,System.Object)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.DeleteSysOption(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.DeleteSysOptionAsync(System.String)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.DeleteSysOptionAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.GetValueByName(System.String)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.GetValueByNameAsync(System.String)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.GetValueByNameAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.SelectAllSysOption">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.SelectAllSysOptionAsync">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.SelectAllSysOptionAsync(System.Object)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.UpdateSysOption(SysOptionData.ESysOption)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.UpdateSysOptionAsync(SysOptionData.ESysOption)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.UpdateSysOptionAsync(SysOptionData.ESysOption,System.Object)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.UpdateSysOptionValue(SysOptionData.ESysOption)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.UpdateSysOptionValueAsync(SysOptionData.ESysOption)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.UpdateSysOptionValueAsync(SysOptionData.ESysOption,System.Object)">
	<remarks/>
</member><member name="M:SysOptionData.SysOptionInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:SysOptionData.SysOptionInfo">
	<remarks/>
</member><member name="P:SysOptionData.ESysOption.IsVisible">
	<remarks/>
</member><member name="P:SysOptionData.ESysOption.Description">
	<remarks/>
</member><member name="P:SysOptionData.ESysOption.ID">
	<remarks/>
</member><member name="P:SysOptionData.ESysOption.Name">
	<remarks/>
</member><member name="P:SysOptionData.ESysOption.OptionValue">
	<remarks/>
</member><member name="T:SysOptionData.ESysOption">
	<remarks/>
</member><member name="T:SysOptionData.ESysOptionDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:SysOptionData.ESysOptionDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:SysOptionData.ESysOptionDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:SysOptionData.ESysOptionDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:SysOptionData.CreateSysOptionCompletedEventHandler">
	<remarks/>
</member><member name="P:SysOptionData.CreateSysOptionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:SysOptionData.CreateSysOptionCompletedEventArgs">
	<remarks/>
</member><member name="T:SysOptionData.DeleteSysOptionCompletedEventHandler">
	<remarks/>
</member><member name="P:SysOptionData.DeleteSysOptionCompletedEventArgs.DeleteSysOptionResult">
	<remarks/>
</member><member name="P:SysOptionData.DeleteSysOptionCompletedEventArgs.DeleteSysOptionResultSpecified">
	<remarks/>
</member><member name="T:SysOptionData.DeleteSysOptionCompletedEventArgs">
	<remarks/>
</member><member name="T:SysOptionData.GetValueByNameCompletedEventHandler">
	<remarks/>
</member><member name="P:SysOptionData.GetValueByNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:SysOptionData.GetValueByNameCompletedEventArgs">
	<remarks/>
</member><member name="T:SysOptionData.SelectAllSysOptionCompletedEventHandler">
	<remarks/>
</member><member name="P:SysOptionData.SelectAllSysOptionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:SysOptionData.SelectAllSysOptionCompletedEventArgs">
	<remarks/>
</member><member name="T:SysOptionData.UpdateSysOptionCompletedEventHandler">
	<remarks/>
</member><member name="P:SysOptionData.UpdateSysOptionCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:SysOptionData.UpdateSysOptionCompletedEventArgs">
	<remarks/>
</member><member name="T:SysOptionData.UpdateSysOptionValueCompletedEventHandler">
	<remarks/>
</member><member name="P:SysOptionData.UpdateSysOptionValueCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:SysOptionData.UpdateSysOptionValueCompletedEventArgs">
	<remarks/>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetDEValueByRelation(System.String)">
	<summary>
 通过数据元标示符获取值域代码列表
 </summary>
	<param name="strRelation"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetDataSource(System.Data.DataTable)">
	<summary>
 对值域代码赋值
 </summary>
	<param name="m_dt"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetTepListValues(System.Collections.Hashtable)">
	<summary>
 对模版数据列表赋值
 </summary>
	<param name="m_hasTable"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetNoMapTepListValues(System.Collections.Hashtable)">
	<summary>
 对模版数据列表赋值
 </summary>
	<param name="m_hasTable"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetTepListValues(DictionaryData.EStdDicOrListDataset)">
	<summary>
 对引用数据列表赋值
 </summary>
	<param name="eDate"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetdgVMapValues(System.String)">
	<summary>
 对模版数据列表赋值
 </summary>
	<param name="m_strGlossaryItemID"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.ClearTepList">
	<summary>
 清空模版数据列表
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.GetListGlossaryItemMap">
	<summary>
 获取选中的数据列表
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.GetAllListGlossaryItemMap">
	<summary>
 获取所有相同的数据列表
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.cbSelectAll_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 全选事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetMap">
	<summary>
 添加事件
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.SetMaps">
	<summary>
 批量添加事件
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.DelMap">
	<summary>
 删除事件
 </summary>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.dgvTepList_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选中事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.dgvTepList_CellValueChanged(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选中事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.glossarydesign.DataElementTemMap.dgvTepList_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 双击模板当前行
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.Save(dhcc.epr.eprlib.metadata.EPRStatus)">
	<summary>
 保存
 </summary>
	<param name="eprStatus">模板状态</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.SaveDiagnosConfig">
	<summary>
 保存疾病对应关系
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.btnMaintain_Click(System.Object,System.EventArgs)">
	<summary>
 某科室下病种维护
 </summary>
	<remarks>个人知识库只能维护本科室下病种</remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.InitDiagnosTab(System.String)">
	<summary>
 初始化疾病对应关系页签内容
 </summary>
	<param name="kbNodeID">知识库节点RowID</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.InitCtLocComboBox">
	<summary>
 初始化科室列表下拉框
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.InitDiagnosRuleComboBox">
	<summary>
 初始化可选规则列表下拉框
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.InitDiagnosRuleCheckBoxList(System.String)">
	<summary>
 初始化当前知识库节点关联的条件组合列表下拉框
 </summary>
	<param name="kbNodeID">当前知识库节点RowID</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.LoadDiagnosCheckBoxList(System.String)">
	<summary>
 根据科室RowID刷新病种多选列表框
 </summary>
	<param name="ctLocID">科室RowID</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.LoadRuleParamsCheckBoxList(System.String,System.String)">
	<summary>
 根据规则RowID刷新规则参数多选列表框
 </summary>
	<param name="ruleID">规则RowID(字典表RowID)</param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.cbxCtLoc_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 根据所选科室列出疾病类型
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.cbxDiagnosRule_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 根据所选规则列出参数列表
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.btAdd_Click(System.Object,System.EventArgs)">
	<summary>
 添加当前选择的疾病类型
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.btnModify_Click(System.Object,System.EventArgs)">
	<summary>
 修改选择的疾病规则
 </summary>
	<remarks>将规则加入到病种中</remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.btnDelete_Click(System.Object,System.EventArgs)">
	<summary>
 移除选择的疾病规则
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.InitSelectAllCheck">
	<summary>
 初始化全选框
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.ckbAllDiagnos_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 全选或取消某科室下的所有病种
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.ckbAllRuleParams_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 全选或取消某规则下的所有参数
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.DCKBNode.ckbAllDiagnosRules_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 全选或取消某知识库节点下的所有规则
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.RuleParamItem.RuleID">
	<summary>
 字典表StdDictionary的ID
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.RuleParamItem.RuleDesc">
	<summary>
 字典表StdDictionary的描述
 </summary>
	<remarks>冗余处理</remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.RuleParamItem.RuleParamCode">
	<summary>
 当前采用的规则代码
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.RuleParamItem.RuleParamDesc">
	<summary>
 当前采用的规则描述
 </summary>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.design.kbdesign.RuleParamItem">
	<summary>
 自定义规则参数结构
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.KBNodeDiagnosRule.DiagnosID">
	<summary>
 病种ID
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.KBNodeDiagnosRule.KBNodeDiagnosID">
	<summary>
 知识库节点关联病种表ID
 </summary>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.design.kbdesign.KBNodeDiagnosRule.DiagnosRulePairs">
	<summary>
 一个病种关联的规则集合
 集合内部是一个字典，键为规则ID，值又为一个键值对集合。
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.design.kbdesign.KBNodeDiagnosRule.ToString">
	<summary>
 重载用于组合病种规则自定义描述
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:dhcc.epr.eprlib.design.kbdesign.KBNodeDiagnosRule">
	<summary>
 自定义病种规则组合结构
 </summary>
	<remarks></remarks>
</member><member name="P:DiagnosForm.CtLocID">
	<summary>
 当前选中的科室RowID
 </summary>
	<remarks></remarks>
</member><member name="P:DiagnosForm.CtLocIDs">
	<summary>
 当前知识库节点父目录所绑定的科室字符串
 </summary>
	<value></value>
	<returns></returns>
	<remarks>多个以^分隔</remarks>
</member><member name="P:DiagnosForm.IsPersonalKBNode">
	<summary>
 是否个人知识库节点
 </summary>
	<remarks>个人知识库节点同时意味着客户端运行时</remarks>
</member><member name="M:DiagnosForm.InitCtLocDropdownList">
	<summary>
 初始化科室下拉列表
 </summary>
	<remarks></remarks>
</member><member name="M:DiagnosForm.FilterByCtLocIDs(System.String,System.Data.DataTable@)">
	<summary>
 过滤科室列表
 </summary>
	<param name="ctLocIDs">当前知识库目录节点关联的科室</param>
	<param name="dtCtLoc">所有科室</param>
	<remarks></remarks>
</member><member name="M:DiagnosForm.InitDiagnosDataGridView(System.String)">
	<summary>
 根据指定的科室初始化病种网格
 </summary>
	<remarks></remarks>
</member><member name="M:DiagnosForm.DiagnosForm_Load(System.Object,System.EventArgs)">
	<summary>
 窗体加载事件
 </summary>
	<remarks></remarks>
</member><member name="M:DiagnosForm.cbxCtLoc_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 科室下拉框改变事件
 </summary>
	<remarks></remarks>
</member><member name="M:DiagnosForm.dgDiagnos_UserDeletingRow(System.Object,System.Windows.Forms.DataGridViewRowCancelEventArgs)">
	<summary>
 用户删除行事件
 </summary>
	<remarks></remarks>
</member><member name="M:DiagnosForm.btnInsert_Click(System.Object,System.EventArgs)">
	<summary>
 新增病种
 </summary>
	<remarks></remarks>
</member><member name="M:DiagnosForm.btnModify_Click(System.Object,System.EventArgs)">
	<summary>
 修改病种
 </summary>
	<remarks>前端个人只能修改自己的，维护程序不能修改个人的</remarks>
</member><member name="M:DiagnosForm.dgDiagnos_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
	<summary>
 选中行事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.metadata.MITextDesc.#ctor">
	<summary>
 构造函数
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.metadata.MITextDesc.CreateInstance">
	<summary>
 创建E单元实例数据
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.metadata.MITextDesc.XMLSerialize(System.Xml.XmlWriter)">
	<summary>
 E单元元数据序列化
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.metadata.MITextDesc.GetDataByXMLDeserialize(System.Xml.XmlReader,System.String)">
	<summary>
 根据标签得到反序列化数据
 </summary>
	<param name="reader"></param>
	<param name="tagName">标签名称</param>
	<returns>反序列化成功返回True，并给相应标签内容赋值</returns>
	<remarks>
    反序列化由原来的顺序读取改成循环读取的方式，同时考虑到存在继承的因素，重构反序列化的方法。
    重构后将原方法拆分成循环遍历标签（XMLDeserialize）与具体处理标签（GetDataByXMLDeserialize）两个Function，继承时需重载具体处理标签的方法。
    注：1、重载后的GetDataByXMLDeserialize的写法参照MISimple 类的写法；
        2、子类与所有父类之间不允许存在相同的标签名称，否则反序列化将造成数据混乱；
 </remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.OnAddRowAhead(System.Object,System.EventArgs)">
	<summary>
 新增行(在行前)
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.OnAddRowBack(System.Object,System.EventArgs)">
	<summary>
 新增行(在行后)
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.OnDeleteRow(System.Object,System.EventArgs)">
	<summary>
 删除行
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.OnDelFig(System.Object,System.EventArgs)">
	<summary>
 删除图片
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.OnSetFig(System.Object,System.EventArgs)">
	<summary>
 编辑图片，包括新增和修改
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.PCFigure_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 F单元右键弹出菜单事件
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.figure.PCFigure.PCFigure_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 F单元双击弹出编辑图片窗体
 </summary>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCString.PCString_GetFocus(System.Object,System.EventArgs)">
	<summary>
 获得焦点
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCString.AddText(System.String)">
	<summary>
 追加
 </summary>
	<param name="strValue"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCString.InsertText(System.String)">
	<summary>
 插入
 </summary>
	<param name="strValue"></param>
	<remarks></remarks>
</member><member name="M:dhcc.epr.eprlib.presentation.PCString.ReplaceText(System.String)">
	<summary>
 替换
 </summary>
	<param name="strValue"></param>
	<remarks></remarks>
</member><member name="F:dhcc.epr.eprlib.presentation.SplitContainerEx.MouseState.Normal">
	<summary>
 正常
 </summary>
</member><member name="F:dhcc.epr.eprlib.presentation.SplitContainerEx.MouseState.Hover">
	<summary>
 鼠标移入
</summary>
</member><member name="P:dhcc.epr.eprlib.presentation.SplitContainerEx.ControlRect">
	<summary>
 控制器绘制区域
 </summary>
</member><member name="M:dhcc.epr.eprlib.presentation.textedit.QuantityController.Draw(dhcc.epr.eprlib.presentation.textedit.PCTextEdit)">
 -----------------------------------------------------------------------------
 <summary>
 刷新界面，控制文字颜色，直接调用Controller类的方法
 </summary>
	<param name="objTextEdit">复杂文本对象</param>
	<remarks>
	</remarks>
	<history>
 	[user]	2009-4-20	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:KBCategoryData.KBCategoryInfo.#ctor">
	<remarks/>
</member><member name="E:KBCategoryData.KBCategoryInfo.CreateKBCategoryCompleted">
	<remarks/>
</member><member name="E:KBCategoryData.KBCategoryInfo.DeleteKBCategoryCompleted">
	<remarks/>
</member><member name="E:KBCategoryData.KBCategoryInfo.SelectAllKBCategoryCompleted">
	<remarks/>
</member><member name="E:KBCategoryData.KBCategoryInfo.SelectKBCategoryByIDCompleted">
	<remarks/>
</member><member name="E:KBCategoryData.KBCategoryInfo.UpdateKBCategoryCompleted">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.CreateKBCategory(KBCategoryData.EKBCategory)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.CreateKBCategoryAsync(KBCategoryData.EKBCategory)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.CreateKBCategoryAsync(KBCategoryData.EKBCategory,System.Object)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.DeleteKBCategory(System.String,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.DeleteKBCategoryAsync(System.String)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.DeleteKBCategoryAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.SelectAllKBCategory">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.SelectAllKBCategoryAsync">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.SelectAllKBCategoryAsync(System.Object)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.SelectKBCategoryByID(System.String)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.SelectKBCategoryByIDAsync(System.String)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.SelectKBCategoryByIDAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.UpdateKBCategory(KBCategoryData.EKBCategory,System.Boolean@,System.Boolean@)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.UpdateKBCategoryAsync(KBCategoryData.EKBCategory)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.UpdateKBCategoryAsync(KBCategoryData.EKBCategory,System.Object)">
	<remarks/>
</member><member name="M:KBCategoryData.KBCategoryInfo.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:KBCategoryData.KBCategoryInfo">
	<remarks/>
</member><member name="P:KBCategoryData.EKBCategory.Description">
	<remarks/>
</member><member name="P:KBCategoryData.EKBCategory.ID">
	<remarks/>
</member><member name="P:KBCategoryData.EKBCategory.Name">
	<remarks/>
</member><member name="P:KBCategoryData.EKBCategory.ParentID">
	<remarks/>
</member><member name="P:KBCategoryData.EKBCategory.ResChildCount">
	<remarks/>
</member><member name="P:KBCategoryData.EKBCategory.ResChildCountSpecified">
	<remarks/>
</member><member name="T:KBCategoryData.EKBCategory">
	<remarks/>
</member><member name="T:KBCategoryData.EKBCategoryDataset.SELECTALLDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:KBCategoryData.EKBCategoryDataset.SELECTALLRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:KBCategoryData.EKBCategoryDataset.SELECTALLRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:KBCategoryData.EKBCategoryDataset">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:KBCategoryData.CreateKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:KBCategoryData.CreateKBCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBCategoryData.CreateKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:KBCategoryData.DeleteKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:KBCategoryData.DeleteKBCategoryCompletedEventArgs.DeleteKBCategoryResult">
	<remarks/>
</member><member name="P:KBCategoryData.DeleteKBCategoryCompletedEventArgs.DeleteKBCategoryResultSpecified">
	<remarks/>
</member><member name="T:KBCategoryData.DeleteKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:KBCategoryData.SelectAllKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:KBCategoryData.SelectAllKBCategoryCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBCategoryData.SelectAllKBCategoryCompletedEventArgs">
	<remarks/>
</member><member name="T:KBCategoryData.SelectKBCategoryByIDCompletedEventHandler">
	<remarks/>
</member><member name="P:KBCategoryData.SelectKBCategoryByIDCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:KBCategoryData.SelectKBCategoryByIDCompletedEventArgs">
	<remarks/>
</member><member name="T:KBCategoryData.UpdateKBCategoryCompletedEventHandler">
	<remarks/>
</member><member name="P:KBCategoryData.UpdateKBCategoryCompletedEventArgs.UpdateKBCategoryResult">
	<remarks/>
</member><member name="P:KBCategoryData.UpdateKBCategoryCompletedEventArgs.UpdateKBCategoryResultSpecified">
	<remarks/>
</member><member name="T:KBCategoryData.UpdateKBCategoryCompletedEventArgs">
	<remarks/>
</member>
</members>
</doc>