
.tableScroll{overflow:auto} /*滚动条样式*/
.fixedHeaderTr /*列头样式，使列头不随滚动条移动*/ 
{
	position:relative;
	/*top:expression(this.offsetParent.scrollTop);*/
	top:expression(document.getElementById("tblDiv").scrollTop);
} 

td    
{  
     /*position: relative;*/
}
th.Locked /* 水平与垂直方向锁住单元格, 不随鼠标或滚动条移动 */  
{  
    z-index: 30; position: relative;    
    top: expression(document.getElementById("tblDiv").scrollTop);    
    left: expression(document.getElementById("tblDiv").scrollLeft); 
    background-color: #cccccc;   
}  
th.HLocked /* 水平方向锁住单元格 */  
{  
    z-index: 10; position: relative; left: expression(document.getElementById("tblDiv").scrollLeft);   
}  
th.VLocked /* 垂直方向锁住单元格 */  
{  
    z-index: 20; position: relative; top: expression(document.getElementById("tblDiv").scrollTop); 
}  
td.Locked /* 水平与垂直方向锁住单元格, 不随鼠标或滚动条移动 */  
{  
    z-index: 30; position: relative;    
    top: expression(document.getElementById("tblDiv").scrollTop);    
    left: expression(document.getElementById("tblDiv").scrollLeft);  
}  
td.HLocked /* 水平方向锁住单元格 */  
{  
    z-index: 10; position: relative; left: expression(document.getElementById("tblDiv").scrollLeft); 
    background-color: #cccccc;   
}  
td.VLocked /* 垂直方向锁住单元格 */  
{  
    z-index: 20; position: relative; top: expression(document.getElementById("tblDiv").scrollTop);
    background-color: #cccccc;    
}  
td.UNHlocked /*水平方向解锁单元格*/
{
	position:static ;
}

